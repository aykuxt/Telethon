{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Telethon's Documentation \u00b6 Getting Started \u00b6 from telethon.sync import TelegramClient , events with TelegramClient ( 'name' , api_id , api_hash ) as client : client . send_message ( 'me' , 'Hello, myself!' ) print ( client . download_profile_photo ( 'me' )) @client . on ( events . NewMessage ( pattern = '(?i).*Hello' )) async def handler ( event ): await event . reply ( 'Hey!' ) client . run_until_disconnected () Are you new here? Jump straight into Installation ! Looking for the method reference? See Client Reference . Did you upgrade the library? Please read Changelog (Version History) . Used Telethon before v1.0? See Compatibility and Convenience . Coming from Bot API or want to create new bots? See HTTP Bot API vs MTProto . Need the full API reference? https://tl.telethon.dev . What is this? \u00b6 Telegram is a popular messaging application. This library is meant to make it easy for you to write Python programs that can interact with Telegram. Think of it as a wrapper that has already done the heavy job for you, so you can focus on developing an application. How should I use the documentation? \u00b6 If you are getting started with the library, you should follow the documentation in order by pressing the \"Next\" button at the bottom-right of every page. You can also use the menu on the left to quickly skip over sections.","title":"Getting Started"},{"location":"#telethons-documentation","text":"","title":"Telethon's Documentation"},{"location":"#getting-started","text":"from telethon.sync import TelegramClient , events with TelegramClient ( 'name' , api_id , api_hash ) as client : client . send_message ( 'me' , 'Hello, myself!' ) print ( client . download_profile_photo ( 'me' )) @client . on ( events . NewMessage ( pattern = '(?i).*Hello' )) async def handler ( event ): await event . reply ( 'Hey!' ) client . run_until_disconnected () Are you new here? Jump straight into Installation ! Looking for the method reference? See Client Reference . Did you upgrade the library? Please read Changelog (Version History) . Used Telethon before v1.0? See Compatibility and Convenience . Coming from Bot API or want to create new bots? See HTTP Bot API vs MTProto . Need the full API reference? https://tl.telethon.dev .","title":"Getting Started"},{"location":"#what-is-this","text":"Telegram is a popular messaging application. This library is meant to make it easy for you to write Python programs that can interact with Telegram. Think of it as a wrapper that has already done the heavy job for you, so you can focus on developing an application.","title":"What is this?"},{"location":"#how-should-i-use-the-documentation","text":"If you are getting started with the library, you should follow the documentation in order by pressing the \"Next\" button at the bottom-right of every page. You can also use the menu on the left to quickly skip over sections.","title":"How should I use the documentation?"},{"location":"basic/installation/","text":"Installation \u00b6 Telethon is a Python library, which means you need to download and install Python from https://www.python.org/downloads/ if you haven't already. Once you have Python installed, run: pip3 install -U telethon --user To install or upgrade the library to the latest version. Installing Development Versions \u00b6 If you want the latest unreleased changes, you can run the following command instead: pip3 install -U https://github.com/LonamiWebs/Telethon/archive/master.zip --user Note The development version may have bugs and is not recommended for production use. However, when you are reporting a library bug , you should try if the bug still occurs in this version. Verification \u00b6 To verify that the library is installed correctly, run the following command: python3 -c \"import telethon; print(telethon.__version__)\" The version number of the library should show in the output. Optional Dependencies \u00b6 If cryptg is installed, the library will work a lot faster , since encryption and decryption will be made in C instead of Python. If your code deals with a lot of updates or you are downloading/uploading a lot of files, you will notice a considerable speed-up (from a hundred kilobytes per second to several megabytes per second, if your connection allows it). If it's not installed, pyaes will be used (which is pure Python, so it's much slower). If pillow is installed, large images will be automatically resized when sending photos to prevent Telegram from failing with \"invalid image\". Official clients also do this. If aiohttp is installed, the library will be able to download WebDocument media files (otherwise you will get an error). If hachoir is installed, it will be used to extract metadata from files when sending documents. Telegram uses this information to show the song's performer, artist, title, duration, and for videos too (including size). Otherwise, they will default to empty values, and you can set the attributes manually. Note Some of the modules may require additional dependencies before being installed through pip . If you have an apt -based system, consider installing the most commonly missing dependencies: apt update apt install clang lib { jpeg-turbo,webp } -dev python { ,-dev } zlib-dev pip install -U --user setuptools pip install -U --user telethon cryptg pillow Thanks to @bb010g for writing down this nice list.","title":"Installation"},{"location":"basic/installation/#installation","text":"Telethon is a Python library, which means you need to download and install Python from https://www.python.org/downloads/ if you haven't already. Once you have Python installed, run: pip3 install -U telethon --user To install or upgrade the library to the latest version.","title":"Installation"},{"location":"basic/installation/#installing-development-versions","text":"If you want the latest unreleased changes, you can run the following command instead: pip3 install -U https://github.com/LonamiWebs/Telethon/archive/master.zip --user Note The development version may have bugs and is not recommended for production use. However, when you are reporting a library bug , you should try if the bug still occurs in this version.","title":"Installing Development Versions"},{"location":"basic/installation/#verification","text":"To verify that the library is installed correctly, run the following command: python3 -c \"import telethon; print(telethon.__version__)\" The version number of the library should show in the output.","title":"Verification"},{"location":"basic/installation/#optional-dependencies","text":"If cryptg is installed, the library will work a lot faster , since encryption and decryption will be made in C instead of Python. If your code deals with a lot of updates or you are downloading/uploading a lot of files, you will notice a considerable speed-up (from a hundred kilobytes per second to several megabytes per second, if your connection allows it). If it's not installed, pyaes will be used (which is pure Python, so it's much slower). If pillow is installed, large images will be automatically resized when sending photos to prevent Telegram from failing with \"invalid image\". Official clients also do this. If aiohttp is installed, the library will be able to download WebDocument media files (otherwise you will get an error). If hachoir is installed, it will be used to extract metadata from files when sending documents. Telegram uses this information to show the song's performer, artist, title, duration, and for videos too (including size). Otherwise, they will default to empty values, and you can set the attributes manually. Note Some of the modules may require additional dependencies before being installed through pip . If you have an apt -based system, consider installing the most commonly missing dependencies: apt update apt install clang lib { jpeg-turbo,webp } -dev python { ,-dev } zlib-dev pip install -U --user setuptools pip install -U --user telethon cryptg pillow Thanks to @bb010g for writing down this nice list.","title":"Optional Dependencies"},{"location":"basic/next-steps/","text":"Next Steps \u00b6 These basic first steps should have gotten you started with the library. By now, you should know how to call friendly methods and how to work with the returned objects, how things work inside event handlers, etc. Next, we will see a quick reference summary of all the methods and properties that you will need when using the library. If you follow the links there, you will expand the documentation for the method and property, with more examples on how to use them. Therefore, you can find an example on every method of the client to learn how to use it, as well as a description of all the arguments. After that, we will go in-depth with some other important concepts that are worth learning and understanding. From now on, you can keep pressing the \"Next\" button if you want, or use the menu on the left, since some pages are quite lengthy.","title":"Next Steps"},{"location":"basic/next-steps/#next-steps","text":"These basic first steps should have gotten you started with the library. By now, you should know how to call friendly methods and how to work with the returned objects, how things work inside event handlers, etc. Next, we will see a quick reference summary of all the methods and properties that you will need when using the library. If you follow the links there, you will expand the documentation for the method and property, with more examples on how to use them. Therefore, you can find an example on every method of the client to learn how to use it, as well as a description of all the arguments. After that, we will go in-depth with some other important concepts that are worth learning and understanding. From now on, you can keep pressing the \"Next\" button if you want, or use the menu on the left, since some pages are quite lengthy.","title":"Next Steps"},{"location":"basic/quick-start/","text":"Quick-Start \u00b6 Let's see a longer example to learn some of the methods that the library has to offer. These are known as \"friendly methods\", and you should always use these if possible. from telethon import TelegramClient # Remember to use your own values from my.telegram.org! api_id = 12345 api_hash = '0123456789abcdef0123456789abcdef' client = TelegramClient ( 'anon' , api_id , api_hash ) async def main (): # Getting information about yourself me = await client . get_me () # \"me\" is an User object. You can pretty-print # any Telegram object with the \"stringify\" method: print ( me . stringify ()) # When you print something, you see a representation of it. # You can access all attributes of Telegram objects with # the dot operator. For example, to get the username: username = me . username print ( username ) print ( me . phone ) # You can print all the dialogs/conversations that you are part of: async for dialog in client . iter_dialogs (): print ( dialog . name , 'has ID' , dialog . id ) # You can send messages to yourself... await client . send_message ( 'me' , 'Hello, myself!' ) # ...to some chat ID await client . send_message ( - 100123456 , 'Hello, group!' ) # ...to your contacts await client . send_message ( '+34600123123' , 'Hello, friend!' ) # ...or even to any username await client . send_message ( 'TelethonChat' , 'Hello, Telethon!' ) # You can, of course, use markdown in your messages: message = await client . send_message ( 'me' , 'This message has **bold**, `code`, __italics__ and ' 'a [nice website](https://example.com)!' , link_preview = False ) # Sending a message returns the sent message object, which you can use print ( message . raw_text ) # You can reply to messages directly if you have a message object await message . reply ( 'Cool!' ) # Or send files, songs, documents, albums... await client . send_file ( 'me' , '/home/me/Pictures/holidays.jpg' ) # You can print the message history of any chat: async for message in client . iter_messages ( 'me' ): print ( message . id , message . text ) # You can download media from messages, too! # The method will return the path where the file was saved. if message . photo : path = await message . download_media () print ( 'File saved to' , path ) # printed after download is done with client : client . loop . run_until_complete ( main ()) Here, we show how to sign in, get information about yourself, send messages, files, getting chats, printing messages, and downloading files. You should make sure that you understand what the code shown here does, take note on how methods are called and used and so on before proceeding. We will see all the available methods later on. Important Note that Telethon is an asynchronous library, and as such, you should get used to it and learn a bit of basic asyncio . This will help a lot. As a quick start, this means you generally want to write all your code inside some async def like so: client = ... async def do_something ( me ): ... async def main (): # Most of your code should go here. # You can of course make and use your own async def (do_something). # They only need to be async if they need to await things. me = await client . get_me () await do_something ( me ) with client : client . loop . run_until_complete ( main ()) After you understand this, you may use the telethon.sync hack if you want do so (see :ref: compatibility-and-convenience ), but note you may run into other issues (iPython, Anaconda, etc. have some issues with it).","title":"Quick-Start"},{"location":"basic/quick-start/#quick-start","text":"Let's see a longer example to learn some of the methods that the library has to offer. These are known as \"friendly methods\", and you should always use these if possible. from telethon import TelegramClient # Remember to use your own values from my.telegram.org! api_id = 12345 api_hash = '0123456789abcdef0123456789abcdef' client = TelegramClient ( 'anon' , api_id , api_hash ) async def main (): # Getting information about yourself me = await client . get_me () # \"me\" is an User object. You can pretty-print # any Telegram object with the \"stringify\" method: print ( me . stringify ()) # When you print something, you see a representation of it. # You can access all attributes of Telegram objects with # the dot operator. For example, to get the username: username = me . username print ( username ) print ( me . phone ) # You can print all the dialogs/conversations that you are part of: async for dialog in client . iter_dialogs (): print ( dialog . name , 'has ID' , dialog . id ) # You can send messages to yourself... await client . send_message ( 'me' , 'Hello, myself!' ) # ...to some chat ID await client . send_message ( - 100123456 , 'Hello, group!' ) # ...to your contacts await client . send_message ( '+34600123123' , 'Hello, friend!' ) # ...or even to any username await client . send_message ( 'TelethonChat' , 'Hello, Telethon!' ) # You can, of course, use markdown in your messages: message = await client . send_message ( 'me' , 'This message has **bold**, `code`, __italics__ and ' 'a [nice website](https://example.com)!' , link_preview = False ) # Sending a message returns the sent message object, which you can use print ( message . raw_text ) # You can reply to messages directly if you have a message object await message . reply ( 'Cool!' ) # Or send files, songs, documents, albums... await client . send_file ( 'me' , '/home/me/Pictures/holidays.jpg' ) # You can print the message history of any chat: async for message in client . iter_messages ( 'me' ): print ( message . id , message . text ) # You can download media from messages, too! # The method will return the path where the file was saved. if message . photo : path = await message . download_media () print ( 'File saved to' , path ) # printed after download is done with client : client . loop . run_until_complete ( main ()) Here, we show how to sign in, get information about yourself, send messages, files, getting chats, printing messages, and downloading files. You should make sure that you understand what the code shown here does, take note on how methods are called and used and so on before proceeding. We will see all the available methods later on. Important Note that Telethon is an asynchronous library, and as such, you should get used to it and learn a bit of basic asyncio . This will help a lot. As a quick start, this means you generally want to write all your code inside some async def like so: client = ... async def do_something ( me ): ... async def main (): # Most of your code should go here. # You can of course make and use your own async def (do_something). # They only need to be async if they need to await things. me = await client . get_me () await do_something ( me ) with client : client . loop . run_until_complete ( main ()) After you understand this, you may use the telethon.sync hack if you want do so (see :ref: compatibility-and-convenience ), but note you may run into other issues (iPython, Anaconda, etc. have some issues with it).","title":"Quick-Start"},{"location":"basic/signing-in/","text":"Signing In \u00b6 Before working with Telegram's API, you need to get your own API ID and hash: Login to your Telegram account with the phone number of the developer account to use. Click under API Development tools. A Create new application window will appear. Fill in your application details. There is no need to enter any URL , and only the first two fields ( App title and Short name ) can currently be changed later. Click on Create application at the end. Remember that your API hash is secret and Telegram won't let you revoke it. Don't post it anywhere! Note This API ID and hash is the one used by your application , not your phone number. You can use this API ID and hash with any phone number or even for bot accounts. Editing the Code \u00b6 This is a little introduction for those new to Python programming in general. We will write our code inside hello.py , so you can use any text editor that you like. To run the code, use python3 hello.py from the terminal. Important Don't call your script telethon.py ! Python will try to import the client from there and it will fail with an error such as ImportError: cannot import name 'TelegramClient' ... . Signing In \u00b6 We can finally write some code to log into our account! from telethon import TelegramClient # Use your own values from my.telegram.org api_id = 12345 api_hash = '0123456789abcdef0123456789abcdef' # The first parameter is the .session file name (absolute paths allowed) with TelegramClient ( 'anon' , api_id , api_hash ) as client : client . loop . run_until_complete ( client . send_message ( 'me' , 'Hello, myself!' )) In the first line, we import the class name so we can create an instance of the client. Then, we define variables to store our API ID and hash conveniently. At last, we create a new TelegramClient <telethon.client.telegramclient.TelegramClient> instance and call it client . We can now use the client variable for anything that we want, such as sending a message to ourselves. Note Since Telethon is an asynchronous library, you need to await coroutine functions to have them run (or otherwise, run the loop until they are complete). In this tiny example, we don't bother making an async def main() . See :ref: mastering-asyncio to find out more. Using a with block is the preferred way to use the library. It will automatically start() <telethon.client.auth.AuthMethods.start> the client, logging or signing up if necessary. If the .session file already existed, it will not login again, so be aware of this if you move or rename the file! Signing In as a Bot Account \u00b6 You can also use Telethon for your bots (normal bot accounts, not users). You will still need an API ID and hash, but the process is very similar: from telethon.sync import TelegramClient api_id = 12345 api_hash = '0123456789abcdef0123456789abcdef' bot_token = '12345:0123456789abcdef0123456789abcdef' # We have to manually call \"start\" if we want an explicit bot token bot = TelegramClient ( 'bot' , api_id , api_hash ) . start ( bot_token = bot_token ) # But then we can use the client instance as usual with bot : ... To get a bot account, you need to talk with @BotFather . Signing In behind a Proxy \u00b6 If you need to use a proxy to access Telegram, you will need to install PySocks and then change: TelegramClient ( 'anon' , api_id , api_hash ) with TelegramClient ( 'anon' , api_id , api_hash , proxy = ( socks . SOCKS5 , '127.0.0.1' , 4444 )) (of course, replacing the IP and port with the IP and port of the proxy). The proxy= argument should be a tuple, a list or a dict, consisting of parameters described in PySocks usage . Using MTProto Proxies \u00b6 MTProto Proxies are Telegram's alternative to normal proxies, and work a bit differently. The following protocols are available: ConnectionTcpMTProxyAbridged ConnectionTcpMTProxyIntermediate ConnectionTcpMTProxyRandomizedIntermediate (preferred) For now, you need to manually specify these special connection modes if you want to use a MTProto Proxy. Your code would look like this: from telethon import TelegramClient , connection # we need to change the connection ^^^^^^^^^^ client = TelegramClient ( 'anon' , api_id , api_hash , # Use one of the available connection modes. # Normally, this one works with most proxies. connection = connection . ConnectionTcpMTProxyRandomizedIntermediate , # Then, pass the proxy details as a tuple: # (host name, port, proxy secret) # # If the proxy has no secret, the secret must be: # '00000000000000000000000000000000' proxy = ( 'mtproxy.example.com' , 2002 , 'secret' ) ) In future updates, we may make it easier to use MTProto Proxies (such as avoiding the need to manually pass connection= ). In short, the same code above but without comments to make it clearer: from telethon import TelegramClient , connection client = TelegramClient ( 'anon' , api_id , api_hash , connection = connection . ConnectionTcpMTProxyRandomizedIntermediate , proxy = ( 'mtproxy.example.com' , 2002 , 'secret' ) )","title":"Signing In"},{"location":"basic/signing-in/#signing-in","text":"Before working with Telegram's API, you need to get your own API ID and hash: Login to your Telegram account with the phone number of the developer account to use. Click under API Development tools. A Create new application window will appear. Fill in your application details. There is no need to enter any URL , and only the first two fields ( App title and Short name ) can currently be changed later. Click on Create application at the end. Remember that your API hash is secret and Telegram won't let you revoke it. Don't post it anywhere! Note This API ID and hash is the one used by your application , not your phone number. You can use this API ID and hash with any phone number or even for bot accounts.","title":"Signing In"},{"location":"basic/signing-in/#editing-the-code","text":"This is a little introduction for those new to Python programming in general. We will write our code inside hello.py , so you can use any text editor that you like. To run the code, use python3 hello.py from the terminal. Important Don't call your script telethon.py ! Python will try to import the client from there and it will fail with an error such as ImportError: cannot import name 'TelegramClient' ... .","title":"Editing the Code"},{"location":"basic/signing-in/#signing-in_1","text":"We can finally write some code to log into our account! from telethon import TelegramClient # Use your own values from my.telegram.org api_id = 12345 api_hash = '0123456789abcdef0123456789abcdef' # The first parameter is the .session file name (absolute paths allowed) with TelegramClient ( 'anon' , api_id , api_hash ) as client : client . loop . run_until_complete ( client . send_message ( 'me' , 'Hello, myself!' )) In the first line, we import the class name so we can create an instance of the client. Then, we define variables to store our API ID and hash conveniently. At last, we create a new TelegramClient <telethon.client.telegramclient.TelegramClient> instance and call it client . We can now use the client variable for anything that we want, such as sending a message to ourselves. Note Since Telethon is an asynchronous library, you need to await coroutine functions to have them run (or otherwise, run the loop until they are complete). In this tiny example, we don't bother making an async def main() . See :ref: mastering-asyncio to find out more. Using a with block is the preferred way to use the library. It will automatically start() <telethon.client.auth.AuthMethods.start> the client, logging or signing up if necessary. If the .session file already existed, it will not login again, so be aware of this if you move or rename the file!","title":"Signing In"},{"location":"basic/signing-in/#signing-in-as-a-bot-account","text":"You can also use Telethon for your bots (normal bot accounts, not users). You will still need an API ID and hash, but the process is very similar: from telethon.sync import TelegramClient api_id = 12345 api_hash = '0123456789abcdef0123456789abcdef' bot_token = '12345:0123456789abcdef0123456789abcdef' # We have to manually call \"start\" if we want an explicit bot token bot = TelegramClient ( 'bot' , api_id , api_hash ) . start ( bot_token = bot_token ) # But then we can use the client instance as usual with bot : ... To get a bot account, you need to talk with @BotFather .","title":"Signing In as a Bot Account"},{"location":"basic/signing-in/#signing-in-behind-a-proxy","text":"If you need to use a proxy to access Telegram, you will need to install PySocks and then change: TelegramClient ( 'anon' , api_id , api_hash ) with TelegramClient ( 'anon' , api_id , api_hash , proxy = ( socks . SOCKS5 , '127.0.0.1' , 4444 )) (of course, replacing the IP and port with the IP and port of the proxy). The proxy= argument should be a tuple, a list or a dict, consisting of parameters described in PySocks usage .","title":"Signing In behind a Proxy"},{"location":"basic/signing-in/#using-mtproto-proxies","text":"MTProto Proxies are Telegram's alternative to normal proxies, and work a bit differently. The following protocols are available: ConnectionTcpMTProxyAbridged ConnectionTcpMTProxyIntermediate ConnectionTcpMTProxyRandomizedIntermediate (preferred) For now, you need to manually specify these special connection modes if you want to use a MTProto Proxy. Your code would look like this: from telethon import TelegramClient , connection # we need to change the connection ^^^^^^^^^^ client = TelegramClient ( 'anon' , api_id , api_hash , # Use one of the available connection modes. # Normally, this one works with most proxies. connection = connection . ConnectionTcpMTProxyRandomizedIntermediate , # Then, pass the proxy details as a tuple: # (host name, port, proxy secret) # # If the proxy has no secret, the secret must be: # '00000000000000000000000000000000' proxy = ( 'mtproxy.example.com' , 2002 , 'secret' ) ) In future updates, we may make it easier to use MTProto Proxies (such as avoiding the need to manually pass connection= ). In short, the same code above but without comments to make it clearer: from telethon import TelegramClient , connection client = TelegramClient ( 'anon' , api_id , api_hash , connection = connection . ConnectionTcpMTProxyRandomizedIntermediate , proxy = ( 'mtproxy.example.com' , 2002 , 'secret' ) )","title":"Using MTProto Proxies"},{"location":"basic/updates/","text":"Updates \u00b6 Updates are an important topic in a messaging platform like Telegram. After all, you want to be notified when a new message arrives, when a member joins, when someone starts typing, etc. For that, you can use events . Important It is strongly advised to enable logging when working with events, since exceptions in event handlers are hidden by default. Please add the following snippet to the very top of your file: import logging logging . basicConfig ( format = '[ %(levelname) 5s / %(asctime)s ] %(name)s : %(message)s ' , level = logging . WARNING ) Getting Started \u00b6 Let's start things with an example to automate replies: from telethon import TelegramClient , events client = TelegramClient ( 'anon' , api_id , api_hash ) @client . on ( events . NewMessage ) async def my_event_handler ( event ): if 'hello' in event . raw_text : await event . reply ( 'hi!' ) client . start () client . run_until_disconnected () This code isn't much, but there might be some things unclear. Let's break it down: from telethon import TelegramClient , events client = TelegramClient ( 'anon' , api_id , api_hash ) This is normal creation (of course, pass session name, API ID and hash). Nothing we don't know already. @client . on ( events . NewMessage ) This Python decorator will attach itself to the my_event_handler definition, and basically means that on a NewMessage <telethon.events.newmessage.NewMessage> event , the callback function you're about to define will be called: async def my_event_handler ( event ): if 'hello' in event . raw_text : await event . reply ( 'hi!' ) If a NewMessage <telethon.events.newmessage.NewMessage> event occurs, and 'hello' is in the text of the message, we reply() <telethon.tl.custom.message.Message.reply> to the event with a 'hi!' message. Note Event handlers must be async def . After all, Telethon is an asynchronous library based on asyncio , which is a safer and often faster approach to threads. You must await all method calls that use network requests, which is most of them. More Examples \u00b6 Replying to messages with hello is fun, but, can we do more? @client . on ( events . NewMessage ( outgoing = True , pattern = r '\\.save' )) async def handler ( event ): if event . is_reply : replied = await event . get_reply_message () sender = replied . sender await client . download_profile_photo ( sender ) await event . respond ( 'Saved your photo {} ' . format ( sender . username )) We could also get replies. This event filters outgoing messages (only those that we send will trigger the method), then we filter by the regex r'\\.save' , which will match messages starting with \".save\" . Inside the method, we check whether the event is replying to another message or not. If it is, we get the reply message and the sender of that message, and download their profile photo. Let's delete messages which contain \"heck\". We don't allow swearing here. @client . on ( events . NewMessage ( pattern = r '(?i).*heck' )) async def handler ( event ): await event . delete () With the r'(?i).*heck' regex, we match case-insensitive \"heck\" anywhere in the message. Regex is very powerful and you can learn more at https://regexone.com/ . So far, we have only seen the NewMessage <telethon.events.newmessage.NewMessage> , but there are many more which will be covered later. This is only a small introduction to updates. Entities \u00b6 When you need the user or chat where an event occurred, you must use the following methods: async def handler ( event ): # Good chat = await event . get_chat () sender = await event . get_sender () chat_id = event . chat_id sender_id = event . sender_id # BAD. Don't do this chat = event . chat sender = event . sender chat_id = event . chat . id sender_id = event . sender . id Events are like messages, but don't have all the information a message has! When you manually get a message, it will have all the information it needs. When you receive an update about a message, it won't have all the information, so you have to use the methods , not the properties. Make sure you understand the code seen here before continuing! As a rule of thumb, remember that new message events behave just like message objects, so you can do with them everything you can do with a message object.","title":"Updates"},{"location":"basic/updates/#updates","text":"Updates are an important topic in a messaging platform like Telegram. After all, you want to be notified when a new message arrives, when a member joins, when someone starts typing, etc. For that, you can use events . Important It is strongly advised to enable logging when working with events, since exceptions in event handlers are hidden by default. Please add the following snippet to the very top of your file: import logging logging . basicConfig ( format = '[ %(levelname) 5s / %(asctime)s ] %(name)s : %(message)s ' , level = logging . WARNING )","title":"Updates"},{"location":"basic/updates/#getting-started","text":"Let's start things with an example to automate replies: from telethon import TelegramClient , events client = TelegramClient ( 'anon' , api_id , api_hash ) @client . on ( events . NewMessage ) async def my_event_handler ( event ): if 'hello' in event . raw_text : await event . reply ( 'hi!' ) client . start () client . run_until_disconnected () This code isn't much, but there might be some things unclear. Let's break it down: from telethon import TelegramClient , events client = TelegramClient ( 'anon' , api_id , api_hash ) This is normal creation (of course, pass session name, API ID and hash). Nothing we don't know already. @client . on ( events . NewMessage ) This Python decorator will attach itself to the my_event_handler definition, and basically means that on a NewMessage <telethon.events.newmessage.NewMessage> event , the callback function you're about to define will be called: async def my_event_handler ( event ): if 'hello' in event . raw_text : await event . reply ( 'hi!' ) If a NewMessage <telethon.events.newmessage.NewMessage> event occurs, and 'hello' is in the text of the message, we reply() <telethon.tl.custom.message.Message.reply> to the event with a 'hi!' message. Note Event handlers must be async def . After all, Telethon is an asynchronous library based on asyncio , which is a safer and often faster approach to threads. You must await all method calls that use network requests, which is most of them.","title":"Getting Started"},{"location":"basic/updates/#more-examples","text":"Replying to messages with hello is fun, but, can we do more? @client . on ( events . NewMessage ( outgoing = True , pattern = r '\\.save' )) async def handler ( event ): if event . is_reply : replied = await event . get_reply_message () sender = replied . sender await client . download_profile_photo ( sender ) await event . respond ( 'Saved your photo {} ' . format ( sender . username )) We could also get replies. This event filters outgoing messages (only those that we send will trigger the method), then we filter by the regex r'\\.save' , which will match messages starting with \".save\" . Inside the method, we check whether the event is replying to another message or not. If it is, we get the reply message and the sender of that message, and download their profile photo. Let's delete messages which contain \"heck\". We don't allow swearing here. @client . on ( events . NewMessage ( pattern = r '(?i).*heck' )) async def handler ( event ): await event . delete () With the r'(?i).*heck' regex, we match case-insensitive \"heck\" anywhere in the message. Regex is very powerful and you can learn more at https://regexone.com/ . So far, we have only seen the NewMessage <telethon.events.newmessage.NewMessage> , but there are many more which will be covered later. This is only a small introduction to updates.","title":"More Examples"},{"location":"basic/updates/#entities","text":"When you need the user or chat where an event occurred, you must use the following methods: async def handler ( event ): # Good chat = await event . get_chat () sender = await event . get_sender () chat_id = event . chat_id sender_id = event . sender_id # BAD. Don't do this chat = event . chat sender = event . sender chat_id = event . chat . id sender_id = event . sender . id Events are like messages, but don't have all the information a message has! When you manually get a message, it will have all the information it needs. When you receive an update about a message, it won't have all the information, so you have to use the methods , not the properties. Make sure you understand the code seen here before continuing! As a rule of thumb, remember that new message events behave just like message objects, so you can do with them everything you can do with a message object.","title":"Entities"},{"location":"concepts/asyncio/","text":"Mastering asyncio \u00b6 What's asyncio? \u00b6 asyncio is a Python 3's built-in library. This means it's already installed if you have Python 3. Since Python 3.5, it is convenient to work with asynchronous code. Before (Python 3.4) we didn't have async or await , but now we do. asyncio stands for Asynchronous Input Output . This is a very powerful concept to use whenever you work IO. Interacting with the web or external APIs such as Telegram's makes a lot of sense this way. Why asyncio? \u00b6 Asynchronous IO makes a lot of sense in a library like Telethon. You send a request to the server (such as \"get some message\"), and thanks to asyncio , your code won't block while a response arrives. The alternative would be to spawn a thread for each update so that other code can run while the response arrives. That is a lot more expensive. The code will also run faster, because instead of switching back and forth between the OS and your script, your script can handle it all. Avoiding switching saves quite a bit of time, in Python or any other language that supports asynchronous IO. It will also be cheaper, because tasks are smaller than threads, which are smaller than processes. What are asyncio basics? \u00b6 # First we need the asyncio library import asyncio # Then we need a loop to work with loop = asyncio . get_event_loop () # We also need something to run async def main (): for char in 'Hello, world! \\n ' : print ( char , end = '' , flush = True ) await asyncio . sleep ( 0.2 ) # Then, we need to run the loop with a task loop . run_until_complete ( main ()) What does telethon.sync do? \u00b6 The moment you import any of these: from telethon import sync , ... # or from telethon.sync import ... # or import telethon.sync The sync module rewrites most async def methods in Telethon to something similar to this: def new_method (): result = original_method () if loop . is_running (): # the loop is already running, return the await-able to the user return result else : # the loop is not running yet, so we can run it for the user return loop . run_until_complete ( result ) That means you can do this: print ( client . get_me () . username ) Instead of this: me = client . loop . run_until_complete ( client . get_me ()) print ( me . username ) # or, using asyncio's default loop (it's the same) import asyncio loop = asyncio . get_event_loop () # == client.loop me = loop . run_until_complete ( client . get_me ()) print ( me . username ) As you can see, it's a lot of boilerplate and noise having to type run_until_complete all the time, so you can let the magic module to rewrite it for you. But notice the comment above: it won't run the loop if it's already running, because it can't. That means this: async def main (): # 3. the loop is running here print ( client . get_me () # 4. this will return a coroutine! . username # 5. this fails, coroutines don't have usernames ) loop . run_until_complete ( # 2. run the loop and the ``main()`` coroutine main () # 1. calling ``async def`` \"returns\" a coroutine ) Will fail. So if you're inside an async def , then the loop is running, and if the loop is running, you must await things yourself: async def main (): print (( await client . get_me ()) . username ) loop . run_until_complete ( main ()) What are async, await and coroutines? \u00b6 The async keyword lets you define asynchronous functions, also known as coroutines, and also iterate over asynchronous loops or use async with : import asyncio async def main (): # ^ this declares the main() coroutine function async with client : # ^ this is an asynchronous with block async for message in client . iter_messages ( chat ): # ^ this is a for loop over an asynchronous generator print ( message . sender . username ) loop = asyncio . get_event_loop () # ^ this assigns the default event loop from the main thread to a variable loop . run_until_complete ( main ()) # ^ this runs the *entire* loop until the main() function finishes. # While the main() function does not finish, the loop will be running. # While the loop is running, you can't run it again. The await keyword blocks the current task, and the loop can run other tasks. Tasks can be thought of as \"threads\", since many can run concurrently: import asyncio async def hello ( delay ): await asyncio . sleep ( delay ) # await tells the loop this task is \"busy\" print ( 'hello' ) # eventually the loop resumes the code here async def world ( delay ): # the loop decides this method should run first await asyncio . sleep ( delay ) # await tells the loop this task is \"busy\" print ( 'world' ) # eventually the loop finishes all tasks loop = asyncio . get_event_loop () # get the default loop for the main thread loop . create_task ( world ( 2 )) # create the world task, passing 2 as delay loop . create_task ( hello ( delay = 1 )) # another task, but with delay 1 try : # run the event loop forever; ctrl+c to stop it # we could also run the loop for three seconds: # loop.run_until_complete(asyncio.sleep(3)) loop . run_forever () except KeyboardInterrupt : pass The same example, but without the comment noise: import asyncio async def hello ( delay ): await asyncio . sleep ( delay ) print ( 'hello' ) async def world ( delay ): await asyncio . sleep ( delay ) print ( 'world' ) loop = asyncio . get_event_loop () loop . create_task ( world ( 2 )) loop . create_task ( hello ( 1 )) loop . run_until_complete ( asyncio . sleep ( 3 )) Can I use threads? \u00b6 Yes, you can, but you must understand that the loops themselves are not thread safe. and you must be sure to know what is happening. You may want to create a loop in a new thread and make sure to pass it to the client: import asyncio import threading def go (): loop = asyncio . new_event_loop () client = TelegramClient ( ... , loop = loop ) ... threading . Thread ( target = go ) . start () Generally, you don't need threads unless you know what you're doing. Just create another task, as shown above. If you're using the Telethon with a library that uses threads, you must be careful to use threading.Lock whenever you use the client, or enable the compatible mode. For that, see Compatibility and Convenience . You may have seen this error: RuntimeError: There is no current event loop in thread 'Thread-1'. It just means you didn't create a loop for that thread, and if you don't pass a loop when creating the client, it uses asyncio.get_event_loop() , which only works in the main thread. client.run_until_disconnected() blocks! \u00b6 All of what client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected> does is run the asyncio 's event loop until the client is disconnected. That means the loop is running . And if the loop is running, it will run all the tasks in it. So if you want to run other code, create tasks for it: from datetime import datetime async def clock (): while True : print ( 'The time:' , datetime . now ()) await asyncio . sleep ( 1 ) loop . create_task ( clock ()) ... client . run_until_disconnected () This creates a task for a clock that prints the time every second. You don't need to use client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected> either! You just need to make the loop is running, somehow. loop.run_forever() <asyncio.loop.run_forever()> and loop.run_until_complete() <asyncio.loop.run_until_complete> can also be used to run the loop, and Telethon will be happy with any approach. Of course, there are better tools to run code hourly or daily, see below. What else can asyncio do? \u00b6 Asynchronous IO is a really powerful tool, as we've seen. There are plenty of other useful libraries that also use asyncio and that you can integrate with Telethon. aiohttp is like the infamous requests but asynchronous. quart is an asynchronous alternative to Flask . aiocron lets you schedule things to run things at a desired time, or run some tasks hourly, daily, etc. And of course, asyncio itself! It has a lot of methods that let you do nice things. For example, you can run requests in parallel: async def main (): last , sent , download_path = await asyncio . gather ( client . get_messages ( 'TelethonChat' , 10 ), client . send_message ( 'TelethonOfftopic' , 'Hey guys!' ), client . download_profile_photo ( 'TelethonChat' ) ) loop . run_until_complete ( main ()) This code will get the 10 last messages from @TelethonChat , send one to @TelethonOfftopic , and also download the profile photo of the main group. asyncio will run all these three tasks at the same time. You can run all the tasks you want this way. A different way would be: loop . create_task ( client . get_messages ( 'TelethonChat' , 10 )) loop . create_task ( client . send_message ( 'TelethonOfftopic' , 'Hey guys!' )) loop . create_task ( client . download_profile_photo ( 'TelethonChat' )) They will run in the background as long as the loop is running too. You can also start an asyncio server in the main script, and from another script, connect to it to achieve Inter-Process Communication . You can get as creative as you want. You can program anything you want. When you use a library, you're not limited to use only its methods. You can combine all the libraries you want. People seem to forget this simple fact! Why does client.start() work outside async? \u00b6 Because it's so common that it's really convenient to offer said functionality by default. This means you can set up all your event handlers and start the client without worrying about loops at all. Using the client in a with block, start <telethon.client.auth.AuthMethods.start> , run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> , and disconnect <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> all support this. Where can I read more? \u00b6 Check out my blog post about asyncio , which has some more examples and pictures to help you understand what happens when the loop runs.","title":"Mastering asyncio"},{"location":"concepts/asyncio/#mastering-asyncio","text":"","title":"Mastering asyncio"},{"location":"concepts/asyncio/#whats-asyncio","text":"asyncio is a Python 3's built-in library. This means it's already installed if you have Python 3. Since Python 3.5, it is convenient to work with asynchronous code. Before (Python 3.4) we didn't have async or await , but now we do. asyncio stands for Asynchronous Input Output . This is a very powerful concept to use whenever you work IO. Interacting with the web or external APIs such as Telegram's makes a lot of sense this way.","title":"What's asyncio?"},{"location":"concepts/asyncio/#why-asyncio","text":"Asynchronous IO makes a lot of sense in a library like Telethon. You send a request to the server (such as \"get some message\"), and thanks to asyncio , your code won't block while a response arrives. The alternative would be to spawn a thread for each update so that other code can run while the response arrives. That is a lot more expensive. The code will also run faster, because instead of switching back and forth between the OS and your script, your script can handle it all. Avoiding switching saves quite a bit of time, in Python or any other language that supports asynchronous IO. It will also be cheaper, because tasks are smaller than threads, which are smaller than processes.","title":"Why asyncio?"},{"location":"concepts/asyncio/#what-are-asyncio-basics","text":"# First we need the asyncio library import asyncio # Then we need a loop to work with loop = asyncio . get_event_loop () # We also need something to run async def main (): for char in 'Hello, world! \\n ' : print ( char , end = '' , flush = True ) await asyncio . sleep ( 0.2 ) # Then, we need to run the loop with a task loop . run_until_complete ( main ())","title":"What are asyncio basics?"},{"location":"concepts/asyncio/#what-does-telethonsync-do","text":"The moment you import any of these: from telethon import sync , ... # or from telethon.sync import ... # or import telethon.sync The sync module rewrites most async def methods in Telethon to something similar to this: def new_method (): result = original_method () if loop . is_running (): # the loop is already running, return the await-able to the user return result else : # the loop is not running yet, so we can run it for the user return loop . run_until_complete ( result ) That means you can do this: print ( client . get_me () . username ) Instead of this: me = client . loop . run_until_complete ( client . get_me ()) print ( me . username ) # or, using asyncio's default loop (it's the same) import asyncio loop = asyncio . get_event_loop () # == client.loop me = loop . run_until_complete ( client . get_me ()) print ( me . username ) As you can see, it's a lot of boilerplate and noise having to type run_until_complete all the time, so you can let the magic module to rewrite it for you. But notice the comment above: it won't run the loop if it's already running, because it can't. That means this: async def main (): # 3. the loop is running here print ( client . get_me () # 4. this will return a coroutine! . username # 5. this fails, coroutines don't have usernames ) loop . run_until_complete ( # 2. run the loop and the ``main()`` coroutine main () # 1. calling ``async def`` \"returns\" a coroutine ) Will fail. So if you're inside an async def , then the loop is running, and if the loop is running, you must await things yourself: async def main (): print (( await client . get_me ()) . username ) loop . run_until_complete ( main ())","title":"What does telethon.sync do?"},{"location":"concepts/asyncio/#what-are-async-await-and-coroutines","text":"The async keyword lets you define asynchronous functions, also known as coroutines, and also iterate over asynchronous loops or use async with : import asyncio async def main (): # ^ this declares the main() coroutine function async with client : # ^ this is an asynchronous with block async for message in client . iter_messages ( chat ): # ^ this is a for loop over an asynchronous generator print ( message . sender . username ) loop = asyncio . get_event_loop () # ^ this assigns the default event loop from the main thread to a variable loop . run_until_complete ( main ()) # ^ this runs the *entire* loop until the main() function finishes. # While the main() function does not finish, the loop will be running. # While the loop is running, you can't run it again. The await keyword blocks the current task, and the loop can run other tasks. Tasks can be thought of as \"threads\", since many can run concurrently: import asyncio async def hello ( delay ): await asyncio . sleep ( delay ) # await tells the loop this task is \"busy\" print ( 'hello' ) # eventually the loop resumes the code here async def world ( delay ): # the loop decides this method should run first await asyncio . sleep ( delay ) # await tells the loop this task is \"busy\" print ( 'world' ) # eventually the loop finishes all tasks loop = asyncio . get_event_loop () # get the default loop for the main thread loop . create_task ( world ( 2 )) # create the world task, passing 2 as delay loop . create_task ( hello ( delay = 1 )) # another task, but with delay 1 try : # run the event loop forever; ctrl+c to stop it # we could also run the loop for three seconds: # loop.run_until_complete(asyncio.sleep(3)) loop . run_forever () except KeyboardInterrupt : pass The same example, but without the comment noise: import asyncio async def hello ( delay ): await asyncio . sleep ( delay ) print ( 'hello' ) async def world ( delay ): await asyncio . sleep ( delay ) print ( 'world' ) loop = asyncio . get_event_loop () loop . create_task ( world ( 2 )) loop . create_task ( hello ( 1 )) loop . run_until_complete ( asyncio . sleep ( 3 ))","title":"What are async, await and coroutines?"},{"location":"concepts/asyncio/#can-i-use-threads","text":"Yes, you can, but you must understand that the loops themselves are not thread safe. and you must be sure to know what is happening. You may want to create a loop in a new thread and make sure to pass it to the client: import asyncio import threading def go (): loop = asyncio . new_event_loop () client = TelegramClient ( ... , loop = loop ) ... threading . Thread ( target = go ) . start () Generally, you don't need threads unless you know what you're doing. Just create another task, as shown above. If you're using the Telethon with a library that uses threads, you must be careful to use threading.Lock whenever you use the client, or enable the compatible mode. For that, see Compatibility and Convenience . You may have seen this error: RuntimeError: There is no current event loop in thread 'Thread-1'. It just means you didn't create a loop for that thread, and if you don't pass a loop when creating the client, it uses asyncio.get_event_loop() , which only works in the main thread.","title":"Can I use threads?"},{"location":"concepts/asyncio/#clientrun_until_disconnected-blocks","text":"All of what client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected> does is run the asyncio 's event loop until the client is disconnected. That means the loop is running . And if the loop is running, it will run all the tasks in it. So if you want to run other code, create tasks for it: from datetime import datetime async def clock (): while True : print ( 'The time:' , datetime . now ()) await asyncio . sleep ( 1 ) loop . create_task ( clock ()) ... client . run_until_disconnected () This creates a task for a clock that prints the time every second. You don't need to use client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected> either! You just need to make the loop is running, somehow. loop.run_forever() <asyncio.loop.run_forever()> and loop.run_until_complete() <asyncio.loop.run_until_complete> can also be used to run the loop, and Telethon will be happy with any approach. Of course, there are better tools to run code hourly or daily, see below.","title":"client.run_until_disconnected() blocks!"},{"location":"concepts/asyncio/#what-else-can-asyncio-do","text":"Asynchronous IO is a really powerful tool, as we've seen. There are plenty of other useful libraries that also use asyncio and that you can integrate with Telethon. aiohttp is like the infamous requests but asynchronous. quart is an asynchronous alternative to Flask . aiocron lets you schedule things to run things at a desired time, or run some tasks hourly, daily, etc. And of course, asyncio itself! It has a lot of methods that let you do nice things. For example, you can run requests in parallel: async def main (): last , sent , download_path = await asyncio . gather ( client . get_messages ( 'TelethonChat' , 10 ), client . send_message ( 'TelethonOfftopic' , 'Hey guys!' ), client . download_profile_photo ( 'TelethonChat' ) ) loop . run_until_complete ( main ()) This code will get the 10 last messages from @TelethonChat , send one to @TelethonOfftopic , and also download the profile photo of the main group. asyncio will run all these three tasks at the same time. You can run all the tasks you want this way. A different way would be: loop . create_task ( client . get_messages ( 'TelethonChat' , 10 )) loop . create_task ( client . send_message ( 'TelethonOfftopic' , 'Hey guys!' )) loop . create_task ( client . download_profile_photo ( 'TelethonChat' )) They will run in the background as long as the loop is running too. You can also start an asyncio server in the main script, and from another script, connect to it to achieve Inter-Process Communication . You can get as creative as you want. You can program anything you want. When you use a library, you're not limited to use only its methods. You can combine all the libraries you want. People seem to forget this simple fact!","title":"What else can asyncio do?"},{"location":"concepts/asyncio/#why-does-clientstart-work-outside-async","text":"Because it's so common that it's really convenient to offer said functionality by default. This means you can set up all your event handlers and start the client without worrying about loops at all. Using the client in a with block, start <telethon.client.auth.AuthMethods.start> , run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> , and disconnect <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> all support this.","title":"Why does client.start() work outside async?"},{"location":"concepts/asyncio/#where-can-i-read-more","text":"Check out my blog post about asyncio , which has some more examples and pictures to help you understand what happens when the loop runs.","title":"Where can I read more?"},{"location":"concepts/botapi-vs-mtproto/","text":"HTTP Bot API vs MTProto \u00b6 Telethon is more than just another viable alternative when developing bots for Telegram. If you haven't decided which wrapper library for bots to use yet, using Telethon from the beginning may save you some headaches later. What is Bot API? \u00b6 The Telegram Bot API , also known as HTTP Bot API and from now on referred to as simply \"Bot API\" is Telegram's official way for developers to control their own Telegram bots. Quoting their main page: The Bot API is an HTTP-based interface created for developers keen on building bots for Telegram. To learn how to create and set up a bot, please consult our Introduction to Bots and Bot FAQ . Bot API is simply an HTTP endpoint which translates your requests to it into MTProto calls through tdlib , their bot backend. What is MTProto? \u00b6 MTProto is Telegram's own protocol to communicate with their API when you connect to their servers. Telethon is an alternative MTProto-based backend written entirely in Python and much easier to setup and use. Both official applications and third-party clients (like your own applications) logged in as either user or bots can use MTProto to communicate directly with Telegram's API (which is not the HTTP bot API). When we talk about MTProto, we often mean \"MTProto-based clients\". Advantages of MTProto over Bot API \u00b6 MTProto clients (like Telethon) connect directly to Telegram's servers, which means there is no HTTP connection, no \"polling\" or \"web hooks\". This means less overhead , since the protocol used between you and the server is much more compact than HTTP requests with responses in wasteful JSON. Since there is a direct connection to Telegram's servers, even if their Bot API endpoint is down, you can still have connection to Telegram directly. Using a MTProto client, you are also not limited to the public API that they expose, and instead, you have full control of what your bot can do. Telethon offers you all the power with often much easier usage than any of the available Python Bot API wrappers. If your application ever needs user features because bots cannot do certain things, you will be able to easily login as a user and even keep your bot without having to learn a new library. If less overhead and full control didn't convince you to use Telethon yet, check out the wiki page MTProto vs HTTP Bot API with a more exhaustive and up-to-date list of differences. Migrating from Bot API to Telethon \u00b6 It doesn't matter if you wrote your bot with requests_ and you were making API requests manually, or if you used a wrapper library like python-telegram-bot or pyTelegramBotAPI . It's never too late to migrate to Telethon! If you were using an asynchronous library like aiohttp or a wrapper like aiogram or dumbot , it will be even easier, because Telethon is also an asynchronous library. Next, we will see some examples from the most popular libraries. Migrating from python-telegram-bot \u00b6 Let's take their echobot2.py example and shorten it a bit: from telegram.ext import Updater , CommandHandler , MessageHandler , Filters def start ( update , context ): \"\"\"Send a message when the command /start is issued.\"\"\" update . message . reply_text ( 'Hi!' ) def echo ( update , context ): \"\"\"Echo the user message.\"\"\" update . message . reply_text ( update . message . text ) def main (): \"\"\"Start the bot.\"\"\" updater = Updater ( \"TOKEN\" ) dp = updater . dispatcher dp . add_handler ( CommandHandler ( \"start\" , start )) dp . add_handler ( MessageHandler ( Filters . text , echo )) updater . start_polling () updater . idle () if __name__ == '__main__' : main () After using Telethon: from telethon import TelegramClient , events bot = TelegramClient ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) @bot . on ( events . NewMessage ( pattern = '/start' )) async def start ( event ): \"\"\"Send a message when the command /start is issued.\"\"\" await event . respond ( 'Hi!' ) raise events . StopPropagation @bot . on ( events . NewMessage ) async def echo ( event ): \"\"\"Echo the user message.\"\"\" await event . respond ( event . text ) def main (): \"\"\"Start the bot.\"\"\" bot . run_until_disconnected () if __name__ == '__main__' : main () Key differences: The recommended way to do it imports less things. All handlers trigger by default, so we need events.StopPropagation . Adding handlers, responding and running is a lot less verbose. Telethon needs async def and await . The bot isn't hidden away by Updater or Dispatcher . Migrating from pyTelegramBotAPI \u00b6 Let's show another echobot from their README: import telebot bot = telebot . TeleBot ( \"TOKEN\" ) @bot . message_handler ( commands = [ 'start' ]) def send_welcome ( message ): bot . reply_to ( message , \"Howdy, how are you doing?\" ) @bot . message_handler ( func = lambda m : True ) def echo_all ( message ): bot . reply_to ( message , message . text ) bot . polling () Now we rewrite it to use Telethon: from telethon import TelegramClient , events bot = TelegramClient ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) @bot . on ( events . NewMessage ( pattern = '/start' )) async def send_welcome ( event ): await event . reply ( 'Howdy, how are you doing?' ) @bot . on ( events . NewMessage ) async def echo_all ( event ): await event . reply ( event . text ) bot . run_until_disconnected () Key differences: Instead of doing bot.reply_to(message) , we can do event.reply . Note that the event behaves just like their message . Telethon also supports func=lambda m: True , but it's not necessary. Migrating from aiogram \u00b6 From their GitHub: from aiogram import Bot , Dispatcher , executor , types API_TOKEN = 'BOT TOKEN HERE' # Initialize bot and dispatcher bot = Bot ( token = API_TOKEN ) dp = Dispatcher ( bot ) @dp . message_handler ( commands = [ 'start' ]) async def send_welcome ( message : types . Message ): \"\"\" This handler will be called when client send `/start` command. \"\"\" await message . reply ( \"Hi! \\n I'm EchoBot! \\n Powered by aiogram.\" ) @dp . message_handler ( regexp = '(^cat[s]?$|puss)' ) async def cats ( message : types . Message ): with open ( 'data/cats.jpg' , 'rb' ) as photo : await bot . send_photo ( message . chat . id , photo , caption = 'Cats is here \ud83d\ude3a' , reply_to_message_id = message . message_id ) @dp . message_handler () async def echo ( message : types . Message ): await bot . send_message ( message . chat . id , message . text ) if __name__ == '__main__' : executor . start_polling ( dp , skip_updates = True ) After rewrite: from telethon import TelegramClient , events # Initialize bot and... just the bot! bot = TelegramClient ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) @bot . on ( events . NewMessage ( pattern = '/start' )) async def send_welcome ( event ): await event . reply ( 'Howdy, how are you doing?' ) @bot . on ( events . NewMessage ( pattern = '(^cat[s]?$|puss)' )) async def cats ( event ): await event . reply ( 'Cats is here \ud83d\ude3a' , file = 'data/cats.jpg' ) @bot . on ( events . NewMessage ) async def echo_all ( event ): await event . reply ( event . text ) if __name__ == '__main__' : bot . run_until_disconnected () Key differences: Telethon offers convenience methods to avoid retyping bot.send_photo(message.chat.id, ...) all the time, and instead let you type event.reply . Sending files is a lot easier. The methods for sending photos, documents, audios, etc. are all the same! Migrating from dumbot \u00b6 Showcasing their subclassing example: from dumbot import Bot class Subbot ( Bot ): async def init ( self ): self . me = await self . getMe () async def on_update ( self , update ): await self . sendMessage ( chat_id = update . message . chat . id , text = 'i am {} ' . format ( self . me . username ) ) Subbot ( token ) . run () After rewriting: from telethon import TelegramClient , events class Subbot ( TelegramClient ): def __init__ ( self , * a , ** kw ): await super () . __init__ ( * a , ** kw ) self . add_event_handler ( self . on_update , events . NewMessage ) async def connect (): await super () . connect () self . me = await self . get_me () async def on_update ( event ): await event . reply ( 'i am {} ' . format ( self . me . username )) bot = Subbot ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) bot . run_until_disconnected () Key differences: Telethon method names are snake_case . dumbot does not offer friendly methods like update.reply . Telethon does not have an implicit on_update handler, so we need to manually register one.","title":"HTTP Bot API vs MTProto"},{"location":"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto","text":"Telethon is more than just another viable alternative when developing bots for Telegram. If you haven't decided which wrapper library for bots to use yet, using Telethon from the beginning may save you some headaches later.","title":"HTTP Bot API vs MTProto"},{"location":"concepts/botapi-vs-mtproto/#what-is-bot-api","text":"The Telegram Bot API , also known as HTTP Bot API and from now on referred to as simply \"Bot API\" is Telegram's official way for developers to control their own Telegram bots. Quoting their main page: The Bot API is an HTTP-based interface created for developers keen on building bots for Telegram. To learn how to create and set up a bot, please consult our Introduction to Bots and Bot FAQ . Bot API is simply an HTTP endpoint which translates your requests to it into MTProto calls through tdlib , their bot backend.","title":"What is Bot API?"},{"location":"concepts/botapi-vs-mtproto/#what-is-mtproto","text":"MTProto is Telegram's own protocol to communicate with their API when you connect to their servers. Telethon is an alternative MTProto-based backend written entirely in Python and much easier to setup and use. Both official applications and third-party clients (like your own applications) logged in as either user or bots can use MTProto to communicate directly with Telegram's API (which is not the HTTP bot API). When we talk about MTProto, we often mean \"MTProto-based clients\".","title":"What is MTProto?"},{"location":"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api","text":"MTProto clients (like Telethon) connect directly to Telegram's servers, which means there is no HTTP connection, no \"polling\" or \"web hooks\". This means less overhead , since the protocol used between you and the server is much more compact than HTTP requests with responses in wasteful JSON. Since there is a direct connection to Telegram's servers, even if their Bot API endpoint is down, you can still have connection to Telegram directly. Using a MTProto client, you are also not limited to the public API that they expose, and instead, you have full control of what your bot can do. Telethon offers you all the power with often much easier usage than any of the available Python Bot API wrappers. If your application ever needs user features because bots cannot do certain things, you will be able to easily login as a user and even keep your bot without having to learn a new library. If less overhead and full control didn't convince you to use Telethon yet, check out the wiki page MTProto vs HTTP Bot API with a more exhaustive and up-to-date list of differences.","title":"Advantages of MTProto over Bot API"},{"location":"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon","text":"It doesn't matter if you wrote your bot with requests_ and you were making API requests manually, or if you used a wrapper library like python-telegram-bot or pyTelegramBotAPI . It's never too late to migrate to Telethon! If you were using an asynchronous library like aiohttp or a wrapper like aiogram or dumbot , it will be even easier, because Telethon is also an asynchronous library. Next, we will see some examples from the most popular libraries.","title":"Migrating from Bot API to Telethon"},{"location":"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot","text":"Let's take their echobot2.py example and shorten it a bit: from telegram.ext import Updater , CommandHandler , MessageHandler , Filters def start ( update , context ): \"\"\"Send a message when the command /start is issued.\"\"\" update . message . reply_text ( 'Hi!' ) def echo ( update , context ): \"\"\"Echo the user message.\"\"\" update . message . reply_text ( update . message . text ) def main (): \"\"\"Start the bot.\"\"\" updater = Updater ( \"TOKEN\" ) dp = updater . dispatcher dp . add_handler ( CommandHandler ( \"start\" , start )) dp . add_handler ( MessageHandler ( Filters . text , echo )) updater . start_polling () updater . idle () if __name__ == '__main__' : main () After using Telethon: from telethon import TelegramClient , events bot = TelegramClient ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) @bot . on ( events . NewMessage ( pattern = '/start' )) async def start ( event ): \"\"\"Send a message when the command /start is issued.\"\"\" await event . respond ( 'Hi!' ) raise events . StopPropagation @bot . on ( events . NewMessage ) async def echo ( event ): \"\"\"Echo the user message.\"\"\" await event . respond ( event . text ) def main (): \"\"\"Start the bot.\"\"\" bot . run_until_disconnected () if __name__ == '__main__' : main () Key differences: The recommended way to do it imports less things. All handlers trigger by default, so we need events.StopPropagation . Adding handlers, responding and running is a lot less verbose. Telethon needs async def and await . The bot isn't hidden away by Updater or Dispatcher .","title":"Migrating from python-telegram-bot"},{"location":"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi","text":"Let's show another echobot from their README: import telebot bot = telebot . TeleBot ( \"TOKEN\" ) @bot . message_handler ( commands = [ 'start' ]) def send_welcome ( message ): bot . reply_to ( message , \"Howdy, how are you doing?\" ) @bot . message_handler ( func = lambda m : True ) def echo_all ( message ): bot . reply_to ( message , message . text ) bot . polling () Now we rewrite it to use Telethon: from telethon import TelegramClient , events bot = TelegramClient ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) @bot . on ( events . NewMessage ( pattern = '/start' )) async def send_welcome ( event ): await event . reply ( 'Howdy, how are you doing?' ) @bot . on ( events . NewMessage ) async def echo_all ( event ): await event . reply ( event . text ) bot . run_until_disconnected () Key differences: Instead of doing bot.reply_to(message) , we can do event.reply . Note that the event behaves just like their message . Telethon also supports func=lambda m: True , but it's not necessary.","title":"Migrating from pyTelegramBotAPI"},{"location":"concepts/botapi-vs-mtproto/#migrating-from-aiogram","text":"From their GitHub: from aiogram import Bot , Dispatcher , executor , types API_TOKEN = 'BOT TOKEN HERE' # Initialize bot and dispatcher bot = Bot ( token = API_TOKEN ) dp = Dispatcher ( bot ) @dp . message_handler ( commands = [ 'start' ]) async def send_welcome ( message : types . Message ): \"\"\" This handler will be called when client send `/start` command. \"\"\" await message . reply ( \"Hi! \\n I'm EchoBot! \\n Powered by aiogram.\" ) @dp . message_handler ( regexp = '(^cat[s]?$|puss)' ) async def cats ( message : types . Message ): with open ( 'data/cats.jpg' , 'rb' ) as photo : await bot . send_photo ( message . chat . id , photo , caption = 'Cats is here \ud83d\ude3a' , reply_to_message_id = message . message_id ) @dp . message_handler () async def echo ( message : types . Message ): await bot . send_message ( message . chat . id , message . text ) if __name__ == '__main__' : executor . start_polling ( dp , skip_updates = True ) After rewrite: from telethon import TelegramClient , events # Initialize bot and... just the bot! bot = TelegramClient ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) @bot . on ( events . NewMessage ( pattern = '/start' )) async def send_welcome ( event ): await event . reply ( 'Howdy, how are you doing?' ) @bot . on ( events . NewMessage ( pattern = '(^cat[s]?$|puss)' )) async def cats ( event ): await event . reply ( 'Cats is here \ud83d\ude3a' , file = 'data/cats.jpg' ) @bot . on ( events . NewMessage ) async def echo_all ( event ): await event . reply ( event . text ) if __name__ == '__main__' : bot . run_until_disconnected () Key differences: Telethon offers convenience methods to avoid retyping bot.send_photo(message.chat.id, ...) all the time, and instead let you type event.reply . Sending files is a lot easier. The methods for sending photos, documents, audios, etc. are all the same!","title":"Migrating from aiogram"},{"location":"concepts/botapi-vs-mtproto/#migrating-from-dumbot","text":"Showcasing their subclassing example: from dumbot import Bot class Subbot ( Bot ): async def init ( self ): self . me = await self . getMe () async def on_update ( self , update ): await self . sendMessage ( chat_id = update . message . chat . id , text = 'i am {} ' . format ( self . me . username ) ) Subbot ( token ) . run () After rewriting: from telethon import TelegramClient , events class Subbot ( TelegramClient ): def __init__ ( self , * a , ** kw ): await super () . __init__ ( * a , ** kw ) self . add_event_handler ( self . on_update , events . NewMessage ) async def connect (): await super () . connect () self . me = await self . get_me () async def on_update ( event ): await event . reply ( 'i am {} ' . format ( self . me . username )) bot = Subbot ( 'bot' , 11111 , 'a1b2c3d4' ) . start ( bot_token = 'TOKEN' ) bot . run_until_disconnected () Key differences: Telethon method names are snake_case . dumbot does not offer friendly methods like update.reply . Telethon does not have an implicit on_update handler, so we need to manually register one.","title":"Migrating from dumbot"},{"location":"concepts/entities/","text":"Entities \u00b6 The library widely uses the concept of \"entities\". An entity will refer to any :tl: User , :tl: Chat or :tl: Channel object that the API may return in response to certain methods, such as :tl: GetUsersRequest . Note When something \"entity-like\" is required, it means that you need to provide something that can be turned into an entity. These things include, but are not limited to, usernames, exact titles, IDs, :tl: Peer objects, or even entire :tl: User , :tl: Chat and :tl: Channel objects and even phone numbers from people you have in your contact list . To \"encounter\" an ID, you would have to \"find it\" like you would in the normal app. If the peer is in your dialogs, you would need to client.get_dialogs() <telethon.client.dialogs.DialogMethods.get_dialogs> . If the peer is someone in a group, you would similarly client.get_participants(group) <telethon.client.chats.ChatMethods.get_participants> . Once you have encountered an ID, the library will (by default) have saved their access_hash for you, which is needed to invoke most methods. This is why sometimes you might encounter this error when working with the library. You should except ValueError and run code that you know should work to find the entity. What is an Entity? \u00b6 A lot of methods and requests require entities to work. For example, you send a message to an entity , get the username of an entity , and so on. There are a lot of things that work as entities: usernames, phone numbers, chat links, invite links, IDs, and the types themselves. That is, you can use any of those when you see an \"entity\" is needed. Note Remember that the phone number must be in your contact list before you can use it. You should use, from better to worse : Input entities. For example, event.input_chat <telethon.tl.custom.chatgetter.ChatGetter.input_chat> , message.input_sender <telethon.tl.custom.sendergetter.SenderGetter.input_sender> , or caching an entity you will use a lot with entity = await client.get_input_entity(...) . Entities. For example, if you had to get someone's username, you can just use user or channel . It will work. Only use this option if you already have the entity! IDs. This will always look the entity up from the cache (the *.session file caches seen entities). Usernames, phone numbers and links. The cache will be used too (unless you force a client.get_entity() <telethon.client.users.UserMethods.get_entity> ), but may make a request if the username, phone or link has not been found yet. In recent versions of the library, the following two are equivalent: async def handler ( event ): await client . send_message ( event . sender_id , 'Hi' ) await client . send_message ( event . input_sender , 'Hi' ) If you need to be 99% sure that the code will work (sometimes it's simply impossible for the library to find the input entity), or if you will reuse the chat a lot, consider using the following instead: async def handler ( event ): # This method may make a network request to find the input sender. # Properties can't make network requests, so we need a method. sender = await event . get_input_sender () await client . send_message ( sender , 'Hi' ) await client . send_message ( sender , 'Hi' ) Getting Entities \u00b6 Through the use of the :ref: sessions , the library will automatically remember the ID and hash pair, along with some extra information, so you're able to just do this: # (These examples assume you are inside an \"async def\") # # Dialogs are the \"conversations you have open\". # This method returns a list of Dialog, which # has the .entity attribute and other information. # # This part is IMPORTANT, because it fills the entity cache. dialogs = await client . get_dialogs () # All of these work and do the same. username = await client . get_entity ( 'username' ) username = await client . get_entity ( 't.me/username' ) username = await client . get_entity ( 'https://telegram.dog/username' ) # Other kind of entities. channel = await client . get_entity ( 'telegram.me/joinchat/AAAAAEkk2WdoDrB4-Q8-gg' ) contact = await client . get_entity ( '+34xxxxxxxxx' ) friend = await client . get_entity ( friend_id ) # Getting entities through their ID (User, Chat or Channel) entity = await client . get_entity ( some_id ) # You can be more explicit about the type for said ID by wrapping # it inside a Peer instance. This is recommended but not necessary. from telethon.tl.types import PeerUser , PeerChat , PeerChannel my_user = await client . get_entity ( PeerUser ( some_id )) my_chat = await client . get_entity ( PeerChat ( some_id )) my_channel = await client . get_entity ( PeerChannel ( some_id )) Note You don't need to get the entity before using it! Just let the library do its job. Use a phone from your contacts, username, ID or input entity (preferred but not necessary), whatever you already have. All methods in the :ref: telethon-client call .get_input_entity() <telethon.client.users.UserMethods.get_input_entity> prior to sending the request to save you from the hassle of doing so manually. That way, convenience calls such as client.send_message('username', 'hi!') <telethon.client.messages.MessageMethods.send_message> become possible. Every entity the library encounters (in any response to any call) will by default be cached in the .session file (an SQLite database), to avoid performing unnecessary API calls. If the entity cannot be found, additonal calls like :tl: ResolveUsernameRequest or :tl: GetContactsRequest may be made to obtain the required information. Entities vs. Input Entities \u00b6 Note This section is informative, but worth reading. The library will transparently handle all of these details for you. On top of the normal types, the API also make use of what they call their Input* versions of objects. The input version of an entity (e.g. :tl: InputPeerUser , :tl: InputChat , etc.) only contains the minimum information that's required from Telegram to be able to identify who you're referring to: a :tl: Peer 's ID and hash . They are named like this because they are input parameters in the requests. Entities' ID are the same for all user and bot accounts, however, the access hash is different for each account , so trying to reuse the access hash from one account in another will not work. Sometimes, Telegram only needs to indicate the type of the entity along with their ID. For this purpose, :tl: Peer versions of the entities also exist, which just have the ID. You cannot get the hash out of them since you should not be needing it. The library probably has cached it before. Peers are enough to identify an entity, but they are not enough to make a request with them. You need to know their hash before you can \"use them\", and to know the hash you need to \"encounter\" them, let it be in your dialogs, participants, message forwards, etc. Note You can use peers with the library. Behind the scenes, they are replaced with the input variant. Peers \"aren't enough\" on their own but the library will do some more work to use the right type. As we just mentioned, API calls don't need to know the whole information about the entities, only their ID and hash. For this reason, another method, client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> is available. This will always use the cache while possible, making zero API calls most of the time. When a request is made, if you provided the full entity, e.g. an :tl: User , the library will convert it to the required :tl: InputPeer automatically for you. You should always favour client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> over client.get_entity() <telethon.client.users.UserMethods.get_entity> for this reason! Calling the latter will always make an API call to get the most recent information about said entity, but invoking requests don't need this information, just the :tl: InputPeer . Only use client.get_entity() <telethon.client.users.UserMethods.get_entity> if you need to get actual information, like the username, name, title, etc. of the entity. To further simplify the workflow, since the version 0.16.2 of the library, the raw requests you make to the API are also able to call client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> wherever needed, so you can even do things like: await client ( SendMessageRequest ( 'username' , 'hello' )) The library will call the .resolve() method of the request, which will resolve 'username' with the appropriated :tl: InputPeer . Don't worry if you don't get this yet, but remember some of the details here are important. Full Entities \u00b6 In addition to :tl: PeerUser , :tl: InputPeerUser , :tl: User (and its variants for chats and channels), there is also the concept of :tl: UserFull . This full variant has additional information such as whether the user is blocked, its notification settings, the bio or about of the user, etc. There is also :tl: messages.ChatFull which is the equivalent of full entities for chats and channels, with also the about section of the channel. Note that the users field only contains bots for the channel (so that clients can suggest commands to use). You can get both of these by invoking :tl: GetFullUser , :tl: GetFullChat and :tl: GetFullChannel respectively. Accessing Entities \u00b6 Although it's explicitly noted in the documentation that messages subclass ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> and SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> , some people still don't get inheritance. When the documentation says \"Bases: telethon.tl.custom.chatgetter.ChatGetter \" it means that the class you're looking at, also can act as the class it bases. In this case, ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> knows how to get the chat where a thing belongs to. So, a Message <telethon.tl.custom.message.Message> is a ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> . That means you can do this: message . is_private message . chat_id await message . get_chat () # ...etc SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> is similar: message . user_id await message . get_input_user () message . user # ...etc Quite a few things implement them, so it makes sense to reuse the code. For example, all events (except raw updates) implement ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> since all events occur in some chat. Summary \u00b6 TL;DR; If you're here because of \"Could not find the input entity for\" , you must ask yourself \"how did I find this entity through official applications\"? Now do the same with the library. Use what applies: # (These examples assume you are inside an \"async def\") async with client : # Does it have an username? Use it! entity = await client . get_entity ( username ) # Do you have a conversation open with them? Get dialogs. await client . get_dialogs () # Are they participant of some group? Get them. await client . get_participants ( 'TelethonChat' ) # Is the entity the original sender of a forwarded message? Get it. await client . get_messages ( 'TelethonChat' , 100 ) # NOW you can use the ID, anywhere! await client . send_message ( 123456 , 'Hi!' ) entity = await client . get_entity ( 123456 ) print ( entity ) Once the library has \"seen\" the entity, you can use their integer ID. You can't use entities from IDs the library hasn't seen. You must make the library see them at least once and disconnect properly. You know where the entities are and you must tell the library. It won't guess for you.","title":"Entities"},{"location":"concepts/entities/#entities","text":"The library widely uses the concept of \"entities\". An entity will refer to any :tl: User , :tl: Chat or :tl: Channel object that the API may return in response to certain methods, such as :tl: GetUsersRequest . Note When something \"entity-like\" is required, it means that you need to provide something that can be turned into an entity. These things include, but are not limited to, usernames, exact titles, IDs, :tl: Peer objects, or even entire :tl: User , :tl: Chat and :tl: Channel objects and even phone numbers from people you have in your contact list . To \"encounter\" an ID, you would have to \"find it\" like you would in the normal app. If the peer is in your dialogs, you would need to client.get_dialogs() <telethon.client.dialogs.DialogMethods.get_dialogs> . If the peer is someone in a group, you would similarly client.get_participants(group) <telethon.client.chats.ChatMethods.get_participants> . Once you have encountered an ID, the library will (by default) have saved their access_hash for you, which is needed to invoke most methods. This is why sometimes you might encounter this error when working with the library. You should except ValueError and run code that you know should work to find the entity.","title":"Entities"},{"location":"concepts/entities/#what-is-an-entity","text":"A lot of methods and requests require entities to work. For example, you send a message to an entity , get the username of an entity , and so on. There are a lot of things that work as entities: usernames, phone numbers, chat links, invite links, IDs, and the types themselves. That is, you can use any of those when you see an \"entity\" is needed. Note Remember that the phone number must be in your contact list before you can use it. You should use, from better to worse : Input entities. For example, event.input_chat <telethon.tl.custom.chatgetter.ChatGetter.input_chat> , message.input_sender <telethon.tl.custom.sendergetter.SenderGetter.input_sender> , or caching an entity you will use a lot with entity = await client.get_input_entity(...) . Entities. For example, if you had to get someone's username, you can just use user or channel . It will work. Only use this option if you already have the entity! IDs. This will always look the entity up from the cache (the *.session file caches seen entities). Usernames, phone numbers and links. The cache will be used too (unless you force a client.get_entity() <telethon.client.users.UserMethods.get_entity> ), but may make a request if the username, phone or link has not been found yet. In recent versions of the library, the following two are equivalent: async def handler ( event ): await client . send_message ( event . sender_id , 'Hi' ) await client . send_message ( event . input_sender , 'Hi' ) If you need to be 99% sure that the code will work (sometimes it's simply impossible for the library to find the input entity), or if you will reuse the chat a lot, consider using the following instead: async def handler ( event ): # This method may make a network request to find the input sender. # Properties can't make network requests, so we need a method. sender = await event . get_input_sender () await client . send_message ( sender , 'Hi' ) await client . send_message ( sender , 'Hi' )","title":"What is an Entity?"},{"location":"concepts/entities/#getting-entities","text":"Through the use of the :ref: sessions , the library will automatically remember the ID and hash pair, along with some extra information, so you're able to just do this: # (These examples assume you are inside an \"async def\") # # Dialogs are the \"conversations you have open\". # This method returns a list of Dialog, which # has the .entity attribute and other information. # # This part is IMPORTANT, because it fills the entity cache. dialogs = await client . get_dialogs () # All of these work and do the same. username = await client . get_entity ( 'username' ) username = await client . get_entity ( 't.me/username' ) username = await client . get_entity ( 'https://telegram.dog/username' ) # Other kind of entities. channel = await client . get_entity ( 'telegram.me/joinchat/AAAAAEkk2WdoDrB4-Q8-gg' ) contact = await client . get_entity ( '+34xxxxxxxxx' ) friend = await client . get_entity ( friend_id ) # Getting entities through their ID (User, Chat or Channel) entity = await client . get_entity ( some_id ) # You can be more explicit about the type for said ID by wrapping # it inside a Peer instance. This is recommended but not necessary. from telethon.tl.types import PeerUser , PeerChat , PeerChannel my_user = await client . get_entity ( PeerUser ( some_id )) my_chat = await client . get_entity ( PeerChat ( some_id )) my_channel = await client . get_entity ( PeerChannel ( some_id )) Note You don't need to get the entity before using it! Just let the library do its job. Use a phone from your contacts, username, ID or input entity (preferred but not necessary), whatever you already have. All methods in the :ref: telethon-client call .get_input_entity() <telethon.client.users.UserMethods.get_input_entity> prior to sending the request to save you from the hassle of doing so manually. That way, convenience calls such as client.send_message('username', 'hi!') <telethon.client.messages.MessageMethods.send_message> become possible. Every entity the library encounters (in any response to any call) will by default be cached in the .session file (an SQLite database), to avoid performing unnecessary API calls. If the entity cannot be found, additonal calls like :tl: ResolveUsernameRequest or :tl: GetContactsRequest may be made to obtain the required information.","title":"Getting Entities"},{"location":"concepts/entities/#entities-vs-input-entities","text":"Note This section is informative, but worth reading. The library will transparently handle all of these details for you. On top of the normal types, the API also make use of what they call their Input* versions of objects. The input version of an entity (e.g. :tl: InputPeerUser , :tl: InputChat , etc.) only contains the minimum information that's required from Telegram to be able to identify who you're referring to: a :tl: Peer 's ID and hash . They are named like this because they are input parameters in the requests. Entities' ID are the same for all user and bot accounts, however, the access hash is different for each account , so trying to reuse the access hash from one account in another will not work. Sometimes, Telegram only needs to indicate the type of the entity along with their ID. For this purpose, :tl: Peer versions of the entities also exist, which just have the ID. You cannot get the hash out of them since you should not be needing it. The library probably has cached it before. Peers are enough to identify an entity, but they are not enough to make a request with them. You need to know their hash before you can \"use them\", and to know the hash you need to \"encounter\" them, let it be in your dialogs, participants, message forwards, etc. Note You can use peers with the library. Behind the scenes, they are replaced with the input variant. Peers \"aren't enough\" on their own but the library will do some more work to use the right type. As we just mentioned, API calls don't need to know the whole information about the entities, only their ID and hash. For this reason, another method, client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> is available. This will always use the cache while possible, making zero API calls most of the time. When a request is made, if you provided the full entity, e.g. an :tl: User , the library will convert it to the required :tl: InputPeer automatically for you. You should always favour client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> over client.get_entity() <telethon.client.users.UserMethods.get_entity> for this reason! Calling the latter will always make an API call to get the most recent information about said entity, but invoking requests don't need this information, just the :tl: InputPeer . Only use client.get_entity() <telethon.client.users.UserMethods.get_entity> if you need to get actual information, like the username, name, title, etc. of the entity. To further simplify the workflow, since the version 0.16.2 of the library, the raw requests you make to the API are also able to call client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> wherever needed, so you can even do things like: await client ( SendMessageRequest ( 'username' , 'hello' )) The library will call the .resolve() method of the request, which will resolve 'username' with the appropriated :tl: InputPeer . Don't worry if you don't get this yet, but remember some of the details here are important.","title":"Entities vs. Input Entities"},{"location":"concepts/entities/#full-entities","text":"In addition to :tl: PeerUser , :tl: InputPeerUser , :tl: User (and its variants for chats and channels), there is also the concept of :tl: UserFull . This full variant has additional information such as whether the user is blocked, its notification settings, the bio or about of the user, etc. There is also :tl: messages.ChatFull which is the equivalent of full entities for chats and channels, with also the about section of the channel. Note that the users field only contains bots for the channel (so that clients can suggest commands to use). You can get both of these by invoking :tl: GetFullUser , :tl: GetFullChat and :tl: GetFullChannel respectively.","title":"Full Entities"},{"location":"concepts/entities/#accessing-entities","text":"Although it's explicitly noted in the documentation that messages subclass ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> and SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> , some people still don't get inheritance. When the documentation says \"Bases: telethon.tl.custom.chatgetter.ChatGetter \" it means that the class you're looking at, also can act as the class it bases. In this case, ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> knows how to get the chat where a thing belongs to. So, a Message <telethon.tl.custom.message.Message> is a ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> . That means you can do this: message . is_private message . chat_id await message . get_chat () # ...etc SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> is similar: message . user_id await message . get_input_user () message . user # ...etc Quite a few things implement them, so it makes sense to reuse the code. For example, all events (except raw updates) implement ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> since all events occur in some chat.","title":"Accessing Entities"},{"location":"concepts/entities/#summary","text":"TL;DR; If you're here because of \"Could not find the input entity for\" , you must ask yourself \"how did I find this entity through official applications\"? Now do the same with the library. Use what applies: # (These examples assume you are inside an \"async def\") async with client : # Does it have an username? Use it! entity = await client . get_entity ( username ) # Do you have a conversation open with them? Get dialogs. await client . get_dialogs () # Are they participant of some group? Get them. await client . get_participants ( 'TelethonChat' ) # Is the entity the original sender of a forwarded message? Get it. await client . get_messages ( 'TelethonChat' , 100 ) # NOW you can use the ID, anywhere! await client . send_message ( 123456 , 'Hi!' ) entity = await client . get_entity ( 123456 ) print ( entity ) Once the library has \"seen\" the entity, you can use their integer ID. You can't use entities from IDs the library hasn't seen. You must make the library see them at least once and disconnect properly. You know where the entities are and you must tell the library. It won't guess for you.","title":"Summary"},{"location":"concepts/errors/","text":"RPC Errors \u00b6 RPC stands for Remote Procedure Call, and when the library raises a RPCError , it's because you have invoked some of the API methods incorrectly (wrong parameters, wrong permissions, or even something went wrong on Telegram's server). You should import the errors from telethon.errors like so: from telethon import errors try : async with client . takeout () as takeout : ... except errors . TakeoutInitDelayError as e : # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ here we except TAKEOUT_INIT_DELAY print ( 'Must wait' , e . seconds , 'before takeout' ) There isn't any official list of all possible RPC errors, so the list of known errors is provided on a best-effort basis. When new methods are available, the list may be lacking since we simply don't know what errors can raise from them. Once we do find out about a new error and what causes it, the list is updated, so if you see an error without a specific class, do report it (and what method caused it)! This list is used to generate documentation for the raw API page . For example, if we want to know what errors can occur from messages.sendMessage we can simply navigate to its raw API page and find it has 24 known RPC errors at the time of writing. Base Errors \u00b6 All the \"base\" errors are listed in API Errors . Any other more specific error will be a subclass of these. If the library isn't aware of a specific error just yet, it will instead raise one of these superclasses. This means you may find stuff like this: telethon.errors.rpcbaseerrors.BadRequestError: RPCError 400: MESSAGE_POLL_CLOSED (caused by SendVoteRequest) If you do, make sure to open an issue or send a pull request to update the list of known errors . Common Errors \u00b6 These are some of the errors you may normally need to deal with: FloodWaitError (420), the same request was repeated many times. Must wait .seconds (you can access this attribute). For example: ... from telethon import errors try : messages = await client . get_messages ( chat ) print ( messages [ 0 ] . text ) except errors . FloodWaitError as e : print ( 'Have to sleep' , e . seconds , 'seconds' ) time . sleep ( e . seconds ) SessionPasswordNeededError , if you have setup two-steps verification on Telegram and are trying to sign in. FilePartMissingError , if you have tried to upload an empty file. ChatAdminRequiredError , you don't have permissions to perform said operation on a chat or channel. Try avoiding filters, i.e. when searching messages. The generic classes for different error codes are: InvalidDCError (303), the request must be repeated on another DC. BadRequestError (400), the request contained errors. UnauthorizedError (401), the user is not authorized yet. ForbiddenError (403), privacy violation error. NotFoundError (404), make sure you're invoking Request 's! If the error is not recognised, it will only be an RPCError . You can refer to all errors from Python through the telethon.errors module. If you don't know what attributes they have, try printing their dir (like print(dir(e)) ). Attributes \u00b6 Some of the errors carry additional data in them. When they look like EMAIL_UNCONFIRMED_X , the _X value will be accessible from the error instance. The current list of errors that do this is the following: EmailUnconfirmedError has .code_length . FileMigrateError has .new_dc . FilePartMissingError has .which . FloodTestPhoneWaitError has .seconds . FloodWaitError has .seconds . InterdcCallErrorError has .dc . InterdcCallRichErrorError has .dc . NetworkMigrateError has .new_dc . PhoneMigrateError has .new_dc . SlowModeWaitError has .seconds . TakeoutInitDelayError has .seconds . UserMigrateError has .new_dc . Avoiding Limits \u00b6 Don't spam. You won't get FloodWaitError or your account banned or deleted if you use the library for legit use cases . Make cool tools. Don't spam! Nobody knows the exact limits for all requests since they depend on a lot of factors, so don't bother asking. Still, if you do have a legit use case and still get those errors, the library will automatically sleep when they are smaller than 60 seconds by default. You can set different \"auto-sleep\" thresholds: client . flood_sleep_threshold = 0 # Don't auto-sleep client . flood_sleep_threshold = 24 * 60 * 60 # Sleep always You can also except it and act as you prefer: from telethon.errors import FloodWaitError try : ... except FloodWaitError as e : print ( 'Flood waited for' , e . seconds ) quit ( 1 ) VoIP numbers are very limited, and some countries are more limited too.","title":"RPC Errors"},{"location":"concepts/errors/#rpc-errors","text":"RPC stands for Remote Procedure Call, and when the library raises a RPCError , it's because you have invoked some of the API methods incorrectly (wrong parameters, wrong permissions, or even something went wrong on Telegram's server). You should import the errors from telethon.errors like so: from telethon import errors try : async with client . takeout () as takeout : ... except errors . TakeoutInitDelayError as e : # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ here we except TAKEOUT_INIT_DELAY print ( 'Must wait' , e . seconds , 'before takeout' ) There isn't any official list of all possible RPC errors, so the list of known errors is provided on a best-effort basis. When new methods are available, the list may be lacking since we simply don't know what errors can raise from them. Once we do find out about a new error and what causes it, the list is updated, so if you see an error without a specific class, do report it (and what method caused it)! This list is used to generate documentation for the raw API page . For example, if we want to know what errors can occur from messages.sendMessage we can simply navigate to its raw API page and find it has 24 known RPC errors at the time of writing.","title":"RPC Errors"},{"location":"concepts/errors/#base-errors","text":"All the \"base\" errors are listed in API Errors . Any other more specific error will be a subclass of these. If the library isn't aware of a specific error just yet, it will instead raise one of these superclasses. This means you may find stuff like this: telethon.errors.rpcbaseerrors.BadRequestError: RPCError 400: MESSAGE_POLL_CLOSED (caused by SendVoteRequest) If you do, make sure to open an issue or send a pull request to update the list of known errors .","title":"Base Errors"},{"location":"concepts/errors/#common-errors","text":"These are some of the errors you may normally need to deal with: FloodWaitError (420), the same request was repeated many times. Must wait .seconds (you can access this attribute). For example: ... from telethon import errors try : messages = await client . get_messages ( chat ) print ( messages [ 0 ] . text ) except errors . FloodWaitError as e : print ( 'Have to sleep' , e . seconds , 'seconds' ) time . sleep ( e . seconds ) SessionPasswordNeededError , if you have setup two-steps verification on Telegram and are trying to sign in. FilePartMissingError , if you have tried to upload an empty file. ChatAdminRequiredError , you don't have permissions to perform said operation on a chat or channel. Try avoiding filters, i.e. when searching messages. The generic classes for different error codes are: InvalidDCError (303), the request must be repeated on another DC. BadRequestError (400), the request contained errors. UnauthorizedError (401), the user is not authorized yet. ForbiddenError (403), privacy violation error. NotFoundError (404), make sure you're invoking Request 's! If the error is not recognised, it will only be an RPCError . You can refer to all errors from Python through the telethon.errors module. If you don't know what attributes they have, try printing their dir (like print(dir(e)) ).","title":"Common Errors"},{"location":"concepts/errors/#attributes","text":"Some of the errors carry additional data in them. When they look like EMAIL_UNCONFIRMED_X , the _X value will be accessible from the error instance. The current list of errors that do this is the following: EmailUnconfirmedError has .code_length . FileMigrateError has .new_dc . FilePartMissingError has .which . FloodTestPhoneWaitError has .seconds . FloodWaitError has .seconds . InterdcCallErrorError has .dc . InterdcCallRichErrorError has .dc . NetworkMigrateError has .new_dc . PhoneMigrateError has .new_dc . SlowModeWaitError has .seconds . TakeoutInitDelayError has .seconds . UserMigrateError has .new_dc .","title":"Attributes"},{"location":"concepts/errors/#avoiding-limits","text":"Don't spam. You won't get FloodWaitError or your account banned or deleted if you use the library for legit use cases . Make cool tools. Don't spam! Nobody knows the exact limits for all requests since they depend on a lot of factors, so don't bother asking. Still, if you do have a legit use case and still get those errors, the library will automatically sleep when they are smaller than 60 seconds by default. You can set different \"auto-sleep\" thresholds: client . flood_sleep_threshold = 0 # Don't auto-sleep client . flood_sleep_threshold = 24 * 60 * 60 # Sleep always You can also except it and act as you prefer: from telethon.errors import FloodWaitError try : ... except FloodWaitError as e : print ( 'Flood waited for' , e . seconds ) quit ( 1 ) VoIP numbers are very limited, and some countries are more limited too.","title":"Avoiding Limits"},{"location":"concepts/full-api/","text":"The Full API \u00b6 Important While you have access to this, you should always use the friendly methods listed on :ref: client-ref unless you have a better reason not to, like a method not existing or you wanting more control. The :ref: telethon-client doesn't offer a method for every single request the Telegram API supports. However, it's very simple to call or invoke any request. Whenever you need something, don't forget to check the documentation and look for the method you need . There you can go through a sorted list of everything you can do. Note The reason to keep both https://tl.telethon.dev and this documentation alive is that the former allows instant search results as you type, and a \"Copy import\" button. If you like namespaces, you can also do from telethon.tl import types, functions . Both work. Important All the examples in this documentation assume that you have from telethon import sync or import telethon.sync for the sake of simplicity and that you understand what it does (see :ref: compatibility-and-convenience for more). Simply add either line at the beginning of your project and it will work. You should also refer to the documentation to see what the objects (constructors) Telegram returns look like. Every constructor inherits from a common type, and that's the reason for this distinction. Say [ client.send_message() ][telethon.client.messages.MessageMethods.send_message] didn't exist, we could use the search to look for \"message\". There we would find :tl: SendMessageRequest , which we can work with. Every request is a Python class, and has the parameters needed for you to invoke it. You can also call help(request) for information on what input parameters it takes. Remember to \"Copy import to the clipboard\", or your script won't be aware of this class! Now we have: from telethon.tl.functions.messages import SendMessageRequest If you're going to use a lot of these, you may do: from telethon.tl import types , functions # We now have access to 'functions.messages.SendMessageRequest' We see that this request must take at least two parameters, a peer of type :tl: InputPeer , and a message which is just a Python str ing. How can we retrieve this :tl: InputPeer ? We have two options. We manually construct one, for instance: from telethon.tl.types import InputPeerUser peer = InputPeerUser ( user_id , user_hash ) Or we call client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> : import telethon async def main (): peer = await client . get_input_entity ( 'someone' ) client . loop . run_until_complete ( main ()) Note Remember that await must occur inside an async def . Every full API example assumes you already know and do this. When you're going to invoke an API method, most require you to pass an :tl: InputUser , :tl: InputChat , or so on, this is why using client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> is more straightforward (and often immediate, if you've seen the user before, know their ID, etc.). If you also need to have information about the whole user, use client.get_entity() <telethon.client.users.UserMethods.get_entity> instead: entity = await client . get_entity ( 'someone' ) In the later case, when you use the entity, the library will cast it to its \"input\" version for you. If you already have the complete user and want to cache its input version so the library doesn't have to do this every time its used, simply call telethon.utils.get_input_peer : from telethon import utils peer = utils . get_input_peer ( entity ) Note Since v0.16.2 this is further simplified. The Request itself will call client.get_input_entity <telethon.client.users.UserMethods.get_input_entity> for you when required, but it's good to remember what's happening. After this small parenthesis about client.get_entity <telethon.client.users.UserMethods.get_entity> versus client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> , we have everything we need. To invoke our request we do: result = await client ( SendMessageRequest ( peer , 'Hello there!' )) Message sent! Of course, this is only an example. There are over 250 methods available as of layer 80, and you can use every single of them as you wish. Remember to use the right types! To sum up: result = await client ( SendMessageRequest ( await client . get_input_entity ( 'username' ), 'Hello there!' )) This can further be simplified to: result = await client ( SendMessageRequest ( 'username' , 'Hello there!' )) # Or even result = await client ( SendMessageRequest ( PeerChannel ( id ), 'Hello there!' )) Note Note that some requests have a \"hash\" parameter. This is not your api_hash ! It likely isn't your self-user .access_hash either. It's a special hash used by Telegram to only send a difference of new data that you don't already have with that request, so you can leave it to 0, and it should work (which means no hash is known yet). For those requests having a \"limit\" parameter, you can often set it to zero to signify \"return default amount\". This won't work for all of them though, for instance, in \"messages.search\" it will actually return 0 items. Requests in Parallel \u00b6 The library will automatically merge outgoing requests into a single container . Telegram's API supports sending multiple requests in a single container, which is faster because it has less overhead and the server can run them without waiting for others. You can also force using a container manually: async def main (): # Letting the library do it behind the scenes await asyncio . wait ([ client . send_message ( 'me' , 'Hello' ), client . send_message ( 'me' , ',' ), client . send_message ( 'me' , 'World' ), client . send_message ( 'me' , '.' ) ]) # Manually invoking many requests at once await client ([ SendMessageRequest ( 'me' , 'Hello' ), SendMessageRequest ( 'me' , ', ' ), SendMessageRequest ( 'me' , 'World' ), SendMessageRequest ( 'me' , '.' ) ]) Note that you cannot guarantee the order in which they are run. Try running the above code more than one time. You will see the order in which the messages arrive is different. If you use the raw API (the first option), you can use ordered to tell the server that it should run the requests sequentially. This will still be faster than going one by one, since the server knows all requests directly: await client ([ SendMessageRequest ( 'me' , 'Hello' ), SendMessageRequest ( 'me' , ', ' ), SendMessageRequest ( 'me' , 'World' ), SendMessageRequest ( 'me' , '.' ) ], ordered = True ) If any of the requests fails with a Telegram error (not connection errors or any other unexpected events), the library will raise telethon.errors.common.MultiError . You can except this and still access the successful results: from telethon.errors import MultiError try : await client ([ SendMessageRequest ( 'me' , 'Hello' ), SendMessageRequest ( 'me' , '' ), SendMessageRequest ( 'me' , 'World' ) ], ordered = True ) except MultiError as e : # The first and third requests worked. first = e . results [ 0 ] third = e . results [ 2 ] # The second request failed. second = e . exceptions [ 1 ]","title":"The Full API"},{"location":"concepts/full-api/#the-full-api","text":"Important While you have access to this, you should always use the friendly methods listed on :ref: client-ref unless you have a better reason not to, like a method not existing or you wanting more control. The :ref: telethon-client doesn't offer a method for every single request the Telegram API supports. However, it's very simple to call or invoke any request. Whenever you need something, don't forget to check the documentation and look for the method you need . There you can go through a sorted list of everything you can do. Note The reason to keep both https://tl.telethon.dev and this documentation alive is that the former allows instant search results as you type, and a \"Copy import\" button. If you like namespaces, you can also do from telethon.tl import types, functions . Both work. Important All the examples in this documentation assume that you have from telethon import sync or import telethon.sync for the sake of simplicity and that you understand what it does (see :ref: compatibility-and-convenience for more). Simply add either line at the beginning of your project and it will work. You should also refer to the documentation to see what the objects (constructors) Telegram returns look like. Every constructor inherits from a common type, and that's the reason for this distinction. Say [ client.send_message() ][telethon.client.messages.MessageMethods.send_message] didn't exist, we could use the search to look for \"message\". There we would find :tl: SendMessageRequest , which we can work with. Every request is a Python class, and has the parameters needed for you to invoke it. You can also call help(request) for information on what input parameters it takes. Remember to \"Copy import to the clipboard\", or your script won't be aware of this class! Now we have: from telethon.tl.functions.messages import SendMessageRequest If you're going to use a lot of these, you may do: from telethon.tl import types , functions # We now have access to 'functions.messages.SendMessageRequest' We see that this request must take at least two parameters, a peer of type :tl: InputPeer , and a message which is just a Python str ing. How can we retrieve this :tl: InputPeer ? We have two options. We manually construct one, for instance: from telethon.tl.types import InputPeerUser peer = InputPeerUser ( user_id , user_hash ) Or we call client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> : import telethon async def main (): peer = await client . get_input_entity ( 'someone' ) client . loop . run_until_complete ( main ()) Note Remember that await must occur inside an async def . Every full API example assumes you already know and do this. When you're going to invoke an API method, most require you to pass an :tl: InputUser , :tl: InputChat , or so on, this is why using client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> is more straightforward (and often immediate, if you've seen the user before, know their ID, etc.). If you also need to have information about the whole user, use client.get_entity() <telethon.client.users.UserMethods.get_entity> instead: entity = await client . get_entity ( 'someone' ) In the later case, when you use the entity, the library will cast it to its \"input\" version for you. If you already have the complete user and want to cache its input version so the library doesn't have to do this every time its used, simply call telethon.utils.get_input_peer : from telethon import utils peer = utils . get_input_peer ( entity ) Note Since v0.16.2 this is further simplified. The Request itself will call client.get_input_entity <telethon.client.users.UserMethods.get_input_entity> for you when required, but it's good to remember what's happening. After this small parenthesis about client.get_entity <telethon.client.users.UserMethods.get_entity> versus client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> , we have everything we need. To invoke our request we do: result = await client ( SendMessageRequest ( peer , 'Hello there!' )) Message sent! Of course, this is only an example. There are over 250 methods available as of layer 80, and you can use every single of them as you wish. Remember to use the right types! To sum up: result = await client ( SendMessageRequest ( await client . get_input_entity ( 'username' ), 'Hello there!' )) This can further be simplified to: result = await client ( SendMessageRequest ( 'username' , 'Hello there!' )) # Or even result = await client ( SendMessageRequest ( PeerChannel ( id ), 'Hello there!' )) Note Note that some requests have a \"hash\" parameter. This is not your api_hash ! It likely isn't your self-user .access_hash either. It's a special hash used by Telegram to only send a difference of new data that you don't already have with that request, so you can leave it to 0, and it should work (which means no hash is known yet). For those requests having a \"limit\" parameter, you can often set it to zero to signify \"return default amount\". This won't work for all of them though, for instance, in \"messages.search\" it will actually return 0 items.","title":"The Full API"},{"location":"concepts/full-api/#requests-in-parallel","text":"The library will automatically merge outgoing requests into a single container . Telegram's API supports sending multiple requests in a single container, which is faster because it has less overhead and the server can run them without waiting for others. You can also force using a container manually: async def main (): # Letting the library do it behind the scenes await asyncio . wait ([ client . send_message ( 'me' , 'Hello' ), client . send_message ( 'me' , ',' ), client . send_message ( 'me' , 'World' ), client . send_message ( 'me' , '.' ) ]) # Manually invoking many requests at once await client ([ SendMessageRequest ( 'me' , 'Hello' ), SendMessageRequest ( 'me' , ', ' ), SendMessageRequest ( 'me' , 'World' ), SendMessageRequest ( 'me' , '.' ) ]) Note that you cannot guarantee the order in which they are run. Try running the above code more than one time. You will see the order in which the messages arrive is different. If you use the raw API (the first option), you can use ordered to tell the server that it should run the requests sequentially. This will still be faster than going one by one, since the server knows all requests directly: await client ([ SendMessageRequest ( 'me' , 'Hello' ), SendMessageRequest ( 'me' , ', ' ), SendMessageRequest ( 'me' , 'World' ), SendMessageRequest ( 'me' , '.' ) ], ordered = True ) If any of the requests fails with a Telegram error (not connection errors or any other unexpected events), the library will raise telethon.errors.common.MultiError . You can except this and still access the successful results: from telethon.errors import MultiError try : await client ([ SendMessageRequest ( 'me' , 'Hello' ), SendMessageRequest ( 'me' , '' ), SendMessageRequest ( 'me' , 'World' ) ], ordered = True ) except MultiError as e : # The first and third requests worked. first = e . results [ 0 ] third = e . results [ 2 ] # The second request failed. second = e . exceptions [ 1 ]","title":"Requests in Parallel"},{"location":"concepts/sessions/","text":"Session Files \u00b6 They are an important part for the library to be efficient, such as caching and handling your authorization key (or you would have to login every time!). What are Sessions? \u00b6 The first parameter you pass to the constructor of the :ref: TelegramClient <telethon-client> is the session , and defaults to be the session name (or full path). That is, if you create a TelegramClient('anon') instance and connect, an anon.session file will be created in the working directory. Note that if you pass a string it will be a file in the current working directory, although you can also pass absolute paths. The session file contains enough information for you to login without re-sending the code, so if you have to enter the code more than once, maybe you're changing the working directory, renaming or removing the file, or using random names. These database files using sqlite3 contain the required information to talk to the Telegram servers, such as to which IP the client should connect, port, authorization key so that messages can be encrypted, and so on. These files will by default also save all the input entities that you've seen, so that you can get information about a user or channel by just their ID. Telegram will not send their access_hash required to retrieve more information about them, if it thinks you have already seem them. For this reason, the library needs to store this information offline. The library will by default too save all the entities (chats and channels with their name and username, and users with the phone too) in the session file, so that you can quickly access them by username or phone number. If you're not going to work with updates, or don't need to cache the access_hash associated with the entities' ID, you can disable this by setting client.session.save_entities = False . Different Session Storage \u00b6 If you don't want to use the default SQLite session storage, you can also use one of the other implementations or implement your own storage. While it's often not the case, it's possible that SQLite is slow enough to be noticeable, in which case you can also use a different storage. Note that this is rare and most people won't have this issue, but it's worth a mention. To use a custom session storage, simply pass the custom session instance to :ref: TelegramClient <telethon-client> instead of the session name. Telethon contains three implementations of the abstract Session class: MemorySession <memory.MemorySession> : stores session data within memory. SQLiteSession <sqlite.SQLiteSession> : stores sessions within on-disk SQLite databases. Default. StringSession <string.StringSession> : stores session data within memory, but can be saved as a string. You can import these from telethon.sessions . For example, using the StringSession <string.StringSession> is done as follows: from telethon.sync import TelegramClient from telethon.sessions import StringSession with TelegramClient ( StringSession ( string ), api_id , api_hash ) as client : ... # use the client # Save the string session as a string; you should decide how # you want to save this information (over a socket, remote # database, print it and then paste the string in the code, # etc.); the advantage is that you don't need to save it # on the current disk as a separate file, and can be reused # anywhere else once you log in. string = client . session . save () # Note that it's also possible to save any other session type # as a string by using ``StringSession.save(session_instance)``: client = TelegramClient ( 'sqlite-session' , api_id , api_hash ) string = StringSession . save ( client . session ) There are other community-maintained implementations available: SQLAlchemy : stores all sessions in a single database via SQLAlchemy. Redis : stores all sessions in a single Redis data store. MongoDB : stores the current session in a MongoDB database. Creating your Own Storage \u00b6 The easiest way to create your own storage implementation is to use MemorySession <memory.MemorySession> as the base and check out how SQLiteSession <sqlite.SQLiteSession> or one of the community-maintained implementations work. You can find the relevant Python files under the sessions/ directory in the Telethon's repository. After you have made your own implementation, you can add it to the community-maintained session implementation list above with a pull request. String Sessions \u00b6 StringSession <string.StringSession> are a convenient way to embed your login credentials directly into your code for extremely easy portability, since all they take is a string to be able to login without asking for your phone and code (or faster start if you're using a bot token). The easiest way to generate a string session is as follows: from telethon.sync import TelegramClient from telethon.sessions import StringSession with TelegramClient ( StringSession (), api_id , api_hash ) as client : print ( client . session . save ()) Think of this as a way to export your authorization key (what's needed to login into your account). This will print a string in the standard output (likely your terminal). Warning Keep this string safe! Anyone with this string can use it to login into your account and do anything they want to to do. This is similar to leaking your *.session files online, but it is easier to leak a string than it is to leak a file. Once you have the string (which is a bit long), load it into your script somehow. You can use a normal text file and open(...).read() it or you can save it in a variable directly: string = '1aaNk8EX-YRfwoRsebUkugFvht6DUPi_Q25UOCzOAqzc...' with TelegramClient ( StringSession ( string ), api_id , api_hash ) as client : client . loop . run_until_complete ( client . send_message ( 'me' , 'Hi' )) These strings are really convenient for using in places like Heroku since their ephemeral filesystem will delete external files once your application is over.","title":"Session Files"},{"location":"concepts/sessions/#session-files","text":"They are an important part for the library to be efficient, such as caching and handling your authorization key (or you would have to login every time!).","title":"Session Files"},{"location":"concepts/sessions/#what-are-sessions","text":"The first parameter you pass to the constructor of the :ref: TelegramClient <telethon-client> is the session , and defaults to be the session name (or full path). That is, if you create a TelegramClient('anon') instance and connect, an anon.session file will be created in the working directory. Note that if you pass a string it will be a file in the current working directory, although you can also pass absolute paths. The session file contains enough information for you to login without re-sending the code, so if you have to enter the code more than once, maybe you're changing the working directory, renaming or removing the file, or using random names. These database files using sqlite3 contain the required information to talk to the Telegram servers, such as to which IP the client should connect, port, authorization key so that messages can be encrypted, and so on. These files will by default also save all the input entities that you've seen, so that you can get information about a user or channel by just their ID. Telegram will not send their access_hash required to retrieve more information about them, if it thinks you have already seem them. For this reason, the library needs to store this information offline. The library will by default too save all the entities (chats and channels with their name and username, and users with the phone too) in the session file, so that you can quickly access them by username or phone number. If you're not going to work with updates, or don't need to cache the access_hash associated with the entities' ID, you can disable this by setting client.session.save_entities = False .","title":"What are Sessions?"},{"location":"concepts/sessions/#different-session-storage","text":"If you don't want to use the default SQLite session storage, you can also use one of the other implementations or implement your own storage. While it's often not the case, it's possible that SQLite is slow enough to be noticeable, in which case you can also use a different storage. Note that this is rare and most people won't have this issue, but it's worth a mention. To use a custom session storage, simply pass the custom session instance to :ref: TelegramClient <telethon-client> instead of the session name. Telethon contains three implementations of the abstract Session class: MemorySession <memory.MemorySession> : stores session data within memory. SQLiteSession <sqlite.SQLiteSession> : stores sessions within on-disk SQLite databases. Default. StringSession <string.StringSession> : stores session data within memory, but can be saved as a string. You can import these from telethon.sessions . For example, using the StringSession <string.StringSession> is done as follows: from telethon.sync import TelegramClient from telethon.sessions import StringSession with TelegramClient ( StringSession ( string ), api_id , api_hash ) as client : ... # use the client # Save the string session as a string; you should decide how # you want to save this information (over a socket, remote # database, print it and then paste the string in the code, # etc.); the advantage is that you don't need to save it # on the current disk as a separate file, and can be reused # anywhere else once you log in. string = client . session . save () # Note that it's also possible to save any other session type # as a string by using ``StringSession.save(session_instance)``: client = TelegramClient ( 'sqlite-session' , api_id , api_hash ) string = StringSession . save ( client . session ) There are other community-maintained implementations available: SQLAlchemy : stores all sessions in a single database via SQLAlchemy. Redis : stores all sessions in a single Redis data store. MongoDB : stores the current session in a MongoDB database.","title":"Different Session Storage"},{"location":"concepts/sessions/#creating-your-own-storage","text":"The easiest way to create your own storage implementation is to use MemorySession <memory.MemorySession> as the base and check out how SQLiteSession <sqlite.SQLiteSession> or one of the community-maintained implementations work. You can find the relevant Python files under the sessions/ directory in the Telethon's repository. After you have made your own implementation, you can add it to the community-maintained session implementation list above with a pull request.","title":"Creating your Own Storage"},{"location":"concepts/sessions/#string-sessions","text":"StringSession <string.StringSession> are a convenient way to embed your login credentials directly into your code for extremely easy portability, since all they take is a string to be able to login without asking for your phone and code (or faster start if you're using a bot token). The easiest way to generate a string session is as follows: from telethon.sync import TelegramClient from telethon.sessions import StringSession with TelegramClient ( StringSession (), api_id , api_hash ) as client : print ( client . session . save ()) Think of this as a way to export your authorization key (what's needed to login into your account). This will print a string in the standard output (likely your terminal). Warning Keep this string safe! Anyone with this string can use it to login into your account and do anything they want to to do. This is similar to leaking your *.session files online, but it is easier to leak a string than it is to leak a file. Once you have the string (which is a bit long), load it into your script somehow. You can use a normal text file and open(...).read() it or you can save it in a variable directly: string = '1aaNk8EX-YRfwoRsebUkugFvht6DUPi_Q25UOCzOAqzc...' with TelegramClient ( StringSession ( string ), api_id , api_hash ) as client : client . loop . run_until_complete ( client . send_message ( 'me' , 'Hi' )) These strings are really convenient for using in places like Heroku since their ephemeral filesystem will delete external files once your application is over.","title":"String Sessions"},{"location":"concepts/strings/","text":"String-based Debugging \u00b6 Debugging is really important. Telegram's API is really big and there is a lot of things that you should know. Such as, what attributes or fields does a result have? Well, the easiest thing to do is printing it: entity = await client . get_entity ( 'username' ) print ( entity ) That will show a huge string similar to the following: Channel ( id = 1066197625 , title = 'Telegram Usernames' , photo = ChatPhotoEmpty (), date = datetime . datetime ( 2016 , 12 , 16 , 15 , 15 , 43 , tzinfo = datetime . timezone . utc ), version = 0 , creator = False , left = True , broadcast = True , verified = True , megagroup = False , restricted = False , signatures = False , min = False , scam = False , has_link = False , has_geo = False , slowmode_enabled = False , access_hash =- 6309373984955162244 , username = 'username' , restriction_reason = [], admin_rights = None , banned_rights = None , default_banned_rights = None , participants_count = None ) That's a lot of text. But as you can see, all the properties are there. So if you want the title you don't use regex or anything like splitting str(entity) to get what you want. You just access the attribute you need: title = entity . title Can we get better than the shown string, though? Yes! print ( entity . stringify ()) Will show a much better: Channel ( id = 1066197625 , title = 'Telegram Usernames' , photo = ChatPhotoEmpty ( ), date = datetime . datetime ( 2016 , 12 , 16 , 15 , 15 , 43 , tzinfo = datetime . timezone . utc ), version = 0 , creator = False , left = True , broadcast = True , verified = True , megagroup = False , restricted = False , signatures = False , min = False , scam = False , has_link = False , has_geo = False , slowmode_enabled = False , access_hash =- 6309373984955162244 , username = 'username' , restriction_reason = [ ], admin_rights = None , banned_rights = None , default_banned_rights = None , participants_count = None ) Now it's easy to see how we could get, for example, the year value. It's inside date : channel_year = entity . date . year You don't need to print everything to see what all the possible values can be. You can just search in http://tl.telethon.dev . Remember that you can use Python's isinstance to check the type of something. For example: from telethon import types if isinstance ( entity . photo , types . ChatPhotoEmpty ): print ( 'Channel has no photo' )","title":"String-based Debugging"},{"location":"concepts/strings/#string-based-debugging","text":"Debugging is really important. Telegram's API is really big and there is a lot of things that you should know. Such as, what attributes or fields does a result have? Well, the easiest thing to do is printing it: entity = await client . get_entity ( 'username' ) print ( entity ) That will show a huge string similar to the following: Channel ( id = 1066197625 , title = 'Telegram Usernames' , photo = ChatPhotoEmpty (), date = datetime . datetime ( 2016 , 12 , 16 , 15 , 15 , 43 , tzinfo = datetime . timezone . utc ), version = 0 , creator = False , left = True , broadcast = True , verified = True , megagroup = False , restricted = False , signatures = False , min = False , scam = False , has_link = False , has_geo = False , slowmode_enabled = False , access_hash =- 6309373984955162244 , username = 'username' , restriction_reason = [], admin_rights = None , banned_rights = None , default_banned_rights = None , participants_count = None ) That's a lot of text. But as you can see, all the properties are there. So if you want the title you don't use regex or anything like splitting str(entity) to get what you want. You just access the attribute you need: title = entity . title Can we get better than the shown string, though? Yes! print ( entity . stringify ()) Will show a much better: Channel ( id = 1066197625 , title = 'Telegram Usernames' , photo = ChatPhotoEmpty ( ), date = datetime . datetime ( 2016 , 12 , 16 , 15 , 15 , 43 , tzinfo = datetime . timezone . utc ), version = 0 , creator = False , left = True , broadcast = True , verified = True , megagroup = False , restricted = False , signatures = False , min = False , scam = False , has_link = False , has_geo = False , slowmode_enabled = False , access_hash =- 6309373984955162244 , username = 'username' , restriction_reason = [ ], admin_rights = None , banned_rights = None , default_banned_rights = None , participants_count = None ) Now it's easy to see how we could get, for example, the year value. It's inside date : channel_year = entity . date . year You don't need to print everything to see what all the possible values can be. You can just search in http://tl.telethon.dev . Remember that you can use Python's isinstance to check the type of something. For example: from telethon import types if isinstance ( entity . photo , types . ChatPhotoEmpty ): print ( 'Channel has no photo' )","title":"String-based Debugging"},{"location":"concepts/updates/","text":"Updates in Dept \u00b6 Properties vs. Methods \u00b6 The event shown above acts just like a custom.Message <telethon.tl.custom.message.Message> , which means you can access all the properties it has, like .sender . However events are different to other methods in the client, like client.get_messages <telethon.client.messages.MessageMethods.get_messages> . Events may not send information about the sender or chat, which means it can be None , but all the methods defined in the client always have this information so it doesn't need to be re-fetched. For this reason, you have get_ methods, which will make a network call if necessary. In short, you should do this: @client . on ( events . NewMessage ) async def handler ( event ): # event.input_chat may be None, use event.get_input_chat() chat = await event . get_input_chat () sender = await event . get_sender () buttons = await event . get_buttons () async def main (): async for message in client . iter_messages ( 'me' , 10 ): # Methods from the client always have these properties ready chat = message . input_chat sender = message . sender buttons = message . buttons Notice, properties ( message.sender <telethon.tl.custom.message.Message.sender> ) don't need an await , but methods ( message.get_sender <telethon.tl.custom.message.Message.get_sender> ) do need an await , and you should use methods in events for these properties that may need network. Events Without the client \u00b6 The code of your application starts getting big, so you decide to separate the handlers into different files. But how can you access the client from these files? You don't need to! Just events.register <telethon.events.register> them: # handlers/welcome.py from telethon import events @events . register ( events . NewMessage ( '(?i)hello' )) async def handler ( event ): client = event . client await event . respond ( 'Hey!' ) await client . send_message ( 'me' , 'I said hello to someone' ) Registering events is a way of saying \"this method is an event handler\". You can use telethon.events.is_handler to check if any method is a handler. You can think of them as a different approach to Flask's blueprints. It's important to note that this does not add the handler to any client! You never specified the client on which the handler should be used. You only declared that it is a handler, and its type. To actually use the handler, you need to client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler> to the client (or clients) where they should be added to: # main.py from telethon import TelegramClient import handlers.welcome with TelegramClient ( ... ) as client : client . add_event_handler ( handlers . welcome . handler ) client . run_until_disconnected () This also means that you can register an event handler once and then add it to many clients without re-declaring the event. Events Without Decorators \u00b6 If for any reason you don't want to use telethon.events.register , you can explicitly pass the event handler to use to the mentioned client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler> : from telethon import TelegramClient , events async def handler ( event ): ... with TelegramClient ( ... ) as client : client . add_event_handler ( handler , events . NewMessage ) client . run_until_disconnected () Similarly, you also have client.remove_event_handler <telethon.client.updates.UpdateMethods.remove_event_handler> and client.list_event_handlers <telethon.client.updates.UpdateMethods.list_event_handlers> . The event argument is optional in all three methods and defaults to events.Raw <telethon.events.raw.Raw> for adding, and None when removing (so all callbacks would be removed). Note The event type is ignored in client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler> if you have used telethon.events.register on the callback before, since that's the point of using such method at all. Stopping Propagation of Updates \u00b6 There might be cases when an event handler is supposed to be used solitary and it makes no sense to process any other handlers in the chain. For this case, it is possible to raise a telethon.events.StopPropagation exception which will cause the propagation of the update through your handlers to stop: from telethon.events import StopPropagation @client . on ( events . NewMessage ) async def _ ( event ): # ... some conditions await event . delete () # Other handlers won't have an event to work with raise StopPropagation @client . on ( events . NewMessage ) async def _ ( event ): # Will never be reached, because it is the second handler # in the chain. pass Remember to check :ref: telethon-events if you're looking for the methods reference. Understanding asyncio \u00b6 With asyncio , the library has several tasks running in the background. One task is used for sending requests, another task is used to receive them, and a third one is used to handle updates. To handle updates, you must keep your script running. You can do this in several ways. For instance, if you are not running asyncio 's event loop, you should use client.run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> : import asyncio from telethon import TelegramClient client = TelegramClient ( ... ) ... client . run_until_disconnected () Behind the scenes, this method is await 'ing on the client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> property, so the code above and the following are equivalent: import asyncio from telethon import TelegramClient client = TelegramClient ( ... ) async def main (): await client . disconnected loop = asyncio . get_event_loop () loop . run_until_complete ( main ()) You could also run client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> until it completed. But if you don't want to await , then you should know what you want to be doing instead! What matters is that you shouldn't let your script die. If you don't care about updates, you don't need any of this. Notice that unlike client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> , client.run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> will handle KeyboardInterrupt with you. This method is special and can also be ran while the loop is running, so you can do this: async def main (): await client . run_until_disconnected () loop . run_until_complete ( main ()) Sequential Updates \u00b6 If you need to process updates sequentially (i.e. not in parallel), you should set sequential_updates=True when creating the client: with TelegramClient ( ... , sequential_updates = True ) as client : ...","title":"Updates in Dept"},{"location":"concepts/updates/#updates-in-dept","text":"","title":"Updates in Dept"},{"location":"concepts/updates/#properties-vs-methods","text":"The event shown above acts just like a custom.Message <telethon.tl.custom.message.Message> , which means you can access all the properties it has, like .sender . However events are different to other methods in the client, like client.get_messages <telethon.client.messages.MessageMethods.get_messages> . Events may not send information about the sender or chat, which means it can be None , but all the methods defined in the client always have this information so it doesn't need to be re-fetched. For this reason, you have get_ methods, which will make a network call if necessary. In short, you should do this: @client . on ( events . NewMessage ) async def handler ( event ): # event.input_chat may be None, use event.get_input_chat() chat = await event . get_input_chat () sender = await event . get_sender () buttons = await event . get_buttons () async def main (): async for message in client . iter_messages ( 'me' , 10 ): # Methods from the client always have these properties ready chat = message . input_chat sender = message . sender buttons = message . buttons Notice, properties ( message.sender <telethon.tl.custom.message.Message.sender> ) don't need an await , but methods ( message.get_sender <telethon.tl.custom.message.Message.get_sender> ) do need an await , and you should use methods in events for these properties that may need network.","title":"Properties vs. Methods"},{"location":"concepts/updates/#events-without-the-client","text":"The code of your application starts getting big, so you decide to separate the handlers into different files. But how can you access the client from these files? You don't need to! Just events.register <telethon.events.register> them: # handlers/welcome.py from telethon import events @events . register ( events . NewMessage ( '(?i)hello' )) async def handler ( event ): client = event . client await event . respond ( 'Hey!' ) await client . send_message ( 'me' , 'I said hello to someone' ) Registering events is a way of saying \"this method is an event handler\". You can use telethon.events.is_handler to check if any method is a handler. You can think of them as a different approach to Flask's blueprints. It's important to note that this does not add the handler to any client! You never specified the client on which the handler should be used. You only declared that it is a handler, and its type. To actually use the handler, you need to client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler> to the client (or clients) where they should be added to: # main.py from telethon import TelegramClient import handlers.welcome with TelegramClient ( ... ) as client : client . add_event_handler ( handlers . welcome . handler ) client . run_until_disconnected () This also means that you can register an event handler once and then add it to many clients without re-declaring the event.","title":"Events Without the client"},{"location":"concepts/updates/#events-without-decorators","text":"If for any reason you don't want to use telethon.events.register , you can explicitly pass the event handler to use to the mentioned client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler> : from telethon import TelegramClient , events async def handler ( event ): ... with TelegramClient ( ... ) as client : client . add_event_handler ( handler , events . NewMessage ) client . run_until_disconnected () Similarly, you also have client.remove_event_handler <telethon.client.updates.UpdateMethods.remove_event_handler> and client.list_event_handlers <telethon.client.updates.UpdateMethods.list_event_handlers> . The event argument is optional in all three methods and defaults to events.Raw <telethon.events.raw.Raw> for adding, and None when removing (so all callbacks would be removed). Note The event type is ignored in client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler> if you have used telethon.events.register on the callback before, since that's the point of using such method at all.","title":"Events Without Decorators"},{"location":"concepts/updates/#stopping-propagation-of-updates","text":"There might be cases when an event handler is supposed to be used solitary and it makes no sense to process any other handlers in the chain. For this case, it is possible to raise a telethon.events.StopPropagation exception which will cause the propagation of the update through your handlers to stop: from telethon.events import StopPropagation @client . on ( events . NewMessage ) async def _ ( event ): # ... some conditions await event . delete () # Other handlers won't have an event to work with raise StopPropagation @client . on ( events . NewMessage ) async def _ ( event ): # Will never be reached, because it is the second handler # in the chain. pass Remember to check :ref: telethon-events if you're looking for the methods reference.","title":"Stopping Propagation of Updates"},{"location":"concepts/updates/#understanding-asyncio","text":"With asyncio , the library has several tasks running in the background. One task is used for sending requests, another task is used to receive them, and a third one is used to handle updates. To handle updates, you must keep your script running. You can do this in several ways. For instance, if you are not running asyncio 's event loop, you should use client.run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> : import asyncio from telethon import TelegramClient client = TelegramClient ( ... ) ... client . run_until_disconnected () Behind the scenes, this method is await 'ing on the client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> property, so the code above and the following are equivalent: import asyncio from telethon import TelegramClient client = TelegramClient ( ... ) async def main (): await client . disconnected loop = asyncio . get_event_loop () loop . run_until_complete ( main ()) You could also run client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> until it completed. But if you don't want to await , then you should know what you want to be doing instead! What matters is that you shouldn't let your script die. If you don't care about updates, you don't need any of this. Notice that unlike client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> , client.run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> will handle KeyboardInterrupt with you. This method is special and can also be ran while the loop is running, so you can do this: async def main (): await client . run_until_disconnected () loop . run_until_complete ( main ())","title":"Understanding asyncio"},{"location":"concepts/updates/#sequential-updates","text":"If you need to process updates sequentially (i.e. not in parallel), you should set sequential_updates=True when creating the client: with TelegramClient ( ... , sequential_updates = True ) as client : ...","title":"Sequential Updates"},{"location":"developing/coding-style/","text":"Coding Style \u00b6 Basically, make it readable , while keeping the style similar to the code of whatever file you're working on. Also note that not everyone has 4K screens for their primary monitors, so please try to stick to the 80-columns limit. This makes it easy to git diff changes from a terminal before committing changes. If the line has to be long, please don't exceed 120 characters. For the commit messages, please make them explanatory . Not only they're helpful to troubleshoot when certain issues could have been introduced, but they're also used to construct the change log once a new version is ready. If you don't know enough Python, I strongly recommend reading Dive Into Python 3 , available online for free. For instance, remember to do if x is None or if x is not None instead if x == None !","title":"Coding Style"},{"location":"developing/coding-style/#coding-style","text":"Basically, make it readable , while keeping the style similar to the code of whatever file you're working on. Also note that not everyone has 4K screens for their primary monitors, so please try to stick to the 80-columns limit. This makes it easy to git diff changes from a terminal before committing changes. If the line has to be long, please don't exceed 120 characters. For the commit messages, please make them explanatory . Not only they're helpful to troubleshoot when certain issues could have been introduced, but they're also used to construct the change log once a new version is ready. If you don't know enough Python, I strongly recommend reading Dive Into Python 3 , available online for free. For instance, remember to do if x is None or if x is not None instead if x == None !","title":"Coding Style"},{"location":"developing/philosophy/","text":"Philosophy \u00b6 The intention of the library is to have an existing MTProto library existing with hardly any dependencies (indeed, wherever Python is available, you can run this library). Being written in Python means that performance will be nowhere close to other implementations written in, for instance, Java, C++, Rust, or pretty much any other compiled language. However, the library turns out to actually be pretty decent for common operations such as sending messages, receiving updates, or other scripting. Uploading files may be notably slower, but if you would like to contribute, pull requests are appreciated! If libssl is available on your system, the library will make use of it to speed up some critical parts such as encrypting and decrypting the messages. Files will notably be sent and downloaded faster. The main focus is to keep everything clean and simple, for everyone to understand how working with MTProto and Telegram works. Don't be afraid to read the source, the code won't bite you! It may prove useful when using the library on your own use cases.","title":"Philosophy"},{"location":"developing/philosophy/#philosophy","text":"The intention of the library is to have an existing MTProto library existing with hardly any dependencies (indeed, wherever Python is available, you can run this library). Being written in Python means that performance will be nowhere close to other implementations written in, for instance, Java, C++, Rust, or pretty much any other compiled language. However, the library turns out to actually be pretty decent for common operations such as sending messages, receiving updates, or other scripting. Uploading files may be notably slower, but if you would like to contribute, pull requests are appreciated! If libssl is available on your system, the library will make use of it to speed up some critical parts such as encrypting and decrypting the messages. Files will notably be sent and downloaded faster. The main focus is to keep everything clean and simple, for everyone to understand how working with MTProto and Telegram works. Don't be afraid to read the source, the code won't bite you! It may prove useful when using the library on your own use cases.","title":"Philosophy"},{"location":"developing/project-structure/","text":"Project Structure \u00b6 Main interface \u00b6 The library itself is under the telethon/ directory. The __init__.py file there exposes the main TelegramClient , a class that servers as a nice interface with the most commonly used methods on Telegram such as sending messages, retrieving the message history, handling updates, etc. The TelegramClient inherits from several mixing Method classes, since there are so many methods that having them in a single file would make maintenance painful (it was three thousand lines before this separation happened!). It's a \"god object\", but there is only a way to interact with Telegram really. The TelegramBaseClient is an ABC which will support all of these mixins so they can work together nicely. It doesn't even know how to invoke things because they need to be resolved with user information first (to work with input entities comfortably). The client makes use of the network/mtprotosender.py . The MTProtoSender is responsible for connecting, reconnecting, packing, unpacking, sending and receiving items from the network. Basically, the low-level communication with Telegram, and handling MTProto-related functions and types such as BadSalt . The sender makes use of a Connection class which knows the format in which outgoing messages should be sent (how to encode their length and their body, if they're further encrypted). Auto-generated code \u00b6 The files under telethon_generator/ are used to generate the code that gets placed under telethon/tl/ . The parsers take in files in a specific format (such as .tl for objects and .json for errors) and spit out the generated classes which represent, as Python classes, the request and types defined in the .tl file. It also constructs an index so that they can be imported easily. Custom documentation can also be generated to easily navigate through the vast amount of items offered by the API. If you clone the repository, you will have to run python setup.py gen in order to generate the code. Installing the library runs the generator too, but the mentioned command will just generate code.","title":"Project Structure"},{"location":"developing/project-structure/#project-structure","text":"","title":"Project Structure"},{"location":"developing/project-structure/#main-interface","text":"The library itself is under the telethon/ directory. The __init__.py file there exposes the main TelegramClient , a class that servers as a nice interface with the most commonly used methods on Telegram such as sending messages, retrieving the message history, handling updates, etc. The TelegramClient inherits from several mixing Method classes, since there are so many methods that having them in a single file would make maintenance painful (it was three thousand lines before this separation happened!). It's a \"god object\", but there is only a way to interact with Telegram really. The TelegramBaseClient is an ABC which will support all of these mixins so they can work together nicely. It doesn't even know how to invoke things because they need to be resolved with user information first (to work with input entities comfortably). The client makes use of the network/mtprotosender.py . The MTProtoSender is responsible for connecting, reconnecting, packing, unpacking, sending and receiving items from the network. Basically, the low-level communication with Telegram, and handling MTProto-related functions and types such as BadSalt . The sender makes use of a Connection class which knows the format in which outgoing messages should be sent (how to encode their length and their body, if they're further encrypted).","title":"Main interface"},{"location":"developing/project-structure/#auto-generated-code","text":"The files under telethon_generator/ are used to generate the code that gets placed under telethon/tl/ . The parsers take in files in a specific format (such as .tl for objects and .json for errors) and spit out the generated classes which represent, as Python classes, the request and types defined in the .tl file. It also constructs an index so that they can be imported easily. Custom documentation can also be generated to easily navigate through the vast amount of items offered by the API. If you clone the repository, you will have to run python setup.py gen in order to generate the code. Installing the library runs the generator too, but the mentioned command will just generate code.","title":"Auto-generated code"},{"location":"developing/telegram-api-in-other-languages/","text":"Telegram API in Other Languages \u00b6 Telethon was made for Python , and as far as I know, there is no exact port to other languages. However, there are other implementations made by awesome people (one needs to be awesome to understand the official Telegram documentation) on several languages (even more Python too), listed below: C \u00b6 Possibly the most well-known unofficial open source implementation out there by @vysheng , tgl , and its console client telegram-cli . Latest development has been moved to BitBucket . C++ \u00b6 The newest (and official) library, written from scratch, is called tdlib and is what the Telegram X uses. You can find more information in the official documentation, published here . JavaScript \u00b6 Ali Gasymov made the @mtproto/core library for the browser and nodejs installable via npm . painor is the primary author of gramjs , a Telegram client implementation in JavaScript. Kotlin \u00b6 Kotlogram is a Telegram implementation written in Kotlin (one of the official languages for Android ) by @badoualy , currently as a beta \u2013 yet working. Language-Agnostic \u00b6 Taas is a service that lets you use Telegram API with any HTTP client via API. Using tdlib under the hood, Taas is commercial service, but allows free access if you use under 5000 requests per month. PHP \u00b6 A PHP implementation is also available thanks to @danog and his MadelineProto project, with a very nice online documentation too. Python \u00b6 A fairly new (as of the end of 2017) Telegram library written from the ground up in Python by @delivrance and his Pyrogram library. There isn't really a reason to pick it over Telethon and it'd be kinda sad to see you go, but it would be nice to know what you miss from each other library in either one so both can improve. Rust \u00b6 The grammers library is made by the same author as Telethon's ! If you are looking for a Telethon alternative written in Rust, this is a valid option! Another older, work-in-progress implementation, on Rust is made by @JuanPotato under the fancy name of Vail .","title":"Telegram API in Other Languages"},{"location":"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages","text":"Telethon was made for Python , and as far as I know, there is no exact port to other languages. However, there are other implementations made by awesome people (one needs to be awesome to understand the official Telegram documentation) on several languages (even more Python too), listed below:","title":"Telegram API in Other Languages"},{"location":"developing/telegram-api-in-other-languages/#c","text":"Possibly the most well-known unofficial open source implementation out there by @vysheng , tgl , and its console client telegram-cli . Latest development has been moved to BitBucket .","title":"C"},{"location":"developing/telegram-api-in-other-languages/#c_1","text":"The newest (and official) library, written from scratch, is called tdlib and is what the Telegram X uses. You can find more information in the official documentation, published here .","title":"C++"},{"location":"developing/telegram-api-in-other-languages/#javascript","text":"Ali Gasymov made the @mtproto/core library for the browser and nodejs installable via npm . painor is the primary author of gramjs , a Telegram client implementation in JavaScript.","title":"JavaScript"},{"location":"developing/telegram-api-in-other-languages/#kotlin","text":"Kotlogram is a Telegram implementation written in Kotlin (one of the official languages for Android ) by @badoualy , currently as a beta \u2013 yet working.","title":"Kotlin"},{"location":"developing/telegram-api-in-other-languages/#language-agnostic","text":"Taas is a service that lets you use Telegram API with any HTTP client via API. Using tdlib under the hood, Taas is commercial service, but allows free access if you use under 5000 requests per month.","title":"Language-Agnostic"},{"location":"developing/telegram-api-in-other-languages/#php","text":"A PHP implementation is also available thanks to @danog and his MadelineProto project, with a very nice online documentation too.","title":"PHP"},{"location":"developing/telegram-api-in-other-languages/#python","text":"A fairly new (as of the end of 2017) Telegram library written from the ground up in Python by @delivrance and his Pyrogram library. There isn't really a reason to pick it over Telethon and it'd be kinda sad to see you go, but it would be nice to know what you miss from each other library in either one so both can improve.","title":"Python"},{"location":"developing/telegram-api-in-other-languages/#rust","text":"The grammers library is made by the same author as Telethon's ! If you are looking for a Telethon alternative written in Rust, this is a valid option! Another older, work-in-progress implementation, on Rust is made by @JuanPotato under the fancy name of Vail .","title":"Rust"},{"location":"developing/test-servers/","text":"Test Servers \u00b6 To run Telethon on a test server, use the following code: client = TelegramClient ( None , api_id , api_hash ) client . session . set_dc ( dc_id , '149.154.167.40' , 80 ) You can check your 'test ip' on https://my.telegram.org . You should set None session so to ensure you're generating a new authorization key for it (it would fail if you used a session where you had previously connected to another data center). Note that port 443 might not work, so you can try with 80 instead. Once you're connected, you'll likely be asked to either sign in or sign up. Remember anyone can access the phone you choose , so don't store sensitive data here. Valid phone numbers are 99966XYYYY , where X is the dc_id and YYYY is any number you want, for example, 1234 in dc_id = 2 would be 9996621234 . The code sent by Telegram will be dc_id repeated five times, in this case, 22222 so we can hardcode that: client = TelegramClient ( None , api_id , api_hash ) client . session . set_dc ( 2 , '149.154.167.40' , 80 ) client . start ( phone = '9996621234' , code_callback = lambda : '22222' )","title":"Test Servers"},{"location":"developing/test-servers/#test-servers","text":"To run Telethon on a test server, use the following code: client = TelegramClient ( None , api_id , api_hash ) client . session . set_dc ( dc_id , '149.154.167.40' , 80 ) You can check your 'test ip' on https://my.telegram.org . You should set None session so to ensure you're generating a new authorization key for it (it would fail if you used a session where you had previously connected to another data center). Note that port 443 might not work, so you can try with 80 instead. Once you're connected, you'll likely be asked to either sign in or sign up. Remember anyone can access the phone you choose , so don't store sensitive data here. Valid phone numbers are 99966XYYYY , where X is the dc_id and YYYY is any number you want, for example, 1234 in dc_id = 2 would be 9996621234 . The code sent by Telegram will be dc_id repeated five times, in this case, 22222 so we can hardcode that: client = TelegramClient ( None , api_id , api_hash ) client . session . set_dc ( 2 , '149.154.167.40' , 80 ) client . start ( phone = '9996621234' , code_callback = lambda : '22222' )","title":"Test Servers"},{"location":"developing/testing/","text":"Tests \u00b6 Telethon uses Pytest for testing, Tox for environment setup, and pytest-asyncio and pytest-cov for asyncio and coverage integration. While reading the full documentation for these is probably a good idea, there is a lot to read, so a brief summary of these tools is provided below for convienience. Brief Introduction to Pytest \u00b6 Pytest is a tool for discovering and running python tests, as well as allowing modular reuse of test setup code using fixtures. Most Pytest tests will look something like this:: from module import my_thing , my_other_thing def test_my_thing ( fixture ): assert my_thing ( fixture ) == 42 @pytest . mark . asyncio async def test_my_thing ( event_loop ): assert await my_other_thing ( loop = event_loop ) == 42 Note here: The test imports one specific function. The role of unit tests is to test that the implementation of some unit, like a function or class, works. It's role is not so much to test that components interact well with each other. I/O, such as connecting to remote servers, should be avoided. This helps with quickly identifying the source of an error, finding silent breakage, and makes it easier to cover all possible code paths. System or integration tests can also be useful, but are currently out of scope of Telethon's automated testing. A function test_my_thing is declared. Pytest searches for files starting with test_ , classes starting with Test and executes any functions or methods starting with test_ it finds. The function is declared with a parameter fixture . Fixtures are used to request things required to run the test, such as temporary directories, free TCP ports, Connections, etc. Fixtures are declared by simply adding the fixture name as parameter. A full list of available fixtures can be found with the pytest --fixtures command. The test uses a simple assert to test some condition is valid. Pytest uses some magic to ensure that the errors from this are readable and easy to debug. The pytest.mark.asyncio fixture is provided by pytest-asyncio . It starts a loop and executes a test function as coroutine. This should be used for testing asyncio code. It also declares the event_loop fixture, which will request an asyncio event loop. Brief Introduction to Tox \u00b6 Tox is a tool for automated setup of virtual environments for testing. While the tests can be run directly by just running pytest , this only tests one specific python version in your existing environment, which will not catch e.g. undeclared dependencies, or version incompatabilities. Tox environments are declared in the tox.ini file. The default environments, declared at the top, can be simply run with tox . The option tox -e py36,flake can be used to request specific environments to be run. Brief Introduction to Pytest-cov \u00b6 Coverage is a useful metric for testing. It measures the lines of code and branches that are exercised by the tests. The higher the coverage, the more likely it is that any coding errors will be caught by the tests. A brief coverage report can be generated with the --cov option to tox , which will be passed on to pytest . Additionally, the very useful HTML report can be generated with --cov --cov-report=html , which contains a browsable copy of the source code, annotated with coverage information for each line.","title":"Tests"},{"location":"developing/testing/#tests","text":"Telethon uses Pytest for testing, Tox for environment setup, and pytest-asyncio and pytest-cov for asyncio and coverage integration. While reading the full documentation for these is probably a good idea, there is a lot to read, so a brief summary of these tools is provided below for convienience.","title":"Tests"},{"location":"developing/testing/#brief-introduction-to-pytest","text":"Pytest is a tool for discovering and running python tests, as well as allowing modular reuse of test setup code using fixtures. Most Pytest tests will look something like this:: from module import my_thing , my_other_thing def test_my_thing ( fixture ): assert my_thing ( fixture ) == 42 @pytest . mark . asyncio async def test_my_thing ( event_loop ): assert await my_other_thing ( loop = event_loop ) == 42 Note here: The test imports one specific function. The role of unit tests is to test that the implementation of some unit, like a function or class, works. It's role is not so much to test that components interact well with each other. I/O, such as connecting to remote servers, should be avoided. This helps with quickly identifying the source of an error, finding silent breakage, and makes it easier to cover all possible code paths. System or integration tests can also be useful, but are currently out of scope of Telethon's automated testing. A function test_my_thing is declared. Pytest searches for files starting with test_ , classes starting with Test and executes any functions or methods starting with test_ it finds. The function is declared with a parameter fixture . Fixtures are used to request things required to run the test, such as temporary directories, free TCP ports, Connections, etc. Fixtures are declared by simply adding the fixture name as parameter. A full list of available fixtures can be found with the pytest --fixtures command. The test uses a simple assert to test some condition is valid. Pytest uses some magic to ensure that the errors from this are readable and easy to debug. The pytest.mark.asyncio fixture is provided by pytest-asyncio . It starts a loop and executes a test function as coroutine. This should be used for testing asyncio code. It also declares the event_loop fixture, which will request an asyncio event loop.","title":"Brief Introduction to Pytest"},{"location":"developing/testing/#brief-introduction-to-tox","text":"Tox is a tool for automated setup of virtual environments for testing. While the tests can be run directly by just running pytest , this only tests one specific python version in your existing environment, which will not catch e.g. undeclared dependencies, or version incompatabilities. Tox environments are declared in the tox.ini file. The default environments, declared at the top, can be simply run with tox . The option tox -e py36,flake can be used to request specific environments to be run.","title":"Brief Introduction to Tox"},{"location":"developing/testing/#brief-introduction-to-pytest-cov","text":"Coverage is a useful metric for testing. It measures the lines of code and branches that are exercised by the tests. The higher the coverage, the more likely it is that any coding errors will be caught by the tests. A brief coverage report can be generated with the --cov option to tox , which will be passed on to pytest . Additionally, the very useful HTML report can be generated with --cov --cov-report=html , which contains a browsable copy of the source code, annotated with coverage information for each line.","title":"Brief Introduction to Pytest-cov"},{"location":"developing/tips-for-porting-the-project/","text":"Tips for Porting the Project \u00b6 If you're going to use the code on this repository to guide you, please be kind and don't forget to mention it helped you! You should start by reading the source code on the first release of the project, and start creating a MTProtoSender . Once this is made, you should write by hand the code to authenticate on the Telegram's server, which are some steps required to get the key required to talk to them. Save it somewhere! Then, simply mimic, or reinvent other parts of the code, and it will be ready to go within a few days. Good luck!","title":"Tips for Porting the Project"},{"location":"developing/tips-for-porting-the-project/#tips-for-porting-the-project","text":"If you're going to use the code on this repository to guide you, please be kind and don't forget to mention it helped you! You should start by reading the source code on the first release of the project, and start creating a MTProtoSender . Once this is made, you should write by hand the code to authenticate on the Telegram's server, which are some steps required to get the key required to talk to them. Save it somewhere! Then, simply mimic, or reinvent other parts of the code, and it will be ready to go within a few days. Good luck!","title":"Tips for Porting the Project"},{"location":"developing/understanding-the-type-language/","text":"Understanding the Type Language \u00b6 Telegram's Type Language (also known as TL, found on .tl files) is a concise way to define what other programming languages commonly call classes or structs. Every definition is written as follows for a Telegram object is defined as follows: name#id argument_name:argument_type = CommonType This means that in a single line you know what the TLObject name is. You know it's unique ID, and you know what arguments it has. It really isn't that hard to write a generator for generating code to any platform! The generated code should also be able to encode the TLObject (let this be a request or a type) into bytes, so they can be sent over the network. This isn't a big deal either, because you know how the TLObject 's are made, and how the types should be serialized. You can either write your own code generator, or use the one this library provides, but please be kind and keep some special mention to this project for helping you out. This is only a introduction. The TL language is not that easy. But it's not that hard either. You're free to sniff the telethon_generator/ files and learn how to parse other more complex lines, such as flags (to indicate things that may or may not be written at all) and vector 's.","title":"Understanding the Type Language"},{"location":"developing/understanding-the-type-language/#understanding-the-type-language","text":"Telegram's Type Language (also known as TL, found on .tl files) is a concise way to define what other programming languages commonly call classes or structs. Every definition is written as follows for a Telegram object is defined as follows: name#id argument_name:argument_type = CommonType This means that in a single line you know what the TLObject name is. You know it's unique ID, and you know what arguments it has. It really isn't that hard to write a generator for generating code to any platform! The generated code should also be able to encode the TLObject (let this be a request or a type) into bytes, so they can be sent over the network. This isn't a big deal either, because you know how the TLObject 's are made, and how the types should be serialized. You can either write your own code generator, or use the one this library provides, but please be kind and keep some special mention to this project for helping you out. This is only a introduction. The TL language is not that easy. But it's not that hard either. You're free to sniff the telethon_generator/ files and learn how to parse other more complex lines, such as flags (to indicate things that may or may not be written at all) and vector 's.","title":"Understanding the Type Language"},{"location":"examples/chats-and-channels/","text":"Working with Chats and Channels \u00b6 Note These examples assume you have read :ref: full-api . Joining a chat or channel \u00b6 Note that :tl: Chat are normal groups, and :tl: Channel are a special form of :tl: Chat , which can also be super-groups if their megagroup member is True . Joining a public channel \u00b6 Once you have the :ref: entity <entities> of the channel you want to join to, you can make use of the :tl: JoinChannelRequest to join such channel: from telethon.tl.functions.channels import JoinChannelRequest await client ( JoinChannelRequest ( channel )) # In the same way, you can also leave such channel from telethon.tl.functions.channels import LeaveChannelRequest await client ( LeaveChannelRequest ( input_channel )) For more on channels, check the channels namespace . Joining a private chat or channel \u00b6 If all you have is a link like this one: https://t.me/joinchat/AAAAAFFszQPyPEZ7wgxLtd , you already have enough information to join! The part after the https://t.me/joinchat/ , this is, AAAAAFFszQPyPEZ7wgxLtd on this example, is the hash of the chat or channel. Now you can use :tl: ImportChatInviteRequest as follows: from telethon.tl.functions.messages import ImportChatInviteRequest updates = await client ( ImportChatInviteRequest ( 'AAAAAEHbEkejzxUjAUCfYg' )) Adding someone else to such chat or channel \u00b6 If you don't want to add yourself, maybe because you're already in, you can always add someone else with the :tl: AddChatUserRequest , which use is very straightforward, or :tl: InviteToChannelRequest for channels: # For normal chats from telethon.tl.functions.messages import AddChatUserRequest # Note that ``user_to_add`` is NOT the name of the parameter. # It's the user you want to add (``user_id=user_to_add``). await client ( AddChatUserRequest ( chat_id , user_to_add , fwd_limit = 10 # Allow the user to see the 10 last messages )) # For channels (which includes megagroups) from telethon.tl.functions.channels import InviteToChannelRequest await client ( InviteToChannelRequest ( channel , [ users_to_add ] )) Checking a link without joining \u00b6 If you don't need to join but rather check whether it's a group or a channel, you can use the :tl: CheckChatInviteRequest , which takes in the hash of said channel or group. Increasing View Count in a Channel \u00b6 It has been asked quite a few times (really, many ), and while I don't understand why so many people ask this, the solution is to use :tl: GetMessagesViewsRequest , setting increment=True : # Obtain `channel' through dialogs or through client.get_entity() or anyhow. # Obtain `msg_ids' through `.get_messages()` or anyhow. Must be a list. await client ( GetMessagesViewsRequest ( peer = channel , id = msg_ids , increment = True )) Note that you can only do this once or twice a day per account, running this in a loop will obviously not increase the views forever unless you wait a day between each iteration. If you run it any sooner than that, the views simply won't be increased.","title":"Working with Chats and Channels"},{"location":"examples/chats-and-channels/#working-with-chats-and-channels","text":"Note These examples assume you have read :ref: full-api .","title":"Working with Chats and Channels"},{"location":"examples/chats-and-channels/#joining-a-chat-or-channel","text":"Note that :tl: Chat are normal groups, and :tl: Channel are a special form of :tl: Chat , which can also be super-groups if their megagroup member is True .","title":"Joining a chat or channel"},{"location":"examples/chats-and-channels/#joining-a-public-channel","text":"Once you have the :ref: entity <entities> of the channel you want to join to, you can make use of the :tl: JoinChannelRequest to join such channel: from telethon.tl.functions.channels import JoinChannelRequest await client ( JoinChannelRequest ( channel )) # In the same way, you can also leave such channel from telethon.tl.functions.channels import LeaveChannelRequest await client ( LeaveChannelRequest ( input_channel )) For more on channels, check the channels namespace .","title":"Joining a public channel"},{"location":"examples/chats-and-channels/#joining-a-private-chat-or-channel","text":"If all you have is a link like this one: https://t.me/joinchat/AAAAAFFszQPyPEZ7wgxLtd , you already have enough information to join! The part after the https://t.me/joinchat/ , this is, AAAAAFFszQPyPEZ7wgxLtd on this example, is the hash of the chat or channel. Now you can use :tl: ImportChatInviteRequest as follows: from telethon.tl.functions.messages import ImportChatInviteRequest updates = await client ( ImportChatInviteRequest ( 'AAAAAEHbEkejzxUjAUCfYg' ))","title":"Joining a private chat or channel"},{"location":"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel","text":"If you don't want to add yourself, maybe because you're already in, you can always add someone else with the :tl: AddChatUserRequest , which use is very straightforward, or :tl: InviteToChannelRequest for channels: # For normal chats from telethon.tl.functions.messages import AddChatUserRequest # Note that ``user_to_add`` is NOT the name of the parameter. # It's the user you want to add (``user_id=user_to_add``). await client ( AddChatUserRequest ( chat_id , user_to_add , fwd_limit = 10 # Allow the user to see the 10 last messages )) # For channels (which includes megagroups) from telethon.tl.functions.channels import InviteToChannelRequest await client ( InviteToChannelRequest ( channel , [ users_to_add ] ))","title":"Adding someone else to such chat or channel"},{"location":"examples/chats-and-channels/#checking-a-link-without-joining","text":"If you don't need to join but rather check whether it's a group or a channel, you can use the :tl: CheckChatInviteRequest , which takes in the hash of said channel or group.","title":"Checking a link without joining"},{"location":"examples/chats-and-channels/#increasing-view-count-in-a-channel","text":"It has been asked quite a few times (really, many ), and while I don't understand why so many people ask this, the solution is to use :tl: GetMessagesViewsRequest , setting increment=True : # Obtain `channel' through dialogs or through client.get_entity() or anyhow. # Obtain `msg_ids' through `.get_messages()` or anyhow. Must be a list. await client ( GetMessagesViewsRequest ( peer = channel , id = msg_ids , increment = True )) Note that you can only do this once or twice a day per account, running this in a loop will obviously not increase the views forever unless you wait a day between each iteration. If you run it any sooner than that, the views simply won't be increased.","title":"Increasing View Count in a Channel"},{"location":"examples/projects-using-telethon/","text":"Projects using Telethon \u00b6 This page lists some interesting and useful real world examples showcasing what can be built with the library. Note Do you have an interesting project that uses the library or know of any that's not listed here? Feel free to leave a comment at issue #744 so it can be included in the next revision of the documentation! You can also advertise your bot and its features, in the issue, although it should be a big project which can be useful for others before being included here, so please don't feel offended if it can't be here! telethon_examples/ \u00b6 telethon_examples / Lonami's site This documentation is not the only place where you can find useful code snippets using the library. The main repository also has a folder with some cool examples (even a Tkinter GUI!) which you can download, edit and run to learn and play with them. @TelethonSnippets \u00b6 @TelethonSnippets You can find useful short snippets for Telethon here. telegram-export \u00b6 telegram-export / expectocode's GitHub A tool to download Telegram data (users, chats, messages, and media) into a database (and display the saved data). mautrix-telegram \u00b6 mautrix-telegram / maunium's site A Matrix-Telegram hybrid puppeting/relaybot bridge. TelegramTUI \u00b6 TelegramTUI / bad-day's GitHub A Telegram client on your terminal. tgcloud \u00b6 tgcloud / tgcloud's site Opensource Telegram based cloud storage. tgmount \u00b6 tgmount / nktknshn's GitHub Mount Telegram dialogs and channels as a Virtual File System. garnet \u00b6 garnet / uwinx's GitHub Pomegranate (or garnet for short) is a small telethon add-on which features persistent conversations based on Finite State Machines (FSM), a new Filter to define handlers more conveniently and utilities to run code on start and finish of the client. Be sure to check the project to learn about its latest features, since this description may be out of date. telethon-secret-chat \u00b6 telethon-secret-chat / painor's GitHub This add-on can be used to work with secret chats in Telethon!","title":"Projects using Telethon"},{"location":"examples/projects-using-telethon/#projects-using-telethon","text":"This page lists some interesting and useful real world examples showcasing what can be built with the library. Note Do you have an interesting project that uses the library or know of any that's not listed here? Feel free to leave a comment at issue #744 so it can be included in the next revision of the documentation! You can also advertise your bot and its features, in the issue, although it should be a big project which can be useful for others before being included here, so please don't feel offended if it can't be here!","title":"Projects using Telethon"},{"location":"examples/projects-using-telethon/#telethon_examples","text":"telethon_examples / Lonami's site This documentation is not the only place where you can find useful code snippets using the library. The main repository also has a folder with some cool examples (even a Tkinter GUI!) which you can download, edit and run to learn and play with them.","title":"telethon_examples/"},{"location":"examples/projects-using-telethon/#telethonsnippets","text":"@TelethonSnippets You can find useful short snippets for Telethon here.","title":"@TelethonSnippets"},{"location":"examples/projects-using-telethon/#telegram-export","text":"telegram-export / expectocode's GitHub A tool to download Telegram data (users, chats, messages, and media) into a database (and display the saved data).","title":"telegram-export"},{"location":"examples/projects-using-telethon/#mautrix-telegram","text":"mautrix-telegram / maunium's site A Matrix-Telegram hybrid puppeting/relaybot bridge.","title":"mautrix-telegram"},{"location":"examples/projects-using-telethon/#telegramtui","text":"TelegramTUI / bad-day's GitHub A Telegram client on your terminal.","title":"TelegramTUI"},{"location":"examples/projects-using-telethon/#tgcloud","text":"tgcloud / tgcloud's site Opensource Telegram based cloud storage.","title":"tgcloud"},{"location":"examples/projects-using-telethon/#tgmount","text":"tgmount / nktknshn's GitHub Mount Telegram dialogs and channels as a Virtual File System.","title":"tgmount"},{"location":"examples/projects-using-telethon/#garnet","text":"garnet / uwinx's GitHub Pomegranate (or garnet for short) is a small telethon add-on which features persistent conversations based on Finite State Machines (FSM), a new Filter to define handlers more conveniently and utilities to run code on start and finish of the client. Be sure to check the project to learn about its latest features, since this description may be out of date.","title":"garnet"},{"location":"examples/projects-using-telethon/#telethon-secret-chat","text":"telethon-secret-chat / painor's GitHub This add-on can be used to work with secret chats in Telethon!","title":"telethon-secret-chat"},{"location":"examples/users/","text":"Users \u00b6 Note These examples assume you have read :ref: full-api . Retrieving full information \u00b6 If you need to retrieve the bio, biography or about information for a user you should use :tl: GetFullUser : from telethon.tl.functions.users import GetFullUserRequest full = await client ( GetFullUserRequest ( user )) # or even full = await client ( GetFullUserRequest ( 'username' )) bio = full . about See :tl: UserFull to know what other fields you can access. Updating your name and/or bio \u00b6 The first name, last name and bio (about) can all be changed with the same request. Omitted fields won't change after invoking :tl: UpdateProfile : from telethon.tl.functions.account import UpdateProfileRequest await client ( UpdateProfileRequest ( about = 'This is a test from Telethon' )) Updating your username \u00b6 You need to use account.UpdateUsername : from telethon.tl.functions.account import UpdateUsernameRequest await client ( UpdateUsernameRequest ( 'new_username' )) Updating your profile photo \u00b6 The easiest way is to upload a new file and use that as the profile photo through UploadProfilePhoto : from telethon.tl.functions.photos import UploadProfilePhotoRequest await client ( UploadProfilePhotoRequest ( await client . upload_file ( '/path/to/some/file' ) ))","title":"Users"},{"location":"examples/users/#users","text":"Note These examples assume you have read :ref: full-api .","title":"Users"},{"location":"examples/users/#retrieving-full-information","text":"If you need to retrieve the bio, biography or about information for a user you should use :tl: GetFullUser : from telethon.tl.functions.users import GetFullUserRequest full = await client ( GetFullUserRequest ( user )) # or even full = await client ( GetFullUserRequest ( 'username' )) bio = full . about See :tl: UserFull to know what other fields you can access.","title":"Retrieving full information"},{"location":"examples/users/#updating-your-name-andor-bio","text":"The first name, last name and bio (about) can all be changed with the same request. Omitted fields won't change after invoking :tl: UpdateProfile : from telethon.tl.functions.account import UpdateProfileRequest await client ( UpdateProfileRequest ( about = 'This is a test from Telethon' ))","title":"Updating your name and/or bio"},{"location":"examples/users/#updating-your-username","text":"You need to use account.UpdateUsername : from telethon.tl.functions.account import UpdateUsernameRequest await client ( UpdateUsernameRequest ( 'new_username' ))","title":"Updating your username"},{"location":"examples/users/#updating-your-profile-photo","text":"The easiest way is to upload a new file and use that as the profile photo through UploadProfilePhoto : from telethon.tl.functions.photos import UploadProfilePhotoRequest await client ( UploadProfilePhotoRequest ( await client . upload_file ( '/path/to/some/file' ) ))","title":"Updating your profile photo"},{"location":"examples/word-of-warning/","text":"A Word of Warning \u00b6 Full API is not how you are intended to use the library. You should always prefer the :ref: client-ref . However, not everything is implemented as a friendly method, so full API is your last resort. If you select a method in :ref: client-ref , you will most likely find an example for that method. This is how you are intended to use the library. Full API will break between different minor versions of the library, since Telegram changes very often. The friendly methods will be kept compatible between major versions. If you need to see real-world examples, please refer to :ref: telethon_projects .","title":"A Word of Warning"},{"location":"examples/word-of-warning/#a-word-of-warning","text":"Full API is not how you are intended to use the library. You should always prefer the :ref: client-ref . However, not everything is implemented as a friendly method, so full API is your last resort. If you select a method in :ref: client-ref , you will most likely find an example for that method. This is how you are intended to use the library. Full API will break between different minor versions of the library, since Telegram changes very often. The friendly methods will be kept compatible between major versions. If you need to see real-world examples, please refer to :ref: telethon_projects .","title":"A Word of Warning"},{"location":"examples/working-with-messages/","text":"Working with messages \u00b6 Note These examples assume you have read :ref: full-api . Sending stickers \u00b6 Stickers are nothing else than files , and when you successfully retrieve the stickers for a certain sticker set, all you will have are handles to these files. Remember, the files Telegram holds on their servers can be referenced through this pair of ID/hash (unique per user), and you need to use this handle when sending a \"document\" message. This working example will send yourself the very first sticker you have: # Get all the sticker sets this user has from telethon.tl.functions.messages import GetAllStickersRequest sticker_sets = await client ( GetAllStickersRequest ( 0 )) # Choose a sticker set from telethon.tl.functions.messages import GetStickerSetRequest from telethon.tl.types import InputStickerSetID sticker_set = sticker_sets . sets [ 0 ] # Get the stickers for this sticker set stickers = await client ( GetStickerSetRequest ( stickerset = InputStickerSetID ( id = sticker_set . id , access_hash = sticker_set . access_hash ) )) # Stickers are nothing more than files, so send that await client . send_file ( 'me' , stickers . documents [ 0 ])","title":"Working with messages"},{"location":"examples/working-with-messages/#working-with-messages","text":"Note These examples assume you have read :ref: full-api .","title":"Working with messages"},{"location":"examples/working-with-messages/#sending-stickers","text":"Stickers are nothing else than files , and when you successfully retrieve the stickers for a certain sticker set, all you will have are handles to these files. Remember, the files Telegram holds on their servers can be referenced through this pair of ID/hash (unique per user), and you need to use this handle when sending a \"document\" message. This working example will send yourself the very first sticker you have: # Get all the sticker sets this user has from telethon.tl.functions.messages import GetAllStickersRequest sticker_sets = await client ( GetAllStickersRequest ( 0 )) # Choose a sticker set from telethon.tl.functions.messages import GetStickerSetRequest from telethon.tl.types import InputStickerSetID sticker_set = sticker_sets . sets [ 0 ] # Get the stickers for this sticker set stickers = await client ( GetStickerSetRequest ( stickerset = InputStickerSetID ( id = sticker_set . id , access_hash = sticker_set . access_hash ) )) # Stickers are nothing more than files, so send that await client . send_file ( 'me' , stickers . documents [ 0 ])","title":"Sending stickers"},{"location":"misc/changelog/","text":"Changelog (Version History) \u00b6 This page lists all the available versions of the library, in chronological order. You should read this when upgrading the library to know where your code can break, and where it can take advantage of new goodies! Minor quality of life improvements (v1.14) \u00b6 Published at 2020/05/26 Scheme layer used: 113 Some nice things that were missing, along with the usual bug-fixes. Additions \u00b6 New Message.dice <telethon.tl.custom.message.Message.dice> property. The func= parameter of events can now be an async function. Bug fixes \u00b6 Fixed client.action() <telethon.client.chats.ChatMethods.action> having an alias wrong. Fixed incorrect formatting of some errors. Probably more reliable detection of pin events in small groups. Fixed send methods on client.conversation() <telethon.client.dialogs.DialogMethods.conversation> were not honoring cancellation. Flood waits of zero seconds are handled better. Getting the pinned message in a chat was failing. Fixed the return value when forwarding messages if some were missing and also the return value of albums. Enhancements \u00b6 .tgs files are now recognised as animated stickers. The service message produced by Message.pin() <telethon.tl.custom.message.Message.pin> is now returned. Sending a file with client.send_file() <telethon.client.uploads.UploadMethods.send_file> now works fine when you pass an existing dice media (e.g. sending a message copy). client.edit_permissions() <telethon.client.chats.ChatMethods.edit_permissions> now has the embed_links parameter which was missing. Bug Fixes (v1.13) \u00b6 Published at 2020/04/25 Scheme layer used: 112 Bug fixes and layer bump. Bug fixes \u00b6 Passing None as the entity to client.delete_messages() <telethon.client.messages.MessageMethods.delete_messages> would fail. When downloading a thumbnail, the name inferred was wrong. Bug Fixes (v1.12) \u00b6 Published at 2020/04/20 Scheme layer used: 111 Once again nothing major, but a few bug fixes and primarily the new layer deserves a new minor release. Bug fixes \u00b6 These were already included in the v1.11.3 patch: libssl check was failing on macOS. Getting input users would sometimes fail on events.ChatAction <telethon.events.chataction.ChatAction> . These bug fixes are available in this release and beyond: Avoid another occurrence of MemoryError . Sending large files in albums would fail because it tried to cache them. The thumb was being ignored when sending files from :tl: InputFile . Fixed editing inline messages from callback queries in some cases. Proxy connection is now blocking which should help avoid some errors. Bug Fixes (v1.11) \u00b6 Published at 2020/02/20 Scheme layer used: 110 It has been a while since the last release, and a few bug fixes have been made since then. This release includes them and updates the scheme layer. Note that most of the bug-fixes are available in the v1.10.10 patch. Bug fixes \u00b6 Fix MemoryError when casting certain media. Fix client.get_entity() <telethon.client.users.UserMethods.get_entity> on small group chats. client.delete_dialog() <telethon.client.dialogs.DialogMethods.delete_dialog> now handles deactivated chats more gracefully. Sending a message with file= would ignore some of the parameters. Errors are now un-pickle-able once again. Fixed some issues regarding markdown and HTML (un)parsing. The following are also present in v1.10.10 : Fixed some issues with events.Album <telethon.events.album.Album> . Fixed some issues with client.kick_participant() <telethon.client.chats.ChatMethods.kick_participant> and client.edit_admin() <telethon.client.chats.ChatMethods.edit_admin> . Fixed sending albums and more within client.conversation() <telethon.client.dialogs.DialogMethods.conversation> . Fixed some import issues. And a lot more minor stuff. Enhancements \u00b6 Videos can now be included when sending albums. Getting updates after reconnect should be more reliable. Updated documentation and added more examples. More security checks during the generation of the authorization key. The following are also present in v1.10.10 : URLs like t.me/@username are now valid. Auto-sleep now works for slow-mode too. Improved some error messages. Some internal improvements and updating. client.pin_message() <telethon.client.messages.MessageMethods.pin_message> now also works with message objects. Asynchronous file descriptors are now allowed during download and upload. Scheduled Messages (v1.10) \u00b6 Published at 2019/09/08 Scheme layer used: 105 You can now schedule messages to be sent (or edited, or forwarded\u2026) at a later time, which can also work as reminders for yourself when used in your own chat! from datetime import timedelta # Remind yourself to walk the dog in 10 minutes (after you play with Telethon's update) await client . send_message ( 'me' , 'Walk the dog' , schedule = timedelta ( minutes = 10 )) # Remind your friend tomorrow to update Telethon await client . send_message ( friend , 'Update Telethon!' , schedule = timedelta ( days = 1 )) Additions \u00b6 New Button.auth <telethon.tl.custom.button.Button.auth> friendly button you can use to ask users to login to your bot. Telethon's repository now contains *.nix expressions that you can use. New client.kick_participant() <telethon.client.chats.ChatMethods.kick_participant> method to truly kick (not ban) participants. New schedule parameter in client.send_message() <telethon.client.messages.MessageMethods.send_message> , client.edit_message() <telethon.client.messages.MessageMethods.edit_message> , client.forward_messages() <telethon.client.messages.MessageMethods.forward_messages> and client.send_file() <telethon.client.uploads.UploadMethods.send_file> . Bug fixes \u00b6 Fix calling flush on file objects which lack this attribute. Fix CallbackQuery <telethon.events.callbackquery.CallbackQuery> pattern. Fix client.action() <telethon.client.chats.ChatMethods.action> not returning itself when used in a context manager (so the as would be None ). Fix sending :tl: InputKeyboardButtonUrlAuth as inline buttons. Fix client.edit_permissions() <telethon.client.chats.ChatMethods.edit_permissions> defaults. Fix Forward <telethon.tl.custom.forward.Forward> had its client as None . Fix (de)serialization of negative timestamps (caused by the information in some sites with instant view, where the date could be very old). Fix HTML un-parsing. Fix to/from_id in private messages when using multiple clients. Stop disconnecting from None (incorrect logging). Fix double-read on double-connect. Fix client.get_messages() <telethon.client.messages.MessageMethods.get_messages> when being passed more than 100 IDs. Fix Message.document <telethon.tl.custom.message.Message.document> for documents coming from web-pages. Enhancements \u00b6 Some documentation improvements, including the TL reference. Documentation now avoids telethon.sync , which should hopefully be less confusing. Better error messages for flood wait. You can now client.get_drafts() <telethon.client.dialogs.DialogMethods.get_drafts> for a single entity (which means you can now get a single draft from a single chat). New-style file IDs now work with Telethon. The progress_callback for client.upload_file() <telethon.client.uploads.UploadMethods.upload_file> can now be an async def . Animated Stickers (v1.9) \u00b6 Published at 2019/07/06 +------------------------+ | Scheme layer used: 103 | +------------------------+ With the layer 103, Telethon is now able to send and receive animated stickers! These use the 'application/x-tgsticker' mime-type and for now, you can access its raw data, which is a gzipped JSON. Additions * New `events.Album <telethon.events.album.Album>` to easily receive entire albums! * New `client.edit_admin() <telethon.client.chats.ChatMethods.edit_admin>` and `client.edit_permissions() <telethon.client.chats.ChatMethods.edit_permissions>` methods to more easily manage your groups. * New ``pattern=`` in `CallbackQuery <telethon.events.callbackquery.CallbackQuery>`. * New `conversation.cancel_all() <telethon.tl.custom.conversation.Conversation.cancel>` method, to cancel all currently-active conversations in a particular chat. * New `telethon.utils.encode_waveform` and `telethon.utils.decode_waveform` methods as implemented by Telegram Desktop, which lets you customize how voice notes will render. * New ``ignore_pinned`` parameter in `client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs>`. * New `Message.mark_read() <telethon.tl.custom.message.Message.mark_read>` method. * You can now use strike-through in markdown with ``~~text~~``, and the corresponding HTML tags for strike-through, quotes and underlined text. * You can now nest entities, as in ``**__text__**``. Bug fixes Fixed downloading contacts. Fixed client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs> missing some under certain circumstances. Fixed incredibly slow imports under some systems due to expensive path resolution when searching for libssl . Fixed captions when sending albums. Fixed invalid states in Conversation <telethon.tl.custom.conversation.Conversation> . Fixes to some methods in utils regarding extensions. Fixed memory cycle in Forward <telethon.tl.custom.forward.Forward> which let you do things like the following: .. code-block:: python original_fwd = message.forward.original_fwd.original_fwd.original_fwd.original_fwd.original_fwd.original_fwd Hopefully you didn't rely on that in your code. * Fixed File.ext <telethon.tl.custom.file.File.ext> not working on unknown mime-types, despite the file name having the extension. * Fixed ids=..., reverse=True in client.iter_messages() <telethon.client.messages.MessageMethods.iter_messages> . * Fixed Draft <telethon.tl.custom.draft.Draft> not being aware of the entity. * Added missing re-exports in telethon.sync . Enhancements * Improved `conversation.cancel() <telethon.tl.custom.conversation.Conversation.cancel>` behaviour. Now you can use it from anywhere. * The ``progress_callback`` in `client.download_media() <telethon.client.downloads.DownloadMethods.download_media>` now lets you use ``async def``. * Improved documentation and the online method reference at https://tl.telethon.dev. Documentation Overhaul (v1.8) ============================= *Published at 2019/05/30* +------------------------+ | Scheme layer used: 100 | +------------------------+ The documentation has been completely reworked from the ground up, with awesome new quick references such as :ref:`client-ref` to help you quickly find what you need! Raw methods also warn you when a friendly variant is available, so that you don't accidentally make your life harder than it has to be. In addition, all methods in the client now are fully annotated with type hints! More work needs to be done, but this should already help a lot when using Telethon from any IDEs. You may have noticed that the patch versions between ``v1.7.2`` to ``v1.7.7`` have not been documented. This is because patch versions should only contain bug fixes, no new features or breaking changes. This hasn't been the case in the past, but from now on, the library will try to adhere more strictly to the `Semantic Versioning <https://semver.org>`_ principles. If you ever want to look at those bug fixes, please use the appropriated ``git`` command, such as ``git shortlog v1.7.1...v1.7.4``, but in general, they probably just fixed your issue. With that out of the way, let's look at the full change set: Breaking Changes ~~~~~~~~~~~~~~~~ * The layer changed, so take note if you use the raw API, as it's usual. * The way photos are downloaded changed during the layer update of the previous version, and fixing that bug as a breaking change in itself. `client.download_media() <telethon.client.downloads.DownloadMethods.download_media>` now offers a different way to deal with thumbnails. Additions ~~~~~~~~~ * New `Message.file <telethon.tl.custom.message.Message.file>` property! Now you can trivially access `message.file.id <telethon.tl.custom.file.File.id>` to get the file ID of some media, or even ``print(message.file.name)``. * Archiving dialogs with `Dialog.archive() <telethon.tl.custom.dialog.Dialog.archive>` or `client.edit_folder() <telethon.client.dialogs.DialogMethods.edit_folder>` is now possible. * New cleaned-up method to stream downloads with `client.iter_download() <telethon.client.downloads.DownloadMethods.iter_download>`, which offers a lot of flexibility, such as arbitrary offsets for efficient seeking. * `Dialog.delete() <telethon.tl.custom.dialog.Dialog.delete>` has existed for a while, and now `client.delete_dialog() <telethon.client.dialogs.DialogMethods.delete_dialog>` exists too so you can easily leave chats or delete dialogs without fetching all dialogs. * Some people or chats have a lot of profile photos. You can now iterate over all of them with the new `client.iter_profile_photos() <telethon.client.chats.ChatMethods.iter_profile_photos>` method. * You can now annoy everyone with the new `Message.pin(notify=True) <telethon.tl.custom.message.Message.pin>`! The client has its own variant too, called `client.pin_message() <telethon.client.messages.MessageMethods.pin_message>`. Bug fixes ~~~~~~~~~ * Correctly catch and raise all RPC errors. * Downloading stripped photos wouldn't work correctly. * Under some systems, ``libssl`` would fail to load earlier than expected, causing the library to fail when being imported. * `conv.get_response() <telethon.tl.custom.conversation.Conversation.get_response>` after ID 0 wasn't allowed when it should. * `InlineBuilder <telethon.tl.custom.inlinebuilder.InlineBuilder>` only worked with local files, but files from anywhere are supported. * Accessing the text property from a raw-API call to fetch :tl:`Message` would fail (any any other property that needed the client). * Database is now upgraded if the version was lower, not different. From now on, this should help with upgrades and downgrades slightly. * Fixed saving ``pts`` and session-related stuff. * Disconnection should not raise any errors. * Invite links of the form ``tg://join?invite=`` now work. * `client.iter_participants(search=...) <telethon.client.chats.ChatMethods.iter_participants>` now works on private chats again. * Iterating over messages in reverse with a date as offset wouldn't work. * The conversation would behave weirdly when a timeout occurred. Enhancements telethon now re-export all the goodies that you commonly need when using the library, so e.g. from telethon import Button will now work. telethon.sync now re-exports everything from telethon , so that you can trivially import from just one place everything that you need. More attempts at reducing CPU usage after automatically fetching missing entities on events. This isn't a big deal, even if it sounds like one. Hexadecimal invite links are now supported. You didn't need them, but they will now work. Internal Changes * Deterministic code generation. This is good for ``diff``. * On Python 3.7 and above, we properly close the connection. * A lot of micro-optimization. * Fixes to bugs introduced while making this release. * Custom commands on ``setup.py`` are nicer to use. Fix-up for Photo Downloads (v1.7.1) =================================== *Published at 2019/04/24* Telegram changed the way thumbnails (which includes photos) are downloaded, so you can no longer use a :tl:`PhotoSize` alone to download a particular thumbnail size (this is a **breaking change**). Instead, you will have to specify the new ``thumb`` parameter in `client.download_media() <telethon.client.downloads.DownloadMethods.download_media>` to download a particular thumbnail size. This addition enables you to easily download thumbnails from documents, something you couldn't do easily before. Easier Events (v1.7) ==================== *Published at 2019/04/22* +-----------------------+ | Scheme layer used: 98 | +-----------------------+ If you have been using Telethon for a while, you probably know how annoying the \"Could not find the input entity for\u2026\" error can be. In this new version, the library will try harder to find the input entity for you! That is, instead of doing: .. code-block:: python @client.on(events.NewMessage) async def handler(event): await client.download_profile_photo(await event.get_input_sender()) # ...... needs await, it's a method ^^^^^ ^^ You can now do: .. code-block:: python @client.on(events.NewMessage) async def handler(event): await client.download_profile_photo(event.input_sender) # ...... no await, it's a property! ^ # It's also 12 characters shorter :) And even the following will hopefully work: .. code-block:: python @client.on(events.NewMessage) async def handler(event): await client.download_profile_photo(event.sender_id) A lot of people use IDs thinking this is the right way of doing it. Ideally, you would always use ``input_*``, not ``sender`` or ``sender_id`` (and the same applies to chats). But, with this change, IDs will work just the same as ``input_*`` inside events. **This feature still needs some more testing**, so please do open an issue if you find strange behaviour. Breaking Changes The layer changed, and a lot of things did too. If you are using raw API, you should be careful with this. In addition, some attributes weren't of type datetime when they should be, which has been fixed. Due to the layer change, you can no longer download photos with just their :tl: PhotoSize . Version 1.7.1 introduces a new way to download thumbnails to work around this issue. client.disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> is now asynchronous again. This means you need to await it. You don't need to worry about this if you were using with client or client.run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> . This should prevent the \"pending task was destroyed\" errors. Additions * New in-memory cache for input entities. This should mean a lot less of disk look-ups. * New `client.action <telethon.client.chats.ChatMethods.action>` method to easily indicate that you are doing some chat action: .. code-block:: python async with client.action(chat, 'typing'): await asyncio.sleep(2) # type for 2 seconds await client.send_message(chat, 'Hello world! I type slow ^^') You can also easily use this for sending files, playing games, etc. New bugs ~~~~~~~~ * Downloading photos is broken. This is fixed in v1.7.1. Bug fixes Fix sending photos from streams/bytes. Fix unhandled error when sending requests that were too big. Fix edits that arrive too early on conversations. Fix client.edit_message() <telethon.client.messages.MessageMethods.edit_message> when trying to edit a file. Fix method calls on the objects returned by client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs> . Attempt at fixing client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs> missing many dialogs. offset_date in client.iter_messages() <telethon.client.messages.MessageMethods.iter_messages> was being ignored in some cases. This has been worked around. Fix callback_query.edit() <telethon.events.callbackquery.CallbackQuery.Event.edit> . Fix CallbackQuery(func=...) <telethon.events.callbackquery.CallbackQuery> was being ignored. Fix UserUpdate <telethon.events.userupdate.UserUpdate> not working for \"typing\" (and uploading file, etc.) status. Fix library was not expecting IOError from PySocks. Fix library was raising a generic ConnectionError and not the one that actually occurred. Fix the blacklist_chats parameter in MessageRead <telethon.events.messageread.MessageRead> not working as intended. Fix client.download_media(contact) <telethon.client.downloads.DownloadMethods.download_media> . Fix mime type when sending mp3 files. Fix forcibly getting the sender or chat from events would not always return all their information. Fix sending albums with client.send_file() <telethon.client.uploads.UploadMethods.send_file> was not returning the sent messages. Fix forwarding albums with client.forward_messages() <telethon.client.messages.MessageMethods.forward_messages> . Some fixes regarding filtering updates from chats. Attempt at preventing duplicated updates. Prevent double auto-reconnect. Enhancements * Some improvements related to proxy connections. * Several updates and improvements to the documentation, such as optional dependencies now being properly listed. * You can now forward messages from different chats directly with `client.forward_messages <telethon.client.messages.MessageMethods.forward_messages>`. Tidying up Internals (v1.6) =========================== *Published at 2019/02/27* +-----------------------+ | Scheme layer used: 95 | +-----------------------+ First things first, sorry for updating the layer in the previous patch version. That should only be done between major versions ideally, but due to how Telegram works, it's done between minor versions. However raw API has and will always be considered \"unsafe\", this meaning that you should always use the convenience client methods instead. These methods don't cover the full API yet, so pull requests are welcome. Breaking Changes ~~~~~~~~~~~~~~~~ * The layer update, of course. This didn't really need a mention here. * You can no longer pass a ``batch_size`` when iterating over messages. No other method exposed this parameter, and it was only meant for testing purposes. Instead, it's now a private constant. * ``client.iter_*`` methods no longer have a ``_total`` parameter which was supposed to be private anyway. Instead, they return a new generator object which has a ``.total`` attribute: .. code-block:: python it = client.iter_messages(chat) for i, message in enumerate(it, start=1): percentage = i / it.total print('{:.2%} {}'.format(percentage, message.text)) Additions ~~~~~~~~~ * You can now pass ``phone`` and ``phone_code_hash`` in `client.sign_up <telethon.client.auth.AuthMethods.sign_up>`, although you probably don't need that. * Thanks to the overhaul of all ``client.iter_*`` methods, you can now do: .. code-block:: python for message in reversed(client.iter_messages('me')): print(message.text) Bug fixes ~~~~~~~~~ * Fix `telethon.utils.resolve_bot_file_id`, which wasn't working after the layer update (so you couldn't send some files by bot file IDs). * Fix sending albums as bot file IDs (due to image detection improvements). * Fix `takeout() <telethon.client.account.AccountMethods.takeout>` failing when they need to download media from other DCs. * Fix repeatedly calling `conversation.get_response() <telethon.tl.custom.conversation.Conversation.get_response>` when many messages arrived at once (i.e. when several of them were forwarded). * Fixed connecting with `ConnectionTcpObfuscated <telethon.network.connection.tcpobfuscated.ConnectionTcpObfuscated>`. * Fix `client.get_peer_id('me') <telethon.client.users.UserMethods.get_peer_id>`. * Fix warning of \"missing sqlite3\" when in reality it just had wrong tables. * Fix a strange error when using too many IDs in `client.delete_messages() <telethon.client.messages.MessageMethods.delete_messages>`. * Fix `client.send_file <telethon.client.uploads.UploadMethods.send_file>` with the result of `client.upload_file <telethon.client.uploads.UploadMethods.upload_file>`. * When answering inline results, their order was not being preserved. * Fix `events.ChatAction <telethon.events.chataction.ChatAction>` detecting user leaves as if they were kicked. Enhancements Cleared up some parts of the documentation. Improved some auto-casts to make life easier. Improved image detection. Now you can easily send bytes and streams of images as photos, unless you force document. Sending images as photos that are too large will now be resized before uploading, reducing the time it takes to upload them and also avoiding errors when the image was too large (as long as pillow is installed). The images will remain unchanged if you send it as a document. Treat errors.RpcMcgetFailError as a temporary server error to automatically retry shortly. This works around most issues. Internal changes * New common way to deal with retries (``retry_range``). * Cleaned up the takeout client. * Completely overhauled asynchronous generators. Layer Update (v1.5.5) ===================== *Published at 2019/01/14* +-----------------------+ | Scheme layer used: 93 | +-----------------------+ There isn't an entry for v1.5.4 because it contained only one hot-fix regarding loggers. This update is slightly bigger so it deserves mention. Additions ~~~~~~~~~ * New ``supports_streaming`` parameter in `client.send_file <telethon.client.uploads.UploadMethods.send_file>`. Bug fixes ~~~~~~~~~ * Dealing with mimetypes should cause less issues in systems like Windows. * Potentially fix alternative session storages that had issues with dates. Enhancements ~~~~~~~~~~~~ * Saner timeout defaults for conversations. * ``Path``-like files are now supported for thumbnails. * Added new hot-keys to the online documentation at https://tl.telethon.dev/ such as ``/`` to search. Press ``?`` to view them all. Bug Fixes (v1.5.3) ================== *Published at 2019/01/14* Several bug fixes and some quality of life enhancements. Breaking Changes message.edit <telethon.tl.custom.message.Message.edit> now respects the previous message buttons or link preview being hidden. If you want to toggle them you need to explicitly set them. This is generally the desired behaviour, but may cause some bots to have buttons when they shouldn't. Additions * You can now \"hide_via\" when clicking on results from `client.inline_query <telethon.client.bots.BotMethods.inline_query>` to @bing and @gif. * You can now further configure the logger Telethon uses to suit your needs. Bug fixes Fixes for ReadTheDocs to correctly build the documentation. Fix :tl: UserEmpty not being expected when getting the input variant. The message object returned when sending a message with buttons wouldn't always contain the :tl: ReplyMarkup . Setting email when configuring 2FA wasn't properly supported. utils.resolve_bot_file_id now works again for photos. Enhancements * Chat and channel participants can now be used as peers. * Reworked README and examples at https://github.com/LonamiWebs/Telethon/tree/master/telethon_examples Takeout Sessions (v1.5.2) ========================= *Published at 2019/01/05* You can now easily start takeout sessions (also known as data export sessions) through `client.takeout() <telethon.client.account.AccountMethods.takeout>`. Some of the requests will have lower flood limits when done through the takeout session. Bug fixes ~~~~~~~~~ * The new `AdminLogEvent <telethon.tl.custom.adminlogevent.AdminLogEvent>` had a bug that made it unusable. * `client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs>` will now locally check for the offset date, since Telegram ignores it. * Answering inline queries with media no works properly. You can now use the library to create inline bots and send stickers through them! object.to_json() (v1.5.1) ========================= *Published at 2019/01/03* The library already had a way to easily convert the objects the API returned into dictionaries through ``object.to_dict()``, but some of the fields are dates or `bytes` which JSON can't serialize directly. For convenience, a new ``object.to_json()`` has been added which will by default format both of those problematic types into something sensible. Additions ~~~~~~~~~ * New `client.iter_admin_log() <telethon.client.chats.ChatMethods.iter_admin_log>` method. Bug fixes ~~~~~~~~~ * `client.is_connected() <telethon.client.telegrambaseclient.TelegramBaseClient.is_connected>` would be wrong when the initial connection failed. * Fixed ``UnicodeDecodeError`` when accessing the text of messages with malformed offsets in their entities. * Fixed `client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity>` for integer IDs that the client has not seen before. Enhancements You can now configure the reply markup when using Button <telethon.tl.custom.button.Button> as a bot. More properties for Message <telethon.tl.custom.message.Message> to make accessing media convenient. Downloading to file=bytes will now return a bytes object with the downloaded media. Polls with the Latest Layer (v1.5) \u00b6 Published at 2018/12/25 +-----------------------+ | Scheme layer used: 91 | +-----------------------+ This version doesn't really bring many new features, but rather focuses on updating the code base to support the latest available Telegram layer, 91. This layer brings polls, and you can create and manage them through Telethon! Breaking Changes * The layer change from 82 to 91 changed a lot of things in the raw API, so be aware that if you rely on raw API calls, you may need to update your code, in particular **if you work with files**. They have a new ``file_reference`` parameter that you must provide. Additions ~~~~~~~~~ * New `client.is_bot() <telethon.client.users.UserMethods.is_bot>` method. Bug fixes ~~~~~~~~~ * Markdown and HTML parsing now behave correctly with leading whitespace. * HTTP connection should now work correctly again. * Using ``caption=None`` would raise an error instead of setting no caption. * ``KeyError`` is now handled properly when forwarding messages. * `button.click() <telethon.tl.custom.messagebutton.MessageButton.click>` now works as expected for :tl:`KeyboardButtonGame`. Enhancements ~~~~~~~~~~~~ * Some improvements to the search in the full API and generated examples. * Using entities with ``access_hash = 0`` will now work in more cases. Internal changes Some changes to the documentation and code generation. 2FA code was updated to work under the latest layer. Error Descriptions in CSV files (v1.4.3) \u00b6 Published at 2018/12/04 While this may seem like a minor thing, it's a big usability improvement. Anyone who wants to update the documentation for known errors, or whether some methods can be used as a bot, user or both, can now be easily edited. Everyone is encouraged to help document this better! Bug fixes * ``TimeoutError`` was not handled during automatic reconnects. * Getting messages by ID using :tl:`InputMessageReplyTo` could fail. * Fixed `message.get_reply_message <telethon.tl.custom.message.Message.get_reply_message>` as a bot when a user replied to a different bot. * Accessing some document properties in a `Message <telethon.tl.custom.message.Message>` would fail. Enhancements ~~~~~~~~~~~~ * Accessing `events.ChatAction <telethon.events.chataction.ChatAction>` properties such as input users may now work in more cases. Internal changes ~~~~~~~~~~~~~~~~ * Error descriptions and information about methods is now loaded from a CSV file instead of being part of several messy JSON files. Bug Fixes (v1.4.2) ================== *Published at 2018/11/24* This version also includes the v1.4.1 hot-fix, which was a single quick fix and didn't really deserve an entry in the changelog. Bug fixes Authorization key wouldn't be saved correctly, requiring re-login. Conversations with custom events failed to be cancelled. Fixed telethon.sync when using other threads. Fix markdown/HTML parser from failing with leading/trailing whitespace. Fix accessing chat_action_event.input_user property. Potentially improved handling unexpected disconnections. Enhancements * Better default behaviour for `client.send_read_acknowledge <telethon.client.messages.MessageMethods.send_read_acknowledge>`. * Clarified some points in the documentation. * Clearer errors for ``utils.get_peer*``. Connection Overhaul (v1.4) ========================== *Published at 2018/11/03* Yet again, a lot of work has been put into reworking the low level connection classes. This means ``asyncio.open_connection`` is now used correctly and the errors it can produce are handled properly. The separation between packing, encrypting and network is now abstracted away properly, so reasoning about the code is easier, making it more maintainable. As a user, you shouldn't worry about this, other than being aware that quite a few changes were made in the insides of the library and you should report any issues that you encounter with this version if any. Breaking Changes ~~~~~~~~~~~~~~~~ * The threaded version of the library will no longer be maintained, primarily because it never was properly maintained anyway. If you have old code, stick with old versions of the library, such as ``0.19.1.6``. * Timeouts no longer accept ``timedelta``. Simply use seconds. * The ``callback`` parameter from `telethon.tl.custom.button.Button.inline()` was removed, since it had always been a bad idea. Adding the callback there meant a lot of extra work for every message sent, and only registering it after the first message was sent! Instead, use `telethon.events.callbackquery.CallbackQuery`. Additions ~~~~~~~~~ * New `dialog.delete() <telethon.tl.custom.dialog.Dialog.delete>` method. * New `conversation.cancel() <telethon.tl.custom.conversation.Conversation.cancel>` method. * New ``retry_delay`` delay for the client to be used on auto-reconnection. Bug fixes ~~~~~~~~~ * Fixed `Conversation.wait_event() <telethon.tl.custom.conversation.Conversation.wait_event>`. * Fixed replying with photos/documents on inline results. * `client.is_user_authorized() <telethon.client.users.UserMethods.is_user_authorized>` now works correctly after `client.log_out() <telethon.client.auth.AuthMethods.log_out>`. * `dialog.is_group <telethon.tl.custom.dialog.Dialog>` now works for :tl:`ChatForbidden`. * Not using ``async with`` when needed is now a proper error. * `events.CallbackQuery <telethon.events.callbackquery.CallbackQuery>` with string regex was not working properly. * `client.get_entity('me') <telethon.client.users.UserMethods.get_entity>` now works again. * Empty codes when signing in are no longer valid. * Fixed file cache for in-memory sessions. Enhancements Support next_offset in inline_query.answer() <telethon.events.inlinequery.InlineQuery.Event.answer> . Support <a href=\"tg://user?id=123\"> mentions in HTML parse mode. New auto-casts for :tl: InputDocument and :tl: InputChatPhoto . Conversations are now exclusive per-chat by default. The request that caused a RPC error is now shown in the error message. New full API examples in the generated documentation. Fixed some broken links in the documentation. client.disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> is now synchronous, but you can still await it for consistency or compatibility. Event Templates (v1.3) \u00b6 Published at 2018/09/22 If you have worked with Flask templates, you will love this update, since it gives you the same features but even more conveniently: .. code-block:: python # handlers/welcome.py from telethon import events @events.register(events.NewMessage('(?i)hello')) async def handler(event): client = event.client await event.respond('Hi!') await client.send_message('me', 'Sent hello to someone') This will register <telethon.events.register> the handler callback to handle new message events. Note that you didn't add this to any client yet, and this is the key point: you don't need a client to define handlers! You can add it later: .. code-block:: python # main.py from telethon import TelegramClient import handlers.welcome with TelegramClient(...) as client: # This line adds the handler we defined before for new messages client.add_event_handler(handlers.welcome.handler) client.run_until_disconnected() This should help you to split your big code base into a more modular design. Breaking Changes * ``.sender`` is the ``.chat`` when the message is sent in a broadcast channel. This makes sense, because the sender of the message was the channel itself, but you now must take into consideration that it may be either a :tl:`User` or :tl:`Channel` instead of being `None`. Additions ~~~~~~~~~ * New ``MultiError`` class when invoking many requests at once through ``client([requests])``. * New custom ``func=`` on all events. These will receive the entire event, and a good usage example is ``func=lambda e: e.is_private``. * New ``.web_preview`` field on messages. The ``.photo`` and ``.document`` will also return the media in the web preview if any, for convenience. * Callback queries now have a ``.chat`` in most circumstances. Bug fixes ~~~~~~~~~ * Running code with `python3 -O` would remove critical code from asserts. * Fix some rare ghost disconnections after reconnecting. * Fix strange behavior for `send_message(chat, Message, reply_to=foo) <telethon.client.messages.MessageMethods.send_message>`. * The ``loop=`` argument was being pretty much ignored. * Fix ``MemorySession`` file caching. * The logic for getting entities from their username is now correct. * Fixes for sending stickers from ``.webp`` files in Windows, again. * Fix disconnection without being logged in. * Retrieving media from messages would fail. * Getting some messages by ID on private chats. Enhancements ~~~~~~~~~~~~ * `iter_participants <telethon.client.chats.ChatMethods.iter_participants>` will now use its ``search=`` as a symbol set when ``aggressive=True``, so you can do ``client.get_participants(group, aggressive=True, search='\u0430\u0431\u0432\u0433\u0434\u0435\u0451\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442')``. * The ``StringSession`` supports custom encoding. * Callbacks for `telethon.client.auth.AuthMethods.start` can be ``async``. Internal changes Cherry-picked a commit to use asyncio.open_connection in the lowest level of the library. Do open issues if this causes trouble, but it should otherwise improve performance and reliability. Building and resolving events overhaul. Conversations, String Sessions and More (v1.2) \u00b6 Published at 2018/08/14 This is a big release! Quite a few things have been added to the library, such as the new Conversation <telethon.tl.custom.conversation.Conversation> . This makes it trivial to get tokens from @BotFather <https://t.me/BotFather> _: .. code-block:: python from telethon.tl import types with client.conversation('BotFather') as conv: conv.send_message('/mybots') message = conv.get_response() message.click(0) message = conv.get_edit() message.click(0) message = conv.get_edit() for _, token in message.get_entities_text(types.MessageEntityCode): print(token) In addition to that, you can now easily load and export session files without creating any on-disk file thanks to the StringSession : .. code-block:: python from telethon.sessions import StringSession string = StringSession.save(client.session) Check out :ref: sessions for more details. For those who aren't able to install cryptg , the support for libssl has been added back. While interfacing libssl is not as fast, the speed when downloading and sending files should really be noticeably faster. While those are the biggest things, there are still more things to be excited about. Additions - The mentioned method to start a new `client.conversation <telethon.client.dialogs.DialogMethods.conversation>`. - Implemented global search through `client.iter_messages <telethon.client.messages.MessageMethods.iter_messages>` with `None` entity. - New `client.inline_query <telethon.client.bots.BotMethods.inline_query>` method to perform inline queries. - Bot-API-style ``file_id`` can now be used to send files and download media. You can also access `telethon.utils.resolve_bot_file_id` and `telethon.utils.pack_bot_file_id` to resolve and create these file IDs yourself. Note that each user has its own ID for each file so you can't use a bot's ``file_id`` with your user, except stickers. - New `telethon.utils.get_peer`, useful when you expect a :tl:`Peer`. Bug fixes UTC timezone for telethon.events.userupdate.UserUpdate . Bug with certain input parameters when iterating messages. RPC errors without parent requests caused a crash, and better logging. incoming = outgoing = True was not working properly. Getting a message's ID was not working. File attributes not being inferred for open() 'ed files. Use MemorySession if sqlite3 is not installed by default. Self-user would not be saved to the session file after signing in. client.catch_up() <telethon.client.updates.UpdateMethods.catch_up> seems to be functional again. Enhancements - Updated documentation. - Invite links will now use cache, so using them as entities is cheaper. - You can reuse message buttons to send new messages with those buttons. - ``.to_dict()`` will now work even on invalid ``TLObject``'s. Better Custom Message (v1.1.1) ============================== *Published at 2018/07/23* The `custom.Message <telethon.tl.custom.message.Message>` class has been rewritten in a cleaner way and overall feels less hacky in the library. This should perform better than the previous way in which it was patched. The release is primarily intended to test this big change, but also fixes **Python 3.5.2 compatibility** which was broken due to a trailing comma. Bug fixes ~~~~~~~~~ - Using ``functools.partial`` on event handlers broke updates if they had uncaught exceptions. - A bug under some session files where the sender would export authorization for the same data center, which is unsupported. - Some logical bugs in the custom message class. Bot Friendly (v1.1) =================== *Published at 2018/07/21* Two new event handlers to ease creating normal bots with the library, namely `events.InlineQuery <telethon.events.inlinequery.InlineQuery>` and `events.CallbackQuery <telethon.events.callbackquery.CallbackQuery>` for handling ``@InlineBot queries`` or reacting to a button click. For this second option, there is an even better way: .. code-block:: python from telethon.tl.custom import Button async def callback(event): await event.edit('Thank you!') bot.send_message(chat, 'Hello!', buttons=Button.inline('Click me', callback)) You can directly pass the callback when creating the button. This is fine for small bots but it will add the callback every time you send a message, so you probably should do this instead once you are done testing: .. code-block:: python markup = bot.build_reply_markup(Button.inline('Click me', callback)) bot.send_message(chat, 'Hello!', buttons=markup) And yes, you can create more complex button layouts with lists: .. code-block:: python from telethon import events global phone = '' @bot.on(events.CallbackQuery) async def handler(event): global phone if event.data == b'<': phone = phone[:-1] else: phone += event.data.decode('utf-8') await event.answer('Phone is now {}'.format(phone)) markup = bot.build_reply_markup([ [Button.inline('1'), Button.inline('2'), Button.inline('3')], [Button.inline('4'), Button.inline('5'), Button.inline('6')], [Button.inline('7'), Button.inline('8'), Button.inline('9')], [Button.inline('+'), Button.inline('0'), Button.inline('<')], ]) bot.send_message(chat, 'Enter a phone', buttons=markup) (Yes, there are better ways to do this). Now for the rest of things: Additions ~~~~~~~~~ - New `custom.Button <telethon.tl.custom.button.Button>` class to help you create inline (or normal) reply keyboards. You must sign in as a bot to use the ``buttons=`` parameters. - New events usable if you sign in as a bot: `events.InlineQuery <telethon.events.inlinequery.InlineQuery>` and `events.CallbackQuery <telethon.events.callbackquery.CallbackQuery>`. - New ``silent`` parameter when sending messages, usable in broadcast channels. - Documentation now has an entire section dedicate to how to use the client's friendly methods at *(removed broken link)*. Bug fixes ~~~~~~~~~ - Empty ``except`` are no longer used which means sending a keyboard interrupt should now work properly. - The ``pts`` of incoming updates could be `None`. - UTC timezone information is properly set for read ``datetime``. - Some infinite recursion bugs in the custom message class. - :tl:`Updates` was being dispatched to raw handlers when it shouldn't. - Using proxies and HTTPS connection mode may now work properly. - Less flood waits when downloading media from different data centers, and the library will now detect them even before sending requests. Enhancements Interactive sign in now supports signing in with a bot token. timedelta is now supported where a date is expected, which means you can e.g. ban someone for timedelta(minutes=5) . Events are only built once and reused many times, which should save quite a few CPU cycles if you have a lot of the same type. You can now click inline buttons directly if you know their data. Internal changes - When downloading media, the right sender is directly used without previously triggering migrate errors. - Code reusing for getting the chat and the sender, which easily enables this feature for new types. New HTTP(S) Connection Mode (v1.0.4) ==================================== *Published at 2018/07/09* This release implements the HTTP connection mode to the library, which means certain proxies that only allow HTTP connections should now work properly. You can use it doing the following, like any other mode: .. code-block:: python from telethon import TelegramClient, sync from telethon.network import ConnectionHttp client = TelegramClient(..., connection=ConnectionHttp) with client: client.send_message('me', 'Hi!') Additions ~~~~~~~~~ - ``add_mark=`` is now back on ``utils.get_input_peer`` and also on `client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity>`. - New `client.get_peer_id <telethon.client.users.UserMethods.get_peer_id>` convenience for ``utils.get_peer_id(await client.get_input_entity(peer))``. Bug fixes ~~~~~~~~~ - If several `TLMessage` in a `MessageContainer` exceeds 1MB, it will no longer be automatically turned into one. This basically means that e.g. uploading 10 file parts at once will work properly again. - Documentation fixes and some missing ``await``. - Revert named argument for `client.forward_messages <telethon.client.messages.MessageMethods.forward_messages>` Enhancements ~~~~~~~~~~~~ - New auto-casts to :tl:`InputNotifyPeer` and ``chat_id``. Internal changes Outgoing TLMessage are now pre-packed so if there's an error when serializing the raw requests, the library will no longer swallow it. This also means re-sending packets doesn't need to re-pack their bytes. Iterate Messages in Reverse (v1.0.3) \u00b6 Published at 2018/07/04 +-----------------------+ | Scheme layer used: 82 | +-----------------------+ Mostly bug fixes, but now there is a new parameter on client.iter_messages <telethon.client.messages.MessageMethods.iter_messages> to support reversing the order in which messages are returned. Additions - The mentioned ``reverse`` parameter when iterating over messages. - A new ``sequential_updates`` parameter when creating the client for updates to be processed sequentially. This is useful when you need to make sure that all updates are processed in order, such as a script that only forwards incoming messages somewhere else. Bug fixes Count was always None for message.button_count <telethon.tl.custom.message.Message.button_count> . Some fixes when disconnecting upon dropping the client. Support for Python 3.4 in the sync version, and fix media download. Some issues with events when accessing the input chat or their media. Hachoir wouldn't automatically close the file after reading its metadata. Signing in required a named code= parameter, but usage without a name was really widespread so it has been reverted. Bug Fixes (v1.0.2) \u00b6 Published at 2018/06/28 Updated some asserts and parallel downloads, as well as some fixes for sync. Bug Fixes (v1.0.1) \u00b6 Published at 2018/06/27 And as usual, every major release has a few bugs that make the library unusable! This quick update should fix those, namely: Bug fixes - `client.start() <telethon.client.auth.AuthMethods.start>` was completely broken due to a last-time change requiring named arguments everywhere. - Since the rewrite, if your system clock was wrong, the connection would get stuck in an infinite \"bad message\" loop of responses from Telegram. - Accessing the buttons of a custom message wouldn't work in channels, which lead to fix a completely different bug regarding starting bots. - Disconnecting could complain if the magic ``telethon.sync`` was imported. - Successful automatic reconnections now ask Telegram to send updates to us once again as soon as the library is ready to listen for them. Synchronous magic (v1.0) ======================== *Published at 2018/06/27* .. important:: If you come from Telethon pre-1.0 you **really** want to read :ref:`compatibility-and-convenience` to port your scripts to the new version. The library has been around for well over a year. A lot of improvements have been made, a lot of user complaints have been fixed, and a lot of user desires have been implemented. It's time to consider the public API as stable, and remove some of the old methods that were around until now for compatibility reasons. But there's one more surprise! There is a new magic ``telethon.sync`` module to let you use **all** the methods in the :ref:`TelegramClient <telethon-client>` (and the types returned from its functions) in a synchronous way, while using `asyncio` behind the scenes! This means you're now able to do both of the following: .. code-block:: python import asyncio async def main(): await client.send_message('me', 'Hello!') asyncio.get_event_loop().run_until_complete(main()) # ...can be rewritten as: from telethon import sync client.send_message('me', 'Hello!') Both ways can coexist (you need to ``await`` if the loop is running). You can also use the magic ``sync`` module in your own classes, and call ``sync.syncify(cls)`` to convert all their ``async def`` into magic variants. Breaking Changes ~~~~~~~~~~~~~~~~ - ``message.get_fwd_sender`` is now in `message.forward <telethon.tl.custom.message.Message.forward>`. - ``client.idle`` is now `client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected>` - ``client.add_update_handler`` is now `client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler>` - ``client.remove_update_handler`` is now `client.remove_event_handler <telethon.client.updates.UpdateMethods.remove_event_handler>` - ``client.list_update_handlers`` is now `client.list_event_handlers <telethon.client.updates.UpdateMethods.list_event_handlers>` - ``client.get_message_history`` is now `client.get_messages <telethon.client.messages.MessageMethods.get_messages>` - ``client.send_voice_note`` is now `client.send_file <telethon.client.uploads.UploadMethods.send_file>` with ``is_voice=True``. - ``client.invoke()`` is now ``client(...)``. - ``report_errors`` has been removed since it's currently not used, and ``flood_sleep_threshold`` is now part of the client. - The ``update_workers`` and ``spawn_read_thread`` arguments are gone. Simply remove them from your code when you create the client. - Methods with a lot of arguments can no longer be used without specifying their argument. Instead you need to use named arguments. This improves readability and not needing to learn the order of the arguments, which can also change. Additions client.send_file <telethon.client.uploads.UploadMethods.send_file> now accepts external http:// and https:// URLs. You can use the :ref: TelegramClient <telethon-client> inside of with blocks, which will client.start() <telethon.client.auth.AuthMethods.start> and disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> the client for you: .. code-block:: python from telethon import TelegramClient, sync with TelegramClient(name, api_id, api_hash) as client: client.send_message('me', 'Hello!') Convenience at its maximum! You can even chain the .start() <telethon.client.auth.AuthMethods.start> method since it returns the instance of the client: .. code-block:: python with TelegramClient(name, api_id, api_hash).start(bot_token=token) as bot: bot.send_message(chat, 'Hello!') Bug fixes - There were some ``@property async def`` left, and some ``await property``. - \"User joined\" event was being treated as \"User was invited\". - SQLite's cursor should not be closed properly after usage. - ``await`` the updates task upon disconnection. - Some bug in Python 3.5.2's `asyncio` causing 100% CPU load if you forgot to call `client.disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect>`. The method is called for you on object destruction, but you still should disconnect manually or use a ``with`` block. - Some fixes regarding disconnecting on client deletion and properly saving the authorization key. - Passing a class to `message.get_entities_text <telethon.tl.custom.message.Message.get_entities_text>` now works properly. - Iterating messages from a specific user in private messages now works. Enhancements ~~~~~~~~~~~~ - Both `client.start() <telethon.client.auth.AuthMethods.start>` and `client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected>` can be ran in both a synchronous way (without starting the loop manually) or from an ``async def`` where they need to have an ``await``. Core Rewrite in asyncio (v1.0-rc1) ================================== *Published at 2018/06/24* +-----------------------+ | Scheme layer used: 81 | +-----------------------+ This version is a major overhaul of the library internals. The core has been rewritten, cleaned up and refactored to fix some oddities that have been growing inside the library. This means that the code is easier to understand and reason about, including the code flow such as conditions, exceptions, where to reconnect, how the library should behave, and separating different retry types such as disconnections or call fails, but it also means that **some things will necessarily break** in this version. All requests that touch the network are now methods and need to have their ``await`` (or be ran until their completion). Also, the library finally has the simple logo it deserved: a carefully hand-written ``.svg`` file representing a T following Python's colours. Breaking Changes ~~~~~~~~~~~~~~~~ - If you relied on internals like the ``MtProtoSender`` and the ``TelegramBareClient``, both are gone. They are now `MTProtoSender <telethon.network.mtprotosender.MTProtoSender>` and `TelegramBaseClient <telethon.client.telegrambaseclient.TelegramBaseClient>` and they behave differently. - Underscores have been renamed from filenames. This means ``telethon.errors.rpc_error_list`` won't work, but you should have been using `telethon.errors` all this time instead. - `client.connect <telethon.client.telegrambaseclient.TelegramBaseClient.connect>` no longer returns `True` on success. Instead, you should ``except`` the possible ``ConnectionError`` and act accordingly. This makes it easier to not ignore the error. - You can no longer set ``retries=n`` when calling a request manually. The limit works differently now, and it's done on a per-client basis. - Accessing `.sender <telethon.tl.custom.message.Message.sender>`, `.chat <telethon.tl.custom.message.Message.chat>` and similar may *not* work in events anymore, since previously they could access the network. The new rule is that properties are not allowed to make API calls. You should use `.get_sender() <telethon.tl.custom.message.Message.get_sender>`, `.get_chat() <telethon.tl.custom.message.Message.get_chat>` instead while using events. You can safely access properties if you get messages through `client.get_messages() <telethon.client.messages.MessageMethods.get_messages>` or other methods in the client. - The above point means ``reply_message`` is now `.get_reply_message() <telethon.tl.custom.message.Message.get_reply_message>`, and ``fwd_from_entity`` is now `get_fwd_sender() <telethon.tl.custom.message.Message.get_fwd_sender>`. Also ``forward`` was gone in the previous version, and you should be using ``fwd_from`` instead. Additions Telegram's Terms Of Service are now accepted when creating a new account. This can possibly help avoid bans. This has no effect for accounts that were created before. The method reference <https://tl.telethon.dev/> _ now shows which methods can be used if you sign in with a bot_token . There's a new client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> future which you can wait on. When a disconnection occurs, you will now, instead letting it happen in the background. More configurable retries parameters, such as auto-reconnection, retries when connecting, and retries when sending a request. You can filter events.NewMessage <telethon.events.newmessage.NewMessage> by sender ID, and also whether they are forwards or not. New ignore_migrated parameter for client.iter_dialogs <telethon.client.dialogs.DialogMethods.iter_dialogs> . Bug fixes - Several fixes to `telethon.events.newmessage.NewMessage`. - Removed named ``length`` argument in ``to_bytes`` for PyPy. - Raw events failed due to not having ``._set_client``. - `message.get_entities_text <telethon.tl.custom.message.Message.get_entities_text>` properly supports filtering, even if there are no message entities. - `message.click <telethon.tl.custom.message.Message.click>` works better. - The server started sending :tl:`DraftMessageEmpty` which the library didn't handle correctly when getting dialogs. - The \"correct\" chat is now always returned from returned messages. - ``to_id`` was not validated when retrieving messages by their IDs. - ``'__'`` is no longer considered valid in usernames. - The ``fd`` is removed from the reader upon closing the socket. This should be noticeable in Windows. - :tl:`MessageEmpty` is now handled when searching messages. - Fixed a rare infinite loop bug in `client.iter_dialogs <telethon.client.dialogs.DialogMethods.iter_dialogs>` for some people. - Fixed ``TypeError`` when there is no `.sender <telethon.tl.custom.message.Message.sender>`. Enhancements ~~~~~~~~~~~~ - You can now delete over 100 messages at once with `client.delete_messages <telethon.client.messages.MessageMethods.delete_messages>`. - Signing in now accounts for ``AuthRestartError`` itself, and also handles ``PasswordHashInvalidError``. - ``__all__`` is now defined, so ``from telethon import *`` imports sane defaults (client, events and utils). This is however discouraged and should be used only in quick scripts. - ``pathlib.Path`` is now supported for downloading and uploading media. - Messages you send to yourself are now considered outgoing, unless they are forwarded. - The documentation has been updated with a brand new `asyncio` crash course to encourage you use it. You can still use the threaded version if you want though. - ``.name`` property is now properly supported when sending and downloading files. - Custom ``parse_mode``, which can now be set per-client, support :tl:`MessageEntityMentionName` so you can return those now. - The session file is saved less often, which could result in a noticeable speed-up when working with a lot of incoming updates. Internal changes ~~~~~~~~~~~~~~~~ - The flow for sending a request is as follows: the ``TelegramClient`` creates a ``MTProtoSender`` with a ``Connection``, and the sender starts send and receive loops. Sending a request means enqueueing it in the sender, which will eventually pack and encrypt it with its ``ConnectionState`` instead of using the entire ``Session`` instance. When the data is packed, it will be sent over the ``Connection`` and ultimately over the ``TcpClient``. - Reconnection occurs at the ``MTProtoSender`` level, and receiving responses follows a similar process, but now ``asyncio.Future`` is used for the results which are no longer part of all ``TLObject``, instead are part of the ``TLMessage`` which simplifies things. - Objects can no longer be ``content_related`` and instead subclass ``TLRequest``, making the separation of concerns easier. - The ``TelegramClient`` has been split into several mixin classes to avoid having a 3,000-lines-long file with all the methods. - More special cases in the ``MTProtoSender`` have been cleaned up, and also some attributes from the ``Session`` which didn't really belong there since they weren't being saved. - The ``telethon_generator/`` can now convert ``.tl`` files into ``.json``, mostly as a proof of concept, but it might be useful for other people. Custom Message class (v0.19.1) ============================== *Published at 2018/06/03* +-----------------------+ | Scheme layer used: 80 | +-----------------------+ This update brings a new `telethon.tl.custom.message.Message` object! All the methods in the `telethon.telegram_client.TelegramClient` that used to return a :tl:`Message` will now return this object instead, which means you can do things like the following: .. code-block:: python msg = client.send_message(chat, 'Hello!') msg.edit('Hello there!') msg.reply('Good day!') print(msg.sender) Refer to its documentation to see all you can do, again, click `telethon.tl.custom.message.Message` to go to its page. Breaking Changes ~~~~~~~~~~~~~~~~ - The `telethon.network.connection.common.Connection` class is now an ABC, and the old ``ConnectionMode`` is now gone. Use a specific connection (like `telethon.network.connection.tcpabridged.ConnectionTcpAbridged`) instead. Additions You can get messages by their ID with telethon.telegram_client.TelegramClient.get_messages 's ids parameter: .. code-block:: python message = client.get_messages(chats, ids=123) # Single message message_list = client.get_messages(chats, ids=[777, 778]) # Multiple More convenience properties for telethon.tl.custom.dialog.Dialog . New default telethon.telegram_client.TelegramClient.parse_mode . You can edit the media of messages that already have some media. New dark theme in the online tl reference, check it out at https://tl.telethon.dev/ . Bug fixes - Some IDs start with ``1000`` and these would be wrongly treated as channels. - Some short usernames like ``@vote`` were being ignored. - `telethon.telegram_client.TelegramClient.iter_messages`'s ``from_user`` was failing if no filter had been set. - `telethon.telegram_client.TelegramClient.iter_messages`'s ``min_id/max_id`` was being ignored by Telegram. This is now worked around. - `telethon.telegram_client.TelegramClient.catch_up` would fail with empty states. - `telethon.events.newmessage.NewMessage` supports ``incoming=False`` to indicate ``outgoing=True``. Enhancements ~~~~~~~~~~~~ - You can now send multiple requests at once while preserving the order: .. code-block:: python from telethon.tl.functions.messages import SendMessageRequest client([SendMessageRequest(chat, 'Hello 1!'), SendMessageRequest(chat, 'Hello 2!')], ordered=True) Internal changes ~~~~~~~~~~~~~~~~ - ``without rowid`` is not used in SQLite anymore. - Unboxed serialization would fail. - Different default limit for ``iter_messages`` and ``get_messages``. - Some clean-up in the ``telethon_generator/`` package. Catching up on Updates (v0.19) ============================== *Published at 2018/05/07* +-----------------------+ | Scheme layer used: 76 | +-----------------------+ This update prepares the library for catching up with updates with the new `telethon.telegram_client.TelegramClient.catch_up` method. This feature needs more testing, but for now it will let you \"catch up\" on some old updates that occurred while the library was offline, and brings some new features and bug fixes. Additions Add search , filter and from_user parameters to telethon.telegram_client.TelegramClient.iter_messages . telethon.telegram_client.TelegramClient.download_file now supports a None path to return the file in memory and return its bytes . Events now have a .original_update field. Bug fixes - Fixed a race condition when receiving items from the network. - A disconnection is made when \"retries reached 0\". This hasn't been tested but it might fix the bug. - ``reply_to`` would not override :tl:`Message` object's reply value. - Add missing caption when sending :tl:`Message` with media. Enhancements ~~~~~~~~~~~~ - Retry automatically on ``RpcCallFailError``. This error happened a lot when iterating over many messages, and retrying often fixes it. - Faster `telethon.telegram_client.TelegramClient.iter_messages` by sleeping only as much as needed. - `telethon.telegram_client.TelegramClient.edit_message` now supports omitting the entity if you pass a :tl:`Message`. - `telethon.events.raw.Raw` can now be filtered by type. Internal changes ~~~~~~~~~~~~~~~~ - The library now distinguishes between MTProto and API schemas. - :tl:`State` is now persisted to the session file. - Connection won't retry forever. - Fixed some errors and cleaned up the generation of code. - Fixed typos and enhanced some documentation in general. - Add auto-cast for :tl:`InputMessage` and :tl:`InputLocation`. Pickle-able objects (v0.18.3) ============================= *Published at 2018/04/15* Now you can use Python's ``pickle`` module to serialize ``RPCError`` and any other ``TLObject`` thanks to **@vegeta1k95**! A fix that was fairly simple, but still might be useful for many people. As a side note, the documentation at https://tl.telethon.dev now lists known ``RPCError`` for all requests, so you know what to expect. This required a major rewrite, but it was well worth it! Breaking changes ~~~~~~~~~~~~~~~~ - `telethon.telegram_client.TelegramClient.forward_messages` now returns a single item instead of a list if the input was also a single item. Additions New telethon.events.messageread.MessageRead event, to find out when and who read which messages as soon as it happens. Now you can access .chat_id on all events and .sender_id on some. Bug fixes - Possibly fix some bug regarding lost ``GzipPacked`` requests. - The library now uses the \"real\" layer 75, hopefully. - Fixed ``.entities`` name collision on updates by making it private. - ``AUTH_KEY_DUPLICATED`` is handled automatically on connection. - Markdown parser's offset uses ``match.start()`` to allow custom regex. - Some filter types (as a type) were not supported by `telethon.telegram_client.TelegramClient.iter_participants`. - `telethon.telegram_client.TelegramClient.remove_event_handler` works. - `telethon.telegram_client.TelegramClient.start` works on all terminals. - :tl:`InputPeerSelf` case was missing from `telethon.telegram_client.TelegramClient.get_input_entity`. Enhancements ~~~~~~~~~~~~ - The ``parse_mode`` for messages now accepts a callable. - `telethon.telegram_client.TelegramClient.download_media` accepts web previews. - `telethon.tl.custom.dialog.Dialog` instances can now be casted into :tl:`InputPeer`. - Better logging when reading packages \"breaks\". - Better and more powerful ``setup.py gen`` command. Internal changes ~~~~~~~~~~~~~~~~ - The library won't call ``.get_dialogs()`` on entity not found. Instead, it will ``raise ValueError()`` so you can properly ``except`` it. - Several new examples and updated documentation. - ``py:obj`` is the default Sphinx's role which simplifies ``.rst`` files. - ``setup.py`` now makes use of ``python_requires``. - Events now live in separate files. - Other minor changes. Several bug fixes (v0.18.2) =========================== *Published at 2018/03/27* Just a few bug fixes before they become too many. Additions Getting an entity by its positive ID should be enough, regardless of their type (whether it's an User , a Chat or a Channel ). Although wrapping them inside a Peer is still recommended, it's not necessary. New client.edit_2fa function to change your Two Factor Authentication settings. .stringify() and string representation for custom Dialog/Draft . Bug fixes - Some bug regarding ``.get_input_peer``. - ``events.ChatAction`` wasn't picking up all the pins. - ``force_document=True`` was being ignored for albums. - Now you're able to send ``Photo`` and ``Document`` as files. - Wrong access to a member on chat forbidden error for ``.get_participants``. An empty list is returned instead. - ``me/self`` check for ``.get[_input]_entity`` has been moved up so if someone has \"me\" or \"self\" as their name they won't be retrieved. Iterator methods (v0.18.1) ========================== *Published at 2018/03/17* All the ``.get_`` methods in the ``TelegramClient`` now have a ``.iter_`` counterpart, so you can do operations while retrieving items from them. For instance, you can ``client.iter_dialogs()`` and ``break`` once you find what you're looking for instead fetching them all at once. Another big thing, you can get entities by just their positive ID. This may cause some collisions (although it's very unlikely), and you can (should) still be explicit about the type you want. However, it's a lot more convenient and less confusing. Breaking changes ~~~~~~~~~~~~~~~~ - The library only offers the default ``SQLiteSession`` again. See :ref:`sessions` for more on how to use a different storage from now on. Additions Events now override __str__ and implement .stringify() , just like every other TLObject does. events.ChatAction now has :meth: respond , :meth: reply and :meth: delete for the message that triggered it. :meth: client.iter_participants (and its :meth: client.get_participants counterpart) now expose the filter argument, and the returned users also expose the .participant they are. You can now use :meth: client.remove_event_handler and :meth: client.list_event_handlers similar how you could with normal updates. New properties on events.NewMessage , like .video_note and .gif to access only specific types of documents. The Draft class now exposes .text and .raw_text , as well as a new :meth: Draft.send to send it. Bug fixes - ``MessageEdited`` was ignoring ``NewMessage`` constructor arguments. - Fixes for ``Event.delete_messages`` which wouldn't handle ``MessageService``. - Bot API style IDs not working on :meth:`client.get_input_entity`. - :meth:`client.download_media` didn't support ``PhotoSize``. Enhancements ~~~~~~~~~~~~ - Less RPC are made when accessing the ``.sender`` and ``.chat`` of some events (mostly those that occur in a channel). - You can send albums larger than 10 items (they will be sliced for you), as well as mixing normal files with photos. - ``TLObject`` now have Python type hints. Internal changes ~~~~~~~~~~~~~~~~ - Several documentation corrections. - :meth:`client.get_dialogs` is only called once again when an entity is not found to avoid flood waits. Sessions overhaul (v0.18) ========================= *Published at 2018/03/04* +-----------------------+ | Scheme layer used: 75 | +-----------------------+ The ``Session``'s have been revisited thanks to the work of **@tulir** and they now use an `ABC <https://docs.python.org/3/library/abc.html>`__ so you can easily implement your own! The default will still be a ``SQLiteSession``, but you might want to use the new ``AlchemySessionContainer`` if you need. Refer to the section of the documentation on :ref:`sessions` for more. Breaking changes ~~~~~~~~~~~~~~~~ - ``events.MessageChanged`` doesn't exist anymore. Use the new ``events.MessageEdited`` and ``events.MessageDeleted`` instead. Additions The mentioned addition of new session types. You can omit the event type on client.add_event_handler to use Raw . You can raise StopPropagation of events if you added several of them. .get_participants() can now get up to 90,000 members from groups with 100,000 if when aggressive=True , \"bypassing\" Telegram's limit. You now can access NewMessage.Event.pattern_match . Multiple captions are now supported when sending albums. client.send_message() has an optional file= parameter, so you can do events.reply(file='/path/to/photo.jpg') and similar. Added .input_ versions to events.ChatAction . You can now access the public .client property on events . New client.forward_messages , with its own wrapper on events , called event.forward_to(...) . Bug fixes - Silly bug regarding ``client.get_me(input_peer=True)``. - ``client.send_voice_note()`` was missing some parameters. - ``client.send_file()`` plays better with streams now. - Incoming messages from bots weren't working with whitelists. - Markdown's URL regex was not accepting newlines. - Better attempt at joining background update threads. - Use the right peer type when a marked integer ID is provided. Internal changes ~~~~~~~~~~~~~~~~ - Resolving ``events.Raw`` is now a no-op. - Logging calls in the ``TcpClient`` to spot errors. - ``events`` resolution is postponed until you are successfully connected, so you can attach them before starting the client. - When an entity is not found, it is searched in *all* dialogs. This might not always be desirable but it's more comfortable for legitimate uses. - Some non-persisting properties from the ``Session`` have been moved out. Further easing library usage (v0.17.4) ====================================== *Published at 2018/02/24* Some new things and patches that already deserved their own release. Additions New pattern argument to NewMessage to easily filter messages. New .get_participants() convenience method to get members from chats. .send_message() now accepts a Message as the message parameter. You can now .get_entity() through exact name match instead username. Raise ProxyConnectionError instead looping forever so you can except it on your own code and behave accordingly. Bug fixes - ``.parse_username`` would fail with ``www.`` or a trailing slash. - ``events.MessageChanged`` would fail with ``UpdateDeleteMessages``. - You can now send ``b'byte strings'`` directly as files again. - ``.send_file()`` was not respecting the original captions when passing another message (or media) as the file. - Downloading media from a different data center would always log a warning for the first time. Internal changes ~~~~~~~~~~~~~~~~ - Use ``req_pq_multi`` instead ``req_pq`` when generating ``auth_key``. - You can use ``.get_me(input_peer=True)`` if all you need is your self ID. - New addition to the interactive client example to show peer information. - Avoid special casing ``InputPeerSelf`` on some ``NewMessage`` events, so you can always safely rely on ``.sender`` to get the right ID. New small convenience functions (v0.17.3) ========================================= *Published at 2018/02/18* More bug fixes and a few others addition to make events easier to use. Additions Use hachoir to extract video and audio metadata before upload. New .add_event_handler , .add_update_handler now deprecated. Bug fixes - ``bot_token`` wouldn't work on ``.start()``, and changes to ``password`` (now it will ask you for it if you don't provide it, as docstring hinted). - ``.edit_message()`` was ignoring the formatting (e.g. markdown). - Added missing case to the ``NewMessage`` event for normal groups. - Accessing the ``.text`` of the ``NewMessage`` event was failing due to a bug with the markdown unparser. Internal changes ~~~~~~~~~~~~~~~~ - ``libssl`` is no longer an optional dependency. Use ``cryptg`` instead, which you can find on https://pypi.org/project/cryptg/. New small convenience functions (v0.17.2) ========================================= *Published at 2018/02/15* Primarily bug fixing and a few welcomed additions. Additions New convenience .edit_message() method on the TelegramClient . New .edit() and .delete() shorthands on the NewMessage event. Default to markdown parsing when sending and editing messages. Support for inline mentions when sending and editing messages. They work like inline urls (e.g. [text](@username) ) and also support the Bot-API style (see here <https://core.telegram.org/bots/api#formatting-options> __). Bug fixes - Periodically send ``GetStateRequest`` automatically to keep the server sending updates even if you're not invoking any request yourself. - HTML parsing was failing due to not handling surrogates properly. - ``.sign_up`` was not accepting ``int`` codes. - Whitelisting more than one chat on ``events`` wasn't working. - Video files are sent as a video by default unless ``force_document``. Internal changes ~~~~~~~~~~~~~~~~ - More ``logging`` calls to help spot some bugs in the future. - Some more logic to retrieve input entities on events. - Clarified a few parts of the documentation. Updates as Events (v0.17.1) =========================== *Published at 2018/02/09* Of course there was more work to be done regarding updates, and it's here! The library comes with a new ``events`` module (which you will often import as ``from telethon import TelegramClient, events``). This are pretty much all the additions that come with this version change, but they are a nice addition. Refer to *(removed broken link)* to get started with events. Trust the Server with Updates (v0.17) ===================================== *Published at 2018/02/03* The library trusts the server with updates again. The library will *not* check for duplicates anymore, and when the server kicks us, it will run ``GetStateRequest`` so the server starts sending updates again (something it wouldn't do unless you invoked something, it seems). But this update also brings a few more changes! Additions TLObject 's override __eq__ and __ne__ , so you can compare them. Added some missing cases on .get_input_entity() and peer functions. obj.to_dict() now has a '_' key with the type used. .start() can also sign up now. More parameters for .get_message_history() . Updated list of RPC errors. HTML parsing thanks to @tulir ! It can be used similar to markdown: client.send_message(..., parse_mode='html') . Enhancements - ``client.send_file()`` now accepts ``Message``'s and ``MessageMedia``'s as the ``file`` parameter. - Some documentation updates and fixed to clarify certain things. - New exact match feature on https://tl.telethon.dev. - Return as early as possible from ``.get_input_entity()`` and similar, to avoid penalizing you for doing this right. Bug fixes ~~~~~~~~~ - ``.download_media()`` wouldn't accept a ``Document`` as parameter. - The SQLite is now closed properly on disconnection. - IPv6 addresses shouldn't use square braces. - Fix regarding ``.log_out()``. - The time offset wasn't being used (so having wrong system time would cause the library not to work at all). New ``.resolve()`` method (v0.16.2) =================================== *Published at 2018/01/19* The ``TLObject``'s (instances returned by the API and ``Request``'s) have now acquired a new ``.resolve()`` method. While this should be used by the library alone (when invoking a request), it means that you can now use ``Peer`` types or even usernames where a ``InputPeer`` is required. The object now has access to the ``client``, so that it can fetch the right type if needed, or access the session database. Furthermore, you can reuse requests that need \"autocast\" (e.g. you put :tl:`User` but ``InputPeer`` was needed), since ``.resolve()`` is called when invoking. Before, it was only done on object construction. Additions ~~~~~~~~~ - Album support. Just pass a list, tuple or any iterable to ``.send_file()``. Enhancements .start() asks for your phone only if required. Better file cache. All files under 10MB, once uploaded, should never be needed to be re-uploaded again, as the sent media is cached to the session. Bug fixes - ``setup.py`` now calls ``gen_tl`` when installing the library if needed. Internal changes ~~~~~~~~~~~~~~~~ - The mentioned ``.resolve()`` to perform \"autocast\", more powerful. - Upload and download methods are no longer part of ``TelegramBareClient``. - Reuse ``.on_response()``, ``.__str__`` and ``.stringify()``. Only override ``.on_response()`` if necessary (small amount of cases). - Reduced \"autocast\" overhead as much as possible. You shouldn't be penalized if you've provided the right type. MtProto 2.0 (v0.16.1) ===================== *Published at 2018/01/11* +-----------------------+ | Scheme layer used: 74 | +-----------------------+ The library is now using MtProto 2.0! This shouldn't really affect you as an end user, but at least it means the library will be ready by the time MtProto 1.0 is deprecated. Additions New .start() method, to make the library avoid boilerplate code. .send_file accepts a new optional thumbnail parameter, and returns the Message with the sent file. Bug fixes - The library uses again only a single connection. Less updates are be dropped now, and the performance is even better than using temporary connections. - ``without rowid`` will only be used on the ``*.session`` if supported. - Phone code hash is associated with phone, so you can change your mind when calling ``.sign_in()``. Internal changes ~~~~~~~~~~~~~~~~ - File cache now relies on the hash of the file uploaded instead its path, and is now persistent in the ``*.session`` file. Report any bugs on this! - Clearer error when invoking without being connected. - Markdown parser doesn't work on bytes anymore (which makes it cleaner). Sessions as sqlite databases (v0.16) ==================================== *Published at 2017/12/28* In the beginning, session files used to be pickle. This proved to be bad as soon as one wanted to add more fields. For this reason, they were migrated to use JSON instead. But this proved to be bad as soon as one wanted to save things like entities (usernames, their ID and hash), so now it properly uses `sqlite3 <https://docs.python.org/3/library/sqlite3.html>`__, which has been well tested, to save the session files! Calling ``.get_input_entity`` using a ``username`` no longer will need to fetch it first, so it's really 0 calls again. Calling ``.get_entity`` will always fetch the most up to date version. Furthermore, nearly everything has been documented, thus preparing the library for `Read the Docs <https://readthedocs.org/>`__ (although there are a few things missing I'd like to polish first), and the `logging <https://docs.python.org/3/library/logging.html>`__ are now better placed. Breaking changes ~~~~~~~~~~~~~~~~ - ``.get_dialogs()`` now returns a **single list** instead a tuple consisting of a **custom class** that should make everything easier to work with. - ``.get_message_history()`` also returns a **single list** instead a tuple, with the ``Message`` instances modified to make them more convenient. Both lists have a ``.total`` attribute so you can still know how many dialogs/messages are in total. Additions The mentioned use of sqlite3 for the session file. .get_entity() now supports lists too, and it will make as little API calls as possible if you feed it InputPeer types. Usernames will always be resolved, since they may have changed. .set_proxy() method, to avoid having to create a new TelegramClient . More date types supported to represent a date parameter. Bug fixes - Empty strings weren't working when they were a flag parameter (e.g., setting no last name). - Fix invalid assertion regarding flag parameters as well. - Avoid joining the background thread on disconnect, as it would be `None` due to a race condition. - Correctly handle `None` dates when downloading media. - ``.download_profile_photo`` was failing for some channels. - ``.download_media`` wasn't handling ``Photo``. Internal changes ~~~~~~~~~~~~~~~~ - ``date`` was being serialized as local date, but that was wrong. - ``date`` was being represented as a ``float`` instead of an ``int``. - ``.tl`` parser wasn't stripping inline comments. - Removed some redundant checks on ``update_state.py``. - Use a `synchronized queue <https://docs.python.org/3/library/queue.html>`__ instead a hand crafted version. - Use signed integers consistently (e.g. ``salt``). - Always read the corresponding ``TLObject`` from API responses, except for some special cases still. - A few more ``except`` low level to correctly wrap errors. - More accurate exception types. - ``invokeWithLayer(initConnection(X))`` now wraps every first request after ``.connect()``. As always, report if you have issues with some of the changes! IPv6 support (v0.15.5) ====================== *Published at 2017/11/16* +-----------------------+ | Scheme layer used: 73 | +-----------------------+ It's here, it has come! The library now **supports IPv6**! Just pass ``use_ipv6=True`` when creating a ``TelegramClient``. Note that I could *not* test this feature because my machine doesn't have IPv6 setup. If you know IPv6 works in your machine but the library doesn't, please refer to `#425 <https://github.com/LonamiWebs/Telethon/issues/425>`_. Additions IPv6 support. New method to extract the text surrounded by MessageEntity \\ 's, in the extensions.markdown module. Enhancements - Markdown parsing is Done Right. - Reconnection on failed invoke. Should avoid \"number of retries reached 0\" (#270). - Some missing autocast to ``Input*`` types. - The library uses the ``NullHandler`` for ``logging`` as it should have always done. - ``TcpClient.is_connected()`` is now more reliable. .. bug-fixes-1: Bug fixes ~~~~~~~~~ - Getting an entity using their phone wasn't actually working. - Full entities aren't saved unless they have an ``access_hash``, to avoid some `None` errors. - ``.get_message_history`` was failing when retrieving items that had messages forwarded from a channel. General enhancements (v0.15.4) ============================== *Published at 2017/11/04* +-----------------------+ | Scheme layer used: 72 | +-----------------------+ This update brings a few general enhancements that are enough to deserve a new release, with a new feature: beta **markdown-like parsing** for ``.send_message()``! .. additions-1: Additions ~~~~~~~~~ - ``.send_message()`` supports ``parse_mode='md'`` for **Markdown**! It works in a similar fashion to the official clients (defaults to double underscore/asterisk, like ``**this**``). Please report any issues with emojies or enhancements for the parser! - New ``.idle()`` method so your main thread can do useful job (listen for updates). - Add missing ``.to_dict()``, ``__str__`` and ``.stringify()`` for ``TLMessage`` and ``MessageContainer``. .. bug-fixes-2: Bug fixes ~~~~~~~~~ - The list of known peers could end \"corrupted\" and have users with ``access_hash=None``, resulting in ``struct`` error for it not being an integer. You shouldn't encounter this issue anymore. - The warning for \"added update handler but no workers set\" wasn't actually working. - ``.get_input_peer`` was ignoring a case for ``InputPeerSelf``. - There used to be an exception when logging exceptions (whoops) on update handlers. - \"Downloading contacts\" would produce strange output if they had semicolons (``;``) in their name. - Fix some cyclic imports and installing dependencies from the ``git`` repository. - Code generation was using f-strings, which are only supported on Python \u22653.6. Internal changes ~~~~~~~~~~~~~~~~ - The ``auth_key`` generation has been moved from ``.connect()`` to ``.invoke()``. There were some issues were ``.connect()`` failed and the ``auth_key`` was `None` so this will ensure to have a valid ``auth_key`` when needed, even if ``BrokenAuthKeyError`` is raised. - Support for higher limits on ``.get_history()`` and ``.get_dialogs()``. - Much faster integer factorization when generating the required ``auth_key``. Thanks @delivrance for making me notice this, and for the pull request. Bug fixes with updates (v0.15.3) ================================ *Published at 2017/10/20* Hopefully a very ungrateful bug has been removed. When you used to invoke some request through update handlers, it could potentially enter an infinite loop. This has been mitigated and it's now safe to invoke things again! A lot of updates were being dropped (all those gzipped), and this has been fixed too. More bug fixes include a `correct parsing <https://github.com/LonamiWebs/Telethon/commit/ee01724cdb7027c1e38625d31446ba1ea7bade92>`__ of certain TLObjects thanks to @stek29, and `some <https://github.com/LonamiWebs/Telethon/commit/ed77ba6f8ff115ac624f02f691c9991e5b37be60>`__ `wrong calls <https://github.com/LonamiWebs/Telethon/commit/16cf94c9add5e94d70c4eee2ac142d8e76af48b9>`__ that would cause the library to crash thanks to @andr-04, and the ``ReadThread`` not re-starting if you were already authorized. Internally, the ``.to_bytes()`` function has been replaced with ``__bytes__`` so now you can do ``bytes(tlobject)``. Bug fixes and new small features (v0.15.2) ========================================== *Published at 2017/10/14* This release primarly focuses on a few bug fixes and enhancements. Although more stuff may have broken along the way. Enhancements You will be warned if you call .add_update_handler with no update_workers . New customizable threshold value on the session to determine when to automatically sleep on flood waits. See client.session.flood_sleep_threshold . New .get_drafts() method with a custom Draft class by @JosXa . Join all threads when calling .disconnect() , to assert no dangling thread is left alive. Larger chunk when downloading files should result in faster downloads. You can use a callable key for the EntityDatabase , so it can be any filter you need. .. bug-fixes-3: Bug fixes - ``.get_input_entity`` was failing for IDs and other cases, also making more requests than it should. - Use ``basename`` instead ``abspath`` when sending a file. You can now also override the attributes. - ``EntityDatabase.__delitem__`` wasn't working. - ``.send_message()`` was failing with channels. - ``.get_dialogs(limit=None)`` should now return all the dialogs correctly. - Temporary fix for abusive duplicated updates. .. enhancements-1: .. internal-changes-1: Internal changes ~~~~~~~~~~~~~~~~ - MsgsAck is now sent in a container rather than its own request. - ``.get_input_photo`` is now used in the generated code. - ``.process_entities`` was being called from more places than only ``__call__``. - ``MtProtoSender`` now relies more on the generated code to read responses. Custom Entity Database (v0.15.1) ================================ *Published at 2017/10/05* The main feature of this release is that Telethon now has a custom database for all the entities you encounter, instead depending on ``@lru_cache`` on the ``.get_entity()`` method. The ``EntityDatabase`` will, by default, **cache** all the users, chats and channels you find in memory for as long as the program is running. The session will, by default, save all key-value pairs of the entity identifiers and their hashes (since Telegram may send an ID that it thinks you already know about, we need to save this information). You can **prevent** the ``EntityDatabase`` from saving users by setting ``client.session.entities.enabled = False``, and prevent the ``Session`` from saving input entities at all by setting ``client.session.save_entities = False``. You can also clear the cache for a certain user through ``client.session.entities.clear_cache(entity=None)``, which will clear all if no entity is given. Additions New method to .delete_messages() . New ChannelPrivateError class. Enhancements - ``.sign_in`` accepts phones as integers. - Changing the IP to which you connect to is as simple as ``client.session.server_address = 'ip'``, since now the server address is always queried from the session. Bug fixes ~~~~~~~~~ - ``.get_dialogs()`` doesn't fail on Windows anymore, and returns the right amount of dialogs. - ``GeneralProxyError`` should be passed to the main thread again, so that you can handle it. Updates Overhaul Update (v0.15) =============================== *Published at 2017/10/01* After hundreds of lines changed on a major refactor, *it's finally here*. It's the **Updates Overhaul Update**; let's get right into it! Breaking changes ~~~~~~~~~~~~~~~~ - ``.create_new_connection()`` is gone for good. No need to deal with this manually since new connections are now handled on demand by the library itself. Enhancements You can invoke requests from update handlers . And any other thread . A new temporary will be made, so that you can be sending even several requests at the same time! Several worker threads for your updates! By default, None will spawn. I recommend you to work with update_workers=4 to get started, these will be polling constantly for updates. You can also change the number of workers at any given time. The library can now run in a single thread again, if you don't need to spawn any at all. Simply set spawn_read_thread=False when creating the TelegramClient ! You can specify limit=None on .get_dialogs() to get all of them[1]. Updates are expanded , so you don't need to check if the update has .updates or an inner .update anymore. All InputPeer entities are saved in the session file, but you can disable this by setting save_entities=False . New .get_input_entity method, which makes use of the above feature. You should use this when a request needs a InputPeer , rather than the whole entity (although both work). Assert that either all or None dependent-flag parameters are set before sending the request. Phone numbers can have dashes, spaces, or parenthesis. They'll be removed before making the request. You can override the phone and its hash on .sign_in() , if you're creating a new TelegramClient on two different places. Bug fixes - ``.log_out()`` was consuming all retries. It should work just fine now. - The session would fail to load if the ``auth_key`` had been removed manually. - ``Updates.check_error`` was popping wrong side, although it's been completely removed. - ``ServerError``\\ 's will be **ignored**, and the request will immediately be retried. - Cross-thread safety when saving the session file. - Some things changed on a matter of when to reconnect, so please report any bugs! .. internal-changes-2: Internal changes ~~~~~~~~~~~~~~~~ - ``TelegramClient`` is now only an abstraction over the ``TelegramBareClient``, which can only do basic things, such as invoking requests, working with files, etc. If you don't need any of the abstractions the ``TelegramClient``, you can now use the ``TelegramBareClient`` in a much more comfortable way. - ``MtProtoSender`` is not thread-safe, but it doesn't need to be since a new connection will be spawned when needed. - New connections used to be cached and then reused. Now only their sessions are saved, as temporary connections are spawned only when needed. - Added more RPC errors to the list. **[1]:** Broken due to a condition which should had been the opposite (sigh), fixed 4 commits ahead on https://github.com/LonamiWebs/Telethon/commit/62ea77cbeac7c42bfac85aa8766a1b5b35e3a76c. -------------- **That's pretty much it**, although there's more work to be done to make the overall experience of working with updates *even better*. Stay tuned! Serialization bug fixes (v0.14.2) ================================= *Published at 2017/09/29* Bug fixes Important , related to the serialization. Every object or request that had to serialize a True/False type was always being serialized as false ! Another bug that didn't allow you to leave as None flag parameters that needed a list has been fixed. Internal changes - Other internal changes include a somewhat more readable ``.to_bytes()`` function and pre-computing the flag instead using bit shifting. The ``TLObject.constructor_id`` has been renamed to ``TLObject.CONSTRUCTOR_ID``, and ``.subclass_of_id`` is also uppercase now. Farewell, BinaryWriter (v0.14.1) ================================ *Published at 2017/09/28* Version ``v0.14`` had started working on the new ``.to_bytes()`` method to dump the ``BinaryWriter`` and its usage on the ``.on_send()`` when serializing TLObjects, and this release finally removes it. The speed up when serializing things to bytes should now be over twice as fast wherever it's needed. Bug fixes ~~~~~~~~~ - This version is again compatible with Python 3.x versions **below 3.5** (there was a method call that was Python 3.5 and above). Internal changes Using proper classes (including the generated code) for generating authorization keys and to write out TLMessage \\ 's. Several requests at once and upload compression (v0.14) \u00b6 Published at 2017/09/27 New major release, since I've decided that these two features are big enough: Additions - Requests larger than 512 bytes will be **compressed through gzip**, and if the result is smaller, this will be uploaded instead. - You can now send **multiple requests at once**, they're simply ``*var_args`` on the ``.invoke()``. Note that the server doesn't guarantee the order in which they'll be executed! Internally, another important change. The ``.on_send`` function on the ``TLObjects`` is **gone**, and now there's a new ``.to_bytes()``. From my tests, this has always been over twice as fast serializing objects, although more replacements need to be done, so please report any issues. Enhancements ~~~~~~~~~~~~ - Implemented ``.get_input_media`` helper methods. Now you can even use another message as input media! Bug fixes Downloading media from CDNs wasn't working (wrong access to a parameter). Correct type hinting. Added a tiny sleep when trying to perform automatic reconnection. Error reporting is done in the background, and has a shorter timeout. setup.py used to fail with wrongly generated code. Quick fix-up (v0.13.6) \u00b6 Published at 2017/09/23 Before getting any further, here's a quick fix-up with things that should have been on v0.13.5 but were missed. Specifically, the timeout when receiving a request will now work properly. Some other additions are a tiny fix when handling updates , which was ignoring some of them, nicer __str__ and .stringify() methods for the TLObject \\ 's, and not stopping the ReadThread if you try invoking something there (now it simply returns None ). Attempts at more stability (v0.13.5) \u00b6 Published at 2017/09/23 Yet another update to fix some bugs and increase the stability of the library, or, at least, that was the attempt! This release should really improve the experience with the background thread that the library starts to read things from the network as soon as it can, but I can't spot every use case, so please report any bug (and as always, minimal reproducible use cases will help a lot). .. bug-fixes-4: Bug fixes - ``setup.py`` was failing on Python < 3.5 due to some imports. - Duplicated updates should now be ignored. - ``.send_message`` would crash in some cases, due to having a typo using the wrong object. - ``\"socket is None\"`` when calling ``.connect()`` should not happen anymore. - ``BrokenPipeError`` was still being raised due to an incorrect order on the ``try/except`` block. .. enhancements-2: Enhancements ~~~~~~~~~~~~ - **Type hinting** for all the generated ``Request``\\ 's and ``TLObjects``! IDEs like PyCharm will benefit from this. - ``ProxyConnectionError`` should properly be passed to the main thread for you to handle. - The background thread will only be started after you're authorized on Telegram (i.e. logged in), and several other attempts at polishing the experience with this thread. - The ``Connection`` instance is only created once now, and reused later. - Calling ``.connect()`` should have a better behavior now (like actually *trying* to connect even if we seemingly were connected already). - ``.reconnect()`` behavior has been changed to also be more consistent by making the assumption that we'll only reconnect if the server has disconnected us, and is now private. .. other-changes-1: Internal changes ~~~~~~~~~~~~~~~~ - ``TLObject.__repr__`` doesn't show the original TL definition anymore, it was a lot of clutter. If you have any complaints open an issue and we can discuss it. - Internally, the ``'+'`` from the phone number is now stripped, since it shouldn't be included. - Spotted a new place where ``BrokenAuthKeyError`` would be raised, and it now is raised there. More bug fixes and enhancements (v0.13.4) ========================================= *Published at 2017/09/18* .. new-stuff-1: Additions TelegramClient now exposes a .is_connected() method. Initial authorization on a new data center will retry up to 5 times by default. Errors that couldn't be handled on the background thread will be raised on the next call to .invoke() or updates.poll() . .. bugs-fixed-1: Bug fixes - Now you should be able to sign in even if you have ``process_updates=True`` and no previous session. - Some errors and methods are documented a bit clearer. - ``.send_message()`` could randomly fail, as the returned type was not expected. - ``TimeoutError`` is now ignored, since the request will be retried up to 5 times by default. - \"-404\" errors (``BrokenAuthKeyError``\\ 's) are now detected when first connecting to a new data center. - ``BufferError`` is handled more gracefully, in the same way as ``InvalidCheckSumError``\\ 's. - Attempt at fixing some \"NoneType has no attribute\u2026\" errors (with the ``.sender``). Internal changes ~~~~~~~~~~~~~~~~ - Calling ``GetConfigRequest`` is now made less often. - The ``initial_query`` parameter from ``.connect()`` is gone, as it's not needed anymore. - Renamed ``all_tlobjects.layer`` to ``all_tlobjects.LAYER`` (since it's a constant). - The message from ``BufferError`` is now more useful. Bug fixes and enhancements (v0.13.3) ==================================== *Published at 2017/09/14* .. bugs-fixed-2: Bug fixes ~~~~~~~~~ - **Reconnection** used to fail because it tried invoking things from the ``ReadThread``. - Inferring **random ids** for ``ForwardMessagesRequest`` wasn't working. - Downloading media from **CDNs** failed due to having forgotten to remove a single line. - ``TcpClient.close()`` now has a **``threading.Lock``**, so ``NoneType has no close()`` should not happen. - New **workaround** for ``msg seqno too low/high``. Also, both ``Session.id/seq`` are not saved anymore. .. enhancements-3: Enhancements ~~~~~~~~~~~~ - **Request will be retried** up to 5 times by default rather than failing on the first attempt. - ``InvalidChecksumError``\\ 's are now **ignored** by the library. - ``TelegramClient.get_entity()`` is now **public**, and uses the ``@lru_cache()`` decorator. - New method to **``.send_voice_note()``**\\ 's. - Methods to send message and media now support a **``reply_to`` parameter**. - ``.send_message()`` now returns the **full message** which was just sent. New way to work with updates (v0.13.2) ====================================== *Published at 2017/09/08* This update brings a new way to work with updates, and it's begging for your **feedback**, or better names or ways to do what you can do now. Please refer to the `wiki/Usage Modes <https://github.com/LonamiWebs/Telethon/wiki/Usage-Modes>`__ for an in-depth description on how to work with updates now. Notice that you cannot invoke requests from within handlers anymore, only the ``v.0.13.1`` patch allowed you to do so. Bug fixes ~~~~~~~~~ - Periodic pings are back. - The username regex mentioned on ``UsernameInvalidError`` was invalid, but it has now been fixed. - Sending a message to a phone number was failing because the type used for a request had changed on layer 71. - CDN downloads weren't working properly, and now a few patches have been applied to ensure more reliability, although I couldn't personally test this, so again, report any feedback. Invoke other requests from within update callbacks (v0.13.1) ============================================================ *Published at 2017/09/04* .. warning:: This update brings some big changes to the update system, so please read it if you work with them! A silly \"bug\" which hadn't been spotted has now been fixed. Now you can invoke other requests from within your update callbacks. However **this is not advised**. You should post these updates to some other thread, and let that thread do the job instead. Invoking a request from within a callback will mean that, while this request is being invoked, no other things will be read. Internally, the generated code now resides under a *lot* less files, simply for the sake of avoiding so many unnecessary files. The generated code is not meant to be read by anyone, simply to do its job. Unused attributes have been removed from the ``TLObject`` class too, and ``.sign_up()`` returns the user that just logged in in a similar way to ``.sign_in()`` now. Connection modes (v0.13) ======================== *Published at 2017/09/04* +-----------------------+ | Scheme layer used: 71 | +-----------------------+ The purpose of this release is to denote a big change, now you can connect to Telegram through different `**connection modes** <https://github.com/LonamiWebs/Telethon/blob/v0.13/telethon/network/connection.py>`__. Also, a **second thread** will *always* be started when you connect a ``TelegramClient``, despite whether you'll be handling updates or ignoring them, whose sole purpose is to constantly read from the network. The reason for this change is as simple as *\"reading and writing shouldn't be related\"*. Even when you're simply ignoring updates, this way, once you send a request you will only need to read the result for the request. Whatever Telegram sent before has already been read and outside the buffer. .. additions-2: Additions ~~~~~~~~~ - The mentioned different connection modes, and a new thread. - You can modify the ``Session`` attributes through the ``TelegramClient`` constructor (using ``**kwargs``). - ``RPCError``\\ 's now belong to some request you've made, which makes more sense. - ``get_input_*`` now handles `None` (default) parameters more gracefully (it used to crash). .. enhancements-4: Enhancements ~~~~~~~~~~~~ - The low-level socket doesn't use a handcrafted timeout anymore, which should benefit by avoiding the arbitrary ``sleep(0.1)`` that there used to be. - ``TelegramClient.sign_in`` will call ``.send_code_request`` if no ``code`` was provided. Deprecation ~~~~~~~~~~~ - ``.sign_up`` does *not* take a ``phone`` argument anymore. Change this or you will be using ``phone`` as ``code``, and it will fail! The definition looks like ``def sign_up(self, code, first_name, last_name='')``. - The old ``JsonSession`` finally replaces the original ``Session`` (which used pickle). If you were overriding any of these, you should only worry about overriding ``Session`` now. Added verification for CDN file (v0.12.2) ========================================= *Published at 2017/08/28* Since the Content Distributed Network (CDN) is not handled by Telegram itself, the owners may tamper these files. Telegram sends their sha256 sum for clients to implement this additional verification step, which now the library has. If any CDN has altered the file you're trying to download, ``CdnFileTamperedError`` will be raised to let you know. Besides this. ``TLObject.stringify()`` was showing bytes as lists (now fixed) and RPC errors are reported by default: In an attempt to help everyone who works with the Telegram API, Telethon will by default report all Remote Procedure Call errors to `PWRTelegram <https://pwrtelegram.xyz/>`__, a public database anyone can query, made by `Daniil <https://github.com/danog>`__. All the information sent is a GET request with the error code, error message and method used. .. note:: If you still would like to opt out, simply set ``client.session.report_errors = False`` to disable this feature. However Daniil would really thank you if you helped him (and everyone) by keeping it on! CDN support (v0.12.1) ===================== *Published at 2017/08/24* The biggest news for this update are that downloading media from CDN's (you'll often encounter this when working with popular channels) now **works**. Bug fixes ~~~~~~~~~ - The method used to download documents crashed because two lines were swapped. - Determining the right path when downloading any file was very weird, now it's been enhanced. - The ``.sign_in()`` method didn't support integer values for the code! Now it does again. Some important internal changes are that the old way to deal with RSA public keys now uses a different module instead the old strange hand-crafted version. Hope the new, super simple ``README.rst`` encourages people to use Telethon and make it better with either suggestions, or pull request. Pull requests are *super* appreciated, but showing some support by leaving a star also feels nice \u2b50\ufe0f. Newbie friendly update (v0.12) ============================== *Published at 2017/08/22* +-----------------------+ | Scheme layer used: 70 | +-----------------------+ This update is overall an attempt to make Telethon a bit more user friendly, along with some other stability enhancements, although it brings quite a few changes. Breaking changes ~~~~~~~~~~~~~~~~ - The ``TelegramClient`` methods ``.send_photo_file()``, ``.send_document_file()`` and ``.send_media_file()`` are now a **single method** called ``.send_file()``. It's also important to note that the **order** of the parameters has been **swapped**: first to *who* you want to send it, then the file itself. - The same applies to ``.download_msg_media()``, which has been renamed to ``.download_media()``. The method now supports a ``Message`` itself too, rather than only ``Message.media``. The specialized ``.download_photo()``, ``.download_document()`` and ``.download_contact()`` still exist, but are private. Additions ~~~~~~~~~ - Updated to **layer 70**! - Both downloading and uploading now support **stream-like objects**. - A lot **faster initial connection** if ``sympy`` is installed (can be installed through ``pip``). - ``libssl`` will also be used if available on your system (likely on Linux based systems). This speed boost should also apply to uploading and downloading files. - You can use a **phone number** or an **username** for methods like ``.send_message()``, ``.send_file()``, and all the other quick-access methods provided by the ``TelegramClient``. .. bug-fixes-5: Bug fixes ~~~~~~~~~ - Crashing when migrating to a new layer and receiving old updates should not happen now. - ``InputPeerChannel`` is now casted to ``InputChannel`` automtically too. - ``.get_new_msg_id()`` should now be thread-safe. No promises. - Logging out on macOS caused a crash, which should be gone now. - More checks to ensure that the connection is flagged correctly as either connected or not. .. note:: Downloading files from CDN's will **not work** yet (something new that comes with layer 70). -------------- That's it, any new idea or suggestion about how to make the project even more friendly is highly appreciated. .. note:: Did you know that you can pretty print any result Telegram returns (called ``TLObject``\\ 's) by using their ``.stringify()`` function? Great for debugging! get_input_* now works with vectors (v0.11.5) ============================================= *Published at 2017/07/11* Quick fix-up of a bug which hadn't been encountered until now. Auto-cast by using ``get_input_*`` now works. get_input_* everywhere (v0.11.4) ================================= *Published at 2017/07/10* For some reason, Telegram doesn't have enough with the `InputPeer <https://tl.telethon.dev/types/input_peer.html>`__. There also exist `InputChannel <https://tl.telethon.dev/types/input_channel.html>`__ and `InputUser <https://tl.telethon.dev/types/input_user.html>`__! You don't have to worry about those anymore, it's handled internally now. Besides this, every Telegram object now features a new default ``.__str__`` look, and also a `.stringify() method <https://github.com/LonamiWebs/Telethon/commit/8fd0d7eadd944ff42e18aaf06228adc7aba794b5>`__ to pretty format them, if you ever need to inspect them. The library now uses `the DEBUG level <https://github.com/LonamiWebs/Telethon/commit/1f7ac7118750ed84e2165dce9c6aca2e6ea0c6a4>`__ everywhere, so no more warnings or information messages if you had logging enabled. The ``no_webpage`` parameter from ``.send_message`` `has been renamed <https://github.com/LonamiWebs/Telethon/commit/0119a006585acd1a1a9a8901a21bb2f193142cfe>`__ to ``link_preview`` for clarity, so now it does the opposite (but has a clearer intention). Quick .send_message() fix (v0.11.3) =================================== *Published at 2017/07/05* A very quick follow-up release to fix a tiny bug with ``.send_message()``, no new features. Callable TelegramClient (v0.11.2) ================================= *Published at 2017/07/04* +-----------------------+ | Scheme layer used: 68 | +-----------------------+ There is a new preferred way to **invoke requests**, which you're encouraged to use: .. code:: python # New! result = client(SomeRequest()) # Old. result = client.invoke(SomeRequest()) Existing code will continue working, since the old ``.invoke()`` has not been deprecated. When you ``.create_new_connection()``, it will also handle ``FileMigrateError``\\ 's for you, so you don't need to worry about those anymore. .. bugs-fixed-3: Bugs fixes Fixed some errors when installing Telethon via pip (for those using either source distributions or a Python version \u2264 3.5). ConnectionResetError didn't flag sockets as closed, but now it does. On a more technical side, msg_id \\ 's are now more accurate. Improvements to the updates (v0.11.1) \u00b6 Published at 2017/06/24 Receiving new updates shouldn't miss any anymore, also, periodic pings are back again so it should work on the long run. On a different order of things, .connect() also features a timeout. Notice that the timeout= is not passed as a parameter anymore, and is instead specified when creating the TelegramClient . Bug fixes - Fixed some name class when a request had a ``.msg_id`` parameter. - The correct amount of random bytes is now used in DH request - Fixed ``CONNECTION_APP_VERSION_EMPTY`` when using temporary sessions. - Avoid connecting if already connected. Support for parallel connections (v0.11) ======================================== *Published at 2017/06/16* *This update brings a lot of changes, so it would be nice if you could* **read the whole change log**! Breaking changes ~~~~~~~~~~~~~~~~ - Every Telegram error has now its **own class**, so it's easier to fine-tune your ``except``\\ 's. - Markdown parsing is **not part** of Telethon itself anymore, although there are plans to support it again through a some external module. - The ``.list_sessions()`` has been moved to the ``Session`` class instead. - The ``InteractiveTelegramClient`` is **not** shipped with ``pip`` anymore. Additions A new, more lightweight class has been added. The TelegramBareClient is now the base of the normal TelegramClient , and has the most basic features. New method to .create_new_connection() , which can be ran in parallel with the original connection. This will return the previously mentioned TelegramBareClient already connected. Any file object can now be used to download a file (for instance, a BytesIO() instead a file name). Vales like random_id are now automatically inferred , so you can save yourself from the hassle of writing generate_random_long() everywhere. Same applies to .get_input_peer() , unless you really need the extra performance provided by skipping one if if called manually. Every type now features a new .to_dict() method. .. bug-fixes-6: Bug fixes - Received errors are acknowledged to the server, so they don't happen over and over. - Downloading media on different data centers is now up to **x2 faster**, since there used to be an ``InvalidDCError`` for each file part tried to be downloaded. - Lost messages are now properly skipped. - New way to handle the **result of requests**. The old ``ValueError`` \"*The previously sent request must be resent. However, no request was previously sent (possibly called from a different thread).*\" *should* not happen anymore. Internal changes ~~~~~~~~~~~~~~~~ - Some fixes to the ``JsonSession``. - Fixed possibly crashes if trying to ``.invoke()`` a ``Request`` while ``.reconnect()`` was being called on the ``UpdatesThread``. - Some improvements on the ``TcpClient``, such as not switching between blocking and non-blocking sockets. - The code now uses ASCII characters only. - Some enhancements to ``.find_user_or_chat()`` and ``.get_input_peer()``. JSON session file (v0.10.1) =========================== *Published at 2017/06/07* This version is primarily for people to **migrate** their ``.session`` files, which are *pickled*, to the new *JSON* format. Although slightly slower, and a bit more vulnerable since it's plain text, it's a lot more resistant to upgrades. .. warning:: You **must** upgrade to this version before any higher one if you've used Telethon \u2264 v0.10. If you happen to upgrade to an higher version, that's okay, but you will have to manually delete the ``*.session`` file, and logout from that session from an official client. Additions New .get_me() function to get the current user. .is_user_authorized() is now more reliable. New nice button to copy the from telethon.tl.xxx.yyy import Yyy on the online documentation. More error codes added to the errors file. Enhancements - Everything on the documentation is now, theoretically, **sorted alphabetically**. - No second thread is spawned unless one or more update handlers are added. Full support for different DCs and ++stable (v0.10) =================================================== *Published at 2017/06/03* Working with **different data centers** finally *works*! On a different order of things, **reconnection** is now performed automatically every time Telegram decides to kick us off their servers, so now Telethon can really run **forever and ever**! In theory. Enhancements Documentation improvements, such as showing the return type. The msg_id too low/high error should happen less often , if any. Sleeping on the main thread is not done anymore . You will have to except FloodWaitError \\ 's. You can now specify your own application version , device model, system version and language code. Code is now more pythonic (such as making some members private), and other internal improvements (which affect the updates thread ), such as using logger instead a bare print() too. This brings Telethon a whole step closer to v1.0 , though more things should preferably be changed. Stability improvements (v0.9.1) \u00b6 Published at 2017/05/23 Telethon used to crash a lot when logging in for the very first time. The reason for this was that the reconnection (or dead connections) were not handled properly. Now they are, so you should be able to login directly, without needing to delete the *.session file anymore. Notice that downloading from a different DC is still a WIP. Enhancements ~~~~~~~~~~~~ Updates thread is only started after a successful login. Files meant to be ran by the user now use shebangs and proper permissions. In-code documentation now shows the returning type. Relative import is now used everywhere, so you can rename telethon to anything else. Dead connections are now detected instead entering an infinite loop. Sockets can now be closed (and re-opened) properly. Telegram decided to update the layer 66 without increasing the number. This has been fixed and now we're up-to-date again. General improvements (v0.9) \u00b6 Published at 2017/05/19 +-----------------------+ | Scheme layer used: 66 | +-----------------------+ Additions ~~~~~~~~~ The documentation , available online here <https://tl.telethon.dev/> __, has a new search bar. Better cross-thread safety by using threading.Event . More improvements for running Telethon during a long period of time . Bug fixes ~~~~~~~~~ Avoid a certain crash on login (occurred if an unexpected object ID was received). Avoid crashing with certain invalid UTF-8 strings. Avoid crashing on certain terminals by using known ASCII characters where possible. The UpdatesThread is now a daemon, and should cause less issues. Temporary sessions didn't actually work (with session=None ). Internal changes ~~~~~~~~~~~~~~~~ .get_dialogs(count= was renamed to .get_dialogs(limit= . Bot login and proxy support (v0.8) \u00b6 Published at 2017/04/14 Additions ~~~~~~~~~ Bot login , thanks to @JuanPotato for hinting me about how to do it. Proxy support , thanks to @exzhawk for implementing it. Logging support , used by passing --telethon-log=DEBUG (or INFO ) as a command line argument. Bug fixes ~~~~~~~~~ Connection fixes, such as avoiding connection until .connect() is explicitly invoked. Uploading big files now works correctly. Fix uploading big files. Some fixes on the updates thread, such as correctly sleeping when required. Long-run bug fix (v0.7.1) \u00b6 Published at 2017/02/19 If you're one of those who runs Telethon for a long time (more than 30 minutes), this update by @strayge will be great for you. It sends periodic pings to the Telegram servers so you don't get disconnected and you can still send and receive updates! Two factor authentication (v0.7) \u00b6 Published at 2017/01/31 +-----------------------+ | Scheme layer used: 62 | +-----------------------+ If you're one of those who love security the most, these are good news. You can now use two factor authentication with Telethon too! As internal changes, the coding style has been improved, and you can easily use custom session objects, and various little bugs have been fixed. Updated pip version (v0.6) \u00b6 Published at 2016/11/13 +-----------------------+ | Scheme layer used: 57 | +-----------------------+ This release has no new major features. However, it contains some small changes that make using Telethon a little bit easier. Now those who have installed Telethon via pip can also take advantage of changes, such as less bugs, creating empty instances of TLObjects , specifying a timeout and more! Ready, pip, go! (v0.5) \u00b6 Published at 2016/09/18 Telethon is now available as a Python package <https://pypi.python.org/pypi?name=Telethon> __ ! Those are really exciting news (except, sadly, the project structure had to change a lot to be able to do that; but hopefully it won't need to change much more, any more!) Not only that, but more improvements have also been made: you're now able to both sign up and logout , watch a pretty \"Uploading/Downloading\u2026 x%\" progress, and other minor changes which make using Telethon easier . Made InteractiveTelegramClient cool (v0.4) \u00b6 Published at 2016/09/12 Yes, really cool! I promise. Even though this is meant to be a library , that doesn't mean it can't have a good interactive client for you to try the library out. This is why now you can do many, many things with the InteractiveTelegramClient : List dialogs (chats) and pick any you wish. Send any message you like, text, photos or even documents. List the latest messages in the chat. Download any message's media (photos, documents or even contacts!). Receive message updates as you talk (i.e., someone sent you a message). It actually is an usable-enough client for your day by day. You could even add libnotify and pop, you're done! A great cli-client with desktop notifications. Also, being able to download and upload media implies that you can do the same with the library itself. Did I need to mention that? Oh, and now, with even less bugs! I hope. Media revolution and improvements to update handling! (v0.3) \u00b6 Published at 2016/09/11 Telegram is more than an application to send and receive messages. You can also send and receive media . Now, this implementation also gives you the power to upload and download media from any message that contains it! Nothing can now stop you from filling up all your disk space with all the photos! If you want to, of course. Handle updates in their own thread! (v0.2) \u00b6 Published at 2016/09/10 This version handles updates in a different thread (if you wish to do so). This means that both the low level TcpClient and the not-so-low-level MtProtoSender are now multi-thread safe, so you can use them with more than a single thread without worrying! This also implies that you won't need to send a request to receive an update (is someone typing? did they send me a message? has someone gone offline?). They will all be received instantly . Some other cool examples of things that you can do: when someone tells you \" Hello \", you can automatically reply with another \" Hello \" without even needing to type it by yourself :) However, be careful with spamming!! Do not use the program for that! First working alpha version! (v0.1) \u00b6 Published at 2016/09/06 +-----------------------+ | Scheme layer used: 55 | +-----------------------+ There probably are some bugs left, which haven't yet been found. However, the majority of code works and the application is already usable! Not only that, but also uses the latest scheme as of now and handles way better the errors. This tag is being used to mark this release as stable enough.","title":"Changelog (Version History)"},{"location":"misc/changelog/#changelog-version-history","text":"This page lists all the available versions of the library, in chronological order. You should read this when upgrading the library to know where your code can break, and where it can take advantage of new goodies!","title":"Changelog (Version History)"},{"location":"misc/changelog/#minor-quality-of-life-improvements-v114","text":"Published at 2020/05/26 Scheme layer used: 113 Some nice things that were missing, along with the usual bug-fixes.","title":"Minor quality of life improvements (v1.14)"},{"location":"misc/changelog/#additions","text":"New Message.dice <telethon.tl.custom.message.Message.dice> property. The func= parameter of events can now be an async function.","title":"Additions"},{"location":"misc/changelog/#bug-fixes","text":"Fixed client.action() <telethon.client.chats.ChatMethods.action> having an alias wrong. Fixed incorrect formatting of some errors. Probably more reliable detection of pin events in small groups. Fixed send methods on client.conversation() <telethon.client.dialogs.DialogMethods.conversation> were not honoring cancellation. Flood waits of zero seconds are handled better. Getting the pinned message in a chat was failing. Fixed the return value when forwarding messages if some were missing and also the return value of albums.","title":"Bug fixes"},{"location":"misc/changelog/#enhancements","text":".tgs files are now recognised as animated stickers. The service message produced by Message.pin() <telethon.tl.custom.message.Message.pin> is now returned. Sending a file with client.send_file() <telethon.client.uploads.UploadMethods.send_file> now works fine when you pass an existing dice media (e.g. sending a message copy). client.edit_permissions() <telethon.client.chats.ChatMethods.edit_permissions> now has the embed_links parameter which was missing.","title":"Enhancements"},{"location":"misc/changelog/#bug-fixes-v113","text":"Published at 2020/04/25 Scheme layer used: 112 Bug fixes and layer bump.","title":"Bug Fixes (v1.13)"},{"location":"misc/changelog/#bug-fixes_1","text":"Passing None as the entity to client.delete_messages() <telethon.client.messages.MessageMethods.delete_messages> would fail. When downloading a thumbnail, the name inferred was wrong.","title":"Bug fixes"},{"location":"misc/changelog/#bug-fixes-v112","text":"Published at 2020/04/20 Scheme layer used: 111 Once again nothing major, but a few bug fixes and primarily the new layer deserves a new minor release.","title":"Bug Fixes (v1.12)"},{"location":"misc/changelog/#bug-fixes_2","text":"These were already included in the v1.11.3 patch: libssl check was failing on macOS. Getting input users would sometimes fail on events.ChatAction <telethon.events.chataction.ChatAction> . These bug fixes are available in this release and beyond: Avoid another occurrence of MemoryError . Sending large files in albums would fail because it tried to cache them. The thumb was being ignored when sending files from :tl: InputFile . Fixed editing inline messages from callback queries in some cases. Proxy connection is now blocking which should help avoid some errors.","title":"Bug fixes"},{"location":"misc/changelog/#bug-fixes-v111","text":"Published at 2020/02/20 Scheme layer used: 110 It has been a while since the last release, and a few bug fixes have been made since then. This release includes them and updates the scheme layer. Note that most of the bug-fixes are available in the v1.10.10 patch.","title":"Bug Fixes (v1.11)"},{"location":"misc/changelog/#bug-fixes_3","text":"Fix MemoryError when casting certain media. Fix client.get_entity() <telethon.client.users.UserMethods.get_entity> on small group chats. client.delete_dialog() <telethon.client.dialogs.DialogMethods.delete_dialog> now handles deactivated chats more gracefully. Sending a message with file= would ignore some of the parameters. Errors are now un-pickle-able once again. Fixed some issues regarding markdown and HTML (un)parsing. The following are also present in v1.10.10 : Fixed some issues with events.Album <telethon.events.album.Album> . Fixed some issues with client.kick_participant() <telethon.client.chats.ChatMethods.kick_participant> and client.edit_admin() <telethon.client.chats.ChatMethods.edit_admin> . Fixed sending albums and more within client.conversation() <telethon.client.dialogs.DialogMethods.conversation> . Fixed some import issues. And a lot more minor stuff.","title":"Bug fixes"},{"location":"misc/changelog/#enhancements_1","text":"Videos can now be included when sending albums. Getting updates after reconnect should be more reliable. Updated documentation and added more examples. More security checks during the generation of the authorization key. The following are also present in v1.10.10 : URLs like t.me/@username are now valid. Auto-sleep now works for slow-mode too. Improved some error messages. Some internal improvements and updating. client.pin_message() <telethon.client.messages.MessageMethods.pin_message> now also works with message objects. Asynchronous file descriptors are now allowed during download and upload.","title":"Enhancements"},{"location":"misc/changelog/#scheduled-messages-v110","text":"Published at 2019/09/08 Scheme layer used: 105 You can now schedule messages to be sent (or edited, or forwarded\u2026) at a later time, which can also work as reminders for yourself when used in your own chat! from datetime import timedelta # Remind yourself to walk the dog in 10 minutes (after you play with Telethon's update) await client . send_message ( 'me' , 'Walk the dog' , schedule = timedelta ( minutes = 10 )) # Remind your friend tomorrow to update Telethon await client . send_message ( friend , 'Update Telethon!' , schedule = timedelta ( days = 1 ))","title":"Scheduled Messages (v1.10)"},{"location":"misc/changelog/#additions_1","text":"New Button.auth <telethon.tl.custom.button.Button.auth> friendly button you can use to ask users to login to your bot. Telethon's repository now contains *.nix expressions that you can use. New client.kick_participant() <telethon.client.chats.ChatMethods.kick_participant> method to truly kick (not ban) participants. New schedule parameter in client.send_message() <telethon.client.messages.MessageMethods.send_message> , client.edit_message() <telethon.client.messages.MessageMethods.edit_message> , client.forward_messages() <telethon.client.messages.MessageMethods.forward_messages> and client.send_file() <telethon.client.uploads.UploadMethods.send_file> .","title":"Additions"},{"location":"misc/changelog/#bug-fixes_4","text":"Fix calling flush on file objects which lack this attribute. Fix CallbackQuery <telethon.events.callbackquery.CallbackQuery> pattern. Fix client.action() <telethon.client.chats.ChatMethods.action> not returning itself when used in a context manager (so the as would be None ). Fix sending :tl: InputKeyboardButtonUrlAuth as inline buttons. Fix client.edit_permissions() <telethon.client.chats.ChatMethods.edit_permissions> defaults. Fix Forward <telethon.tl.custom.forward.Forward> had its client as None . Fix (de)serialization of negative timestamps (caused by the information in some sites with instant view, where the date could be very old). Fix HTML un-parsing. Fix to/from_id in private messages when using multiple clients. Stop disconnecting from None (incorrect logging). Fix double-read on double-connect. Fix client.get_messages() <telethon.client.messages.MessageMethods.get_messages> when being passed more than 100 IDs. Fix Message.document <telethon.tl.custom.message.Message.document> for documents coming from web-pages.","title":"Bug fixes"},{"location":"misc/changelog/#enhancements_2","text":"Some documentation improvements, including the TL reference. Documentation now avoids telethon.sync , which should hopefully be less confusing. Better error messages for flood wait. You can now client.get_drafts() <telethon.client.dialogs.DialogMethods.get_drafts> for a single entity (which means you can now get a single draft from a single chat). New-style file IDs now work with Telethon. The progress_callback for client.upload_file() <telethon.client.uploads.UploadMethods.upload_file> can now be an async def .","title":"Enhancements"},{"location":"misc/changelog/#animated-stickers-v19","text":"Published at 2019/07/06 +------------------------+ | Scheme layer used: 103 | +------------------------+ With the layer 103, Telethon is now able to send and receive animated stickers! These use the 'application/x-tgsticker' mime-type and for now, you can access its raw data, which is a gzipped JSON. Additions * New `events.Album <telethon.events.album.Album>` to easily receive entire albums! * New `client.edit_admin() <telethon.client.chats.ChatMethods.edit_admin>` and `client.edit_permissions() <telethon.client.chats.ChatMethods.edit_permissions>` methods to more easily manage your groups. * New ``pattern=`` in `CallbackQuery <telethon.events.callbackquery.CallbackQuery>`. * New `conversation.cancel_all() <telethon.tl.custom.conversation.Conversation.cancel>` method, to cancel all currently-active conversations in a particular chat. * New `telethon.utils.encode_waveform` and `telethon.utils.decode_waveform` methods as implemented by Telegram Desktop, which lets you customize how voice notes will render. * New ``ignore_pinned`` parameter in `client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs>`. * New `Message.mark_read() <telethon.tl.custom.message.Message.mark_read>` method. * You can now use strike-through in markdown with ``~~text~~``, and the corresponding HTML tags for strike-through, quotes and underlined text. * You can now nest entities, as in ``**__text__**``. Bug fixes Fixed downloading contacts. Fixed client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs> missing some under certain circumstances. Fixed incredibly slow imports under some systems due to expensive path resolution when searching for libssl . Fixed captions when sending albums. Fixed invalid states in Conversation <telethon.tl.custom.conversation.Conversation> . Fixes to some methods in utils regarding extensions. Fixed memory cycle in Forward <telethon.tl.custom.forward.Forward> which let you do things like the following: .. code-block:: python original_fwd = message.forward.original_fwd.original_fwd.original_fwd.original_fwd.original_fwd.original_fwd Hopefully you didn't rely on that in your code. * Fixed File.ext <telethon.tl.custom.file.File.ext> not working on unknown mime-types, despite the file name having the extension. * Fixed ids=..., reverse=True in client.iter_messages() <telethon.client.messages.MessageMethods.iter_messages> . * Fixed Draft <telethon.tl.custom.draft.Draft> not being aware of the entity. * Added missing re-exports in telethon.sync . Enhancements * Improved `conversation.cancel() <telethon.tl.custom.conversation.Conversation.cancel>` behaviour. Now you can use it from anywhere. * The ``progress_callback`` in `client.download_media() <telethon.client.downloads.DownloadMethods.download_media>` now lets you use ``async def``. * Improved documentation and the online method reference at https://tl.telethon.dev. Documentation Overhaul (v1.8) ============================= *Published at 2019/05/30* +------------------------+ | Scheme layer used: 100 | +------------------------+ The documentation has been completely reworked from the ground up, with awesome new quick references such as :ref:`client-ref` to help you quickly find what you need! Raw methods also warn you when a friendly variant is available, so that you don't accidentally make your life harder than it has to be. In addition, all methods in the client now are fully annotated with type hints! More work needs to be done, but this should already help a lot when using Telethon from any IDEs. You may have noticed that the patch versions between ``v1.7.2`` to ``v1.7.7`` have not been documented. This is because patch versions should only contain bug fixes, no new features or breaking changes. This hasn't been the case in the past, but from now on, the library will try to adhere more strictly to the `Semantic Versioning <https://semver.org>`_ principles. If you ever want to look at those bug fixes, please use the appropriated ``git`` command, such as ``git shortlog v1.7.1...v1.7.4``, but in general, they probably just fixed your issue. With that out of the way, let's look at the full change set: Breaking Changes ~~~~~~~~~~~~~~~~ * The layer changed, so take note if you use the raw API, as it's usual. * The way photos are downloaded changed during the layer update of the previous version, and fixing that bug as a breaking change in itself. `client.download_media() <telethon.client.downloads.DownloadMethods.download_media>` now offers a different way to deal with thumbnails. Additions ~~~~~~~~~ * New `Message.file <telethon.tl.custom.message.Message.file>` property! Now you can trivially access `message.file.id <telethon.tl.custom.file.File.id>` to get the file ID of some media, or even ``print(message.file.name)``. * Archiving dialogs with `Dialog.archive() <telethon.tl.custom.dialog.Dialog.archive>` or `client.edit_folder() <telethon.client.dialogs.DialogMethods.edit_folder>` is now possible. * New cleaned-up method to stream downloads with `client.iter_download() <telethon.client.downloads.DownloadMethods.iter_download>`, which offers a lot of flexibility, such as arbitrary offsets for efficient seeking. * `Dialog.delete() <telethon.tl.custom.dialog.Dialog.delete>` has existed for a while, and now `client.delete_dialog() <telethon.client.dialogs.DialogMethods.delete_dialog>` exists too so you can easily leave chats or delete dialogs without fetching all dialogs. * Some people or chats have a lot of profile photos. You can now iterate over all of them with the new `client.iter_profile_photos() <telethon.client.chats.ChatMethods.iter_profile_photos>` method. * You can now annoy everyone with the new `Message.pin(notify=True) <telethon.tl.custom.message.Message.pin>`! The client has its own variant too, called `client.pin_message() <telethon.client.messages.MessageMethods.pin_message>`. Bug fixes ~~~~~~~~~ * Correctly catch and raise all RPC errors. * Downloading stripped photos wouldn't work correctly. * Under some systems, ``libssl`` would fail to load earlier than expected, causing the library to fail when being imported. * `conv.get_response() <telethon.tl.custom.conversation.Conversation.get_response>` after ID 0 wasn't allowed when it should. * `InlineBuilder <telethon.tl.custom.inlinebuilder.InlineBuilder>` only worked with local files, but files from anywhere are supported. * Accessing the text property from a raw-API call to fetch :tl:`Message` would fail (any any other property that needed the client). * Database is now upgraded if the version was lower, not different. From now on, this should help with upgrades and downgrades slightly. * Fixed saving ``pts`` and session-related stuff. * Disconnection should not raise any errors. * Invite links of the form ``tg://join?invite=`` now work. * `client.iter_participants(search=...) <telethon.client.chats.ChatMethods.iter_participants>` now works on private chats again. * Iterating over messages in reverse with a date as offset wouldn't work. * The conversation would behave weirdly when a timeout occurred. Enhancements telethon now re-export all the goodies that you commonly need when using the library, so e.g. from telethon import Button will now work. telethon.sync now re-exports everything from telethon , so that you can trivially import from just one place everything that you need. More attempts at reducing CPU usage after automatically fetching missing entities on events. This isn't a big deal, even if it sounds like one. Hexadecimal invite links are now supported. You didn't need them, but they will now work. Internal Changes * Deterministic code generation. This is good for ``diff``. * On Python 3.7 and above, we properly close the connection. * A lot of micro-optimization. * Fixes to bugs introduced while making this release. * Custom commands on ``setup.py`` are nicer to use. Fix-up for Photo Downloads (v1.7.1) =================================== *Published at 2019/04/24* Telegram changed the way thumbnails (which includes photos) are downloaded, so you can no longer use a :tl:`PhotoSize` alone to download a particular thumbnail size (this is a **breaking change**). Instead, you will have to specify the new ``thumb`` parameter in `client.download_media() <telethon.client.downloads.DownloadMethods.download_media>` to download a particular thumbnail size. This addition enables you to easily download thumbnails from documents, something you couldn't do easily before. Easier Events (v1.7) ==================== *Published at 2019/04/22* +-----------------------+ | Scheme layer used: 98 | +-----------------------+ If you have been using Telethon for a while, you probably know how annoying the \"Could not find the input entity for\u2026\" error can be. In this new version, the library will try harder to find the input entity for you! That is, instead of doing: .. code-block:: python @client.on(events.NewMessage) async def handler(event): await client.download_profile_photo(await event.get_input_sender()) # ...... needs await, it's a method ^^^^^ ^^ You can now do: .. code-block:: python @client.on(events.NewMessage) async def handler(event): await client.download_profile_photo(event.input_sender) # ...... no await, it's a property! ^ # It's also 12 characters shorter :) And even the following will hopefully work: .. code-block:: python @client.on(events.NewMessage) async def handler(event): await client.download_profile_photo(event.sender_id) A lot of people use IDs thinking this is the right way of doing it. Ideally, you would always use ``input_*``, not ``sender`` or ``sender_id`` (and the same applies to chats). But, with this change, IDs will work just the same as ``input_*`` inside events. **This feature still needs some more testing**, so please do open an issue if you find strange behaviour. Breaking Changes The layer changed, and a lot of things did too. If you are using raw API, you should be careful with this. In addition, some attributes weren't of type datetime when they should be, which has been fixed. Due to the layer change, you can no longer download photos with just their :tl: PhotoSize . Version 1.7.1 introduces a new way to download thumbnails to work around this issue. client.disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> is now asynchronous again. This means you need to await it. You don't need to worry about this if you were using with client or client.run_until_disconnected <telethon.client.updates.UpdateMethods.run_until_disconnected> . This should prevent the \"pending task was destroyed\" errors. Additions * New in-memory cache for input entities. This should mean a lot less of disk look-ups. * New `client.action <telethon.client.chats.ChatMethods.action>` method to easily indicate that you are doing some chat action: .. code-block:: python async with client.action(chat, 'typing'): await asyncio.sleep(2) # type for 2 seconds await client.send_message(chat, 'Hello world! I type slow ^^') You can also easily use this for sending files, playing games, etc. New bugs ~~~~~~~~ * Downloading photos is broken. This is fixed in v1.7.1. Bug fixes Fix sending photos from streams/bytes. Fix unhandled error when sending requests that were too big. Fix edits that arrive too early on conversations. Fix client.edit_message() <telethon.client.messages.MessageMethods.edit_message> when trying to edit a file. Fix method calls on the objects returned by client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs> . Attempt at fixing client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs> missing many dialogs. offset_date in client.iter_messages() <telethon.client.messages.MessageMethods.iter_messages> was being ignored in some cases. This has been worked around. Fix callback_query.edit() <telethon.events.callbackquery.CallbackQuery.Event.edit> . Fix CallbackQuery(func=...) <telethon.events.callbackquery.CallbackQuery> was being ignored. Fix UserUpdate <telethon.events.userupdate.UserUpdate> not working for \"typing\" (and uploading file, etc.) status. Fix library was not expecting IOError from PySocks. Fix library was raising a generic ConnectionError and not the one that actually occurred. Fix the blacklist_chats parameter in MessageRead <telethon.events.messageread.MessageRead> not working as intended. Fix client.download_media(contact) <telethon.client.downloads.DownloadMethods.download_media> . Fix mime type when sending mp3 files. Fix forcibly getting the sender or chat from events would not always return all their information. Fix sending albums with client.send_file() <telethon.client.uploads.UploadMethods.send_file> was not returning the sent messages. Fix forwarding albums with client.forward_messages() <telethon.client.messages.MessageMethods.forward_messages> . Some fixes regarding filtering updates from chats. Attempt at preventing duplicated updates. Prevent double auto-reconnect. Enhancements * Some improvements related to proxy connections. * Several updates and improvements to the documentation, such as optional dependencies now being properly listed. * You can now forward messages from different chats directly with `client.forward_messages <telethon.client.messages.MessageMethods.forward_messages>`. Tidying up Internals (v1.6) =========================== *Published at 2019/02/27* +-----------------------+ | Scheme layer used: 95 | +-----------------------+ First things first, sorry for updating the layer in the previous patch version. That should only be done between major versions ideally, but due to how Telegram works, it's done between minor versions. However raw API has and will always be considered \"unsafe\", this meaning that you should always use the convenience client methods instead. These methods don't cover the full API yet, so pull requests are welcome. Breaking Changes ~~~~~~~~~~~~~~~~ * The layer update, of course. This didn't really need a mention here. * You can no longer pass a ``batch_size`` when iterating over messages. No other method exposed this parameter, and it was only meant for testing purposes. Instead, it's now a private constant. * ``client.iter_*`` methods no longer have a ``_total`` parameter which was supposed to be private anyway. Instead, they return a new generator object which has a ``.total`` attribute: .. code-block:: python it = client.iter_messages(chat) for i, message in enumerate(it, start=1): percentage = i / it.total print('{:.2%} {}'.format(percentage, message.text)) Additions ~~~~~~~~~ * You can now pass ``phone`` and ``phone_code_hash`` in `client.sign_up <telethon.client.auth.AuthMethods.sign_up>`, although you probably don't need that. * Thanks to the overhaul of all ``client.iter_*`` methods, you can now do: .. code-block:: python for message in reversed(client.iter_messages('me')): print(message.text) Bug fixes ~~~~~~~~~ * Fix `telethon.utils.resolve_bot_file_id`, which wasn't working after the layer update (so you couldn't send some files by bot file IDs). * Fix sending albums as bot file IDs (due to image detection improvements). * Fix `takeout() <telethon.client.account.AccountMethods.takeout>` failing when they need to download media from other DCs. * Fix repeatedly calling `conversation.get_response() <telethon.tl.custom.conversation.Conversation.get_response>` when many messages arrived at once (i.e. when several of them were forwarded). * Fixed connecting with `ConnectionTcpObfuscated <telethon.network.connection.tcpobfuscated.ConnectionTcpObfuscated>`. * Fix `client.get_peer_id('me') <telethon.client.users.UserMethods.get_peer_id>`. * Fix warning of \"missing sqlite3\" when in reality it just had wrong tables. * Fix a strange error when using too many IDs in `client.delete_messages() <telethon.client.messages.MessageMethods.delete_messages>`. * Fix `client.send_file <telethon.client.uploads.UploadMethods.send_file>` with the result of `client.upload_file <telethon.client.uploads.UploadMethods.upload_file>`. * When answering inline results, their order was not being preserved. * Fix `events.ChatAction <telethon.events.chataction.ChatAction>` detecting user leaves as if they were kicked. Enhancements Cleared up some parts of the documentation. Improved some auto-casts to make life easier. Improved image detection. Now you can easily send bytes and streams of images as photos, unless you force document. Sending images as photos that are too large will now be resized before uploading, reducing the time it takes to upload them and also avoiding errors when the image was too large (as long as pillow is installed). The images will remain unchanged if you send it as a document. Treat errors.RpcMcgetFailError as a temporary server error to automatically retry shortly. This works around most issues. Internal changes * New common way to deal with retries (``retry_range``). * Cleaned up the takeout client. * Completely overhauled asynchronous generators. Layer Update (v1.5.5) ===================== *Published at 2019/01/14* +-----------------------+ | Scheme layer used: 93 | +-----------------------+ There isn't an entry for v1.5.4 because it contained only one hot-fix regarding loggers. This update is slightly bigger so it deserves mention. Additions ~~~~~~~~~ * New ``supports_streaming`` parameter in `client.send_file <telethon.client.uploads.UploadMethods.send_file>`. Bug fixes ~~~~~~~~~ * Dealing with mimetypes should cause less issues in systems like Windows. * Potentially fix alternative session storages that had issues with dates. Enhancements ~~~~~~~~~~~~ * Saner timeout defaults for conversations. * ``Path``-like files are now supported for thumbnails. * Added new hot-keys to the online documentation at https://tl.telethon.dev/ such as ``/`` to search. Press ``?`` to view them all. Bug Fixes (v1.5.3) ================== *Published at 2019/01/14* Several bug fixes and some quality of life enhancements. Breaking Changes message.edit <telethon.tl.custom.message.Message.edit> now respects the previous message buttons or link preview being hidden. If you want to toggle them you need to explicitly set them. This is generally the desired behaviour, but may cause some bots to have buttons when they shouldn't. Additions * You can now \"hide_via\" when clicking on results from `client.inline_query <telethon.client.bots.BotMethods.inline_query>` to @bing and @gif. * You can now further configure the logger Telethon uses to suit your needs. Bug fixes Fixes for ReadTheDocs to correctly build the documentation. Fix :tl: UserEmpty not being expected when getting the input variant. The message object returned when sending a message with buttons wouldn't always contain the :tl: ReplyMarkup . Setting email when configuring 2FA wasn't properly supported. utils.resolve_bot_file_id now works again for photos. Enhancements * Chat and channel participants can now be used as peers. * Reworked README and examples at https://github.com/LonamiWebs/Telethon/tree/master/telethon_examples Takeout Sessions (v1.5.2) ========================= *Published at 2019/01/05* You can now easily start takeout sessions (also known as data export sessions) through `client.takeout() <telethon.client.account.AccountMethods.takeout>`. Some of the requests will have lower flood limits when done through the takeout session. Bug fixes ~~~~~~~~~ * The new `AdminLogEvent <telethon.tl.custom.adminlogevent.AdminLogEvent>` had a bug that made it unusable. * `client.iter_dialogs() <telethon.client.dialogs.DialogMethods.iter_dialogs>` will now locally check for the offset date, since Telegram ignores it. * Answering inline queries with media no works properly. You can now use the library to create inline bots and send stickers through them! object.to_json() (v1.5.1) ========================= *Published at 2019/01/03* The library already had a way to easily convert the objects the API returned into dictionaries through ``object.to_dict()``, but some of the fields are dates or `bytes` which JSON can't serialize directly. For convenience, a new ``object.to_json()`` has been added which will by default format both of those problematic types into something sensible. Additions ~~~~~~~~~ * New `client.iter_admin_log() <telethon.client.chats.ChatMethods.iter_admin_log>` method. Bug fixes ~~~~~~~~~ * `client.is_connected() <telethon.client.telegrambaseclient.TelegramBaseClient.is_connected>` would be wrong when the initial connection failed. * Fixed ``UnicodeDecodeError`` when accessing the text of messages with malformed offsets in their entities. * Fixed `client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity>` for integer IDs that the client has not seen before. Enhancements You can now configure the reply markup when using Button <telethon.tl.custom.button.Button> as a bot. More properties for Message <telethon.tl.custom.message.Message> to make accessing media convenient. Downloading to file=bytes will now return a bytes object with the downloaded media.","title":"Animated Stickers (v1.9)"},{"location":"misc/changelog/#polls-with-the-latest-layer-v15","text":"Published at 2018/12/25 +-----------------------+ | Scheme layer used: 91 | +-----------------------+ This version doesn't really bring many new features, but rather focuses on updating the code base to support the latest available Telegram layer, 91. This layer brings polls, and you can create and manage them through Telethon! Breaking Changes * The layer change from 82 to 91 changed a lot of things in the raw API, so be aware that if you rely on raw API calls, you may need to update your code, in particular **if you work with files**. They have a new ``file_reference`` parameter that you must provide. Additions ~~~~~~~~~ * New `client.is_bot() <telethon.client.users.UserMethods.is_bot>` method. Bug fixes ~~~~~~~~~ * Markdown and HTML parsing now behave correctly with leading whitespace. * HTTP connection should now work correctly again. * Using ``caption=None`` would raise an error instead of setting no caption. * ``KeyError`` is now handled properly when forwarding messages. * `button.click() <telethon.tl.custom.messagebutton.MessageButton.click>` now works as expected for :tl:`KeyboardButtonGame`. Enhancements ~~~~~~~~~~~~ * Some improvements to the search in the full API and generated examples. * Using entities with ``access_hash = 0`` will now work in more cases. Internal changes Some changes to the documentation and code generation. 2FA code was updated to work under the latest layer.","title":"Polls with the Latest Layer (v1.5)"},{"location":"misc/changelog/#error-descriptions-in-csv-files-v143","text":"Published at 2018/12/04 While this may seem like a minor thing, it's a big usability improvement. Anyone who wants to update the documentation for known errors, or whether some methods can be used as a bot, user or both, can now be easily edited. Everyone is encouraged to help document this better! Bug fixes * ``TimeoutError`` was not handled during automatic reconnects. * Getting messages by ID using :tl:`InputMessageReplyTo` could fail. * Fixed `message.get_reply_message <telethon.tl.custom.message.Message.get_reply_message>` as a bot when a user replied to a different bot. * Accessing some document properties in a `Message <telethon.tl.custom.message.Message>` would fail. Enhancements ~~~~~~~~~~~~ * Accessing `events.ChatAction <telethon.events.chataction.ChatAction>` properties such as input users may now work in more cases. Internal changes ~~~~~~~~~~~~~~~~ * Error descriptions and information about methods is now loaded from a CSV file instead of being part of several messy JSON files. Bug Fixes (v1.4.2) ================== *Published at 2018/11/24* This version also includes the v1.4.1 hot-fix, which was a single quick fix and didn't really deserve an entry in the changelog. Bug fixes Authorization key wouldn't be saved correctly, requiring re-login. Conversations with custom events failed to be cancelled. Fixed telethon.sync when using other threads. Fix markdown/HTML parser from failing with leading/trailing whitespace. Fix accessing chat_action_event.input_user property. Potentially improved handling unexpected disconnections. Enhancements * Better default behaviour for `client.send_read_acknowledge <telethon.client.messages.MessageMethods.send_read_acknowledge>`. * Clarified some points in the documentation. * Clearer errors for ``utils.get_peer*``. Connection Overhaul (v1.4) ========================== *Published at 2018/11/03* Yet again, a lot of work has been put into reworking the low level connection classes. This means ``asyncio.open_connection`` is now used correctly and the errors it can produce are handled properly. The separation between packing, encrypting and network is now abstracted away properly, so reasoning about the code is easier, making it more maintainable. As a user, you shouldn't worry about this, other than being aware that quite a few changes were made in the insides of the library and you should report any issues that you encounter with this version if any. Breaking Changes ~~~~~~~~~~~~~~~~ * The threaded version of the library will no longer be maintained, primarily because it never was properly maintained anyway. If you have old code, stick with old versions of the library, such as ``0.19.1.6``. * Timeouts no longer accept ``timedelta``. Simply use seconds. * The ``callback`` parameter from `telethon.tl.custom.button.Button.inline()` was removed, since it had always been a bad idea. Adding the callback there meant a lot of extra work for every message sent, and only registering it after the first message was sent! Instead, use `telethon.events.callbackquery.CallbackQuery`. Additions ~~~~~~~~~ * New `dialog.delete() <telethon.tl.custom.dialog.Dialog.delete>` method. * New `conversation.cancel() <telethon.tl.custom.conversation.Conversation.cancel>` method. * New ``retry_delay`` delay for the client to be used on auto-reconnection. Bug fixes ~~~~~~~~~ * Fixed `Conversation.wait_event() <telethon.tl.custom.conversation.Conversation.wait_event>`. * Fixed replying with photos/documents on inline results. * `client.is_user_authorized() <telethon.client.users.UserMethods.is_user_authorized>` now works correctly after `client.log_out() <telethon.client.auth.AuthMethods.log_out>`. * `dialog.is_group <telethon.tl.custom.dialog.Dialog>` now works for :tl:`ChatForbidden`. * Not using ``async with`` when needed is now a proper error. * `events.CallbackQuery <telethon.events.callbackquery.CallbackQuery>` with string regex was not working properly. * `client.get_entity('me') <telethon.client.users.UserMethods.get_entity>` now works again. * Empty codes when signing in are no longer valid. * Fixed file cache for in-memory sessions. Enhancements Support next_offset in inline_query.answer() <telethon.events.inlinequery.InlineQuery.Event.answer> . Support <a href=\"tg://user?id=123\"> mentions in HTML parse mode. New auto-casts for :tl: InputDocument and :tl: InputChatPhoto . Conversations are now exclusive per-chat by default. The request that caused a RPC error is now shown in the error message. New full API examples in the generated documentation. Fixed some broken links in the documentation. client.disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> is now synchronous, but you can still await it for consistency or compatibility.","title":"Error Descriptions in CSV files (v1.4.3)"},{"location":"misc/changelog/#event-templates-v13","text":"Published at 2018/09/22 If you have worked with Flask templates, you will love this update, since it gives you the same features but even more conveniently: .. code-block:: python # handlers/welcome.py from telethon import events @events.register(events.NewMessage('(?i)hello')) async def handler(event): client = event.client await event.respond('Hi!') await client.send_message('me', 'Sent hello to someone') This will register <telethon.events.register> the handler callback to handle new message events. Note that you didn't add this to any client yet, and this is the key point: you don't need a client to define handlers! You can add it later: .. code-block:: python # main.py from telethon import TelegramClient import handlers.welcome with TelegramClient(...) as client: # This line adds the handler we defined before for new messages client.add_event_handler(handlers.welcome.handler) client.run_until_disconnected() This should help you to split your big code base into a more modular design. Breaking Changes * ``.sender`` is the ``.chat`` when the message is sent in a broadcast channel. This makes sense, because the sender of the message was the channel itself, but you now must take into consideration that it may be either a :tl:`User` or :tl:`Channel` instead of being `None`. Additions ~~~~~~~~~ * New ``MultiError`` class when invoking many requests at once through ``client([requests])``. * New custom ``func=`` on all events. These will receive the entire event, and a good usage example is ``func=lambda e: e.is_private``. * New ``.web_preview`` field on messages. The ``.photo`` and ``.document`` will also return the media in the web preview if any, for convenience. * Callback queries now have a ``.chat`` in most circumstances. Bug fixes ~~~~~~~~~ * Running code with `python3 -O` would remove critical code from asserts. * Fix some rare ghost disconnections after reconnecting. * Fix strange behavior for `send_message(chat, Message, reply_to=foo) <telethon.client.messages.MessageMethods.send_message>`. * The ``loop=`` argument was being pretty much ignored. * Fix ``MemorySession`` file caching. * The logic for getting entities from their username is now correct. * Fixes for sending stickers from ``.webp`` files in Windows, again. * Fix disconnection without being logged in. * Retrieving media from messages would fail. * Getting some messages by ID on private chats. Enhancements ~~~~~~~~~~~~ * `iter_participants <telethon.client.chats.ChatMethods.iter_participants>` will now use its ``search=`` as a symbol set when ``aggressive=True``, so you can do ``client.get_participants(group, aggressive=True, search='\u0430\u0431\u0432\u0433\u0434\u0435\u0451\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442')``. * The ``StringSession`` supports custom encoding. * Callbacks for `telethon.client.auth.AuthMethods.start` can be ``async``. Internal changes Cherry-picked a commit to use asyncio.open_connection in the lowest level of the library. Do open issues if this causes trouble, but it should otherwise improve performance and reliability. Building and resolving events overhaul.","title":"Event Templates (v1.3)"},{"location":"misc/changelog/#conversations-string-sessions-and-more-v12","text":"Published at 2018/08/14 This is a big release! Quite a few things have been added to the library, such as the new Conversation <telethon.tl.custom.conversation.Conversation> . This makes it trivial to get tokens from @BotFather <https://t.me/BotFather> _: .. code-block:: python from telethon.tl import types with client.conversation('BotFather') as conv: conv.send_message('/mybots') message = conv.get_response() message.click(0) message = conv.get_edit() message.click(0) message = conv.get_edit() for _, token in message.get_entities_text(types.MessageEntityCode): print(token) In addition to that, you can now easily load and export session files without creating any on-disk file thanks to the StringSession : .. code-block:: python from telethon.sessions import StringSession string = StringSession.save(client.session) Check out :ref: sessions for more details. For those who aren't able to install cryptg , the support for libssl has been added back. While interfacing libssl is not as fast, the speed when downloading and sending files should really be noticeably faster. While those are the biggest things, there are still more things to be excited about. Additions - The mentioned method to start a new `client.conversation <telethon.client.dialogs.DialogMethods.conversation>`. - Implemented global search through `client.iter_messages <telethon.client.messages.MessageMethods.iter_messages>` with `None` entity. - New `client.inline_query <telethon.client.bots.BotMethods.inline_query>` method to perform inline queries. - Bot-API-style ``file_id`` can now be used to send files and download media. You can also access `telethon.utils.resolve_bot_file_id` and `telethon.utils.pack_bot_file_id` to resolve and create these file IDs yourself. Note that each user has its own ID for each file so you can't use a bot's ``file_id`` with your user, except stickers. - New `telethon.utils.get_peer`, useful when you expect a :tl:`Peer`. Bug fixes UTC timezone for telethon.events.userupdate.UserUpdate . Bug with certain input parameters when iterating messages. RPC errors without parent requests caused a crash, and better logging. incoming = outgoing = True was not working properly. Getting a message's ID was not working. File attributes not being inferred for open() 'ed files. Use MemorySession if sqlite3 is not installed by default. Self-user would not be saved to the session file after signing in. client.catch_up() <telethon.client.updates.UpdateMethods.catch_up> seems to be functional again. Enhancements - Updated documentation. - Invite links will now use cache, so using them as entities is cheaper. - You can reuse message buttons to send new messages with those buttons. - ``.to_dict()`` will now work even on invalid ``TLObject``'s. Better Custom Message (v1.1.1) ============================== *Published at 2018/07/23* The `custom.Message <telethon.tl.custom.message.Message>` class has been rewritten in a cleaner way and overall feels less hacky in the library. This should perform better than the previous way in which it was patched. The release is primarily intended to test this big change, but also fixes **Python 3.5.2 compatibility** which was broken due to a trailing comma. Bug fixes ~~~~~~~~~ - Using ``functools.partial`` on event handlers broke updates if they had uncaught exceptions. - A bug under some session files where the sender would export authorization for the same data center, which is unsupported. - Some logical bugs in the custom message class. Bot Friendly (v1.1) =================== *Published at 2018/07/21* Two new event handlers to ease creating normal bots with the library, namely `events.InlineQuery <telethon.events.inlinequery.InlineQuery>` and `events.CallbackQuery <telethon.events.callbackquery.CallbackQuery>` for handling ``@InlineBot queries`` or reacting to a button click. For this second option, there is an even better way: .. code-block:: python from telethon.tl.custom import Button async def callback(event): await event.edit('Thank you!') bot.send_message(chat, 'Hello!', buttons=Button.inline('Click me', callback)) You can directly pass the callback when creating the button. This is fine for small bots but it will add the callback every time you send a message, so you probably should do this instead once you are done testing: .. code-block:: python markup = bot.build_reply_markup(Button.inline('Click me', callback)) bot.send_message(chat, 'Hello!', buttons=markup) And yes, you can create more complex button layouts with lists: .. code-block:: python from telethon import events global phone = '' @bot.on(events.CallbackQuery) async def handler(event): global phone if event.data == b'<': phone = phone[:-1] else: phone += event.data.decode('utf-8') await event.answer('Phone is now {}'.format(phone)) markup = bot.build_reply_markup([ [Button.inline('1'), Button.inline('2'), Button.inline('3')], [Button.inline('4'), Button.inline('5'), Button.inline('6')], [Button.inline('7'), Button.inline('8'), Button.inline('9')], [Button.inline('+'), Button.inline('0'), Button.inline('<')], ]) bot.send_message(chat, 'Enter a phone', buttons=markup) (Yes, there are better ways to do this). Now for the rest of things: Additions ~~~~~~~~~ - New `custom.Button <telethon.tl.custom.button.Button>` class to help you create inline (or normal) reply keyboards. You must sign in as a bot to use the ``buttons=`` parameters. - New events usable if you sign in as a bot: `events.InlineQuery <telethon.events.inlinequery.InlineQuery>` and `events.CallbackQuery <telethon.events.callbackquery.CallbackQuery>`. - New ``silent`` parameter when sending messages, usable in broadcast channels. - Documentation now has an entire section dedicate to how to use the client's friendly methods at *(removed broken link)*. Bug fixes ~~~~~~~~~ - Empty ``except`` are no longer used which means sending a keyboard interrupt should now work properly. - The ``pts`` of incoming updates could be `None`. - UTC timezone information is properly set for read ``datetime``. - Some infinite recursion bugs in the custom message class. - :tl:`Updates` was being dispatched to raw handlers when it shouldn't. - Using proxies and HTTPS connection mode may now work properly. - Less flood waits when downloading media from different data centers, and the library will now detect them even before sending requests. Enhancements Interactive sign in now supports signing in with a bot token. timedelta is now supported where a date is expected, which means you can e.g. ban someone for timedelta(minutes=5) . Events are only built once and reused many times, which should save quite a few CPU cycles if you have a lot of the same type. You can now click inline buttons directly if you know their data. Internal changes - When downloading media, the right sender is directly used without previously triggering migrate errors. - Code reusing for getting the chat and the sender, which easily enables this feature for new types. New HTTP(S) Connection Mode (v1.0.4) ==================================== *Published at 2018/07/09* This release implements the HTTP connection mode to the library, which means certain proxies that only allow HTTP connections should now work properly. You can use it doing the following, like any other mode: .. code-block:: python from telethon import TelegramClient, sync from telethon.network import ConnectionHttp client = TelegramClient(..., connection=ConnectionHttp) with client: client.send_message('me', 'Hi!') Additions ~~~~~~~~~ - ``add_mark=`` is now back on ``utils.get_input_peer`` and also on `client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity>`. - New `client.get_peer_id <telethon.client.users.UserMethods.get_peer_id>` convenience for ``utils.get_peer_id(await client.get_input_entity(peer))``. Bug fixes ~~~~~~~~~ - If several `TLMessage` in a `MessageContainer` exceeds 1MB, it will no longer be automatically turned into one. This basically means that e.g. uploading 10 file parts at once will work properly again. - Documentation fixes and some missing ``await``. - Revert named argument for `client.forward_messages <telethon.client.messages.MessageMethods.forward_messages>` Enhancements ~~~~~~~~~~~~ - New auto-casts to :tl:`InputNotifyPeer` and ``chat_id``. Internal changes Outgoing TLMessage are now pre-packed so if there's an error when serializing the raw requests, the library will no longer swallow it. This also means re-sending packets doesn't need to re-pack their bytes.","title":"Conversations, String Sessions and More (v1.2)"},{"location":"misc/changelog/#iterate-messages-in-reverse-v103","text":"Published at 2018/07/04 +-----------------------+ | Scheme layer used: 82 | +-----------------------+ Mostly bug fixes, but now there is a new parameter on client.iter_messages <telethon.client.messages.MessageMethods.iter_messages> to support reversing the order in which messages are returned. Additions - The mentioned ``reverse`` parameter when iterating over messages. - A new ``sequential_updates`` parameter when creating the client for updates to be processed sequentially. This is useful when you need to make sure that all updates are processed in order, such as a script that only forwards incoming messages somewhere else. Bug fixes Count was always None for message.button_count <telethon.tl.custom.message.Message.button_count> . Some fixes when disconnecting upon dropping the client. Support for Python 3.4 in the sync version, and fix media download. Some issues with events when accessing the input chat or their media. Hachoir wouldn't automatically close the file after reading its metadata. Signing in required a named code= parameter, but usage without a name was really widespread so it has been reverted.","title":"Iterate Messages in Reverse (v1.0.3)"},{"location":"misc/changelog/#bug-fixes-v102","text":"Published at 2018/06/28 Updated some asserts and parallel downloads, as well as some fixes for sync.","title":"Bug Fixes (v1.0.2)"},{"location":"misc/changelog/#bug-fixes-v101","text":"Published at 2018/06/27 And as usual, every major release has a few bugs that make the library unusable! This quick update should fix those, namely: Bug fixes - `client.start() <telethon.client.auth.AuthMethods.start>` was completely broken due to a last-time change requiring named arguments everywhere. - Since the rewrite, if your system clock was wrong, the connection would get stuck in an infinite \"bad message\" loop of responses from Telegram. - Accessing the buttons of a custom message wouldn't work in channels, which lead to fix a completely different bug regarding starting bots. - Disconnecting could complain if the magic ``telethon.sync`` was imported. - Successful automatic reconnections now ask Telegram to send updates to us once again as soon as the library is ready to listen for them. Synchronous magic (v1.0) ======================== *Published at 2018/06/27* .. important:: If you come from Telethon pre-1.0 you **really** want to read :ref:`compatibility-and-convenience` to port your scripts to the new version. The library has been around for well over a year. A lot of improvements have been made, a lot of user complaints have been fixed, and a lot of user desires have been implemented. It's time to consider the public API as stable, and remove some of the old methods that were around until now for compatibility reasons. But there's one more surprise! There is a new magic ``telethon.sync`` module to let you use **all** the methods in the :ref:`TelegramClient <telethon-client>` (and the types returned from its functions) in a synchronous way, while using `asyncio` behind the scenes! This means you're now able to do both of the following: .. code-block:: python import asyncio async def main(): await client.send_message('me', 'Hello!') asyncio.get_event_loop().run_until_complete(main()) # ...can be rewritten as: from telethon import sync client.send_message('me', 'Hello!') Both ways can coexist (you need to ``await`` if the loop is running). You can also use the magic ``sync`` module in your own classes, and call ``sync.syncify(cls)`` to convert all their ``async def`` into magic variants. Breaking Changes ~~~~~~~~~~~~~~~~ - ``message.get_fwd_sender`` is now in `message.forward <telethon.tl.custom.message.Message.forward>`. - ``client.idle`` is now `client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected>` - ``client.add_update_handler`` is now `client.add_event_handler <telethon.client.updates.UpdateMethods.add_event_handler>` - ``client.remove_update_handler`` is now `client.remove_event_handler <telethon.client.updates.UpdateMethods.remove_event_handler>` - ``client.list_update_handlers`` is now `client.list_event_handlers <telethon.client.updates.UpdateMethods.list_event_handlers>` - ``client.get_message_history`` is now `client.get_messages <telethon.client.messages.MessageMethods.get_messages>` - ``client.send_voice_note`` is now `client.send_file <telethon.client.uploads.UploadMethods.send_file>` with ``is_voice=True``. - ``client.invoke()`` is now ``client(...)``. - ``report_errors`` has been removed since it's currently not used, and ``flood_sleep_threshold`` is now part of the client. - The ``update_workers`` and ``spawn_read_thread`` arguments are gone. Simply remove them from your code when you create the client. - Methods with a lot of arguments can no longer be used without specifying their argument. Instead you need to use named arguments. This improves readability and not needing to learn the order of the arguments, which can also change. Additions client.send_file <telethon.client.uploads.UploadMethods.send_file> now accepts external http:// and https:// URLs. You can use the :ref: TelegramClient <telethon-client> inside of with blocks, which will client.start() <telethon.client.auth.AuthMethods.start> and disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect> the client for you: .. code-block:: python from telethon import TelegramClient, sync with TelegramClient(name, api_id, api_hash) as client: client.send_message('me', 'Hello!') Convenience at its maximum! You can even chain the .start() <telethon.client.auth.AuthMethods.start> method since it returns the instance of the client: .. code-block:: python with TelegramClient(name, api_id, api_hash).start(bot_token=token) as bot: bot.send_message(chat, 'Hello!') Bug fixes - There were some ``@property async def`` left, and some ``await property``. - \"User joined\" event was being treated as \"User was invited\". - SQLite's cursor should not be closed properly after usage. - ``await`` the updates task upon disconnection. - Some bug in Python 3.5.2's `asyncio` causing 100% CPU load if you forgot to call `client.disconnect() <telethon.client.telegrambaseclient.TelegramBaseClient.disconnect>`. The method is called for you on object destruction, but you still should disconnect manually or use a ``with`` block. - Some fixes regarding disconnecting on client deletion and properly saving the authorization key. - Passing a class to `message.get_entities_text <telethon.tl.custom.message.Message.get_entities_text>` now works properly. - Iterating messages from a specific user in private messages now works. Enhancements ~~~~~~~~~~~~ - Both `client.start() <telethon.client.auth.AuthMethods.start>` and `client.run_until_disconnected() <telethon.client.updates.UpdateMethods.run_until_disconnected>` can be ran in both a synchronous way (without starting the loop manually) or from an ``async def`` where they need to have an ``await``. Core Rewrite in asyncio (v1.0-rc1) ================================== *Published at 2018/06/24* +-----------------------+ | Scheme layer used: 81 | +-----------------------+ This version is a major overhaul of the library internals. The core has been rewritten, cleaned up and refactored to fix some oddities that have been growing inside the library. This means that the code is easier to understand and reason about, including the code flow such as conditions, exceptions, where to reconnect, how the library should behave, and separating different retry types such as disconnections or call fails, but it also means that **some things will necessarily break** in this version. All requests that touch the network are now methods and need to have their ``await`` (or be ran until their completion). Also, the library finally has the simple logo it deserved: a carefully hand-written ``.svg`` file representing a T following Python's colours. Breaking Changes ~~~~~~~~~~~~~~~~ - If you relied on internals like the ``MtProtoSender`` and the ``TelegramBareClient``, both are gone. They are now `MTProtoSender <telethon.network.mtprotosender.MTProtoSender>` and `TelegramBaseClient <telethon.client.telegrambaseclient.TelegramBaseClient>` and they behave differently. - Underscores have been renamed from filenames. This means ``telethon.errors.rpc_error_list`` won't work, but you should have been using `telethon.errors` all this time instead. - `client.connect <telethon.client.telegrambaseclient.TelegramBaseClient.connect>` no longer returns `True` on success. Instead, you should ``except`` the possible ``ConnectionError`` and act accordingly. This makes it easier to not ignore the error. - You can no longer set ``retries=n`` when calling a request manually. The limit works differently now, and it's done on a per-client basis. - Accessing `.sender <telethon.tl.custom.message.Message.sender>`, `.chat <telethon.tl.custom.message.Message.chat>` and similar may *not* work in events anymore, since previously they could access the network. The new rule is that properties are not allowed to make API calls. You should use `.get_sender() <telethon.tl.custom.message.Message.get_sender>`, `.get_chat() <telethon.tl.custom.message.Message.get_chat>` instead while using events. You can safely access properties if you get messages through `client.get_messages() <telethon.client.messages.MessageMethods.get_messages>` or other methods in the client. - The above point means ``reply_message`` is now `.get_reply_message() <telethon.tl.custom.message.Message.get_reply_message>`, and ``fwd_from_entity`` is now `get_fwd_sender() <telethon.tl.custom.message.Message.get_fwd_sender>`. Also ``forward`` was gone in the previous version, and you should be using ``fwd_from`` instead. Additions Telegram's Terms Of Service are now accepted when creating a new account. This can possibly help avoid bans. This has no effect for accounts that were created before. The method reference <https://tl.telethon.dev/> _ now shows which methods can be used if you sign in with a bot_token . There's a new client.disconnected <telethon.client.telegrambaseclient.TelegramBaseClient.disconnected> future which you can wait on. When a disconnection occurs, you will now, instead letting it happen in the background. More configurable retries parameters, such as auto-reconnection, retries when connecting, and retries when sending a request. You can filter events.NewMessage <telethon.events.newmessage.NewMessage> by sender ID, and also whether they are forwards or not. New ignore_migrated parameter for client.iter_dialogs <telethon.client.dialogs.DialogMethods.iter_dialogs> . Bug fixes - Several fixes to `telethon.events.newmessage.NewMessage`. - Removed named ``length`` argument in ``to_bytes`` for PyPy. - Raw events failed due to not having ``._set_client``. - `message.get_entities_text <telethon.tl.custom.message.Message.get_entities_text>` properly supports filtering, even if there are no message entities. - `message.click <telethon.tl.custom.message.Message.click>` works better. - The server started sending :tl:`DraftMessageEmpty` which the library didn't handle correctly when getting dialogs. - The \"correct\" chat is now always returned from returned messages. - ``to_id`` was not validated when retrieving messages by their IDs. - ``'__'`` is no longer considered valid in usernames. - The ``fd`` is removed from the reader upon closing the socket. This should be noticeable in Windows. - :tl:`MessageEmpty` is now handled when searching messages. - Fixed a rare infinite loop bug in `client.iter_dialogs <telethon.client.dialogs.DialogMethods.iter_dialogs>` for some people. - Fixed ``TypeError`` when there is no `.sender <telethon.tl.custom.message.Message.sender>`. Enhancements ~~~~~~~~~~~~ - You can now delete over 100 messages at once with `client.delete_messages <telethon.client.messages.MessageMethods.delete_messages>`. - Signing in now accounts for ``AuthRestartError`` itself, and also handles ``PasswordHashInvalidError``. - ``__all__`` is now defined, so ``from telethon import *`` imports sane defaults (client, events and utils). This is however discouraged and should be used only in quick scripts. - ``pathlib.Path`` is now supported for downloading and uploading media. - Messages you send to yourself are now considered outgoing, unless they are forwarded. - The documentation has been updated with a brand new `asyncio` crash course to encourage you use it. You can still use the threaded version if you want though. - ``.name`` property is now properly supported when sending and downloading files. - Custom ``parse_mode``, which can now be set per-client, support :tl:`MessageEntityMentionName` so you can return those now. - The session file is saved less often, which could result in a noticeable speed-up when working with a lot of incoming updates. Internal changes ~~~~~~~~~~~~~~~~ - The flow for sending a request is as follows: the ``TelegramClient`` creates a ``MTProtoSender`` with a ``Connection``, and the sender starts send and receive loops. Sending a request means enqueueing it in the sender, which will eventually pack and encrypt it with its ``ConnectionState`` instead of using the entire ``Session`` instance. When the data is packed, it will be sent over the ``Connection`` and ultimately over the ``TcpClient``. - Reconnection occurs at the ``MTProtoSender`` level, and receiving responses follows a similar process, but now ``asyncio.Future`` is used for the results which are no longer part of all ``TLObject``, instead are part of the ``TLMessage`` which simplifies things. - Objects can no longer be ``content_related`` and instead subclass ``TLRequest``, making the separation of concerns easier. - The ``TelegramClient`` has been split into several mixin classes to avoid having a 3,000-lines-long file with all the methods. - More special cases in the ``MTProtoSender`` have been cleaned up, and also some attributes from the ``Session`` which didn't really belong there since they weren't being saved. - The ``telethon_generator/`` can now convert ``.tl`` files into ``.json``, mostly as a proof of concept, but it might be useful for other people. Custom Message class (v0.19.1) ============================== *Published at 2018/06/03* +-----------------------+ | Scheme layer used: 80 | +-----------------------+ This update brings a new `telethon.tl.custom.message.Message` object! All the methods in the `telethon.telegram_client.TelegramClient` that used to return a :tl:`Message` will now return this object instead, which means you can do things like the following: .. code-block:: python msg = client.send_message(chat, 'Hello!') msg.edit('Hello there!') msg.reply('Good day!') print(msg.sender) Refer to its documentation to see all you can do, again, click `telethon.tl.custom.message.Message` to go to its page. Breaking Changes ~~~~~~~~~~~~~~~~ - The `telethon.network.connection.common.Connection` class is now an ABC, and the old ``ConnectionMode`` is now gone. Use a specific connection (like `telethon.network.connection.tcpabridged.ConnectionTcpAbridged`) instead. Additions You can get messages by their ID with telethon.telegram_client.TelegramClient.get_messages 's ids parameter: .. code-block:: python message = client.get_messages(chats, ids=123) # Single message message_list = client.get_messages(chats, ids=[777, 778]) # Multiple More convenience properties for telethon.tl.custom.dialog.Dialog . New default telethon.telegram_client.TelegramClient.parse_mode . You can edit the media of messages that already have some media. New dark theme in the online tl reference, check it out at https://tl.telethon.dev/ . Bug fixes - Some IDs start with ``1000`` and these would be wrongly treated as channels. - Some short usernames like ``@vote`` were being ignored. - `telethon.telegram_client.TelegramClient.iter_messages`'s ``from_user`` was failing if no filter had been set. - `telethon.telegram_client.TelegramClient.iter_messages`'s ``min_id/max_id`` was being ignored by Telegram. This is now worked around. - `telethon.telegram_client.TelegramClient.catch_up` would fail with empty states. - `telethon.events.newmessage.NewMessage` supports ``incoming=False`` to indicate ``outgoing=True``. Enhancements ~~~~~~~~~~~~ - You can now send multiple requests at once while preserving the order: .. code-block:: python from telethon.tl.functions.messages import SendMessageRequest client([SendMessageRequest(chat, 'Hello 1!'), SendMessageRequest(chat, 'Hello 2!')], ordered=True) Internal changes ~~~~~~~~~~~~~~~~ - ``without rowid`` is not used in SQLite anymore. - Unboxed serialization would fail. - Different default limit for ``iter_messages`` and ``get_messages``. - Some clean-up in the ``telethon_generator/`` package. Catching up on Updates (v0.19) ============================== *Published at 2018/05/07* +-----------------------+ | Scheme layer used: 76 | +-----------------------+ This update prepares the library for catching up with updates with the new `telethon.telegram_client.TelegramClient.catch_up` method. This feature needs more testing, but for now it will let you \"catch up\" on some old updates that occurred while the library was offline, and brings some new features and bug fixes. Additions Add search , filter and from_user parameters to telethon.telegram_client.TelegramClient.iter_messages . telethon.telegram_client.TelegramClient.download_file now supports a None path to return the file in memory and return its bytes . Events now have a .original_update field. Bug fixes - Fixed a race condition when receiving items from the network. - A disconnection is made when \"retries reached 0\". This hasn't been tested but it might fix the bug. - ``reply_to`` would not override :tl:`Message` object's reply value. - Add missing caption when sending :tl:`Message` with media. Enhancements ~~~~~~~~~~~~ - Retry automatically on ``RpcCallFailError``. This error happened a lot when iterating over many messages, and retrying often fixes it. - Faster `telethon.telegram_client.TelegramClient.iter_messages` by sleeping only as much as needed. - `telethon.telegram_client.TelegramClient.edit_message` now supports omitting the entity if you pass a :tl:`Message`. - `telethon.events.raw.Raw` can now be filtered by type. Internal changes ~~~~~~~~~~~~~~~~ - The library now distinguishes between MTProto and API schemas. - :tl:`State` is now persisted to the session file. - Connection won't retry forever. - Fixed some errors and cleaned up the generation of code. - Fixed typos and enhanced some documentation in general. - Add auto-cast for :tl:`InputMessage` and :tl:`InputLocation`. Pickle-able objects (v0.18.3) ============================= *Published at 2018/04/15* Now you can use Python's ``pickle`` module to serialize ``RPCError`` and any other ``TLObject`` thanks to **@vegeta1k95**! A fix that was fairly simple, but still might be useful for many people. As a side note, the documentation at https://tl.telethon.dev now lists known ``RPCError`` for all requests, so you know what to expect. This required a major rewrite, but it was well worth it! Breaking changes ~~~~~~~~~~~~~~~~ - `telethon.telegram_client.TelegramClient.forward_messages` now returns a single item instead of a list if the input was also a single item. Additions New telethon.events.messageread.MessageRead event, to find out when and who read which messages as soon as it happens. Now you can access .chat_id on all events and .sender_id on some. Bug fixes - Possibly fix some bug regarding lost ``GzipPacked`` requests. - The library now uses the \"real\" layer 75, hopefully. - Fixed ``.entities`` name collision on updates by making it private. - ``AUTH_KEY_DUPLICATED`` is handled automatically on connection. - Markdown parser's offset uses ``match.start()`` to allow custom regex. - Some filter types (as a type) were not supported by `telethon.telegram_client.TelegramClient.iter_participants`. - `telethon.telegram_client.TelegramClient.remove_event_handler` works. - `telethon.telegram_client.TelegramClient.start` works on all terminals. - :tl:`InputPeerSelf` case was missing from `telethon.telegram_client.TelegramClient.get_input_entity`. Enhancements ~~~~~~~~~~~~ - The ``parse_mode`` for messages now accepts a callable. - `telethon.telegram_client.TelegramClient.download_media` accepts web previews. - `telethon.tl.custom.dialog.Dialog` instances can now be casted into :tl:`InputPeer`. - Better logging when reading packages \"breaks\". - Better and more powerful ``setup.py gen`` command. Internal changes ~~~~~~~~~~~~~~~~ - The library won't call ``.get_dialogs()`` on entity not found. Instead, it will ``raise ValueError()`` so you can properly ``except`` it. - Several new examples and updated documentation. - ``py:obj`` is the default Sphinx's role which simplifies ``.rst`` files. - ``setup.py`` now makes use of ``python_requires``. - Events now live in separate files. - Other minor changes. Several bug fixes (v0.18.2) =========================== *Published at 2018/03/27* Just a few bug fixes before they become too many. Additions Getting an entity by its positive ID should be enough, regardless of their type (whether it's an User , a Chat or a Channel ). Although wrapping them inside a Peer is still recommended, it's not necessary. New client.edit_2fa function to change your Two Factor Authentication settings. .stringify() and string representation for custom Dialog/Draft . Bug fixes - Some bug regarding ``.get_input_peer``. - ``events.ChatAction`` wasn't picking up all the pins. - ``force_document=True`` was being ignored for albums. - Now you're able to send ``Photo`` and ``Document`` as files. - Wrong access to a member on chat forbidden error for ``.get_participants``. An empty list is returned instead. - ``me/self`` check for ``.get[_input]_entity`` has been moved up so if someone has \"me\" or \"self\" as their name they won't be retrieved. Iterator methods (v0.18.1) ========================== *Published at 2018/03/17* All the ``.get_`` methods in the ``TelegramClient`` now have a ``.iter_`` counterpart, so you can do operations while retrieving items from them. For instance, you can ``client.iter_dialogs()`` and ``break`` once you find what you're looking for instead fetching them all at once. Another big thing, you can get entities by just their positive ID. This may cause some collisions (although it's very unlikely), and you can (should) still be explicit about the type you want. However, it's a lot more convenient and less confusing. Breaking changes ~~~~~~~~~~~~~~~~ - The library only offers the default ``SQLiteSession`` again. See :ref:`sessions` for more on how to use a different storage from now on. Additions Events now override __str__ and implement .stringify() , just like every other TLObject does. events.ChatAction now has :meth: respond , :meth: reply and :meth: delete for the message that triggered it. :meth: client.iter_participants (and its :meth: client.get_participants counterpart) now expose the filter argument, and the returned users also expose the .participant they are. You can now use :meth: client.remove_event_handler and :meth: client.list_event_handlers similar how you could with normal updates. New properties on events.NewMessage , like .video_note and .gif to access only specific types of documents. The Draft class now exposes .text and .raw_text , as well as a new :meth: Draft.send to send it. Bug fixes - ``MessageEdited`` was ignoring ``NewMessage`` constructor arguments. - Fixes for ``Event.delete_messages`` which wouldn't handle ``MessageService``. - Bot API style IDs not working on :meth:`client.get_input_entity`. - :meth:`client.download_media` didn't support ``PhotoSize``. Enhancements ~~~~~~~~~~~~ - Less RPC are made when accessing the ``.sender`` and ``.chat`` of some events (mostly those that occur in a channel). - You can send albums larger than 10 items (they will be sliced for you), as well as mixing normal files with photos. - ``TLObject`` now have Python type hints. Internal changes ~~~~~~~~~~~~~~~~ - Several documentation corrections. - :meth:`client.get_dialogs` is only called once again when an entity is not found to avoid flood waits. Sessions overhaul (v0.18) ========================= *Published at 2018/03/04* +-----------------------+ | Scheme layer used: 75 | +-----------------------+ The ``Session``'s have been revisited thanks to the work of **@tulir** and they now use an `ABC <https://docs.python.org/3/library/abc.html>`__ so you can easily implement your own! The default will still be a ``SQLiteSession``, but you might want to use the new ``AlchemySessionContainer`` if you need. Refer to the section of the documentation on :ref:`sessions` for more. Breaking changes ~~~~~~~~~~~~~~~~ - ``events.MessageChanged`` doesn't exist anymore. Use the new ``events.MessageEdited`` and ``events.MessageDeleted`` instead. Additions The mentioned addition of new session types. You can omit the event type on client.add_event_handler to use Raw . You can raise StopPropagation of events if you added several of them. .get_participants() can now get up to 90,000 members from groups with 100,000 if when aggressive=True , \"bypassing\" Telegram's limit. You now can access NewMessage.Event.pattern_match . Multiple captions are now supported when sending albums. client.send_message() has an optional file= parameter, so you can do events.reply(file='/path/to/photo.jpg') and similar. Added .input_ versions to events.ChatAction . You can now access the public .client property on events . New client.forward_messages , with its own wrapper on events , called event.forward_to(...) . Bug fixes - Silly bug regarding ``client.get_me(input_peer=True)``. - ``client.send_voice_note()`` was missing some parameters. - ``client.send_file()`` plays better with streams now. - Incoming messages from bots weren't working with whitelists. - Markdown's URL regex was not accepting newlines. - Better attempt at joining background update threads. - Use the right peer type when a marked integer ID is provided. Internal changes ~~~~~~~~~~~~~~~~ - Resolving ``events.Raw`` is now a no-op. - Logging calls in the ``TcpClient`` to spot errors. - ``events`` resolution is postponed until you are successfully connected, so you can attach them before starting the client. - When an entity is not found, it is searched in *all* dialogs. This might not always be desirable but it's more comfortable for legitimate uses. - Some non-persisting properties from the ``Session`` have been moved out. Further easing library usage (v0.17.4) ====================================== *Published at 2018/02/24* Some new things and patches that already deserved their own release. Additions New pattern argument to NewMessage to easily filter messages. New .get_participants() convenience method to get members from chats. .send_message() now accepts a Message as the message parameter. You can now .get_entity() through exact name match instead username. Raise ProxyConnectionError instead looping forever so you can except it on your own code and behave accordingly. Bug fixes - ``.parse_username`` would fail with ``www.`` or a trailing slash. - ``events.MessageChanged`` would fail with ``UpdateDeleteMessages``. - You can now send ``b'byte strings'`` directly as files again. - ``.send_file()`` was not respecting the original captions when passing another message (or media) as the file. - Downloading media from a different data center would always log a warning for the first time. Internal changes ~~~~~~~~~~~~~~~~ - Use ``req_pq_multi`` instead ``req_pq`` when generating ``auth_key``. - You can use ``.get_me(input_peer=True)`` if all you need is your self ID. - New addition to the interactive client example to show peer information. - Avoid special casing ``InputPeerSelf`` on some ``NewMessage`` events, so you can always safely rely on ``.sender`` to get the right ID. New small convenience functions (v0.17.3) ========================================= *Published at 2018/02/18* More bug fixes and a few others addition to make events easier to use. Additions Use hachoir to extract video and audio metadata before upload. New .add_event_handler , .add_update_handler now deprecated. Bug fixes - ``bot_token`` wouldn't work on ``.start()``, and changes to ``password`` (now it will ask you for it if you don't provide it, as docstring hinted). - ``.edit_message()`` was ignoring the formatting (e.g. markdown). - Added missing case to the ``NewMessage`` event for normal groups. - Accessing the ``.text`` of the ``NewMessage`` event was failing due to a bug with the markdown unparser. Internal changes ~~~~~~~~~~~~~~~~ - ``libssl`` is no longer an optional dependency. Use ``cryptg`` instead, which you can find on https://pypi.org/project/cryptg/. New small convenience functions (v0.17.2) ========================================= *Published at 2018/02/15* Primarily bug fixing and a few welcomed additions. Additions New convenience .edit_message() method on the TelegramClient . New .edit() and .delete() shorthands on the NewMessage event. Default to markdown parsing when sending and editing messages. Support for inline mentions when sending and editing messages. They work like inline urls (e.g. [text](@username) ) and also support the Bot-API style (see here <https://core.telegram.org/bots/api#formatting-options> __). Bug fixes - Periodically send ``GetStateRequest`` automatically to keep the server sending updates even if you're not invoking any request yourself. - HTML parsing was failing due to not handling surrogates properly. - ``.sign_up`` was not accepting ``int`` codes. - Whitelisting more than one chat on ``events`` wasn't working. - Video files are sent as a video by default unless ``force_document``. Internal changes ~~~~~~~~~~~~~~~~ - More ``logging`` calls to help spot some bugs in the future. - Some more logic to retrieve input entities on events. - Clarified a few parts of the documentation. Updates as Events (v0.17.1) =========================== *Published at 2018/02/09* Of course there was more work to be done regarding updates, and it's here! The library comes with a new ``events`` module (which you will often import as ``from telethon import TelegramClient, events``). This are pretty much all the additions that come with this version change, but they are a nice addition. Refer to *(removed broken link)* to get started with events. Trust the Server with Updates (v0.17) ===================================== *Published at 2018/02/03* The library trusts the server with updates again. The library will *not* check for duplicates anymore, and when the server kicks us, it will run ``GetStateRequest`` so the server starts sending updates again (something it wouldn't do unless you invoked something, it seems). But this update also brings a few more changes! Additions TLObject 's override __eq__ and __ne__ , so you can compare them. Added some missing cases on .get_input_entity() and peer functions. obj.to_dict() now has a '_' key with the type used. .start() can also sign up now. More parameters for .get_message_history() . Updated list of RPC errors. HTML parsing thanks to @tulir ! It can be used similar to markdown: client.send_message(..., parse_mode='html') . Enhancements - ``client.send_file()`` now accepts ``Message``'s and ``MessageMedia``'s as the ``file`` parameter. - Some documentation updates and fixed to clarify certain things. - New exact match feature on https://tl.telethon.dev. - Return as early as possible from ``.get_input_entity()`` and similar, to avoid penalizing you for doing this right. Bug fixes ~~~~~~~~~ - ``.download_media()`` wouldn't accept a ``Document`` as parameter. - The SQLite is now closed properly on disconnection. - IPv6 addresses shouldn't use square braces. - Fix regarding ``.log_out()``. - The time offset wasn't being used (so having wrong system time would cause the library not to work at all). New ``.resolve()`` method (v0.16.2) =================================== *Published at 2018/01/19* The ``TLObject``'s (instances returned by the API and ``Request``'s) have now acquired a new ``.resolve()`` method. While this should be used by the library alone (when invoking a request), it means that you can now use ``Peer`` types or even usernames where a ``InputPeer`` is required. The object now has access to the ``client``, so that it can fetch the right type if needed, or access the session database. Furthermore, you can reuse requests that need \"autocast\" (e.g. you put :tl:`User` but ``InputPeer`` was needed), since ``.resolve()`` is called when invoking. Before, it was only done on object construction. Additions ~~~~~~~~~ - Album support. Just pass a list, tuple or any iterable to ``.send_file()``. Enhancements .start() asks for your phone only if required. Better file cache. All files under 10MB, once uploaded, should never be needed to be re-uploaded again, as the sent media is cached to the session. Bug fixes - ``setup.py`` now calls ``gen_tl`` when installing the library if needed. Internal changes ~~~~~~~~~~~~~~~~ - The mentioned ``.resolve()`` to perform \"autocast\", more powerful. - Upload and download methods are no longer part of ``TelegramBareClient``. - Reuse ``.on_response()``, ``.__str__`` and ``.stringify()``. Only override ``.on_response()`` if necessary (small amount of cases). - Reduced \"autocast\" overhead as much as possible. You shouldn't be penalized if you've provided the right type. MtProto 2.0 (v0.16.1) ===================== *Published at 2018/01/11* +-----------------------+ | Scheme layer used: 74 | +-----------------------+ The library is now using MtProto 2.0! This shouldn't really affect you as an end user, but at least it means the library will be ready by the time MtProto 1.0 is deprecated. Additions New .start() method, to make the library avoid boilerplate code. .send_file accepts a new optional thumbnail parameter, and returns the Message with the sent file. Bug fixes - The library uses again only a single connection. Less updates are be dropped now, and the performance is even better than using temporary connections. - ``without rowid`` will only be used on the ``*.session`` if supported. - Phone code hash is associated with phone, so you can change your mind when calling ``.sign_in()``. Internal changes ~~~~~~~~~~~~~~~~ - File cache now relies on the hash of the file uploaded instead its path, and is now persistent in the ``*.session`` file. Report any bugs on this! - Clearer error when invoking without being connected. - Markdown parser doesn't work on bytes anymore (which makes it cleaner). Sessions as sqlite databases (v0.16) ==================================== *Published at 2017/12/28* In the beginning, session files used to be pickle. This proved to be bad as soon as one wanted to add more fields. For this reason, they were migrated to use JSON instead. But this proved to be bad as soon as one wanted to save things like entities (usernames, their ID and hash), so now it properly uses `sqlite3 <https://docs.python.org/3/library/sqlite3.html>`__, which has been well tested, to save the session files! Calling ``.get_input_entity`` using a ``username`` no longer will need to fetch it first, so it's really 0 calls again. Calling ``.get_entity`` will always fetch the most up to date version. Furthermore, nearly everything has been documented, thus preparing the library for `Read the Docs <https://readthedocs.org/>`__ (although there are a few things missing I'd like to polish first), and the `logging <https://docs.python.org/3/library/logging.html>`__ are now better placed. Breaking changes ~~~~~~~~~~~~~~~~ - ``.get_dialogs()`` now returns a **single list** instead a tuple consisting of a **custom class** that should make everything easier to work with. - ``.get_message_history()`` also returns a **single list** instead a tuple, with the ``Message`` instances modified to make them more convenient. Both lists have a ``.total`` attribute so you can still know how many dialogs/messages are in total. Additions The mentioned use of sqlite3 for the session file. .get_entity() now supports lists too, and it will make as little API calls as possible if you feed it InputPeer types. Usernames will always be resolved, since they may have changed. .set_proxy() method, to avoid having to create a new TelegramClient . More date types supported to represent a date parameter. Bug fixes - Empty strings weren't working when they were a flag parameter (e.g., setting no last name). - Fix invalid assertion regarding flag parameters as well. - Avoid joining the background thread on disconnect, as it would be `None` due to a race condition. - Correctly handle `None` dates when downloading media. - ``.download_profile_photo`` was failing for some channels. - ``.download_media`` wasn't handling ``Photo``. Internal changes ~~~~~~~~~~~~~~~~ - ``date`` was being serialized as local date, but that was wrong. - ``date`` was being represented as a ``float`` instead of an ``int``. - ``.tl`` parser wasn't stripping inline comments. - Removed some redundant checks on ``update_state.py``. - Use a `synchronized queue <https://docs.python.org/3/library/queue.html>`__ instead a hand crafted version. - Use signed integers consistently (e.g. ``salt``). - Always read the corresponding ``TLObject`` from API responses, except for some special cases still. - A few more ``except`` low level to correctly wrap errors. - More accurate exception types. - ``invokeWithLayer(initConnection(X))`` now wraps every first request after ``.connect()``. As always, report if you have issues with some of the changes! IPv6 support (v0.15.5) ====================== *Published at 2017/11/16* +-----------------------+ | Scheme layer used: 73 | +-----------------------+ It's here, it has come! The library now **supports IPv6**! Just pass ``use_ipv6=True`` when creating a ``TelegramClient``. Note that I could *not* test this feature because my machine doesn't have IPv6 setup. If you know IPv6 works in your machine but the library doesn't, please refer to `#425 <https://github.com/LonamiWebs/Telethon/issues/425>`_. Additions IPv6 support. New method to extract the text surrounded by MessageEntity \\ 's, in the extensions.markdown module. Enhancements - Markdown parsing is Done Right. - Reconnection on failed invoke. Should avoid \"number of retries reached 0\" (#270). - Some missing autocast to ``Input*`` types. - The library uses the ``NullHandler`` for ``logging`` as it should have always done. - ``TcpClient.is_connected()`` is now more reliable. .. bug-fixes-1: Bug fixes ~~~~~~~~~ - Getting an entity using their phone wasn't actually working. - Full entities aren't saved unless they have an ``access_hash``, to avoid some `None` errors. - ``.get_message_history`` was failing when retrieving items that had messages forwarded from a channel. General enhancements (v0.15.4) ============================== *Published at 2017/11/04* +-----------------------+ | Scheme layer used: 72 | +-----------------------+ This update brings a few general enhancements that are enough to deserve a new release, with a new feature: beta **markdown-like parsing** for ``.send_message()``! .. additions-1: Additions ~~~~~~~~~ - ``.send_message()`` supports ``parse_mode='md'`` for **Markdown**! It works in a similar fashion to the official clients (defaults to double underscore/asterisk, like ``**this**``). Please report any issues with emojies or enhancements for the parser! - New ``.idle()`` method so your main thread can do useful job (listen for updates). - Add missing ``.to_dict()``, ``__str__`` and ``.stringify()`` for ``TLMessage`` and ``MessageContainer``. .. bug-fixes-2: Bug fixes ~~~~~~~~~ - The list of known peers could end \"corrupted\" and have users with ``access_hash=None``, resulting in ``struct`` error for it not being an integer. You shouldn't encounter this issue anymore. - The warning for \"added update handler but no workers set\" wasn't actually working. - ``.get_input_peer`` was ignoring a case for ``InputPeerSelf``. - There used to be an exception when logging exceptions (whoops) on update handlers. - \"Downloading contacts\" would produce strange output if they had semicolons (``;``) in their name. - Fix some cyclic imports and installing dependencies from the ``git`` repository. - Code generation was using f-strings, which are only supported on Python \u22653.6. Internal changes ~~~~~~~~~~~~~~~~ - The ``auth_key`` generation has been moved from ``.connect()`` to ``.invoke()``. There were some issues were ``.connect()`` failed and the ``auth_key`` was `None` so this will ensure to have a valid ``auth_key`` when needed, even if ``BrokenAuthKeyError`` is raised. - Support for higher limits on ``.get_history()`` and ``.get_dialogs()``. - Much faster integer factorization when generating the required ``auth_key``. Thanks @delivrance for making me notice this, and for the pull request. Bug fixes with updates (v0.15.3) ================================ *Published at 2017/10/20* Hopefully a very ungrateful bug has been removed. When you used to invoke some request through update handlers, it could potentially enter an infinite loop. This has been mitigated and it's now safe to invoke things again! A lot of updates were being dropped (all those gzipped), and this has been fixed too. More bug fixes include a `correct parsing <https://github.com/LonamiWebs/Telethon/commit/ee01724cdb7027c1e38625d31446ba1ea7bade92>`__ of certain TLObjects thanks to @stek29, and `some <https://github.com/LonamiWebs/Telethon/commit/ed77ba6f8ff115ac624f02f691c9991e5b37be60>`__ `wrong calls <https://github.com/LonamiWebs/Telethon/commit/16cf94c9add5e94d70c4eee2ac142d8e76af48b9>`__ that would cause the library to crash thanks to @andr-04, and the ``ReadThread`` not re-starting if you were already authorized. Internally, the ``.to_bytes()`` function has been replaced with ``__bytes__`` so now you can do ``bytes(tlobject)``. Bug fixes and new small features (v0.15.2) ========================================== *Published at 2017/10/14* This release primarly focuses on a few bug fixes and enhancements. Although more stuff may have broken along the way. Enhancements You will be warned if you call .add_update_handler with no update_workers . New customizable threshold value on the session to determine when to automatically sleep on flood waits. See client.session.flood_sleep_threshold . New .get_drafts() method with a custom Draft class by @JosXa . Join all threads when calling .disconnect() , to assert no dangling thread is left alive. Larger chunk when downloading files should result in faster downloads. You can use a callable key for the EntityDatabase , so it can be any filter you need. .. bug-fixes-3: Bug fixes - ``.get_input_entity`` was failing for IDs and other cases, also making more requests than it should. - Use ``basename`` instead ``abspath`` when sending a file. You can now also override the attributes. - ``EntityDatabase.__delitem__`` wasn't working. - ``.send_message()`` was failing with channels. - ``.get_dialogs(limit=None)`` should now return all the dialogs correctly. - Temporary fix for abusive duplicated updates. .. enhancements-1: .. internal-changes-1: Internal changes ~~~~~~~~~~~~~~~~ - MsgsAck is now sent in a container rather than its own request. - ``.get_input_photo`` is now used in the generated code. - ``.process_entities`` was being called from more places than only ``__call__``. - ``MtProtoSender`` now relies more on the generated code to read responses. Custom Entity Database (v0.15.1) ================================ *Published at 2017/10/05* The main feature of this release is that Telethon now has a custom database for all the entities you encounter, instead depending on ``@lru_cache`` on the ``.get_entity()`` method. The ``EntityDatabase`` will, by default, **cache** all the users, chats and channels you find in memory for as long as the program is running. The session will, by default, save all key-value pairs of the entity identifiers and their hashes (since Telegram may send an ID that it thinks you already know about, we need to save this information). You can **prevent** the ``EntityDatabase`` from saving users by setting ``client.session.entities.enabled = False``, and prevent the ``Session`` from saving input entities at all by setting ``client.session.save_entities = False``. You can also clear the cache for a certain user through ``client.session.entities.clear_cache(entity=None)``, which will clear all if no entity is given. Additions New method to .delete_messages() . New ChannelPrivateError class. Enhancements - ``.sign_in`` accepts phones as integers. - Changing the IP to which you connect to is as simple as ``client.session.server_address = 'ip'``, since now the server address is always queried from the session. Bug fixes ~~~~~~~~~ - ``.get_dialogs()`` doesn't fail on Windows anymore, and returns the right amount of dialogs. - ``GeneralProxyError`` should be passed to the main thread again, so that you can handle it. Updates Overhaul Update (v0.15) =============================== *Published at 2017/10/01* After hundreds of lines changed on a major refactor, *it's finally here*. It's the **Updates Overhaul Update**; let's get right into it! Breaking changes ~~~~~~~~~~~~~~~~ - ``.create_new_connection()`` is gone for good. No need to deal with this manually since new connections are now handled on demand by the library itself. Enhancements You can invoke requests from update handlers . And any other thread . A new temporary will be made, so that you can be sending even several requests at the same time! Several worker threads for your updates! By default, None will spawn. I recommend you to work with update_workers=4 to get started, these will be polling constantly for updates. You can also change the number of workers at any given time. The library can now run in a single thread again, if you don't need to spawn any at all. Simply set spawn_read_thread=False when creating the TelegramClient ! You can specify limit=None on .get_dialogs() to get all of them[1]. Updates are expanded , so you don't need to check if the update has .updates or an inner .update anymore. All InputPeer entities are saved in the session file, but you can disable this by setting save_entities=False . New .get_input_entity method, which makes use of the above feature. You should use this when a request needs a InputPeer , rather than the whole entity (although both work). Assert that either all or None dependent-flag parameters are set before sending the request. Phone numbers can have dashes, spaces, or parenthesis. They'll be removed before making the request. You can override the phone and its hash on .sign_in() , if you're creating a new TelegramClient on two different places. Bug fixes - ``.log_out()`` was consuming all retries. It should work just fine now. - The session would fail to load if the ``auth_key`` had been removed manually. - ``Updates.check_error`` was popping wrong side, although it's been completely removed. - ``ServerError``\\ 's will be **ignored**, and the request will immediately be retried. - Cross-thread safety when saving the session file. - Some things changed on a matter of when to reconnect, so please report any bugs! .. internal-changes-2: Internal changes ~~~~~~~~~~~~~~~~ - ``TelegramClient`` is now only an abstraction over the ``TelegramBareClient``, which can only do basic things, such as invoking requests, working with files, etc. If you don't need any of the abstractions the ``TelegramClient``, you can now use the ``TelegramBareClient`` in a much more comfortable way. - ``MtProtoSender`` is not thread-safe, but it doesn't need to be since a new connection will be spawned when needed. - New connections used to be cached and then reused. Now only their sessions are saved, as temporary connections are spawned only when needed. - Added more RPC errors to the list. **[1]:** Broken due to a condition which should had been the opposite (sigh), fixed 4 commits ahead on https://github.com/LonamiWebs/Telethon/commit/62ea77cbeac7c42bfac85aa8766a1b5b35e3a76c. -------------- **That's pretty much it**, although there's more work to be done to make the overall experience of working with updates *even better*. Stay tuned! Serialization bug fixes (v0.14.2) ================================= *Published at 2017/09/29* Bug fixes Important , related to the serialization. Every object or request that had to serialize a True/False type was always being serialized as false ! Another bug that didn't allow you to leave as None flag parameters that needed a list has been fixed. Internal changes - Other internal changes include a somewhat more readable ``.to_bytes()`` function and pre-computing the flag instead using bit shifting. The ``TLObject.constructor_id`` has been renamed to ``TLObject.CONSTRUCTOR_ID``, and ``.subclass_of_id`` is also uppercase now. Farewell, BinaryWriter (v0.14.1) ================================ *Published at 2017/09/28* Version ``v0.14`` had started working on the new ``.to_bytes()`` method to dump the ``BinaryWriter`` and its usage on the ``.on_send()`` when serializing TLObjects, and this release finally removes it. The speed up when serializing things to bytes should now be over twice as fast wherever it's needed. Bug fixes ~~~~~~~~~ - This version is again compatible with Python 3.x versions **below 3.5** (there was a method call that was Python 3.5 and above). Internal changes Using proper classes (including the generated code) for generating authorization keys and to write out TLMessage \\ 's.","title":"Bug Fixes (v1.0.1)"},{"location":"misc/changelog/#several-requests-at-once-and-upload-compression-v014","text":"Published at 2017/09/27 New major release, since I've decided that these two features are big enough: Additions - Requests larger than 512 bytes will be **compressed through gzip**, and if the result is smaller, this will be uploaded instead. - You can now send **multiple requests at once**, they're simply ``*var_args`` on the ``.invoke()``. Note that the server doesn't guarantee the order in which they'll be executed! Internally, another important change. The ``.on_send`` function on the ``TLObjects`` is **gone**, and now there's a new ``.to_bytes()``. From my tests, this has always been over twice as fast serializing objects, although more replacements need to be done, so please report any issues. Enhancements ~~~~~~~~~~~~ - Implemented ``.get_input_media`` helper methods. Now you can even use another message as input media! Bug fixes Downloading media from CDNs wasn't working (wrong access to a parameter). Correct type hinting. Added a tiny sleep when trying to perform automatic reconnection. Error reporting is done in the background, and has a shorter timeout. setup.py used to fail with wrongly generated code.","title":"Several requests at once and upload compression (v0.14)"},{"location":"misc/changelog/#quick-fix-up-v0136","text":"Published at 2017/09/23 Before getting any further, here's a quick fix-up with things that should have been on v0.13.5 but were missed. Specifically, the timeout when receiving a request will now work properly. Some other additions are a tiny fix when handling updates , which was ignoring some of them, nicer __str__ and .stringify() methods for the TLObject \\ 's, and not stopping the ReadThread if you try invoking something there (now it simply returns None ).","title":"Quick fix-up (v0.13.6)"},{"location":"misc/changelog/#attempts-at-more-stability-v0135","text":"Published at 2017/09/23 Yet another update to fix some bugs and increase the stability of the library, or, at least, that was the attempt! This release should really improve the experience with the background thread that the library starts to read things from the network as soon as it can, but I can't spot every use case, so please report any bug (and as always, minimal reproducible use cases will help a lot). .. bug-fixes-4: Bug fixes - ``setup.py`` was failing on Python < 3.5 due to some imports. - Duplicated updates should now be ignored. - ``.send_message`` would crash in some cases, due to having a typo using the wrong object. - ``\"socket is None\"`` when calling ``.connect()`` should not happen anymore. - ``BrokenPipeError`` was still being raised due to an incorrect order on the ``try/except`` block. .. enhancements-2: Enhancements ~~~~~~~~~~~~ - **Type hinting** for all the generated ``Request``\\ 's and ``TLObjects``! IDEs like PyCharm will benefit from this. - ``ProxyConnectionError`` should properly be passed to the main thread for you to handle. - The background thread will only be started after you're authorized on Telegram (i.e. logged in), and several other attempts at polishing the experience with this thread. - The ``Connection`` instance is only created once now, and reused later. - Calling ``.connect()`` should have a better behavior now (like actually *trying* to connect even if we seemingly were connected already). - ``.reconnect()`` behavior has been changed to also be more consistent by making the assumption that we'll only reconnect if the server has disconnected us, and is now private. .. other-changes-1: Internal changes ~~~~~~~~~~~~~~~~ - ``TLObject.__repr__`` doesn't show the original TL definition anymore, it was a lot of clutter. If you have any complaints open an issue and we can discuss it. - Internally, the ``'+'`` from the phone number is now stripped, since it shouldn't be included. - Spotted a new place where ``BrokenAuthKeyError`` would be raised, and it now is raised there. More bug fixes and enhancements (v0.13.4) ========================================= *Published at 2017/09/18* .. new-stuff-1: Additions TelegramClient now exposes a .is_connected() method. Initial authorization on a new data center will retry up to 5 times by default. Errors that couldn't be handled on the background thread will be raised on the next call to .invoke() or updates.poll() . .. bugs-fixed-1: Bug fixes - Now you should be able to sign in even if you have ``process_updates=True`` and no previous session. - Some errors and methods are documented a bit clearer. - ``.send_message()`` could randomly fail, as the returned type was not expected. - ``TimeoutError`` is now ignored, since the request will be retried up to 5 times by default. - \"-404\" errors (``BrokenAuthKeyError``\\ 's) are now detected when first connecting to a new data center. - ``BufferError`` is handled more gracefully, in the same way as ``InvalidCheckSumError``\\ 's. - Attempt at fixing some \"NoneType has no attribute\u2026\" errors (with the ``.sender``). Internal changes ~~~~~~~~~~~~~~~~ - Calling ``GetConfigRequest`` is now made less often. - The ``initial_query`` parameter from ``.connect()`` is gone, as it's not needed anymore. - Renamed ``all_tlobjects.layer`` to ``all_tlobjects.LAYER`` (since it's a constant). - The message from ``BufferError`` is now more useful. Bug fixes and enhancements (v0.13.3) ==================================== *Published at 2017/09/14* .. bugs-fixed-2: Bug fixes ~~~~~~~~~ - **Reconnection** used to fail because it tried invoking things from the ``ReadThread``. - Inferring **random ids** for ``ForwardMessagesRequest`` wasn't working. - Downloading media from **CDNs** failed due to having forgotten to remove a single line. - ``TcpClient.close()`` now has a **``threading.Lock``**, so ``NoneType has no close()`` should not happen. - New **workaround** for ``msg seqno too low/high``. Also, both ``Session.id/seq`` are not saved anymore. .. enhancements-3: Enhancements ~~~~~~~~~~~~ - **Request will be retried** up to 5 times by default rather than failing on the first attempt. - ``InvalidChecksumError``\\ 's are now **ignored** by the library. - ``TelegramClient.get_entity()`` is now **public**, and uses the ``@lru_cache()`` decorator. - New method to **``.send_voice_note()``**\\ 's. - Methods to send message and media now support a **``reply_to`` parameter**. - ``.send_message()`` now returns the **full message** which was just sent. New way to work with updates (v0.13.2) ====================================== *Published at 2017/09/08* This update brings a new way to work with updates, and it's begging for your **feedback**, or better names or ways to do what you can do now. Please refer to the `wiki/Usage Modes <https://github.com/LonamiWebs/Telethon/wiki/Usage-Modes>`__ for an in-depth description on how to work with updates now. Notice that you cannot invoke requests from within handlers anymore, only the ``v.0.13.1`` patch allowed you to do so. Bug fixes ~~~~~~~~~ - Periodic pings are back. - The username regex mentioned on ``UsernameInvalidError`` was invalid, but it has now been fixed. - Sending a message to a phone number was failing because the type used for a request had changed on layer 71. - CDN downloads weren't working properly, and now a few patches have been applied to ensure more reliability, although I couldn't personally test this, so again, report any feedback. Invoke other requests from within update callbacks (v0.13.1) ============================================================ *Published at 2017/09/04* .. warning:: This update brings some big changes to the update system, so please read it if you work with them! A silly \"bug\" which hadn't been spotted has now been fixed. Now you can invoke other requests from within your update callbacks. However **this is not advised**. You should post these updates to some other thread, and let that thread do the job instead. Invoking a request from within a callback will mean that, while this request is being invoked, no other things will be read. Internally, the generated code now resides under a *lot* less files, simply for the sake of avoiding so many unnecessary files. The generated code is not meant to be read by anyone, simply to do its job. Unused attributes have been removed from the ``TLObject`` class too, and ``.sign_up()`` returns the user that just logged in in a similar way to ``.sign_in()`` now. Connection modes (v0.13) ======================== *Published at 2017/09/04* +-----------------------+ | Scheme layer used: 71 | +-----------------------+ The purpose of this release is to denote a big change, now you can connect to Telegram through different `**connection modes** <https://github.com/LonamiWebs/Telethon/blob/v0.13/telethon/network/connection.py>`__. Also, a **second thread** will *always* be started when you connect a ``TelegramClient``, despite whether you'll be handling updates or ignoring them, whose sole purpose is to constantly read from the network. The reason for this change is as simple as *\"reading and writing shouldn't be related\"*. Even when you're simply ignoring updates, this way, once you send a request you will only need to read the result for the request. Whatever Telegram sent before has already been read and outside the buffer. .. additions-2: Additions ~~~~~~~~~ - The mentioned different connection modes, and a new thread. - You can modify the ``Session`` attributes through the ``TelegramClient`` constructor (using ``**kwargs``). - ``RPCError``\\ 's now belong to some request you've made, which makes more sense. - ``get_input_*`` now handles `None` (default) parameters more gracefully (it used to crash). .. enhancements-4: Enhancements ~~~~~~~~~~~~ - The low-level socket doesn't use a handcrafted timeout anymore, which should benefit by avoiding the arbitrary ``sleep(0.1)`` that there used to be. - ``TelegramClient.sign_in`` will call ``.send_code_request`` if no ``code`` was provided. Deprecation ~~~~~~~~~~~ - ``.sign_up`` does *not* take a ``phone`` argument anymore. Change this or you will be using ``phone`` as ``code``, and it will fail! The definition looks like ``def sign_up(self, code, first_name, last_name='')``. - The old ``JsonSession`` finally replaces the original ``Session`` (which used pickle). If you were overriding any of these, you should only worry about overriding ``Session`` now. Added verification for CDN file (v0.12.2) ========================================= *Published at 2017/08/28* Since the Content Distributed Network (CDN) is not handled by Telegram itself, the owners may tamper these files. Telegram sends their sha256 sum for clients to implement this additional verification step, which now the library has. If any CDN has altered the file you're trying to download, ``CdnFileTamperedError`` will be raised to let you know. Besides this. ``TLObject.stringify()`` was showing bytes as lists (now fixed) and RPC errors are reported by default: In an attempt to help everyone who works with the Telegram API, Telethon will by default report all Remote Procedure Call errors to `PWRTelegram <https://pwrtelegram.xyz/>`__, a public database anyone can query, made by `Daniil <https://github.com/danog>`__. All the information sent is a GET request with the error code, error message and method used. .. note:: If you still would like to opt out, simply set ``client.session.report_errors = False`` to disable this feature. However Daniil would really thank you if you helped him (and everyone) by keeping it on! CDN support (v0.12.1) ===================== *Published at 2017/08/24* The biggest news for this update are that downloading media from CDN's (you'll often encounter this when working with popular channels) now **works**. Bug fixes ~~~~~~~~~ - The method used to download documents crashed because two lines were swapped. - Determining the right path when downloading any file was very weird, now it's been enhanced. - The ``.sign_in()`` method didn't support integer values for the code! Now it does again. Some important internal changes are that the old way to deal with RSA public keys now uses a different module instead the old strange hand-crafted version. Hope the new, super simple ``README.rst`` encourages people to use Telethon and make it better with either suggestions, or pull request. Pull requests are *super* appreciated, but showing some support by leaving a star also feels nice \u2b50\ufe0f. Newbie friendly update (v0.12) ============================== *Published at 2017/08/22* +-----------------------+ | Scheme layer used: 70 | +-----------------------+ This update is overall an attempt to make Telethon a bit more user friendly, along with some other stability enhancements, although it brings quite a few changes. Breaking changes ~~~~~~~~~~~~~~~~ - The ``TelegramClient`` methods ``.send_photo_file()``, ``.send_document_file()`` and ``.send_media_file()`` are now a **single method** called ``.send_file()``. It's also important to note that the **order** of the parameters has been **swapped**: first to *who* you want to send it, then the file itself. - The same applies to ``.download_msg_media()``, which has been renamed to ``.download_media()``. The method now supports a ``Message`` itself too, rather than only ``Message.media``. The specialized ``.download_photo()``, ``.download_document()`` and ``.download_contact()`` still exist, but are private. Additions ~~~~~~~~~ - Updated to **layer 70**! - Both downloading and uploading now support **stream-like objects**. - A lot **faster initial connection** if ``sympy`` is installed (can be installed through ``pip``). - ``libssl`` will also be used if available on your system (likely on Linux based systems). This speed boost should also apply to uploading and downloading files. - You can use a **phone number** or an **username** for methods like ``.send_message()``, ``.send_file()``, and all the other quick-access methods provided by the ``TelegramClient``. .. bug-fixes-5: Bug fixes ~~~~~~~~~ - Crashing when migrating to a new layer and receiving old updates should not happen now. - ``InputPeerChannel`` is now casted to ``InputChannel`` automtically too. - ``.get_new_msg_id()`` should now be thread-safe. No promises. - Logging out on macOS caused a crash, which should be gone now. - More checks to ensure that the connection is flagged correctly as either connected or not. .. note:: Downloading files from CDN's will **not work** yet (something new that comes with layer 70). -------------- That's it, any new idea or suggestion about how to make the project even more friendly is highly appreciated. .. note:: Did you know that you can pretty print any result Telegram returns (called ``TLObject``\\ 's) by using their ``.stringify()`` function? Great for debugging! get_input_* now works with vectors (v0.11.5) ============================================= *Published at 2017/07/11* Quick fix-up of a bug which hadn't been encountered until now. Auto-cast by using ``get_input_*`` now works. get_input_* everywhere (v0.11.4) ================================= *Published at 2017/07/10* For some reason, Telegram doesn't have enough with the `InputPeer <https://tl.telethon.dev/types/input_peer.html>`__. There also exist `InputChannel <https://tl.telethon.dev/types/input_channel.html>`__ and `InputUser <https://tl.telethon.dev/types/input_user.html>`__! You don't have to worry about those anymore, it's handled internally now. Besides this, every Telegram object now features a new default ``.__str__`` look, and also a `.stringify() method <https://github.com/LonamiWebs/Telethon/commit/8fd0d7eadd944ff42e18aaf06228adc7aba794b5>`__ to pretty format them, if you ever need to inspect them. The library now uses `the DEBUG level <https://github.com/LonamiWebs/Telethon/commit/1f7ac7118750ed84e2165dce9c6aca2e6ea0c6a4>`__ everywhere, so no more warnings or information messages if you had logging enabled. The ``no_webpage`` parameter from ``.send_message`` `has been renamed <https://github.com/LonamiWebs/Telethon/commit/0119a006585acd1a1a9a8901a21bb2f193142cfe>`__ to ``link_preview`` for clarity, so now it does the opposite (but has a clearer intention). Quick .send_message() fix (v0.11.3) =================================== *Published at 2017/07/05* A very quick follow-up release to fix a tiny bug with ``.send_message()``, no new features. Callable TelegramClient (v0.11.2) ================================= *Published at 2017/07/04* +-----------------------+ | Scheme layer used: 68 | +-----------------------+ There is a new preferred way to **invoke requests**, which you're encouraged to use: .. code:: python # New! result = client(SomeRequest()) # Old. result = client.invoke(SomeRequest()) Existing code will continue working, since the old ``.invoke()`` has not been deprecated. When you ``.create_new_connection()``, it will also handle ``FileMigrateError``\\ 's for you, so you don't need to worry about those anymore. .. bugs-fixed-3: Bugs fixes Fixed some errors when installing Telethon via pip (for those using either source distributions or a Python version \u2264 3.5). ConnectionResetError didn't flag sockets as closed, but now it does. On a more technical side, msg_id \\ 's are now more accurate.","title":"Attempts at more stability (v0.13.5)"},{"location":"misc/changelog/#improvements-to-the-updates-v0111","text":"Published at 2017/06/24 Receiving new updates shouldn't miss any anymore, also, periodic pings are back again so it should work on the long run. On a different order of things, .connect() also features a timeout. Notice that the timeout= is not passed as a parameter anymore, and is instead specified when creating the TelegramClient . Bug fixes - Fixed some name class when a request had a ``.msg_id`` parameter. - The correct amount of random bytes is now used in DH request - Fixed ``CONNECTION_APP_VERSION_EMPTY`` when using temporary sessions. - Avoid connecting if already connected. Support for parallel connections (v0.11) ======================================== *Published at 2017/06/16* *This update brings a lot of changes, so it would be nice if you could* **read the whole change log**! Breaking changes ~~~~~~~~~~~~~~~~ - Every Telegram error has now its **own class**, so it's easier to fine-tune your ``except``\\ 's. - Markdown parsing is **not part** of Telethon itself anymore, although there are plans to support it again through a some external module. - The ``.list_sessions()`` has been moved to the ``Session`` class instead. - The ``InteractiveTelegramClient`` is **not** shipped with ``pip`` anymore. Additions A new, more lightweight class has been added. The TelegramBareClient is now the base of the normal TelegramClient , and has the most basic features. New method to .create_new_connection() , which can be ran in parallel with the original connection. This will return the previously mentioned TelegramBareClient already connected. Any file object can now be used to download a file (for instance, a BytesIO() instead a file name). Vales like random_id are now automatically inferred , so you can save yourself from the hassle of writing generate_random_long() everywhere. Same applies to .get_input_peer() , unless you really need the extra performance provided by skipping one if if called manually. Every type now features a new .to_dict() method. .. bug-fixes-6: Bug fixes - Received errors are acknowledged to the server, so they don't happen over and over. - Downloading media on different data centers is now up to **x2 faster**, since there used to be an ``InvalidDCError`` for each file part tried to be downloaded. - Lost messages are now properly skipped. - New way to handle the **result of requests**. The old ``ValueError`` \"*The previously sent request must be resent. However, no request was previously sent (possibly called from a different thread).*\" *should* not happen anymore. Internal changes ~~~~~~~~~~~~~~~~ - Some fixes to the ``JsonSession``. - Fixed possibly crashes if trying to ``.invoke()`` a ``Request`` while ``.reconnect()`` was being called on the ``UpdatesThread``. - Some improvements on the ``TcpClient``, such as not switching between blocking and non-blocking sockets. - The code now uses ASCII characters only. - Some enhancements to ``.find_user_or_chat()`` and ``.get_input_peer()``. JSON session file (v0.10.1) =========================== *Published at 2017/06/07* This version is primarily for people to **migrate** their ``.session`` files, which are *pickled*, to the new *JSON* format. Although slightly slower, and a bit more vulnerable since it's plain text, it's a lot more resistant to upgrades. .. warning:: You **must** upgrade to this version before any higher one if you've used Telethon \u2264 v0.10. If you happen to upgrade to an higher version, that's okay, but you will have to manually delete the ``*.session`` file, and logout from that session from an official client. Additions New .get_me() function to get the current user. .is_user_authorized() is now more reliable. New nice button to copy the from telethon.tl.xxx.yyy import Yyy on the online documentation. More error codes added to the errors file. Enhancements - Everything on the documentation is now, theoretically, **sorted alphabetically**. - No second thread is spawned unless one or more update handlers are added. Full support for different DCs and ++stable (v0.10) =================================================== *Published at 2017/06/03* Working with **different data centers** finally *works*! On a different order of things, **reconnection** is now performed automatically every time Telegram decides to kick us off their servers, so now Telethon can really run **forever and ever**! In theory. Enhancements Documentation improvements, such as showing the return type. The msg_id too low/high error should happen less often , if any. Sleeping on the main thread is not done anymore . You will have to except FloodWaitError \\ 's. You can now specify your own application version , device model, system version and language code. Code is now more pythonic (such as making some members private), and other internal improvements (which affect the updates thread ), such as using logger instead a bare print() too. This brings Telethon a whole step closer to v1.0 , though more things should preferably be changed.","title":"Improvements to the updates (v0.11.1)"},{"location":"misc/changelog/#stability-improvements-v091","text":"Published at 2017/05/23 Telethon used to crash a lot when logging in for the very first time. The reason for this was that the reconnection (or dead connections) were not handled properly. Now they are, so you should be able to login directly, without needing to delete the *.session file anymore. Notice that downloading from a different DC is still a WIP. Enhancements ~~~~~~~~~~~~ Updates thread is only started after a successful login. Files meant to be ran by the user now use shebangs and proper permissions. In-code documentation now shows the returning type. Relative import is now used everywhere, so you can rename telethon to anything else. Dead connections are now detected instead entering an infinite loop. Sockets can now be closed (and re-opened) properly. Telegram decided to update the layer 66 without increasing the number. This has been fixed and now we're up-to-date again.","title":"Stability improvements (v0.9.1)"},{"location":"misc/changelog/#general-improvements-v09","text":"Published at 2017/05/19 +-----------------------+ | Scheme layer used: 66 | +-----------------------+ Additions ~~~~~~~~~ The documentation , available online here <https://tl.telethon.dev/> __, has a new search bar. Better cross-thread safety by using threading.Event . More improvements for running Telethon during a long period of time . Bug fixes ~~~~~~~~~ Avoid a certain crash on login (occurred if an unexpected object ID was received). Avoid crashing with certain invalid UTF-8 strings. Avoid crashing on certain terminals by using known ASCII characters where possible. The UpdatesThread is now a daemon, and should cause less issues. Temporary sessions didn't actually work (with session=None ). Internal changes ~~~~~~~~~~~~~~~~ .get_dialogs(count= was renamed to .get_dialogs(limit= .","title":"General improvements (v0.9)"},{"location":"misc/changelog/#bot-login-and-proxy-support-v08","text":"Published at 2017/04/14 Additions ~~~~~~~~~ Bot login , thanks to @JuanPotato for hinting me about how to do it. Proxy support , thanks to @exzhawk for implementing it. Logging support , used by passing --telethon-log=DEBUG (or INFO ) as a command line argument. Bug fixes ~~~~~~~~~ Connection fixes, such as avoiding connection until .connect() is explicitly invoked. Uploading big files now works correctly. Fix uploading big files. Some fixes on the updates thread, such as correctly sleeping when required.","title":"Bot login and proxy support (v0.8)"},{"location":"misc/changelog/#long-run-bug-fix-v071","text":"Published at 2017/02/19 If you're one of those who runs Telethon for a long time (more than 30 minutes), this update by @strayge will be great for you. It sends periodic pings to the Telegram servers so you don't get disconnected and you can still send and receive updates!","title":"Long-run bug fix (v0.7.1)"},{"location":"misc/changelog/#two-factor-authentication-v07","text":"Published at 2017/01/31 +-----------------------+ | Scheme layer used: 62 | +-----------------------+ If you're one of those who love security the most, these are good news. You can now use two factor authentication with Telethon too! As internal changes, the coding style has been improved, and you can easily use custom session objects, and various little bugs have been fixed.","title":"Two factor authentication (v0.7)"},{"location":"misc/changelog/#updated-pip-version-v06","text":"Published at 2016/11/13 +-----------------------+ | Scheme layer used: 57 | +-----------------------+ This release has no new major features. However, it contains some small changes that make using Telethon a little bit easier. Now those who have installed Telethon via pip can also take advantage of changes, such as less bugs, creating empty instances of TLObjects , specifying a timeout and more!","title":"Updated pip version (v0.6)"},{"location":"misc/changelog/#ready-pip-go-v05","text":"Published at 2016/09/18 Telethon is now available as a Python package <https://pypi.python.org/pypi?name=Telethon> __ ! Those are really exciting news (except, sadly, the project structure had to change a lot to be able to do that; but hopefully it won't need to change much more, any more!) Not only that, but more improvements have also been made: you're now able to both sign up and logout , watch a pretty \"Uploading/Downloading\u2026 x%\" progress, and other minor changes which make using Telethon easier .","title":"Ready, pip, go! (v0.5)"},{"location":"misc/changelog/#made-interactivetelegramclient-cool-v04","text":"Published at 2016/09/12 Yes, really cool! I promise. Even though this is meant to be a library , that doesn't mean it can't have a good interactive client for you to try the library out. This is why now you can do many, many things with the InteractiveTelegramClient : List dialogs (chats) and pick any you wish. Send any message you like, text, photos or even documents. List the latest messages in the chat. Download any message's media (photos, documents or even contacts!). Receive message updates as you talk (i.e., someone sent you a message). It actually is an usable-enough client for your day by day. You could even add libnotify and pop, you're done! A great cli-client with desktop notifications. Also, being able to download and upload media implies that you can do the same with the library itself. Did I need to mention that? Oh, and now, with even less bugs! I hope.","title":"Made InteractiveTelegramClient cool (v0.4)"},{"location":"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03","text":"Published at 2016/09/11 Telegram is more than an application to send and receive messages. You can also send and receive media . Now, this implementation also gives you the power to upload and download media from any message that contains it! Nothing can now stop you from filling up all your disk space with all the photos! If you want to, of course.","title":"Media revolution and improvements to update handling! (v0.3)"},{"location":"misc/changelog/#handle-updates-in-their-own-thread-v02","text":"Published at 2016/09/10 This version handles updates in a different thread (if you wish to do so). This means that both the low level TcpClient and the not-so-low-level MtProtoSender are now multi-thread safe, so you can use them with more than a single thread without worrying! This also implies that you won't need to send a request to receive an update (is someone typing? did they send me a message? has someone gone offline?). They will all be received instantly . Some other cool examples of things that you can do: when someone tells you \" Hello \", you can automatically reply with another \" Hello \" without even needing to type it by yourself :) However, be careful with spamming!! Do not use the program for that!","title":"Handle updates in their own thread! (v0.2)"},{"location":"misc/changelog/#first-working-alpha-version-v01","text":"Published at 2016/09/06 +-----------------------+ | Scheme layer used: 55 | +-----------------------+ There probably are some bugs left, which haven't yet been found. However, the majority of code works and the application is already usable! Not only that, but also uses the latest scheme as of now and handles way better the errors. This tag is being used to mark this release as stable enough.","title":"First working alpha version! (v0.1)"},{"location":"misc/compatibility-and-convenience/","text":"Compatibility and Convenience \u00b6 Telethon is an asyncio library. Compatibility is an important concern, and while it can't always be kept and mistakes happens, the Changelog is there to tell you when these important changes happen. Compatibility \u00b6 Some decisions when developing will inevitable be proven wrong in the future. One of these decisions was using threads. Now that Python 3.4 is reaching EOL and using asyncio is usable as of Python 3.5 it makes sense for a library like Telethon to make a good use of it. If you have old code, just use old versions of the library! There is nothing wrong with that other than not getting new updates or fixes, but using a fixed version with pip install telethon==0.19.1.6 is easy enough to do. You might want to consider using Virtual Environments in your projects. There's no point in maintaining a synchronous version because the whole point is that people don't have time to upgrade, and there has been several changes and clean-ups. Using an older version is the right way to go. Sometimes, other small decisions are made. These all will be reflected in the :ref: changelog which you should read when upgrading. If you want to jump the asyncio boat, here are some of the things you will need to start migrating really old code: # 1. Import the client from telethon.sync from telethon.sync import TelegramClient # 2. Change this monster... try : assert client . connect () if not client . is_user_authorized (): client . send_code_request ( phone_number ) me = client . sign_in ( phone_number , input ( 'Enter code: ' )) ... # REST OF YOUR CODE finally : client . disconnect () # ...for this: with client : ... # REST OF YOUR CODE # 3. client.idle() no longer exists. # Change this... client . idle () # ...to this: client . run_until_disconnected () # 4. client.add_update_handler no longer exists. # Change this... client . add_update_handler ( handler ) # ...to this: client . add_event_handler ( handler ) In addition, all the update handlers must be async def , and you need to await method calls that rely on network requests, such as getting the chat or sender. If you don't use updates, you're done! Convenience \u00b6 Note The entire documentation assumes you have done one of the following: from telethon import TelegramClient , sync # or from telethon.sync import TelegramClient This makes the examples shorter and easier to think about. For quick scripts that don't need updates, it's a lot more convenient to forget about asyncio and just work with sequential code. This can prove to be a powerful hybrid for running under the Python REPL too. from telethon.sync import TelegramClient # ^~~~~ note this part; it will manage the asyncio loop for you with TelegramClient ( ... ) as client : print ( client . get_me () . username ) # ^ notice the lack of await, or loop.run_until_complete(). # Since there is no loop running, this is done behind the scenes. # message = client . send_message ( 'me' , 'Hi!' ) import time time . sleep ( 5 ) message . delete () # You can also have an hybrid between a synchronous # part and asynchronous event handlers. # from telethon import events @client . on ( events . NewMessage ( pattern = '(?i)hi|hello' )) async def handler ( event ): await event . reply ( 'hey' ) client . run_until_disconnected () Some methods, such as with , start , disconnect and run_until_disconnected work both in synchronous and asynchronous contexts by default for convenience, and to avoid the little overhead it has when using methods like sending a message, getting messages, etc. This keeps the best of both worlds as a sane default. Note As a rule of thumb, if you're inside an async def and you need the client, you need to await calls to the API. If you call other functions that also need API calls, make them async def and await them too. Otherwise, there is no need to do so with this mode. Speed \u00b6 When you're ready to micro-optimize your application, or if you simply don't need to call any non-basic methods from a synchronous context, just get rid of telethon.sync and work inside an async def : import asyncio from telethon import TelegramClient , events async def main (): async with TelegramClient ( ... ) as client : print (( await client . get_me ()) . username ) # ^_____________________^ notice these parenthesis # You want to ``await`` the call, not the username. # message = await client . send_message ( 'me' , 'Hi!' ) await asyncio . sleep ( 5 ) await message . delete () @client . on ( events . NewMessage ( pattern = '(?i)hi|hello' )) async def handler ( event ): await event . reply ( 'hey' ) await client . run_until_disconnected () loop = asyncio . get_event_loop () loop . run_until_complete ( main ()) The telethon.sync magic module simply wraps every method behind: loop = asyncio . get_event_loop () loop . run_until_complete ( main ()) So that you don't have to write it yourself every time. That's the overhead you pay if you import it, and what you save if you don't. Learning \u00b6 You know the library uses asyncio everywhere, and you want to learn how to do things right. Even though asyncio is its own topic, the documentation wants you to learn how to use Telethon correctly, and for that, you need to use asyncio correctly too. For this reason, there is a section called Mastering asyncio that will introduce you to the asyncio world, with links to more resources for learning how to use it. Feel free to check that section out once you have read the rest.","title":"Compatibility and Convenience"},{"location":"misc/compatibility-and-convenience/#compatibility-and-convenience","text":"Telethon is an asyncio library. Compatibility is an important concern, and while it can't always be kept and mistakes happens, the Changelog is there to tell you when these important changes happen.","title":"Compatibility and Convenience"},{"location":"misc/compatibility-and-convenience/#compatibility","text":"Some decisions when developing will inevitable be proven wrong in the future. One of these decisions was using threads. Now that Python 3.4 is reaching EOL and using asyncio is usable as of Python 3.5 it makes sense for a library like Telethon to make a good use of it. If you have old code, just use old versions of the library! There is nothing wrong with that other than not getting new updates or fixes, but using a fixed version with pip install telethon==0.19.1.6 is easy enough to do. You might want to consider using Virtual Environments in your projects. There's no point in maintaining a synchronous version because the whole point is that people don't have time to upgrade, and there has been several changes and clean-ups. Using an older version is the right way to go. Sometimes, other small decisions are made. These all will be reflected in the :ref: changelog which you should read when upgrading. If you want to jump the asyncio boat, here are some of the things you will need to start migrating really old code: # 1. Import the client from telethon.sync from telethon.sync import TelegramClient # 2. Change this monster... try : assert client . connect () if not client . is_user_authorized (): client . send_code_request ( phone_number ) me = client . sign_in ( phone_number , input ( 'Enter code: ' )) ... # REST OF YOUR CODE finally : client . disconnect () # ...for this: with client : ... # REST OF YOUR CODE # 3. client.idle() no longer exists. # Change this... client . idle () # ...to this: client . run_until_disconnected () # 4. client.add_update_handler no longer exists. # Change this... client . add_update_handler ( handler ) # ...to this: client . add_event_handler ( handler ) In addition, all the update handlers must be async def , and you need to await method calls that rely on network requests, such as getting the chat or sender. If you don't use updates, you're done!","title":"Compatibility"},{"location":"misc/compatibility-and-convenience/#convenience","text":"Note The entire documentation assumes you have done one of the following: from telethon import TelegramClient , sync # or from telethon.sync import TelegramClient This makes the examples shorter and easier to think about. For quick scripts that don't need updates, it's a lot more convenient to forget about asyncio and just work with sequential code. This can prove to be a powerful hybrid for running under the Python REPL too. from telethon.sync import TelegramClient # ^~~~~ note this part; it will manage the asyncio loop for you with TelegramClient ( ... ) as client : print ( client . get_me () . username ) # ^ notice the lack of await, or loop.run_until_complete(). # Since there is no loop running, this is done behind the scenes. # message = client . send_message ( 'me' , 'Hi!' ) import time time . sleep ( 5 ) message . delete () # You can also have an hybrid between a synchronous # part and asynchronous event handlers. # from telethon import events @client . on ( events . NewMessage ( pattern = '(?i)hi|hello' )) async def handler ( event ): await event . reply ( 'hey' ) client . run_until_disconnected () Some methods, such as with , start , disconnect and run_until_disconnected work both in synchronous and asynchronous contexts by default for convenience, and to avoid the little overhead it has when using methods like sending a message, getting messages, etc. This keeps the best of both worlds as a sane default. Note As a rule of thumb, if you're inside an async def and you need the client, you need to await calls to the API. If you call other functions that also need API calls, make them async def and await them too. Otherwise, there is no need to do so with this mode.","title":"Convenience"},{"location":"misc/compatibility-and-convenience/#speed","text":"When you're ready to micro-optimize your application, or if you simply don't need to call any non-basic methods from a synchronous context, just get rid of telethon.sync and work inside an async def : import asyncio from telethon import TelegramClient , events async def main (): async with TelegramClient ( ... ) as client : print (( await client . get_me ()) . username ) # ^_____________________^ notice these parenthesis # You want to ``await`` the call, not the username. # message = await client . send_message ( 'me' , 'Hi!' ) await asyncio . sleep ( 5 ) await message . delete () @client . on ( events . NewMessage ( pattern = '(?i)hi|hello' )) async def handler ( event ): await event . reply ( 'hey' ) await client . run_until_disconnected () loop = asyncio . get_event_loop () loop . run_until_complete ( main ()) The telethon.sync magic module simply wraps every method behind: loop = asyncio . get_event_loop () loop . run_until_complete ( main ()) So that you don't have to write it yourself every time. That's the overhead you pay if you import it, and what you save if you don't.","title":"Speed"},{"location":"misc/compatibility-and-convenience/#learning","text":"You know the library uses asyncio everywhere, and you want to learn how to do things right. Even though asyncio is its own topic, the documentation wants you to learn how to use Telethon correctly, and for that, you need to use asyncio correctly too. For this reason, there is a section called Mastering asyncio that will introduce you to the asyncio world, with links to more resources for learning how to use it. Feel free to check that section out once you have read the rest.","title":"Learning"},{"location":"misc/wall-of-shame/","text":"Wall of Shame \u00b6 This project has an issues section for you to file issues whenever you encounter any when working with the library. Said section is not for issues on your program but rather issues with Telethon itself. If you have not made the effort to 1. read through the docs and 2. look for the method you need , you will end up on the Wall of Shame , i.e. all issues labeled RTFM : rtfm Literally \"Read The F--king Manual\"; a term showing the frustration of being bothered with questions so trivial that the asker could have quickly figured out the answer on their own with minimal effort, usually by reading readily-available documents. People who say\"RTFM!\" might be considered rude, but the true rude ones are the annoying people who take absolutely no self-responibility and expect to have all the answers handed to them personally. \"Damn, that's the twelveth time that somebody posted this question to the messageboard today! RTFM, already!\" by Bill M. July 27, 2004 If you have indeed read the docs, and have tried looking for the method, and yet you didn't find what you need, that's fine . Telegram's API can have some obscure names at times, and for this reason, there is a \"question\" label with questions that are okay to ask. Just state what you've tried so that we know you've made an effort, or you'll go to the Wall of Shame. Of course, if the issue you're going to open is not even a question but a real issue with the library (thankfully, most of the issues have been that!), you won't end up here. Don't worry. Current winner \u00b6 The current winner is issue #213 : Issue: Answer:","title":"Wall of Shame"},{"location":"misc/wall-of-shame/#wall-of-shame","text":"This project has an issues section for you to file issues whenever you encounter any when working with the library. Said section is not for issues on your program but rather issues with Telethon itself. If you have not made the effort to 1. read through the docs and 2. look for the method you need , you will end up on the Wall of Shame , i.e. all issues labeled RTFM : rtfm Literally \"Read The F--king Manual\"; a term showing the frustration of being bothered with questions so trivial that the asker could have quickly figured out the answer on their own with minimal effort, usually by reading readily-available documents. People who say\"RTFM!\" might be considered rude, but the true rude ones are the annoying people who take absolutely no self-responibility and expect to have all the answers handed to them personally. \"Damn, that's the twelveth time that somebody posted this question to the messageboard today! RTFM, already!\" by Bill M. July 27, 2004 If you have indeed read the docs, and have tried looking for the method, and yet you didn't find what you need, that's fine . Telegram's API can have some obscure names at times, and for this reason, there is a \"question\" label with questions that are okay to ask. Just state what you've tried so that we know you've made an effort, or you'll go to the Wall of Shame. Of course, if the issue you're going to open is not even a question but a real issue with the library (thankfully, most of the issues have been that!), you won't end up here. Don't worry.","title":"Wall of Shame"},{"location":"misc/wall-of-shame/#current-winner","text":"The current winner is issue #213 : Issue: Answer:","title":"Current winner"},{"location":"modules/client/","text":"TelegramClient \u00b6 The TelegramClient <telegramclient.TelegramClient> aggregates several mixin classes to provide all the common functionality in a nice, Pythonic interface. Each mixin has its own methods, which you all can use. In short, to create a client you must run: from telethon import TelegramClient client = TelegramClient ( name , api_id , api_hash ) async def main (): # Now you can use all client methods listed below, like for example... await client . send_message ( 'me' , 'Hello to myself!' ) with client : client . loop . run_until_complete ( main ()) You don't need to import these AuthMethods , MessageMethods , etc. Together they are the TelegramClient <telegramclient.TelegramClient> and you can access all of their methods. See :ref: client-ref for a short summary. \u00b6 Telegram \u00b6 __init__ ( self , api_id , api_hash , database_encryption_key , phone = None , bot_token = None , library_path = None , worker = None , files_directory = None , use_test_dc = False , use_message_database = True , device_model = 'python-telegram' , application_version = '0.12.0' , system_version = 'unknown' , system_language_code = 'en' , login = False , default_workers_queue_size = 1000 , tdlib_verbosity = 2 , proxy_server = '' , proxy_port = 0 , proxy_type = None , use_secret_chats = True ) special \u00b6 Parameters: Name Type Description Default api_id int //my.telegram.org/apps/) required api_hash str //my.telegram.org/apps/) required Source code in telegram\\client.py 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 def __init__ ( self , api_id : int , api_hash : str , database_encryption_key : Union [ str , bytes ], phone : Optional [ str ] = None , bot_token : Optional [ str ] = None , library_path : Optional [ str ] = None , worker : Optional [ Type [ BaseWorker ]] = None , files_directory : Optional [ str ] = None , use_test_dc : bool = False , use_message_database : bool = True , device_model : str = 'python-telegram' , application_version : str = VERSION , system_version : str = 'unknown' , system_language_code : str = 'en' , login : bool = False , default_workers_queue_size : int = 1000 , tdlib_verbosity : int = 2 , proxy_server : str = '' , proxy_port : int = 0 , proxy_type : Optional [ Dict [ str , str ]] = None , use_secret_chats : bool = True , ) -> None : \"\"\" Args: api_id - ID of your app (https://my.telegram.org/apps/) api_hash - api_hash of your app (https://my.telegram.org/apps/) phone - your phone number library_path - you can change path to the compiled libtdjson library worker - worker to process updates files_directory - directory for the tdlib's files (database, images, etc.) use_test_dc - use test datacenter use_message_database use_secret_chats device_model application_version system_version system_language_code \"\"\" self . api_id = api_id self . api_hash = api_hash self . library_path = library_path self . phone = phone self . bot_token = bot_token self . use_test_dc = use_test_dc self . device_model = device_model self . system_version = system_version self . system_language_code = system_language_code self . application_version = application_version self . use_message_database = use_message_database self . _queue_put_timeout = 10 self . proxy_server = proxy_server self . proxy_port = proxy_port self . proxy_type = proxy_type self . use_secret_chats = use_secret_chats if not self . bot_token and not self . phone : raise ValueError ( 'You must provide bot_token or phone' ) self . _database_encryption_key = database_encryption_key if not files_directory : hasher = hashlib . md5 () str_to_encode : str = self . phone or self . bot_token # type: ignore hasher . update ( str_to_encode . encode ( 'utf-8' )) directory_name = hasher . hexdigest () files_directory = f '/tmp/.tdlib_files/ { directory_name } /' self . files_directory = files_directory self . _authorized = False self . _is_enabled = False # todo: move to worker self . _workers_queue : queue . Queue = queue . Queue ( maxsize = default_workers_queue_size ) if not worker : worker = SimpleWorker self . worker = worker ( queue = self . _workers_queue ) self . _results : Dict [ str , AsyncResult ] = {} self . _update_handlers : DefaultDict [ str , List [ Callable ]] = defaultdict ( list ) self . _tdjson = TDJson ( library_path = library_path , verbosity = tdlib_verbosity ) self . _run () if login : self . login () call_method ( self , method_name , params = None , block = False ) \u00b6 Use this method to call any other method of the tdlib Parameters: Name Type Description Default method_name str Name of the method required params Optional[Dict[str, Any]] parameters None Source code in telegram\\client.py 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 def call_method ( self , method_name : str , params : Optional [ Dict [ str , Any ]] = None , block : bool = False , ) -> AsyncResult : \"\"\" Use this method to call any other method of the tdlib Args: method_name: Name of the method params: parameters \"\"\" data = { '@type' : method_name } if params : data . update ( params ) return self . _send_data ( data , block = block ) create_basic_group_chat ( self , basic_group_id ) \u00b6 Create a chat from a basic group Source code in telegram\\client.py 299 300 301 302 303 304 305 306 307 308 def create_basic_group_chat ( self , basic_group_id : int ) -> AsyncResult : \"\"\" Create a chat from a basic group Args: basic_group_id \"\"\" return self . _send_data ( { '@type' : 'createBasicGroupChat' , 'basic_group_id' : basic_group_id } ) delete_messages ( self , chat_id , message_ids , revoke = True ) \u00b6 Delete a list of messages in a chat Source code in telegram\\client.py 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 def delete_messages ( self , chat_id : int , message_ids : List [ int ], revoke : bool = True ) -> AsyncResult : \"\"\" Delete a list of messages in a chat Args: chat_id message_ids revoke \"\"\" return self . _send_data ( { '@type' : 'deleteMessages' , 'chat_id' : chat_id , 'message_ids' : message_ids , 'revoke' : revoke , } ) get_chat ( self , chat_id ) \u00b6 This is offline request, if there is no chat in your database it will not be found tdlib saves chat to the database when it receives a new message or when you call get_chats method. Source code in telegram\\client.py 161 162 163 164 165 166 167 168 def get_chat ( self , chat_id : int ) -> AsyncResult : \"\"\" This is offline request, if there is no chat in your database it will not be found tdlib saves chat to the database when it receives a new message or when you call `get_chats` method. \"\"\" data = { '@type' : 'getChat' , 'chat_id' : chat_id } return self . _send_data ( data ) get_chat_history ( self , chat_id , limit = 1000 , from_message_id = 0 , offset = 0 , only_local = False ) \u00b6 Returns history of a chat Source code in telegram\\client.py 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 def get_chat_history ( self , chat_id : int , limit : int = 1000 , from_message_id : int = 0 , offset : int = 0 , only_local : bool = False , ) -> AsyncResult : \"\"\" Returns history of a chat Args: chat_id limit from_message_id offset only_local \"\"\" data = { '@type' : 'getChatHistory' , 'chat_id' : chat_id , 'limit' : limit , 'from_message_id' : from_message_id , 'offset' : offset , 'only_local' : only_local , } return self . _send_data ( data ) get_chats ( self , offset_order = 0 , offset_chat_id = 0 , limit = 100 ) \u00b6 Returns a list of chats: Returns: Type Description AsyncResult { '@type': 'chats', 'chat_ids': [...], '@extra': { 'request_id': '...' } } Source code in telegram\\client.py 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 def get_chats ( self , offset_order : int = 0 , offset_chat_id : int = 0 , limit : int = 100 ) -> AsyncResult : \"\"\" Returns a list of chats: Returns: { '@type': 'chats', 'chat_ids': [...], '@extra': { 'request_id': '...' } } \"\"\" data = { '@type' : 'getChats' , 'offset_order' : offset_order , 'offset_chat_id' : offset_chat_id , 'limit' : limit , } return self . _send_data ( data ) get_me ( self ) \u00b6 Requests information of the current user (getMe method) https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_me.html Source code in telegram\\client.py 170 171 172 173 174 175 176 177 def get_me ( self ) -> AsyncResult : \"\"\" Requests information of the current user (getMe method) https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_me.html \"\"\" return self . call_method ( 'getMe' ) get_message ( self , chat_id , message_id ) \u00b6 Return a message via its message_id Returns: Type Description AsyncResult AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, 'content': {...}, ... } Source code in telegram\\client.py 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 def get_message ( self , chat_id : int , message_id : int ,) -> AsyncResult : \"\"\" Return a message via its message_id Args: chat_id message_id Returns: AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, 'content': {...}, ... } \"\"\" data = { '@type' : 'getMessage' , 'chat_id' : chat_id , 'message_id' : message_id , } return self . _send_data ( data ) get_supergroup_full_info ( self , supergroup_id ) \u00b6 Get the full info of a supergroup Source code in telegram\\client.py 288 289 290 291 292 293 294 295 296 297 def get_supergroup_full_info ( self , supergroup_id : int ) -> AsyncResult : \"\"\" Get the full info of a supergroup Args: supergroup_id \"\"\" return self . _send_data ( { '@type' : 'getSupergroupFullInfo' , 'supergroup_id' : supergroup_id } ) get_user ( self , user_id ) \u00b6 Requests information about a user with id = user_id. https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_user.html Source code in telegram\\client.py 179 180 181 182 183 184 185 186 def get_user ( self , user_id : int ) -> AsyncResult : \"\"\" Requests information about a user with id = user_id. https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_user.html \"\"\" return self . call_method ( 'getUser' , params = { 'user_id' : user_id }) get_web_page_instant_view ( self , url , force_full = False ) \u00b6 Use this method to request instant preview of a webpage. Returns error with 404 if there is no preview for this webpage. Parameters: Name Type Description Default url str URL of a webpage required force_full bool If true, the full instant view for the web page will be returned False Source code in telegram\\client.py 310 311 312 313 314 315 316 317 318 319 320 321 322 323 def get_web_page_instant_view ( self , url : str , force_full : bool = False ) -> AsyncResult : \"\"\" Use this method to request instant preview of a webpage. Returns error with 404 if there is no preview for this webpage. Args: url: URL of a webpage force_full: If true, the full instant view for the web page will be returned \"\"\" data = { '@type' : 'getWebPageInstantView' , 'url' : url , 'force_full' : force_full } return self . _send_data ( data ) idle ( self , stop_signals = ( < Signals . SIGINT : 2 > , < Signals . SIGTERM : 15 > , < Signals . SIGABRT : 22 > )) \u00b6 Blocks until one of the signals are received and stops Source code in telegram\\client.py 444 445 446 447 448 449 450 451 452 453 454 455 def idle ( self , stop_signals : Tuple = ( signal . SIGINT , signal . SIGTERM , signal . SIGABRT ) ) -> None : \"\"\"Blocks until one of the signals are received and stops\"\"\" for sig in stop_signals : signal . signal ( sig , self . _signal_handler ) self . _is_enabled = True while self . _is_enabled : time . sleep ( 0.1 ) login ( self ) \u00b6 Login process (blocking) Must be called before any other call. It sends initial params to the tdlib, sets database encryption key, etc. Source code in telegram\\client.py 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 def login ( self ) -> None : \"\"\" Login process (blocking) Must be called before any other call. It sends initial params to the tdlib, sets database encryption key, etc. \"\"\" if self . proxy_server : self . _send_add_proxy () authorization_state = None actions = { None : self . get_authorization_state , 'authorizationStateWaitTdlibParameters' : self . _set_initial_params , 'authorizationStateWaitEncryptionKey' : self . _send_encryption_key , 'authorizationStateWaitPhoneNumber' : self . _send_phone_number_or_bot_token , 'authorizationStateWaitCode' : self . _send_telegram_code , 'authorizationStateWaitPassword' : self . _send_password , 'authorizationStateReady' : self . _complete_authorization , } if self . phone : logger . info ( '[login] Login process has been started with phone' ) else : logger . info ( '[login] Login process has been started with bot token' ) while not self . _authorized : logger . info ( '[login] current authorization state: %s ' , authorization_state ) result = actions [ authorization_state ]() if result : result . wait ( raise_exc = True ) if result . update is None : raise RuntimeError ( 'Something wrong, the result update is None' ) if result . id == 'getAuthorizationState' : authorization_state = result . update [ '@type' ] else : authorization_state = result . update [ 'authorization_state' ][ '@type' ] remove_update_handler ( self , handler_type , func ) \u00b6 Remove a handler with the specified type Source code in telegram\\client.py 399 400 401 402 403 404 405 406 407 def remove_update_handler ( self , handler_type : str , func : Callable ) -> None : \"\"\" Remove a handler with the specified type \"\"\" try : self . _update_handlers [ handler_type ] . remove ( func ) except ( ValueError , KeyError ): # not in the list pass send_message ( self , chat_id , text ) \u00b6 Sends a message to a chat. The chat must be in the tdlib's database. If there is no chat in the DB, tdlib returns an error. Chat is being saved to the database when the client receives a message or when you call the get_chats method. Returns: Type Description AsyncResult AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, ... } Source code in telegram\\client.py 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 def send_message ( self , chat_id : int , text : str ) -> AsyncResult : \"\"\" Sends a message to a chat. The chat must be in the tdlib's database. If there is no chat in the DB, tdlib returns an error. Chat is being saved to the database when the client receives a message or when you call the `get_chats` method. Args: chat_id text Returns: AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, ... } \"\"\" data = { '@type' : 'sendMessage' , 'chat_id' : chat_id , 'input_message_content' : { '@type' : 'inputMessageText' , 'text' : { '@type' : 'formattedText' , 'text' : text }, }, } return self . _send_data ( data ) stop ( self ) \u00b6 Stops the client Source code in telegram\\client.py 122 123 124 125 126 127 def stop ( self ) -> None : \"\"\"Stops the client\"\"\" self . _is_enabled = False if hasattr ( self , '_tdjson' ): self . _tdjson . stop ()","title":"TelegramClient"},{"location":"modules/client/#telegramclient","text":"The TelegramClient <telegramclient.TelegramClient> aggregates several mixin classes to provide all the common functionality in a nice, Pythonic interface. Each mixin has its own methods, which you all can use. In short, to create a client you must run: from telethon import TelegramClient client = TelegramClient ( name , api_id , api_hash ) async def main (): # Now you can use all client methods listed below, like for example... await client . send_message ( 'me' , 'Hello to myself!' ) with client : client . loop . run_until_complete ( main ()) You don't need to import these AuthMethods , MessageMethods , etc. Together they are the TelegramClient <telegramclient.TelegramClient> and you can access all of their methods. See :ref: client-ref for a short summary.","title":"TelegramClient"},{"location":"modules/client/#telegram.client","text":"","title":"telegram.client"},{"location":"modules/client/#telegram.client.Telegram","text":"","title":"Telegram"},{"location":"modules/client/#telegram.client.Telegram.__init__","text":"Parameters: Name Type Description Default api_id int //my.telegram.org/apps/) required api_hash str //my.telegram.org/apps/) required Source code in telegram\\client.py 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 def __init__ ( self , api_id : int , api_hash : str , database_encryption_key : Union [ str , bytes ], phone : Optional [ str ] = None , bot_token : Optional [ str ] = None , library_path : Optional [ str ] = None , worker : Optional [ Type [ BaseWorker ]] = None , files_directory : Optional [ str ] = None , use_test_dc : bool = False , use_message_database : bool = True , device_model : str = 'python-telegram' , application_version : str = VERSION , system_version : str = 'unknown' , system_language_code : str = 'en' , login : bool = False , default_workers_queue_size : int = 1000 , tdlib_verbosity : int = 2 , proxy_server : str = '' , proxy_port : int = 0 , proxy_type : Optional [ Dict [ str , str ]] = None , use_secret_chats : bool = True , ) -> None : \"\"\" Args: api_id - ID of your app (https://my.telegram.org/apps/) api_hash - api_hash of your app (https://my.telegram.org/apps/) phone - your phone number library_path - you can change path to the compiled libtdjson library worker - worker to process updates files_directory - directory for the tdlib's files (database, images, etc.) use_test_dc - use test datacenter use_message_database use_secret_chats device_model application_version system_version system_language_code \"\"\" self . api_id = api_id self . api_hash = api_hash self . library_path = library_path self . phone = phone self . bot_token = bot_token self . use_test_dc = use_test_dc self . device_model = device_model self . system_version = system_version self . system_language_code = system_language_code self . application_version = application_version self . use_message_database = use_message_database self . _queue_put_timeout = 10 self . proxy_server = proxy_server self . proxy_port = proxy_port self . proxy_type = proxy_type self . use_secret_chats = use_secret_chats if not self . bot_token and not self . phone : raise ValueError ( 'You must provide bot_token or phone' ) self . _database_encryption_key = database_encryption_key if not files_directory : hasher = hashlib . md5 () str_to_encode : str = self . phone or self . bot_token # type: ignore hasher . update ( str_to_encode . encode ( 'utf-8' )) directory_name = hasher . hexdigest () files_directory = f '/tmp/.tdlib_files/ { directory_name } /' self . files_directory = files_directory self . _authorized = False self . _is_enabled = False # todo: move to worker self . _workers_queue : queue . Queue = queue . Queue ( maxsize = default_workers_queue_size ) if not worker : worker = SimpleWorker self . worker = worker ( queue = self . _workers_queue ) self . _results : Dict [ str , AsyncResult ] = {} self . _update_handlers : DefaultDict [ str , List [ Callable ]] = defaultdict ( list ) self . _tdjson = TDJson ( library_path = library_path , verbosity = tdlib_verbosity ) self . _run () if login : self . login ()","title":"__init__()"},{"location":"modules/client/#telegram.client.Telegram.call_method","text":"Use this method to call any other method of the tdlib Parameters: Name Type Description Default method_name str Name of the method required params Optional[Dict[str, Any]] parameters None Source code in telegram\\client.py 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 def call_method ( self , method_name : str , params : Optional [ Dict [ str , Any ]] = None , block : bool = False , ) -> AsyncResult : \"\"\" Use this method to call any other method of the tdlib Args: method_name: Name of the method params: parameters \"\"\" data = { '@type' : method_name } if params : data . update ( params ) return self . _send_data ( data , block = block )","title":"call_method()"},{"location":"modules/client/#telegram.client.Telegram.create_basic_group_chat","text":"Create a chat from a basic group Source code in telegram\\client.py 299 300 301 302 303 304 305 306 307 308 def create_basic_group_chat ( self , basic_group_id : int ) -> AsyncResult : \"\"\" Create a chat from a basic group Args: basic_group_id \"\"\" return self . _send_data ( { '@type' : 'createBasicGroupChat' , 'basic_group_id' : basic_group_id } )","title":"create_basic_group_chat()"},{"location":"modules/client/#telegram.client.Telegram.delete_messages","text":"Delete a list of messages in a chat Source code in telegram\\client.py 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 def delete_messages ( self , chat_id : int , message_ids : List [ int ], revoke : bool = True ) -> AsyncResult : \"\"\" Delete a list of messages in a chat Args: chat_id message_ids revoke \"\"\" return self . _send_data ( { '@type' : 'deleteMessages' , 'chat_id' : chat_id , 'message_ids' : message_ids , 'revoke' : revoke , } )","title":"delete_messages()"},{"location":"modules/client/#telegram.client.Telegram.get_chat","text":"This is offline request, if there is no chat in your database it will not be found tdlib saves chat to the database when it receives a new message or when you call get_chats method. Source code in telegram\\client.py 161 162 163 164 165 166 167 168 def get_chat ( self , chat_id : int ) -> AsyncResult : \"\"\" This is offline request, if there is no chat in your database it will not be found tdlib saves chat to the database when it receives a new message or when you call `get_chats` method. \"\"\" data = { '@type' : 'getChat' , 'chat_id' : chat_id } return self . _send_data ( data )","title":"get_chat()"},{"location":"modules/client/#telegram.client.Telegram.get_chat_history","text":"Returns history of a chat Source code in telegram\\client.py 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 def get_chat_history ( self , chat_id : int , limit : int = 1000 , from_message_id : int = 0 , offset : int = 0 , only_local : bool = False , ) -> AsyncResult : \"\"\" Returns history of a chat Args: chat_id limit from_message_id offset only_local \"\"\" data = { '@type' : 'getChatHistory' , 'chat_id' : chat_id , 'limit' : limit , 'from_message_id' : from_message_id , 'offset' : offset , 'only_local' : only_local , } return self . _send_data ( data )","title":"get_chat_history()"},{"location":"modules/client/#telegram.client.Telegram.get_chats","text":"Returns a list of chats: Returns: Type Description AsyncResult { '@type': 'chats', 'chat_ids': [...], '@extra': { 'request_id': '...' } } Source code in telegram\\client.py 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 def get_chats ( self , offset_order : int = 0 , offset_chat_id : int = 0 , limit : int = 100 ) -> AsyncResult : \"\"\" Returns a list of chats: Returns: { '@type': 'chats', 'chat_ids': [...], '@extra': { 'request_id': '...' } } \"\"\" data = { '@type' : 'getChats' , 'offset_order' : offset_order , 'offset_chat_id' : offset_chat_id , 'limit' : limit , } return self . _send_data ( data )","title":"get_chats()"},{"location":"modules/client/#telegram.client.Telegram.get_me","text":"Requests information of the current user (getMe method) https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_me.html Source code in telegram\\client.py 170 171 172 173 174 175 176 177 def get_me ( self ) -> AsyncResult : \"\"\" Requests information of the current user (getMe method) https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_me.html \"\"\" return self . call_method ( 'getMe' )","title":"get_me()"},{"location":"modules/client/#telegram.client.Telegram.get_message","text":"Return a message via its message_id Returns: Type Description AsyncResult AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, 'content': {...}, ... } Source code in telegram\\client.py 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 def get_message ( self , chat_id : int , message_id : int ,) -> AsyncResult : \"\"\" Return a message via its message_id Args: chat_id message_id Returns: AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, 'content': {...}, ... } \"\"\" data = { '@type' : 'getMessage' , 'chat_id' : chat_id , 'message_id' : message_id , } return self . _send_data ( data )","title":"get_message()"},{"location":"modules/client/#telegram.client.Telegram.get_supergroup_full_info","text":"Get the full info of a supergroup Source code in telegram\\client.py 288 289 290 291 292 293 294 295 296 297 def get_supergroup_full_info ( self , supergroup_id : int ) -> AsyncResult : \"\"\" Get the full info of a supergroup Args: supergroup_id \"\"\" return self . _send_data ( { '@type' : 'getSupergroupFullInfo' , 'supergroup_id' : supergroup_id } )","title":"get_supergroup_full_info()"},{"location":"modules/client/#telegram.client.Telegram.get_user","text":"Requests information about a user with id = user_id. https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_user.html Source code in telegram\\client.py 179 180 181 182 183 184 185 186 def get_user ( self , user_id : int ) -> AsyncResult : \"\"\" Requests information about a user with id = user_id. https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_user.html \"\"\" return self . call_method ( 'getUser' , params = { 'user_id' : user_id })","title":"get_user()"},{"location":"modules/client/#telegram.client.Telegram.get_web_page_instant_view","text":"Use this method to request instant preview of a webpage. Returns error with 404 if there is no preview for this webpage. Parameters: Name Type Description Default url str URL of a webpage required force_full bool If true, the full instant view for the web page will be returned False Source code in telegram\\client.py 310 311 312 313 314 315 316 317 318 319 320 321 322 323 def get_web_page_instant_view ( self , url : str , force_full : bool = False ) -> AsyncResult : \"\"\" Use this method to request instant preview of a webpage. Returns error with 404 if there is no preview for this webpage. Args: url: URL of a webpage force_full: If true, the full instant view for the web page will be returned \"\"\" data = { '@type' : 'getWebPageInstantView' , 'url' : url , 'force_full' : force_full } return self . _send_data ( data )","title":"get_web_page_instant_view()"},{"location":"modules/client/#telegram.client.Telegram.idle","text":"Blocks until one of the signals are received and stops Source code in telegram\\client.py 444 445 446 447 448 449 450 451 452 453 454 455 def idle ( self , stop_signals : Tuple = ( signal . SIGINT , signal . SIGTERM , signal . SIGABRT ) ) -> None : \"\"\"Blocks until one of the signals are received and stops\"\"\" for sig in stop_signals : signal . signal ( sig , self . _signal_handler ) self . _is_enabled = True while self . _is_enabled : time . sleep ( 0.1 )","title":"idle()"},{"location":"modules/client/#telegram.client.Telegram.login","text":"Login process (blocking) Must be called before any other call. It sends initial params to the tdlib, sets database encryption key, etc. Source code in telegram\\client.py 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 def login ( self ) -> None : \"\"\" Login process (blocking) Must be called before any other call. It sends initial params to the tdlib, sets database encryption key, etc. \"\"\" if self . proxy_server : self . _send_add_proxy () authorization_state = None actions = { None : self . get_authorization_state , 'authorizationStateWaitTdlibParameters' : self . _set_initial_params , 'authorizationStateWaitEncryptionKey' : self . _send_encryption_key , 'authorizationStateWaitPhoneNumber' : self . _send_phone_number_or_bot_token , 'authorizationStateWaitCode' : self . _send_telegram_code , 'authorizationStateWaitPassword' : self . _send_password , 'authorizationStateReady' : self . _complete_authorization , } if self . phone : logger . info ( '[login] Login process has been started with phone' ) else : logger . info ( '[login] Login process has been started with bot token' ) while not self . _authorized : logger . info ( '[login] current authorization state: %s ' , authorization_state ) result = actions [ authorization_state ]() if result : result . wait ( raise_exc = True ) if result . update is None : raise RuntimeError ( 'Something wrong, the result update is None' ) if result . id == 'getAuthorizationState' : authorization_state = result . update [ '@type' ] else : authorization_state = result . update [ 'authorization_state' ][ '@type' ]","title":"login()"},{"location":"modules/client/#telegram.client.Telegram.remove_update_handler","text":"Remove a handler with the specified type Source code in telegram\\client.py 399 400 401 402 403 404 405 406 407 def remove_update_handler ( self , handler_type : str , func : Callable ) -> None : \"\"\" Remove a handler with the specified type \"\"\" try : self . _update_handlers [ handler_type ] . remove ( func ) except ( ValueError , KeyError ): # not in the list pass","title":"remove_update_handler()"},{"location":"modules/client/#telegram.client.Telegram.send_message","text":"Sends a message to a chat. The chat must be in the tdlib's database. If there is no chat in the DB, tdlib returns an error. Chat is being saved to the database when the client receives a message or when you call the get_chats method. Returns: Type Description AsyncResult AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, ... } Source code in telegram\\client.py 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 def send_message ( self , chat_id : int , text : str ) -> AsyncResult : \"\"\" Sends a message to a chat. The chat must be in the tdlib's database. If there is no chat in the DB, tdlib returns an error. Chat is being saved to the database when the client receives a message or when you call the `get_chats` method. Args: chat_id text Returns: AsyncResult The update will be: { '@type': 'message', 'id': 1, 'sender_user_id': 2, 'chat_id': 3, ... } \"\"\" data = { '@type' : 'sendMessage' , 'chat_id' : chat_id , 'input_message_content' : { '@type' : 'inputMessageText' , 'text' : { '@type' : 'formattedText' , 'text' : text }, }, } return self . _send_data ( data )","title":"send_message()"},{"location":"modules/client/#telegram.client.Telegram.stop","text":"Stops the client Source code in telegram\\client.py 122 123 124 125 126 127 def stop ( self ) -> None : \"\"\"Stops the client\"\"\" self . _is_enabled = False if hasattr ( self , '_tdjson' ): self . _tdjson . stop ()","title":"stop()"},{"location":"modules/custom/","text":"Custom package \u00b6 The telethon.tl.custom package contains custom classes that the library uses in order to make working with Telegram easier. Only those that you are supposed to use will be documented here. You can use undocumented ones at your own risk. More often than not, you don't need to import these (unless you want type hinting), nor do you need to manually create instances of these classes. They are returned by client methods. AdminLogEvent \u00b6 Represents a more friendly interface for admin log events. Attributes original (:tl: ChannelAdminLogEvent ): The original :tl: ChannelAdminLogEvent . entities ( dict ): A dictionary mapping user IDs to :tl: User . When `old` and `new` are : tl : `ChannelParticipant` , you can use this dictionary to map the `` user_id `` , `` kicked_by `` , `` inviter_id `` and `` promoted_by `` IDs to their : tl : `User` . user (:tl: User ): The user that caused this action ( entities[original.user_id] ). input_user (:tl: InputPeerUser ): Input variant of user . action property readonly \u00b6 The original :tl: ChannelAdminLogEventAction . changed_about property readonly \u00b6 Whether the channel's about was changed or not. If True , old and new will be present as str . changed_admin property readonly \u00b6 Whether the permissions for an admin in this channel changed or not. If True , old and new will be present as :tl: ChannelParticipant . changed_default_banned_rights property readonly \u00b6 Whether the default banned rights were changed or not. If True , old and new will be present as :tl: ChatBannedRights . changed_hide_history property readonly \u00b6 Whether hiding the previous message history for new members in the channel was toggled or not. If True , old and new will be present as bool . changed_invites property readonly \u00b6 Whether the invites in the channel were toggled or not. If True , old and new will be present as bool . changed_location property readonly \u00b6 Whether the location setting of the channel has changed or not. If True , old and new will be present as :tl: ChannelLocation . changed_message property readonly \u00b6 Whether a message in this channel was edited or not. If True , old and new will be present as Message <telethon.tl.custom.message.Message> . changed_photo property readonly \u00b6 Whether the channel's photo was changed or not. If True , old and new will be present as :tl: Photo . changed_pin property readonly \u00b6 Whether a new message in this channel was pinned or not. If True , new will be present as Message <telethon.tl.custom.message.Message> . changed_restrictions property readonly \u00b6 Whether a message in this channel was edited or not. If True , old and new will be present as :tl: ChannelParticipant . changed_signatures property readonly \u00b6 Whether the message signatures in the channel were toggled or not. If True , old and new will be present as bool . changed_sticker_set property readonly \u00b6 Whether the channel's sticker set was changed or not. If True , old and new will be present as :tl: InputStickerSet . changed_title property readonly \u00b6 Whether the channel's title was changed or not. If True , old and new will be present as str . changed_username property readonly \u00b6 Whether the channel's username was changed or not. If True , old and new will be present as str . date property readonly \u00b6 The date when this event occurred. deleted_message property readonly \u00b6 Whether a message in this channel was deleted or not. If True , old will be present as Message <telethon.tl.custom.message.Message> . id property readonly \u00b6 The ID of this event. joined property readonly \u00b6 Whether user joined through the channel's public username or not. joined_invite property readonly \u00b6 Whether a new user joined through an invite link to the channel or not. If True , new will be present as :tl: ChannelParticipant . left property readonly \u00b6 Whether user left the channel or not. new property readonly \u00b6 The new value present in the event. old property readonly \u00b6 The old value from the event. stopped_poll property readonly \u00b6 Whether a poll was stopped or not. If True , new will be present as Message <telethon.tl.custom.message.Message> . user_id property readonly \u00b6 The ID of the user that triggered this event. Button \u00b6 Note This class is used to define reply markups, e.g. when sending a message or replying to events. When you access [ Message.buttons ][telethon.tl.custom.message.Message.buttons] they are actually [ MessageButton ][telethon.tl.custom.messagebutton.MessageButton], so you might want to refer to that class instead. Helper class to allow defining reply_markup when sending a message with inline or keyboard buttons. You should make use of the defined class methods to create button instances instead making them yourself (i.e. don't do Button(...) but instead use methods line Button.inline(...) <inline> etc. You can use inline , switch_inline and url together to create inline buttons (under the message). You can use text , request_location and request_phone together to create a reply markup (replaces the user keyboard). You can also configure the aspect of the reply with these. You cannot mix the two type of buttons together, and it will error if you try to do so. The text for all buttons may be at most 142 characters. If more characters are given, Telegram will cut the text to 128 characters and add the ellipsis (\u2026) character as the 129. auth ( text , url = None , * , bot = None , write_access = False , fwd_text = None ) staticmethod \u00b6 Creates a new inline button to authorize the user at the given URL. You should set the url to be on the same domain as the one configured for the desired bot via @BotFather <https://t.me/BotFather> _ using the /setdomain command. For more information about letting the user login via Telegram to a certain domain, see https://core.telegram.org/widgets/login . If no url is specified, it will default to text . Parameters: Name Type Description Default bot hints.EntityLike The bot that requires this authorization. By default, this is the bot that is currently logged in (itself), although you may pass a different input peer. Note For now, you cannot use ID or username for this argument. If you want to use a different bot than the one currently logged in, you must manually use client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> . None write_access bool Whether write access is required or not. This is False by default (read-only access). False fwd_text str The new text to show in the button if the message is forwarded. By default, the button text will be the same. None Source code in telethon\\tl\\custom\\button.py 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 @staticmethod def auth ( text , url = None , * , bot = None , write_access = False , fwd_text = None ): \"\"\" Creates a new inline button to authorize the user at the given URL. You should set the `url` to be on the same domain as the one configured for the desired `bot` via `@BotFather <https://t.me/BotFather>`_ using the ``/setdomain`` command. For more information about letting the user login via Telegram to a certain domain, see https://core.telegram.org/widgets/login. If no `url` is specified, it will default to `text`. Args: bot (hints.EntityLike): The bot that requires this authorization. By default, this is the bot that is currently logged in (itself), although you may pass a different input peer. !!! Note For now, you cannot use ID or username for this argument. If you want to use a different bot than the one currently logged in, you must manually use `client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity>`. write_access (bool): Whether write access is required or not. This is `False` by default (read-only access). fwd_text (str): The new text to show in the button if the message is forwarded. By default, the button text will be the same. \"\"\" return types . InputKeyboardButtonUrlAuth ( text = text , url = url or text , bot = utils . get_input_user ( bot or types . InputUserSelf ()), request_write_access = write_access , fwd_text = fwd_text ) clear () staticmethod \u00b6 Clears all keyboard buttons after sending a message with this markup. When used, no other button should be present or it will be ignored. Source code in telethon\\tl\\custom\\button.py 207 208 209 210 211 212 213 @staticmethod def clear (): \"\"\" Clears all keyboard buttons after sending a message with this markup. When used, no other button should be present or it will be ignored. \"\"\" return types . ReplyKeyboardHide () force_reply () staticmethod \u00b6 Forces a reply to the message with this markup. If used, no other button should be present or it will be ignored. Source code in telethon\\tl\\custom\\button.py 215 216 217 218 219 220 221 @staticmethod def force_reply (): \"\"\" Forces a reply to the message with this markup. If used, no other button should be present or it will be ignored. \"\"\" return types . ReplyKeyboardForceReply () inline ( text , data = None ) staticmethod \u00b6 Creates a new inline button with some payload data in it. If data is omitted, the given text will be used as data . In any case data should be either bytes or str . Note that the given data must be less or equal to 64 bytes. If more than 64 bytes are passed as data, ValueError is raised. Source code in telethon\\tl\\custom\\button.py 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 @staticmethod def inline ( text , data = None ): \"\"\" Creates a new inline button with some payload data in it. If `data` is omitted, the given `text` will be used as `data`. In any case `data` should be either `bytes` or `str`. Note that the given `data` must be less or equal to 64 bytes. If more than 64 bytes are passed as data, ``ValueError`` is raised. \"\"\" if not data : data = text . encode ( 'utf-8' ) elif not isinstance ( data , ( bytes , bytearray , memoryview )): data = str ( data ) . encode ( 'utf-8' ) if len ( data ) > 64 : raise ValueError ( 'Too many bytes for the data' ) return types . KeyboardButtonCallback ( text , data ) request_location ( text , * , resize = None , single_use = None , selective = None ) classmethod \u00b6 Creates a new keyboard button to request the user's location on click. resize , single_use and selective are documented in text . Source code in telethon\\tl\\custom\\button.py 166 167 168 169 170 171 172 173 174 175 @classmethod def request_location ( cls , text , * , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button to request the user's location on click. ``resize``, ``single_use`` and ``selective`` are documented in `text`. \"\"\" return cls ( types . KeyboardButtonRequestGeoLocation ( text ), resize = resize , single_use = single_use , selective = selective ) request_phone ( text , * , resize = None , single_use = None , selective = None ) classmethod \u00b6 Creates a new keyboard button to request the user's phone on click. resize , single_use and selective are documented in text . Source code in telethon\\tl\\custom\\button.py 177 178 179 180 181 182 183 184 185 186 @classmethod def request_phone ( cls , text , * , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button to request the user's phone on click. ``resize``, ``single_use`` and ``selective`` are documented in `text`. \"\"\" return cls ( types . KeyboardButtonRequestPhone ( text ), resize = resize , single_use = single_use , selective = selective ) request_poll ( text , * , force_quiz = False , resize = None , single_use = None , selective = None ) classmethod \u00b6 Creates a new keyboard button to request the user to create a poll. If force_quiz is False , the user will be allowed to choose whether they want their poll to be a quiz or not. Otherwise, the user will be forced to create a quiz when creating the poll. If a poll is a quiz, there will be only one answer that is valid, and the votes cannot be retracted. Otherwise, users can vote and retract the vote, and the pol might be multiple choice. resize , single_use and selective are documented in text . Source code in telethon\\tl\\custom\\button.py 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 @classmethod def request_poll ( cls , text , * , force_quiz = False , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button to request the user to create a poll. If `force_quiz` is `False`, the user will be allowed to choose whether they want their poll to be a quiz or not. Otherwise, the user will be forced to create a quiz when creating the poll. If a poll is a quiz, there will be only one answer that is valid, and the votes cannot be retracted. Otherwise, users can vote and retract the vote, and the pol might be multiple choice. ``resize``, ``single_use`` and ``selective`` are documented in `text`. \"\"\" return cls ( types . KeyboardButtonRequestPoll ( text , quiz = force_quiz ), resize = resize , single_use = single_use , selective = selective ) switch_inline ( text , query = '' , same_peer = False ) staticmethod \u00b6 Creates a new inline button to switch to inline query. If query is given, it will be the default text to be used when making the inline query. If same_peer is True the inline query will directly be set under the currently opened chat. Otherwise, the user will have to select a different dialog to make the query. Source code in telethon\\tl\\custom\\button.py 75 76 77 78 79 80 81 82 83 84 85 86 87 @staticmethod def switch_inline ( text , query = '' , same_peer = False ): \"\"\" Creates a new inline button to switch to inline query. If `query` is given, it will be the default text to be used when making the inline query. If ``same_peer is True`` the inline query will directly be set under the currently opened chat. Otherwise, the user will have to select a different dialog to make the query. \"\"\" return types . KeyboardButtonSwitchInline ( text , query , same_peer ) text ( text , * , resize = None , single_use = None , selective = None ) classmethod \u00b6 Creates a new keyboard button with the given text. Parameters: Name Type Description Default resize `bool` If present, the entire keyboard will be reconfigured to be resized and be smaller if there are not many buttons. None single_use `bool` If present, the entire keyboard will be reconfigured to be usable only once before it hides itself. None selective `bool` If present, the entire keyboard will be reconfigured to be \"selective\". The keyboard will be shown only to specific users. It will target users that are @mentioned in the text of the message or to the sender of the message you reply to. None Source code in telethon\\tl\\custom\\button.py 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 @classmethod def text ( cls , text , * , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button with the given text. Args: resize (`bool`): If present, the entire keyboard will be reconfigured to be resized and be smaller if there are not many buttons. single_use (`bool`): If present, the entire keyboard will be reconfigured to be usable only once before it hides itself. selective (`bool`): If present, the entire keyboard will be reconfigured to be \"selective\". The keyboard will be shown only to specific users. It will target users that are @mentioned in the text of the message or to the sender of the message you reply to. \"\"\" return cls ( types . KeyboardButton ( text ), resize = resize , single_use = single_use , selective = selective ) url ( text , url = None ) staticmethod \u00b6 Creates a new inline button to open the desired URL on click. If no url is given, the text will be used as said URL instead. You cannot detect that the user clicked this button directly. Source code in telethon\\tl\\custom\\button.py 89 90 91 92 93 94 95 96 97 98 @staticmethod def url ( text , url = None ): \"\"\" Creates a new inline button to open the desired URL on click. If no `url` is given, the `text` will be used as said URL instead. You cannot detect that the user clicked this button directly. \"\"\" return types . KeyboardButtonUrl ( text , url or text ) ChatGetter \u00b6 Helper base class that introduces the chat , input_chat and chat_id properties and get_chat and get_input_chat methods. chat property readonly \u00b6 Returns the :tl: User , :tl: Chat or :tl: Channel where this object belongs to. It may be None if Telegram didn't send the chat. If you only need the ID, use chat_id instead. If you need to call a method which needs this chat, use input_chat instead. If you're using telethon.events , use get_chat() instead. chat_id property readonly \u00b6 Returns the marked chat integer ID. Note that this value will be different from to_id for incoming private messages, since the chat to which the messages go is to your own person, but the chat itself is with the one who sent the message. TL;DR; this gets the ID that you expect. If there is a chat in the object, chat_id will always be set, which is why you should use it instead of chat.id <chat> . input_chat property readonly \u00b6 This :tl: InputPeer is the input version of the chat where the message was sent. Similarly to input_sender <telethon.tl.custom.sendergetter.SenderGetter.input_sender> , this doesn't have things like username or similar, but still useful in some cases. Note that this might not be available if the library doesn't have enough information available. is_channel property readonly \u00b6 True if the message was sent on a megagroup or channel. is_group property readonly \u00b6 True if the message was sent on a group or megagroup. Returns None if there isn't enough information (e.g. on events.MessageDeleted <telethon.events.messagedeleted.MessageDeleted> ). is_private property readonly \u00b6 True if the message was sent as a private message. Returns None if there isn't enough information (e.g. on events.MessageDeleted <telethon.events.messagedeleted.MessageDeleted> ). get_chat ( self ) \u00b6 Returns chat , but will make an API call to find the chat unless it's already cached. If you only need the ID, use chat_id instead. If you need to call a method which needs this chat, use get_input_chat() instead. Source code in telethon\\tl\\custom\\chatgetter.py 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 async def get_chat ( self ): \"\"\" Returns `chat`, but will make an API call to find the chat unless it's already cached. If you only need the ID, use `chat_id` instead. If you need to call a method which needs this chat, use `get_input_chat()` instead. \"\"\" # See `get_sender` for information about 'min'. if ( self . _chat is None or getattr ( self . _chat , 'min' , None )) \\ and await self . get_input_chat (): try : self . _chat = \\ await self . _client . get_entity ( self . _input_chat ) except ValueError : await self . _refetch_chat () return self . _chat get_input_chat ( self ) \u00b6 Returns input_chat , but will make an API call to find the input chat unless it's already cached. Source code in telethon\\tl\\custom\\chatgetter.py 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 async def get_input_chat ( self ): \"\"\" Returns `input_chat`, but will make an API call to find the input chat unless it's already cached. \"\"\" if self . input_chat is None and self . chat_id and self . _client : try : # The chat may be recent, look in dialogs target = self . chat_id async for d in self . _client . iter_dialogs ( 100 ): if d . id == target : self . _chat = d . entity self . _input_chat = d . input_entity break except errors . RPCError : pass return self . _input_chat Conversation \u00b6 Represents a conversation inside an specific chat. A conversation keeps track of new messages since it was created until its exit and easily lets you query the current state. If you need a conversation across two or more chats, you should use two conversations and synchronize them as you better see fit. __enter__ ( self ) special \u00b6 Helps to cut boilerplate on async context managers that offer synchronous variants. Source code in telethon\\tl\\custom\\conversation.py 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 def _sync_enter ( self ): \"\"\" Helps to cut boilerplate on async context managers that offer synchronous variants. \"\"\" if hasattr ( self , 'loop' ): loop = self . loop else : loop = self . _client . loop if loop . is_running (): raise RuntimeError ( 'You must use \"async with\" if the event loop ' 'is running (i.e. you are inside an \"async def\")' ) return loop . run_until_complete ( self . __aenter__ ()) cancel ( self ) \u00b6 Cancels the current conversation. Pending responses and subsequent calls to get a response will raise asyncio.CancelledError . This method is synchronous and should not be awaited. Source code in telethon\\tl\\custom\\conversation.py 482 483 484 485 486 487 488 489 def cancel ( self ): \"\"\" Cancels the current conversation. Pending responses and subsequent calls to get a response will raise ``asyncio.CancelledError``. This method is synchronous and should not be awaited. \"\"\" self . _cancel_all () cancel_all ( self ) \u00b6 Calls cancel on all conversations in this chat. Note that you should await this method, since it's meant to be used outside of a context manager, and it needs to resolve the chat. Source code in telethon\\tl\\custom\\conversation.py 491 492 493 494 495 496 497 498 499 500 async def cancel_all ( self ): \"\"\" Calls `cancel` on *all* conversations in this chat. Note that you should ``await`` this method, since it's meant to be used outside of a context manager, and it needs to resolve the chat. \"\"\" chat_id = await self . _client . get_peer_id ( self . _input_chat ) for conv in self . _client . _conversations [ chat_id ]: conv . cancel () get_edit ( self , message = None , * , timeout = None ) \u00b6 Awaits for an edit after the last message to arrive. The arguments are the same as those for get_response . Source code in telethon\\tl\\custom\\conversation.py 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 def get_edit ( self , message = None , * , timeout = None ): \"\"\" Awaits for an edit after the last message to arrive. The arguments are the same as those for `get_response`. \"\"\" start_time = time . time () target_id = self . _get_message_id ( message ) target_date = self . _edit_dates . get ( target_id , 0 ) earliest_edit = min ( ( x for x in self . _incoming if x . edit_date and x . id > target_id and x . edit_date . timestamp () > target_date ), key = lambda x : x . edit_date . timestamp (), default = None ) future = self . _client . loop . create_future () if earliest_edit and earliest_edit . edit_date . timestamp () > target_date : self . _edit_dates [ target_id ] = earliest_edit . edit_date . timestamp () future . set_result ( earliest_edit ) return future # we should always return something we can await # Otherwise the next incoming response will be the one to use self . _pending_edits [ target_id ] = future return self . _get_result ( future , start_time , timeout , self . _pending_edits , target_id ) get_reply ( self , message = None , * , timeout = None ) \u00b6 Gets the next message that explicitly replies to a previous one. Source code in telethon\\tl\\custom\\conversation.py 156 157 158 159 160 161 162 163 def get_reply ( self , message = None , * , timeout = None ): \"\"\" Gets the next message that explicitly replies to a previous one. \"\"\" return self . _get_message ( message , self . _reply_indices , self . _pending_replies , timeout , lambda x , y : x . reply_to_msg_id == y ) get_response ( self , message = None , * , timeout = None ) \u00b6 Gets the next message that responds to a previous one. Parameters: Name Type Description Default message Message | int The [message][telethon.tl.custom.message.Message] (or the message ID) for which a response is expected. By default this is the last sent message. None timeout Optional[Union[int, float]] If present, this timeout (in seconds) will override the per-action timeout defined for the conversation. None Source code in telethon\\tl\\custom\\conversation.py 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 def get_response ( self , message = None , * , timeout : Optional [ Union [ int , float ]] = None ): \"\"\" Gets the next message that responds to a previous one. Args: message (Message | int): The [message][telethon.tl.custom.message.Message] (or the message ID) for which a response is expected. By default this is the last sent message. timeout: If present, this `timeout` (in seconds) will override the per-action timeout defined for the conversation. \"\"\" # Optional[Union['[Message][telethon.tl.custom.message.Message]' return self . _get_message ( message , self . _response_indices , self . _pending_responses , timeout , lambda x , y : True ) mark_read ( self , message = None ) \u00b6 Marks as read the latest received message if message is None . Otherwise, marks as read until the given message (or message ID). This is equivalent to calling client.send_read_acknowledge <telethon.client.messages.MessageMethods.send_read_acknowledge> . Source code in telethon\\tl\\custom\\conversation.py 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 @_checks_cancelled def mark_read ( self , message = None ): \"\"\" Marks as read the latest received message if ``message is None``. Otherwise, marks as read until the given message (or message ID). This is equivalent to calling `client.send_read_acknowledge <telethon.client.messages.MessageMethods.send_read_acknowledge>`. \"\"\" if message is None : if self . _incoming : message = self . _incoming [ - 1 ] . id else : message = 0 elif not isinstance ( message , int ): message = message . id return self . _client . send_read_acknowledge ( self . _input_chat , max_id = message ) send_file ( self , * args , ** kwargs ) \u00b6 Sends a file in the context of this conversation. Shorthand for telethon.client.uploads.UploadMethods.send_file with entity already set. Source code in telethon\\tl\\custom\\conversation.py 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 @_checks_cancelled async def send_file ( self , * args , ** kwargs ): \"\"\" Sends a file in the context of this conversation. Shorthand for `telethon.client.uploads.UploadMethods.send_file` with ``entity`` already set. \"\"\" sent = await self . _client . send_file ( self . _input_chat , * args , ** kwargs ) # Albums will be lists, so handle that ms = sent if isinstance ( sent , list ) else ( sent ,) self . _outgoing . update ( m . id for m in ms ) self . _last_outgoing = ms [ - 1 ] . id return sent send_message ( self , * args , ** kwargs ) \u00b6 Sends a message in the context of this conversation. Shorthand for telethon.client.messages.MessageMethods.send_message with entity already set. Source code in telethon\\tl\\custom\\conversation.py 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 @_checks_cancelled async def send_message ( self , * args , ** kwargs ): \"\"\" Sends a message in the context of this conversation. Shorthand for `telethon.client.messages.MessageMethods.send_message` with ``entity`` already set. \"\"\" sent = await self . _client . send_message ( self . _input_chat , * args , ** kwargs ) # Albums will be lists, so handle that ms = sent if isinstance ( sent , list ) else ( sent ,) self . _outgoing . update ( m . id for m in ms ) self . _last_outgoing = ms [ - 1 ] . id return sent wait_event ( self , event , * , timeout = None ) \u00b6 Waits for a custom event to occur. Timeouts still apply. Note Only use this if there isn't another method available! For example, don't use wait_event for new messages, since get_response already exists, etc. Unless you're certain that your code will run fast enough, generally you should get a \"handle\" of this special coroutine before acting. Generally, you should do this: from telethon import TelegramClient , events client = TelegramClient ( ... ) async def main (): async with client . conversation ( ... ) as conv : response = conv . wait_event ( events . NewMessage ( incoming = True )) await conv . send_message ( 'Hi' ) response = await response This way your event can be registered before acting, since the response may arrive before your event was registered. It depends on your use case since this also means the event can arrive before you send a previous action. Source code in telethon\\tl\\custom\\conversation.py 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 async def wait_event ( self , event , * , timeout = None ): \"\"\" Waits for a custom event to occur. Timeouts still apply. Note: Only use this if there isn't another method available! For example, don't use `wait_event` for new messages, since `get_response` already exists, etc. Unless you're certain that your code will run fast enough, generally you should get a \"handle\" of this special coroutine before acting. Generally, you should do this: ```python from telethon import TelegramClient, events client = TelegramClient(...) async def main(): async with client.conversation(...) as conv: response = conv.wait_event(events.NewMessage(incoming=True)) await conv.send_message('Hi') response = await response ``` This way your event can be registered before acting, since the response may arrive before your event was registered. It depends on your use case since this also means the event can arrive before you send a previous action. \"\"\" start_time = time . time () if isinstance ( event , type ): event = event () await event . resolve ( self . _client ) counter = Conversation . _custom_counter Conversation . _custom_counter += 1 future = self . _client . loop . create_future () self . _custom [ counter ] = ( event , future ) return await self . _get_result ( future , start_time , timeout , self . _custom , counter ) wait_read ( self , message = None , * , timeout = None ) \u00b6 Awaits for the sent message to be marked as read. Note that receiving a response doesn't imply the message was read, and this action will also trigger even without a response. Source code in telethon\\tl\\custom\\conversation.py 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 def wait_read ( self , message = None , * , timeout = None ): \"\"\" Awaits for the sent message to be marked as read. Note that receiving a response doesn't imply the message was read, and this action will also trigger even without a response. \"\"\" start_time = time . time () future = self . _client . loop . create_future () target_id = self . _get_message_id ( message ) if self . _last_read is None : self . _last_read = target_id - 1 if self . _last_read >= target_id : return self . _pending_reads [ target_id ] = future return self . _get_result ( future , start_time , timeout , self . _pending_reads , target_id ) Dialog \u00b6 Custom class that encapsulates a dialog (an open \"conversation\" with someone, a group or a channel) providing an abstraction to easily access the input version/normal entity/message etc. The library will return instances of this class when calling :meth: .get_dialogs() . Parameters: Name Type Description Default dialog The original Dialog instance. required pinned `bool` Whether this dialog is pinned to the top or not. required folder_id `folder_id` The folder ID that this dialog belongs to. required archived `bool` Whether this dialog is archived or not ( folder_id is None ). required message `Message <telethon.tl.custom.message.Message>` The last message sent on this dialog. Note that this member will not be updated when new messages arrive, it's only set on creation of the instance. required date `datetime` The date of the last message sent on this dialog. required entity `entity` The entity that belongs to this dialog (user, chat or channel). required input_entity Input version of the entity. required id `int` The marked ID of the entity, which is guaranteed to be unique. required name `str` Display name for this dialog. For chats and channels this is their title, and for users it's \"First-Name Last-Name\". required title `str` Alias for name . required unread_count `int` How many messages are currently unread in this dialog. Note that this value won't update when new messages arrive. required unread_mentions_count `int` How many mentions are currently unread in this dialog. Note that this value won't update when new messages arrive. required draft `Draft <telethon.tl.custom.draft.Draft>` The draft object in this dialog. It will not be None , so you can call draft.set_message(...) . required is_user `bool` True if the entity is a :tl: User . required is_group `bool` True if the entity is a :tl: Chat or a :tl: Channel megagroup. required is_channel `bool` True if the entity is a :tl: Channel . required archive ( self , folder = 1 ) \u00b6 Archives (or un-archives) this dialog. Parameters: Name Type Description Default folder `int` The folder to which the dialog should be archived to. If you want to \"un-archive\" it, use folder=0 . 1 Returns: Type Description The .. code-block :: python # Archiving dialog . archive () # Un-archiving dialog . archive ( 0 ) Source code in telethon\\tl\\custom\\dialog.py 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 async def archive ( self , folder = 1 ): \"\"\" Archives (or un-archives) this dialog. Args: folder (`int`, optional): The folder to which the dialog should be archived to. If you want to \"un-archive\" it, use ``folder=0``. Returns: The :tl:`Updates` object that the request produces. Example: .. code-block:: python # Archiving dialog.archive() # Un-archiving dialog.archive(0) \"\"\" return await self . _client ( functions . folders . EditPeerFoldersRequest ([ types . InputFolderPeer ( self . input_entity , folder_id = folder ) ])) delete ( self , revoke = False ) \u00b6 Deletes the dialog from your dialog list. If you own the channel this won't destroy it, only delete it from the list. Shorthand for telethon.client.dialogs.DialogMethods.delete_dialog with entity already set. Source code in telethon\\tl\\custom\\dialog.py 107 108 109 110 111 112 113 114 115 116 117 118 async def delete ( self , revoke = False ): \"\"\" Deletes the dialog from your dialog list. If you own the channel this won't destroy it, only delete it from the list. Shorthand for `telethon.client.dialogs.DialogMethods.delete_dialog` with ``entity`` already set. \"\"\" # Pass the entire entity so the method can determine whether # the `Chat` is deactivated (in which case we don't kick ourselves, # or it would raise `PEER_ID_INVALID`). await self . _client . delete_dialog ( self . entity , revoke = revoke ) send_message ( self , * args , ** kwargs ) \u00b6 Sends a message to this dialog. This is just a wrapper around client.send_message(dialog.input_entity, *args, **kwargs) . Source code in telethon\\tl\\custom\\dialog.py 99 100 101 102 103 104 105 async def send_message ( self , * args , ** kwargs ): \"\"\" Sends a message to this dialog. This is just a wrapper around ``client.send_message(dialog.input_entity, *args, **kwargs)``. \"\"\" return await self . _client . send_message ( self . input_entity , * args , ** kwargs ) Draft \u00b6 Custom class that encapsulates a draft on the Telegram servers, providing an abstraction to change the message conveniently. The library will return instances of this class when calling :meth: get_drafts() . Parameters: Name Type Description Default date `datetime` The date of the draft. required link_preview `bool` Whether the link preview is enabled or not. required reply_to_msg_id `int` The message ID that the draft will reply to. required entity property readonly \u00b6 The entity that belongs to this dialog (user, chat or channel). input_entity property readonly \u00b6 Input version of the entity. is_empty property readonly \u00b6 Convenience bool to determine if the draft is empty or not. raw_text property readonly \u00b6 The raw (text without formatting) contained in the draft. It will be empty if there is no text (thus draft not set). text property readonly \u00b6 The markdown text contained in the draft. It will be empty if there is no text (and hence no draft is set). delete ( self ) \u00b6 Deletes this draft, and returns True on success. Source code in telethon\\tl\\custom\\draft.py 165 166 167 168 169 async def delete ( self ): \"\"\" Deletes this draft, and returns `True` on success. \"\"\" return await self . set_message ( text = '' ) get_entity ( self ) \u00b6 Returns entity but will make an API call if necessary. Source code in telethon\\tl\\custom\\draft.py 62 63 64 65 66 67 68 69 70 71 72 73 async def get_entity ( self ): \"\"\" Returns `entity` but will make an API call if necessary. \"\"\" if not self . entity and await self . get_input_entity (): try : self . _entity = \\ await self . _client . get_entity ( self . _input_entity ) except ValueError : pass return self . _entity get_input_entity ( self ) \u00b6 Returns input_entity but will make an API call if necessary. Source code in telethon\\tl\\custom\\draft.py 75 76 77 78 79 80 81 async def get_input_entity ( self ): \"\"\" Returns `input_entity` but will make an API call if necessary. \"\"\" # We don't actually have an API call we can make yet # to get more info, but keep this method for consistency. return self . input_entity send ( self , clear = True , parse_mode = ()) \u00b6 Sends the contents of this draft to the dialog. This is just a wrapper around send_message(dialog.input_entity, *args, **kwargs) . Source code in telethon\\tl\\custom\\draft.py 154 155 156 157 158 159 160 161 162 163 async def send ( self , clear = True , parse_mode = ()): \"\"\" Sends the contents of this draft to the dialog. This is just a wrapper around ``send_message(dialog.input_entity, *args, **kwargs)``. \"\"\" await self . _client . send_message ( self . _peer , self . text , reply_to = self . reply_to_msg_id , link_preview = self . link_preview , parse_mode = parse_mode , clear_draft = clear ) set_message ( self , text = None , reply_to = 0 , parse_mode = (), link_preview = None ) \u00b6 Changes the draft message on the Telegram servers. The changes are reflected in this object. :param str text: New text of the draft. Preserved if left as None. :param int reply_to: Message ID to reply to. Preserved if left as 0, erased if set to None. :param bool link_preview: Whether to attach a web page preview. Preserved if left as None. :param str parse_mode: The parse mode to be used for the text. :return bool: True on success. Source code in telethon\\tl\\custom\\draft.py 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 async def set_message ( self , text = None , reply_to = 0 , parse_mode = (), link_preview = None ): \"\"\" Changes the draft message on the Telegram servers. The changes are reflected in this object. :param str text: New text of the draft. Preserved if left as None. :param int reply_to: Message ID to reply to. Preserved if left as 0, erased if set to None. :param bool link_preview: Whether to attach a web page preview. Preserved if left as None. :param str parse_mode: The parse mode to be used for the text. :return bool: `True` on success. \"\"\" if text is None : text = self . _text if reply_to == 0 : reply_to = self . reply_to_msg_id if link_preview is None : link_preview = self . link_preview raw_text , entities = \\ await self . _client . _parse_message_text ( text , parse_mode ) result = await self . _client ( SaveDraftRequest ( peer = self . _peer , message = raw_text , no_webpage = not link_preview , reply_to_msg_id = reply_to , entities = entities )) if result : self . _text = text self . _raw_text = raw_text self . link_preview = link_preview self . reply_to_msg_id = reply_to self . date = datetime . datetime . now ( tz = datetime . timezone . utc ) return result File \u00b6 Convenience class over media like photos or documents, which supports accessing the attributes in a more convenient way. If any of the attributes are not present in the current media, the properties will be None . The original media is available through the media attribute. duration property readonly \u00b6 The duration in seconds of the audio or video. emoji property readonly \u00b6 A string with all emoji that represent the current sticker. ext property readonly \u00b6 The extension from the mime type of this file. If the mime type is unknown, the extension from the file name (if any) will be used. height property readonly \u00b6 The height in pixels of this media if it's a photo or a video. id property readonly \u00b6 The bot-API style file_id representing this file. .. note:: This file ID may not work under user accounts , but should still be usable by bot accounts . You can , however , still use it to identify a file in for example a database . mime_type property readonly \u00b6 The mime-type of this file. name property readonly \u00b6 The file name of this document. performer property readonly \u00b6 The performer of the song. size property readonly \u00b6 The size in bytes of this file. sticker_set property readonly \u00b6 The :tl: InputStickerSet to which the sticker file belongs. title property readonly \u00b6 The title of the song. width property readonly \u00b6 The width in pixels of this media if it's a photo or a video. Forward \u00b6 Custom class that encapsulates a :tl: MessageFwdHeader providing an abstraction to easily access information like the original sender. Remember that this class implements ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> and SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> which means you have access to all their sender and chat properties and methods. Attributes: original_fwd (: tl : `MessageFwdHeader` ): The original : tl : `MessageFwdHeader` instance . Any other attribute : Attributes not described here are the same as those available in the original : tl : `MessageFwdHeader` . InlineBuilder \u00b6 Helper class to allow defining InlineQuery <telethon.events.inlinequery.InlineQuery> results . Common arguments to all methods are explained here to avoid repetition: text ( `str` , optional ): If present , the user will send a text message with this text upon being clicked . link_preview ( `bool` , optional ): Whether to show a link preview in the sent text message or not . geo (: tl : `InputGeoPoint` , : tl : `GeoPoint` , : tl : `InputMediaVenue` , : tl : `MessageMediaVenue` , optional ): If present , it may either be a geo point or a venue . period ( int , optional ): The period in seconds to be used for geo points . contact (: tl : `InputMediaContact` , : tl : `MessageMediaContact` , optional ): If present , it must be the contact information to send . game ( `bool` , optional ): May be `True` to indicate that the game will be sent . buttons ( `list` , `custom.Button <telethon.tl.custom.button.Button>` , : tl : `KeyboardButton` , optional ): Same as `` buttons `` for `client.send_message() <telethon.client.messages.MessageMethods.send_message>` . parse_mode ( `str` , optional ): Same as `` parse_mode `` for `client.send_message() <telethon.client.messageparse.MessageParseMethods.parse_mode>` . id ( `str` , optional ): The string ID to use for this result . If not present , it will be the SHA256 hexadecimal digest of converting the created : tl : `InputBotInlineResult` with empty ID to `` bytes () `` , so that the ID will be deterministic for the same input . .. note :: If two inputs are exactly the same , their IDs will be the same too . If you send two articles with the same ID , it will raise `` ResultIdDuplicateError `` . Consider giving them an explicit ID if you need to send two results that are the same . article ( self , title , description = None , * , url = None , thumb = None , content = None , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ) \u00b6 Creates new inline result of article type. Parameters: Name Type Description Default title `str` The title to be shown for this result. required description `str` Further explanation of what this result means. None url `str` The URL to be shown for this result. None thumb The thumbnail to be shown for this result. For now it has to be a :tl: InputWebDocument if present. None content The content to be shown for this result. For now it has to be a :tl: InputWebDocument if present. None Source code in telethon\\tl\\custom\\inlinebuilder.py 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 async def article ( self , title , description = None , * , url = None , thumb = None , content = None , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates new inline result of article type. Args: title (`str`): The title to be shown for this result. description (`str`, optional): Further explanation of what this result means. url (`str`, optional): The URL to be shown for this result. thumb (:tl:`InputWebDocument`, optional): The thumbnail to be shown for this result. For now it has to be a :tl:`InputWebDocument` if present. content (:tl:`InputWebDocument`, optional): The content to be shown for this result. For now it has to be a :tl:`InputWebDocument` if present. \"\"\" # TODO Does 'article' work always? # article, photo, gif, mpeg4_gif, video, audio, # voice, document, location, venue, contact, game result = types . InputBotInlineResult ( id = id or '' , type = 'article' , send_message = await self . _message ( text = text , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ), title = title , description = description , url = url , thumb = thumb , content = content ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result document ( self , file , title = None , * , description = None , type = None , mime_type = None , attributes = None , force_document = False , voice_note = False , video_note = False , use_cache = True , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ) \u00b6 Creates a new inline result of document type. use_cache , mime_type , attributes , force_document , voice_note and video_note are described in client.send_file <telethon.client.uploads.UploadMethods.send_file> . Parameters: Name Type Description Default file `obj` Same as file for client.send_file() <telethon.client.uploads.UploadMethods.send_file> . required title `str` The title to be shown for this result. None description `str` Further explanation of what this result means. None type `str` The type of the document. May be one of: photo, gif, mpeg4_gif, video, audio, voice, document, sticker. See \"Type of the result\" in https://core.telegram.org/bots/api . None Source code in telethon\\tl\\custom\\inlinebuilder.py 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 async def document ( self , file , title = None , * , description = None , type = None , mime_type = None , attributes = None , force_document = False , voice_note = False , video_note = False , use_cache = True , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates a new inline result of document type. `use_cache`, `mime_type`, `attributes`, `force_document`, `voice_note` and `video_note` are described in `client.send_file <telethon.client.uploads.UploadMethods.send_file>`. Args: file (`obj`): Same as ``file`` for `client.send_file() <telethon.client.uploads.UploadMethods.send_file>`. title (`str`, optional): The title to be shown for this result. description (`str`, optional): Further explanation of what this result means. type (`str`, optional): The type of the document. May be one of: photo, gif, mpeg4_gif, video, audio, voice, document, sticker. See \"Type of the result\" in https://core.telegram.org/bots/api. \"\"\" if type is None : if voice_note : type = 'voice' else : type = 'document' try : fh = utils . get_input_document ( file ) except TypeError : _ , media , _ = await self . _client . _file_to_media ( file , mime_type = mime_type , attributes = attributes , force_document = True , voice_note = voice_note , video_note = video_note , allow_cache = use_cache ) if isinstance ( media , types . InputDocument ): fh = media else : r = await self . _client ( functions . messages . UploadMediaRequest ( types . InputPeerSelf (), media = media )) fh = utils . get_input_document ( r . document ) result = types . InputBotInlineResultDocument ( id = id or '' , type = type , document = fh , send_message = await self . _message ( # Empty string for text if there's media but text is None. # We may want to display a document but send text; however # default to sending the media (without text, i.e. stickers). text = text or '' , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ), title = title , description = description ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result game ( self , short_name , * , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ) \u00b6 Creates a new inline result of game type. Parameters: Name Type Description Default short_name `str` The short name of the game to use. required Source code in telethon\\tl\\custom\\inlinebuilder.py 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 async def game ( self , short_name , * , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates a new inline result of game type. Args: short_name (`str`): The short name of the game to use. \"\"\" result = types . InputBotInlineResultGame ( id = id or '' , short_name = short_name , send_message = await self . _message ( text = text , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ) ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result photo ( self , file , * , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ) \u00b6 Creates a new inline result of photo type. Parameters: Name Type Description Default file `obj` Same as file for client.send_file() <telethon.client.uploads.UploadMethods.send_file> . required Source code in telethon\\tl\\custom\\inlinebuilder.py 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 async def photo ( self , file , * , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates a new inline result of photo type. Args: file (`obj`, optional): Same as ``file`` for `client.send_file() <telethon.client.uploads.UploadMethods.send_file>`. \"\"\" try : fh = utils . get_input_photo ( file ) except TypeError : _ , media , _ = await self . _client . _file_to_media ( file , allow_cache = True , as_image = True ) if isinstance ( media , types . InputPhoto ): fh = media else : r = await self . _client ( functions . messages . UploadMediaRequest ( types . InputPeerSelf (), media = media )) fh = utils . get_input_photo ( r . photo ) result = types . InputBotInlineResultPhoto ( id = id or '' , type = 'photo' , photo = fh , send_message = await self . _message ( text = text or '' , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ) ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result InlineResult \u00b6 Custom class that encapsulates a bot inline result providing an abstraction to easily access some commonly needed features (such as clicking a result to select it). Attributes: result (: tl : `BotInlineResult` ): The original : tl : `BotInlineResult` object . description property readonly \u00b6 The description for this inline result. It may be None . document property readonly \u00b6 Returns either the :tl: WebDocument content for normal results or the :tl: Document for media results. message property readonly \u00b6 The always-present :tl: BotInlineMessage that will be sent if click is called on this result. photo property readonly \u00b6 Returns either the :tl: WebDocument thumbnail for normal results or the :tl: Photo for media results. title property readonly \u00b6 The title for this inline result. It may be None . type property readonly \u00b6 The always-present type of this result. It will be one of: 'article' , 'photo' , 'gif' , 'mpeg4_gif' , 'video' , 'audio' , 'voice' , 'document' , 'location' , 'venue' , 'contact' , 'game' . You can access all of these constants through InlineResult , such as InlineResult.ARTICLE , InlineResult.VIDEO_GIF , etc. url property readonly \u00b6 The URL present in this inline results. If you want to \"click\" this URL to open it in your browser, you should use Python's webbrowser.open(url) for such task. click ( self , entity , reply_to = None , silent = False , clear_draft = False , hide_via = False ) \u00b6 Clicks this result and sends the associated message . Parameters: Name Type Description Default entity `entity` The entity to which the message of this result should be sent. required reply_to `int` | `Message <telethon.tl.custom.message.Message>` If present, the sent message will reply to this ID or message. None silent `bool` Whether the message should notify people with sound or not. Defaults to False (send with a notification sound unless the person has the chat muted). Set it to True to alter this behaviour. False clear_draft `bool` Whether the draft should be removed after sending the message from this result or not. Defaults to False . False hide_via `bool` Whether the \"via @bot\" should be hidden or not. Only works with certain bots (like @bing or @gif). False Source code in telethon\\tl\\custom\\inlineresult.py 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 async def click ( self , entity , reply_to = None , silent = False , clear_draft = False , hide_via = False ): \"\"\" Clicks this result and sends the associated `message`. Args: entity (`entity`): The entity to which the message of this result should be sent. reply_to (`int` | `Message <telethon.tl.custom.message.Message>`, optional): If present, the sent message will reply to this ID or message. silent (`bool`, optional): Whether the message should notify people with sound or not. Defaults to `False` (send with a notification sound unless the person has the chat muted). Set it to `True` to alter this behaviour. clear_draft (`bool`, optional): Whether the draft should be removed after sending the message from this result or not. Defaults to `False`. hide_via (`bool`, optional): Whether the \"via @bot\" should be hidden or not. Only works with certain bots (like @bing or @gif). \"\"\" entity = await self . _client . get_input_entity ( entity ) reply_id = None if reply_to is None else utils . get_message_id ( reply_to ) req = functions . messages . SendInlineBotResultRequest ( peer = entity , query_id = self . _query_id , id = self . result . id , silent = silent , clear_draft = clear_draft , hide_via = hide_via , reply_to_msg_id = reply_id ) return self . _client . _get_response_message ( req , await self . _client ( req ), entity ) download_media ( self , * args , ** kwargs ) \u00b6 Downloads the media in this result (if there is a document, the document will be downloaded; otherwise, the photo will if present). This is a wrapper around client.download_media <telethon.client.downloads.DownloadMethods.download_media> . Source code in telethon\\tl\\custom\\inlineresult.py 140 141 142 143 144 145 146 147 148 149 150 async def download_media ( self , * args , ** kwargs ): \"\"\" Downloads the media in this result (if there is a document, the document will be downloaded; otherwise, the photo will if present). This is a wrapper around `client.download_media <telethon.client.downloads.DownloadMethods.download_media>`. \"\"\" if self . document or self . photo : return await self . _client . download_media ( self . document or self . photo , * args , ** kwargs ) InlineResults \u00b6 Custom class that encapsulates :tl: BotResults providing an abstraction to easily access some commonly needed features (such as clicking one of the results to select it) Note that this is a list of InlineResult <telethon.tl.custom.inlineresult.InlineResult> so you can iterate over it or use indices to access its elements. In addition, it has some attributes. Attributes result (:tl: BotResults ): The original :tl: BotResults object. query_id ( int ): The random ID that identifies this query. cache_time ( int ): For how long the results should be considered valid. You can call results_valid at any moment to determine if the results are still valid or not. users (:tl: User ): The users present in this inline query. gallery ( bool ): Whether these results should be presented in a grid (as a gallery of images) or not. next_offset ( str , optional): The string to be used as an offset to get the next chunk of results, if any. switch_pm (:tl: InlineBotSwitchPM , optional): If presents, the results should show a button to switch to a private conversation with the bot using the text in this object. results_valid ( self ) \u00b6 Returns True if the cache time has not expired yet and the results can still be considered valid. Source code in telethon\\tl\\custom\\inlineresults.py 60 61 62 63 64 65 def results_valid ( self ): \"\"\" Returns `True` if the cache time has not expired yet and the results can still be considered valid. \"\"\" return time . time () < self . _valid_until Message \u00b6 This custom class aggregates both :tl: Message and :tl: MessageService to ease accessing their members. Remember that this class implements ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> and SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> which means you have access to all their sender and chat properties and methods. Members id ( int ): The ID of this message. This field is always present. Any other member is optional and may be None . out ( bool ): Whether the message is outgoing (i.e. you sent it from another session) or incoming (i.e. someone else sent it). Note that messages in your own chat are always incoming , but this member will be `True` if you send a message to your own chat . Messages you forward to your chat are * not * considered outgoing , just like official clients display them . mentioned ( bool ): Whether you were mentioned in this message or not. Note that replies to your own messages also count as mentions. media_unread ( bool ): Whether you have read the media in this message or not, e.g. listened to the voice note media. silent ( bool ): Whether the message should notify people with sound or not. Previously used in channels, but since 9 August 2019, it can also be used in private chats <https://telegram.org/blog/silent-messages-slow-mode> _. post ( bool ): Whether this message is a post in a broadcast channel or not. from_scheduled ( bool ): Whether this message was originated from a previously-scheduled message or not. legacy ( bool ): Whether this is a legacy message or not. to_id (:tl: Peer ): The peer to which this message was sent, which is either :tl: PeerUser , :tl: PeerChat or :tl: PeerChannel . This will always be present except for empty messages. date ( datetime ): The UTC+0 datetime object indicating when this message was sent. This will always be present except for empty messages. message ( str ): The string text of the message for Message <telethon.tl.custom.message.Message> instances, which will be None for other types of messages. action (:tl: MessageAction ): The message action object of the message for :tl: MessageService instances, which will be None for other types of messages. from_id ( int ): The ID of the user who sent this message. This will be None if the message was sent in a broadcast channel. reply_to_msg_id ( int ): The ID to which this message is replying to, if any. fwd_from (:tl: MessageFwdHeader ): The original forward header if this message is a forward. You should probably use the forward property instead. via_bot_id ( int ): The ID of the bot used to send this message through its inline mode (e.g. \"via @like \"). media (:tl: MessageMedia ): The media sent with this message if any (such as photos, videos, documents, gifs, stickers, etc.). You may want to access the `photo` , `document` etc . properties instead . If the media was not present or it was : tl : `MessageMediaEmpty` , this member will instead be `None` for convenience . reply_markup (:tl: ReplyMarkup ): The reply markup for this message (which was sent either via a bot or by a bot). You probably want to access buttons instead. entities (List[:tl: MessageEntity ]): The list of markup entities in this message, such as bold, italics, code, hyperlinks, etc. views ( int ): The number of views this message from a broadcast channel has. This is also present in forwards. edit_date ( datetime ): The date when this message was last edited. edit_hide ( bool ): Whether the edited mark of this message is edited should be hidden (e.g. in GUI clients) or shown. post_author ( str ): The display name of the message sender to show in messages sent to broadcast channels. grouped_id ( int ): If this message belongs to a group of messages (photo albums or video albums), all of them will have the same value here. restriction_reason (List[:tl: RestrictionReason ]) An optional list of reasons why this message was restricted. If the list is None , this message has not been restricted. action_entities property readonly \u00b6 Returns a list of entities that took part in this action. Possible cases for this are :tl: MessageActionChatAddUser , :tl: types.MessageActionChatCreate , :tl: MessageActionChatDeleteUser , :tl: MessageActionChatJoinedByLink :tl: MessageActionChatMigrateTo and :tl: MessageActionChannelMigrateFrom . If the action is neither of those, the result will be None . If some entities could not be retrieved, the list may contain some None items in it. audio property readonly \u00b6 The :tl: Document media in this message, if it's an audio file. button_count property readonly \u00b6 Returns the total button count (sum of all buttons rows). buttons property readonly \u00b6 Returns a list of lists of MessageButton <telethon.tl.custom.messagebutton.MessageButton> , if any. Otherwise, it returns None . client property readonly \u00b6 Returns the TelegramClient <telethon.client.telegramclient.TelegramClient> that patched this message. This will only be present if you use the friendly methods , it won't be there if you invoke raw API methods manually, in which case you should only access members, not properties. contact property readonly \u00b6 The :tl: MessageMediaContact in this message, if it's a contact. dice property readonly \u00b6 The :tl: MessageMediaDice in this message, if it's a dice roll. document property readonly \u00b6 The :tl: Document media in this message, if any. file property readonly \u00b6 Returns a File <telethon.tl.custom.file.File> wrapping the photo or document in this message. If the media type is different (polls, games, none, etc.), this property will be None . This instance lets you easily access other properties, such as file.id <telethon.tl.custom.file.File.id> , file.name <telethon.tl.custom.file.File.name> , etc., without having to manually inspect the document.attributes . forward property readonly \u00b6 The Forward <telethon.tl.custom.forward.Forward> information if this message is a forwarded message. game property readonly \u00b6 The :tl: Game media in this message, if it's a game. geo property readonly \u00b6 The :tl: GeoPoint media in this message, if it has a location. gif property readonly \u00b6 The :tl: Document media in this message, if it's a \"gif\". \"Gif\" files by Telegram are normally .mp4 video files without sound, the so called \"animated\" media. However, it may be the actual gif format if the file is too large. invoice property readonly \u00b6 The :tl: MessageMediaInvoice in this message, if it's an invoice. is_reply property readonly \u00b6 True if the message is a reply to some other message. Remember that you can access the ID of the message this one is replying to through reply_to_msg_id , and the Message object with get_reply_message() . photo property readonly \u00b6 The :tl: Photo media in this message, if any. This will also return the photo for :tl: MessageService if its action is :tl: MessageActionChatEditPhoto , or if the message has a web preview with a photo. poll property readonly \u00b6 The :tl: MessageMediaPoll in this message, if it's a poll. raw_text property writable \u00b6 The raw message text, ignoring any formatting. Will be None for :tl: MessageService . Setting a value to this field will erase the entities , unlike changing the message member. sticker property readonly \u00b6 The :tl: Document media in this message, if it's a sticker. text property writable \u00b6 The message text, formatted using the client's default parse mode. Will be None for :tl: MessageService . venue property readonly \u00b6 The :tl: MessageMediaVenue in this message, if it's a venue. via_bot property readonly \u00b6 The bot :tl: User if the message was sent via said bot. This will only be present if via_bot_id is not None and the entity is known. via_input_bot property readonly \u00b6 Returns the input variant of via_bot . video property readonly \u00b6 The :tl: Document media in this message, if it's a video. video_note property readonly \u00b6 The :tl: Document media in this message, if it's a video note. voice property readonly \u00b6 The :tl: Document media in this message, if it's a voice note. web_preview property readonly \u00b6 The :tl: WebPage media in this message, if any. click ( self , i = None , j = None , * , text = None , filter = None , data = None ) \u00b6 Calls button.click <telethon.tl.custom.messagebutton.MessageButton.click> on the specified button. Does nothing if the message has no buttons. Parameters: Name Type Description Default i int Clicks the i'th button (starting from the index 0). Will raise IndexError if out of bounds. Example: message = ... # get the message somehow # Clicking the 3rd button # [button1] [button2] # [ button3 ] # [button4] [button5] await message . click ( 2 ) # index None j int Clicks the button at position (i, j), these being the indices for the (row, column) respectively. Example: # Clicking the 2nd button on the 1st row. # [button1] [button2] # [ button3 ] # [button4] [button5] await message . click ( 0 , 1 ) # (row, column) This is equivalent to message.buttons[0][1].click() . None text str | callable Clicks the first button with the text \"text\". This may also be a callable, like a re.compile(...).match , and the text will be passed to it. None filter callable Clicks the first button for which the callable returns True . The callable should accept a single MessageButton <telethon.tl.custom.messagebutton.MessageButton> argument. None data bytes This argument overrides the rest and will not search any buttons. Instead, it will directly send the request to behave as if it clicked a button with said data. Note that if the message does not have this data, it will raise DataInvalidError . None Example # Click the first button await message . click ( 0 ) # Click some row/column await message . click ( row , column ) # Click by text await message . click ( text = ':thumbsup:' ) # Click by data await message . click ( data = b 'payload' ) Source code in telethon\\tl\\custom\\message.py 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 async def click ( self , i = None , j = None , * , text = None , filter = None , data = None ): \"\"\" Calls `button.click <telethon.tl.custom.messagebutton.MessageButton.click>` on the specified button. Does nothing if the message has no buttons. Args: i (int): Clicks the i'th button (starting from the index 0). Will ``raise IndexError`` if out of bounds. Example: ```python message = ... # get the message somehow # Clicking the 3rd button # [button1] [button2] # [ button3 ] # [button4] [button5] await message.click(2) # index ``` j (int): Clicks the button at position (i, j), these being the indices for the (row, column) respectively. Example: ```python # Clicking the 2nd button on the 1st row. # [button1] [button2] # [ button3 ] # [button4] [button5] await message.click(0, 1) # (row, column) ``` This is equivalent to ``message.buttons[0][1].click()``. text (str | callable): Clicks the first button with the text \"text\". This may also be a callable, like a ``re.compile(...).match``, and the text will be passed to it. filter (callable): Clicks the first button for which the callable returns `True`. The callable should accept a single `MessageButton <telethon.tl.custom.messagebutton.MessageButton>` argument. data (bytes): This argument overrides the rest and will not search any buttons. Instead, it will directly send the request to behave as if it clicked a button with said data. Note that if the message does not have this data, it will ``raise DataInvalidError``. Example: ```python # Click the first button await message.click(0) # Click some row/column await message.click(row, column) # Click by text await message.click(text=':thumbsup:') # Click by data await message.click(data=b'payload') ``` \"\"\" if not self . _client : return if data : if not await self . get_input_chat (): return None try : return await self . _client ( functions . messages . GetBotCallbackAnswerRequest ( peer = self . _input_chat , msg_id = self . id , data = data ) ) except errors . BotTimeout : return None if sum ( int ( x is not None ) for x in ( i , text , filter )) >= 2 : raise ValueError ( 'You can only set either of i, text or filter' ) if not await self . get_buttons (): return # Accessing the property sets self._buttons[_flat] if text is not None : if callable ( text ): for button in self . _buttons_flat : if text ( button . text ): return await button . click () else : for button in self . _buttons_flat : if button . text == text : return await button . click () return if filter is not None : for button in self . _buttons_flat : if filter ( button ): return await button . click () return if i is None : i = 0 if j is None : return await self . _buttons_flat [ i ] . click () else : return await self . _buttons [ i ][ j ] . click () delete ( self , * args , ** kwargs ) \u00b6 Deletes the message. You're responsible for checking whether you have the permission to do so, or to except the error otherwise. Shorthand for telethon.client.messages.MessageMethods.delete_messages with entity and message_ids already set. If you need to delete more than one message at once, don't use this delete method. Use a telethon.client.telegramclient.TelegramClient instance directly. Source code in telethon\\tl\\custom\\message.py 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 async def delete ( self , * args , ** kwargs ): \"\"\" Deletes the message. You're responsible for checking whether you have the permission to do so, or to except the error otherwise. Shorthand for `telethon.client.messages.MessageMethods.delete_messages` with ``entity`` and ``message_ids`` already set. If you need to delete more than one message at once, don't use this `delete` method. Use a `telethon.client.telegramclient.TelegramClient` instance directly. \"\"\" if self . _client : return await self . _client . delete_messages ( await self . get_input_chat (), [ self . id ], * args , ** kwargs ) download_media ( self , * args , ** kwargs ) \u00b6 Downloads the media contained in the message, if any. Shorthand for telethon.client.downloads.DownloadMethods.download_media with the message already set. Source code in telethon\\tl\\custom\\message.py 757 758 759 760 761 762 763 764 async def download_media ( self , * args , ** kwargs ): \"\"\" Downloads the media contained in the message, if any. Shorthand for `telethon.client.downloads.DownloadMethods.download_media` with the ``message`` already set. \"\"\" if self . _client : return await self . _client . download_media ( self , * args , ** kwargs ) edit ( self , * args , ** kwargs ) \u00b6 Edits the message iff it's outgoing. Shorthand for telethon.client.messages.MessageMethods.edit_message with both entity and message already set. Returns None if the message was incoming, or the edited Message otherwise. .. note:: This is different from `client.edit_message <telethon.client.messages.MessageMethods.edit_message>` and ** will respect ** the previous state of the message . For example , if the message didn 't have a link preview, the edit won' t add one by default , and you should force it by setting it to `True` if you want it . This is generally the most desired and convenient behaviour , and will work for link previews and message buttons . Source code in telethon\\tl\\custom\\message.py 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 async def edit ( self , * args , ** kwargs ): \"\"\" Edits the message iff it's outgoing. Shorthand for `telethon.client.messages.MessageMethods.edit_message` with both ``entity`` and ``message`` already set. Returns `None` if the message was incoming, or the edited `Message` otherwise. .. note:: This is different from `client.edit_message <telethon.client.messages.MessageMethods.edit_message>` and **will respect** the previous state of the message. For example, if the message didn't have a link preview, the edit won't add one by default, and you should force it by setting it to `True` if you want it. This is generally the most desired and convenient behaviour, and will work for link previews and message buttons. \"\"\" if self . fwd_from or not self . out or not self . _client : return None # We assume self.out was patched for our chat if 'link_preview' not in kwargs : kwargs [ 'link_preview' ] = bool ( self . web_preview ) if 'buttons' not in kwargs : kwargs [ 'buttons' ] = self . reply_markup return await self . _client . edit_message ( await self . get_input_chat (), self . id , * args , ** kwargs ) forward_to ( self , * args , ** kwargs ) \u00b6 Forwards the message. Shorthand for telethon.client.messages.MessageMethods.forward_messages with both messages and from_peer already set. If you need to forward more than one message at once, don't use this forward_to method. Use a telethon.client.telegramclient.TelegramClient instance directly. Source code in telethon\\tl\\custom\\message.py 689 690 691 692 693 694 695 696 697 698 699 700 701 702 async def forward_to ( self , * args , ** kwargs ): \"\"\" Forwards the message. Shorthand for `telethon.client.messages.MessageMethods.forward_messages` with both ``messages`` and ``from_peer`` already set. If you need to forward more than one message at once, don't use this `forward_to` method. Use a `telethon.client.telegramclient.TelegramClient` instance directly. \"\"\" if self . _client : kwargs [ 'messages' ] = self . id kwargs [ 'from_peer' ] = await self . get_input_chat () return await self . _client . forward_messages ( * args , ** kwargs ) get_buttons ( self ) \u00b6 Returns buttons when that property fails (this is rarely needed). Source code in telethon\\tl\\custom\\message.py 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 async def get_buttons ( self ): \"\"\" Returns `buttons` when that property fails (this is rarely needed). \"\"\" if not self . buttons and self . reply_markup : chat = await self . get_input_chat () if not chat : return try : bot = self . _needed_markup_bot () except ValueError : await self . _reload_message () bot = self . _needed_markup_bot () # TODO use via_input_bot self . _set_buttons ( chat , bot ) return self . _buttons get_entities_text ( self , cls = None ) \u00b6 Returns a list of (markup entity, inner text) (like bold or italics). The markup entity is a :tl: MessageEntity that represents bold, italics, etc., and the inner text is the str inside that markup entity. For example: .. code-block:: python print ( repr ( message . text )) # shows : 'Hello **world**!' for ent , txt in message . get_entities_text (): print ( ent ) # shows : MessageEntityBold ( offset = 6 , length = 5 ) print ( txt ) # shows : world Parameters: Name Type Description Default cls `type` Returns entities matching this type only. For example, the following will print the text for all code entities: from telethon.tl.types import MessageEntityCode m = ... # get the message for _, inner_text in m.get_entities_text(MessageEntityCode): print(inner_text) None Source code in telethon\\tl\\custom\\message.py 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 def get_entities_text ( self , cls = None ): \"\"\" Returns a list of ``(markup entity, inner text)`` (like bold or italics). The markup entity is a :tl:`MessageEntity` that represents bold, italics, etc., and the inner text is the `str` inside that markup entity. For example: .. code-block:: python print(repr(message.text)) # shows: 'Hello **world**!' for ent, txt in message.get_entities_text(): print(ent) # shows: MessageEntityBold(offset=6, length=5) print(txt) # shows: world Args: cls (`type`): Returns entities matching this type only. For example, the following will print the text for all ``code`` entities: >>> from telethon.tl.types import MessageEntityCode >>> >>> m = ... # get the message >>> for _, inner_text in m.get_entities_text(MessageEntityCode): >>> print(inner_text) \"\"\" ent = self . entities if not ent : return [] if cls : ent = [ c for c in ent if isinstance ( c , cls )] texts = utils . get_inner_text ( self . message , ent ) return list ( zip ( ent , texts )) get_reply_message ( self ) \u00b6 The Message that this message is replying to, or None . The result will be cached after its first use. Source code in telethon\\tl\\custom\\message.py 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 async def get_reply_message ( self ): \"\"\" The `Message` that this message is replying to, or `None`. The result will be cached after its first use. \"\"\" if self . _reply_message is None and self . _client : if not self . reply_to_msg_id : return None # Bots cannot access other bots' messages by their ID. # However they can access them through replies... self . _reply_message = await self . _client . get_messages ( await self . get_input_chat () if self . is_channel else None , ids = types . InputMessageReplyTo ( self . id ) ) if not self . _reply_message : # ...unless the current message got deleted. # # If that's the case, give it a second chance accessing # directly by its ID. self . _reply_message = await self . _client . get_messages ( self . _input_chat if self . is_channel else None , ids = self . reply_to_msg_id ) return self . _reply_message mark_read ( self ) \u00b6 Marks the message as read. Shorthand for client.send_read_acknowledge() <telethon.client.messages.MessageMethods.send_read_acknowledge> with both entity and message already set. Source code in telethon\\tl\\custom\\message.py 883 884 885 886 887 888 889 890 891 892 async def mark_read ( self ): \"\"\" Marks the message as read. Shorthand for `client.send_read_acknowledge() <telethon.client.messages.MessageMethods.send_read_acknowledge>` with both ``entity`` and ``message`` already set. \"\"\" if self . _client : await self . _client . send_read_acknowledge ( await self . get_input_chat (), max_id = self . id ) pin ( self , * , notify = False ) \u00b6 Pins the message. Shorthand for telethon.client.messages.MessageMethods.pin_message with both entity and message already set. Source code in telethon\\tl\\custom\\message.py 894 895 896 897 898 899 900 901 902 903 904 905 async def pin ( self , * , notify = False ): \"\"\" Pins the message. Shorthand for `telethon.client.messages.MessageMethods.pin_message` with both ``entity`` and ``message`` already set. \"\"\" # TODO Constantly checking if client is a bit annoying, # maybe just make it illegal to call messages from raw API? # That or figure out a way to always set it directly. if self . _client : return await self . _client . pin_message ( await self . get_input_chat (), self . id , notify = notify ) reply ( self , * args , ** kwargs ) \u00b6 Replies to the message (as a reply). Shorthand for telethon.client.messages.MessageMethods.send_message with both entity and reply_to already set. Source code in telethon\\tl\\custom\\message.py 678 679 680 681 682 683 684 685 686 687 async def reply ( self , * args , ** kwargs ): \"\"\" Replies to the message (as a reply). Shorthand for `telethon.client.messages.MessageMethods.send_message` with both ``entity`` and ``reply_to`` already set. \"\"\" if self . _client : kwargs [ 'reply_to' ] = self . id return await self . _client . send_message ( await self . get_input_chat (), * args , ** kwargs ) respond ( self , * args , ** kwargs ) \u00b6 Responds to the message (not as a reply). Shorthand for telethon.client.messages.MessageMethods.send_message with entity already set. Source code in telethon\\tl\\custom\\message.py 668 669 670 671 672 673 674 675 676 async def respond ( self , * args , ** kwargs ): \"\"\" Responds to the message (not as a reply). Shorthand for `telethon.client.messages.MessageMethods.send_message` with ``entity`` already set. \"\"\" if self . _client : return await self . _client . send_message ( await self . get_input_chat (), * args , ** kwargs ) MessageButton \u00b6 .. note:: `Message.buttons <telethon.tl.custom.message.Message.buttons>` are instances of this type. If you want to **define** a reply markup for e.g. sending messages, refer to `Button <telethon.tl.custom.button.Button>` instead. Custom class that encapsulates a message button providing an abstraction to easily access some commonly needed features (such as clicking the button itself). Attributes: button (: tl : `KeyboardButton` ): The original : tl : `KeyboardButton` object . client property readonly \u00b6 Returns the telethon.client.telegramclient.TelegramClient instance that created this instance. data property readonly \u00b6 The bytes data for :tl: KeyboardButtonCallback objects. inline_query property readonly \u00b6 The query str for :tl: KeyboardButtonSwitchInline objects. text property readonly \u00b6 The text string of the button. url property readonly \u00b6 The url str for :tl: KeyboardButtonUrl objects. click ( self ) \u00b6 Emulates the behaviour of clicking this button. If it's a normal :tl: KeyboardButton with text, a message will be sent, and the sent Message <telethon.tl.custom.message.Message> returned. If it's an inline :tl: KeyboardButtonCallback with text and data, it will be \"clicked\" and the :tl: BotCallbackAnswer returned. If it's an inline :tl: KeyboardButtonSwitchInline button, the :tl: StartBotRequest will be invoked and the resulting updates returned. If it's a :tl: KeyboardButtonUrl , the URL of the button will be passed to webbrowser.open and return True on success. Source code in telethon\\tl\\custom\\messagebutton.py 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 async def click ( self ): \"\"\" Emulates the behaviour of clicking this button. If it's a normal :tl:`KeyboardButton` with text, a message will be sent, and the sent `Message <telethon.tl.custom.message.Message>` returned. If it's an inline :tl:`KeyboardButtonCallback` with text and data, it will be \"clicked\" and the :tl:`BotCallbackAnswer` returned. If it's an inline :tl:`KeyboardButtonSwitchInline` button, the :tl:`StartBotRequest` will be invoked and the resulting updates returned. If it's a :tl:`KeyboardButtonUrl`, the URL of the button will be passed to ``webbrowser.open`` and return `True` on success. \"\"\" if isinstance ( self . button , types . KeyboardButton ): return await self . _client . send_message ( self . _chat , self . button . text , parse_mode = None ) elif isinstance ( self . button , types . KeyboardButtonCallback ): req = functions . messages . GetBotCallbackAnswerRequest ( peer = self . _chat , msg_id = self . _msg_id , data = self . button . data ) try : return await self . _client ( req ) except BotTimeout : return None elif isinstance ( self . button , types . KeyboardButtonSwitchInline ): return await self . _client ( functions . messages . StartBotRequest ( bot = self . _bot , peer = self . _chat , start_param = self . button . query )) elif isinstance ( self . button , types . KeyboardButtonUrl ): return webbrowser . open ( self . button . url ) elif isinstance ( self . button , types . KeyboardButtonGame ): req = functions . messages . GetBotCallbackAnswerRequest ( peer = self . _chat , msg_id = self . _msg_id , game = True ) try : return await self . _client ( req ) except BotTimeout : return None SenderGetter \u00b6 Helper base class that introduces the sender , input_sender and sender_id properties and get_sender and get_input_sender methods. input_sender property readonly \u00b6 This :tl: InputPeer is the input version of the user/channel who sent the message. Similarly to input_chat <telethon.tl.custom.chatgetter.ChatGetter.input_chat> , this doesn't have things like username or similar, but still useful in some cases. Note that this might not be available if the library can't find the input chat, or if the message a broadcast on a channel. sender property readonly \u00b6 Returns the :tl: User or :tl: Channel that sent this object. It may be None if Telegram didn't send the sender. If you only need the ID, use sender_id instead. If you need to call a method which needs this chat, use input_sender instead. If you're using telethon.events , use get_sender() instead. sender_id property readonly \u00b6 Returns the marked sender integer ID, if present. If there is a sender in the object, sender_id will always be set, which is why you should use it instead of sender.id <sender> . get_input_sender ( self ) \u00b6 Returns input_sender , but will make an API call to find the input sender unless it's already cached. Source code in telethon\\tl\\custom\\sendergetter.py 75 76 77 78 79 80 81 82 async def get_input_sender ( self ): \"\"\" Returns `input_sender`, but will make an API call to find the input sender unless it's already cached. \"\"\" if self . input_sender is None and self . _sender_id and self . _client : await self . _refetch_sender () return self . _input_sender get_sender ( self ) \u00b6 Returns sender , but will make an API call to find the sender unless it's already cached. If you only need the ID, use sender_id instead. If you need to call a method which needs this sender, use get_input_sender() instead. Source code in telethon\\tl\\custom\\sendergetter.py 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 async def get_sender ( self ): \"\"\" Returns `sender`, but will make an API call to find the sender unless it's already cached. If you only need the ID, use `sender_id` instead. If you need to call a method which needs this sender, use `get_input_sender()` instead. \"\"\" # ``sender.min`` is present both in :tl:`User` and :tl:`Channel`. # It's a flag that will be set if only minimal information is # available (such as display name, but username may be missing), # in which case we want to force fetch the entire thing because # the user explicitly called a method. If the user is okay with # cached information, they may use the property instead. if ( self . _sender is None or self . _sender . min ) \\ and await self . get_input_sender (): try : self . _sender = \\ await self . _client . get_entity ( self . _input_sender ) except ValueError : await self . _refetch_sender () return self . _sender","title":"Custom package"},{"location":"modules/custom/#custom-package","text":"The telethon.tl.custom package contains custom classes that the library uses in order to make working with Telegram easier. Only those that you are supposed to use will be documented here. You can use undocumented ones at your own risk. More often than not, you don't need to import these (unless you want type hinting), nor do you need to manually create instances of these classes. They are returned by client methods.","title":"Custom package"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent","text":"Represents a more friendly interface for admin log events. Attributes original (:tl: ChannelAdminLogEvent ): The original :tl: ChannelAdminLogEvent . entities ( dict ): A dictionary mapping user IDs to :tl: User . When `old` and `new` are : tl : `ChannelParticipant` , you can use this dictionary to map the `` user_id `` , `` kicked_by `` , `` inviter_id `` and `` promoted_by `` IDs to their : tl : `User` . user (:tl: User ): The user that caused this action ( entities[original.user_id] ). input_user (:tl: InputPeerUser ): Input variant of user .","title":"AdminLogEvent"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action","text":"The original :tl: ChannelAdminLogEventAction .","title":"action"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about","text":"Whether the channel's about was changed or not. If True , old and new will be present as str .","title":"changed_about"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin","text":"Whether the permissions for an admin in this channel changed or not. If True , old and new will be present as :tl: ChannelParticipant .","title":"changed_admin"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights","text":"Whether the default banned rights were changed or not. If True , old and new will be present as :tl: ChatBannedRights .","title":"changed_default_banned_rights"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history","text":"Whether hiding the previous message history for new members in the channel was toggled or not. If True , old and new will be present as bool .","title":"changed_hide_history"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites","text":"Whether the invites in the channel were toggled or not. If True , old and new will be present as bool .","title":"changed_invites"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location","text":"Whether the location setting of the channel has changed or not. If True , old and new will be present as :tl: ChannelLocation .","title":"changed_location"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message","text":"Whether a message in this channel was edited or not. If True , old and new will be present as Message <telethon.tl.custom.message.Message> .","title":"changed_message"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo","text":"Whether the channel's photo was changed or not. If True , old and new will be present as :tl: Photo .","title":"changed_photo"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin","text":"Whether a new message in this channel was pinned or not. If True , new will be present as Message <telethon.tl.custom.message.Message> .","title":"changed_pin"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions","text":"Whether a message in this channel was edited or not. If True , old and new will be present as :tl: ChannelParticipant .","title":"changed_restrictions"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures","text":"Whether the message signatures in the channel were toggled or not. If True , old and new will be present as bool .","title":"changed_signatures"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set","text":"Whether the channel's sticker set was changed or not. If True , old and new will be present as :tl: InputStickerSet .","title":"changed_sticker_set"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title","text":"Whether the channel's title was changed or not. If True , old and new will be present as str .","title":"changed_title"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username","text":"Whether the channel's username was changed or not. If True , old and new will be present as str .","title":"changed_username"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date","text":"The date when this event occurred.","title":"date"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message","text":"Whether a message in this channel was deleted or not. If True , old will be present as Message <telethon.tl.custom.message.Message> .","title":"deleted_message"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.id","text":"The ID of this event.","title":"id"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined","text":"Whether user joined through the channel's public username or not.","title":"joined"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite","text":"Whether a new user joined through an invite link to the channel or not. If True , new will be present as :tl: ChannelParticipant .","title":"joined_invite"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left","text":"Whether user left the channel or not.","title":"left"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new","text":"The new value present in the event.","title":"new"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old","text":"The old value from the event.","title":"old"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll","text":"Whether a poll was stopped or not. If True , new will be present as Message <telethon.tl.custom.message.Message> .","title":"stopped_poll"},{"location":"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id","text":"The ID of the user that triggered this event.","title":"user_id"},{"location":"modules/custom/#telethon.tl.custom.button.Button","text":"Note This class is used to define reply markups, e.g. when sending a message or replying to events. When you access [ Message.buttons ][telethon.tl.custom.message.Message.buttons] they are actually [ MessageButton ][telethon.tl.custom.messagebutton.MessageButton], so you might want to refer to that class instead. Helper class to allow defining reply_markup when sending a message with inline or keyboard buttons. You should make use of the defined class methods to create button instances instead making them yourself (i.e. don't do Button(...) but instead use methods line Button.inline(...) <inline> etc. You can use inline , switch_inline and url together to create inline buttons (under the message). You can use text , request_location and request_phone together to create a reply markup (replaces the user keyboard). You can also configure the aspect of the reply with these. You cannot mix the two type of buttons together, and it will error if you try to do so. The text for all buttons may be at most 142 characters. If more characters are given, Telegram will cut the text to 128 characters and add the ellipsis (\u2026) character as the 129.","title":"Button"},{"location":"modules/custom/#telethon.tl.custom.button.Button.auth","text":"Creates a new inline button to authorize the user at the given URL. You should set the url to be on the same domain as the one configured for the desired bot via @BotFather <https://t.me/BotFather> _ using the /setdomain command. For more information about letting the user login via Telegram to a certain domain, see https://core.telegram.org/widgets/login . If no url is specified, it will default to text . Parameters: Name Type Description Default bot hints.EntityLike The bot that requires this authorization. By default, this is the bot that is currently logged in (itself), although you may pass a different input peer. Note For now, you cannot use ID or username for this argument. If you want to use a different bot than the one currently logged in, you must manually use client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity> . None write_access bool Whether write access is required or not. This is False by default (read-only access). False fwd_text str The new text to show in the button if the message is forwarded. By default, the button text will be the same. None Source code in telethon\\tl\\custom\\button.py 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 @staticmethod def auth ( text , url = None , * , bot = None , write_access = False , fwd_text = None ): \"\"\" Creates a new inline button to authorize the user at the given URL. You should set the `url` to be on the same domain as the one configured for the desired `bot` via `@BotFather <https://t.me/BotFather>`_ using the ``/setdomain`` command. For more information about letting the user login via Telegram to a certain domain, see https://core.telegram.org/widgets/login. If no `url` is specified, it will default to `text`. Args: bot (hints.EntityLike): The bot that requires this authorization. By default, this is the bot that is currently logged in (itself), although you may pass a different input peer. !!! Note For now, you cannot use ID or username for this argument. If you want to use a different bot than the one currently logged in, you must manually use `client.get_input_entity() <telethon.client.users.UserMethods.get_input_entity>`. write_access (bool): Whether write access is required or not. This is `False` by default (read-only access). fwd_text (str): The new text to show in the button if the message is forwarded. By default, the button text will be the same. \"\"\" return types . InputKeyboardButtonUrlAuth ( text = text , url = url or text , bot = utils . get_input_user ( bot or types . InputUserSelf ()), request_write_access = write_access , fwd_text = fwd_text )","title":"auth()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.clear","text":"Clears all keyboard buttons after sending a message with this markup. When used, no other button should be present or it will be ignored. Source code in telethon\\tl\\custom\\button.py 207 208 209 210 211 212 213 @staticmethod def clear (): \"\"\" Clears all keyboard buttons after sending a message with this markup. When used, no other button should be present or it will be ignored. \"\"\" return types . ReplyKeyboardHide ()","title":"clear()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.force_reply","text":"Forces a reply to the message with this markup. If used, no other button should be present or it will be ignored. Source code in telethon\\tl\\custom\\button.py 215 216 217 218 219 220 221 @staticmethod def force_reply (): \"\"\" Forces a reply to the message with this markup. If used, no other button should be present or it will be ignored. \"\"\" return types . ReplyKeyboardForceReply ()","title":"force_reply()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.inline","text":"Creates a new inline button with some payload data in it. If data is omitted, the given text will be used as data . In any case data should be either bytes or str . Note that the given data must be less or equal to 64 bytes. If more than 64 bytes are passed as data, ValueError is raised. Source code in telethon\\tl\\custom\\button.py 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 @staticmethod def inline ( text , data = None ): \"\"\" Creates a new inline button with some payload data in it. If `data` is omitted, the given `text` will be used as `data`. In any case `data` should be either `bytes` or `str`. Note that the given `data` must be less or equal to 64 bytes. If more than 64 bytes are passed as data, ``ValueError`` is raised. \"\"\" if not data : data = text . encode ( 'utf-8' ) elif not isinstance ( data , ( bytes , bytearray , memoryview )): data = str ( data ) . encode ( 'utf-8' ) if len ( data ) > 64 : raise ValueError ( 'Too many bytes for the data' ) return types . KeyboardButtonCallback ( text , data )","title":"inline()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.request_location","text":"Creates a new keyboard button to request the user's location on click. resize , single_use and selective are documented in text . Source code in telethon\\tl\\custom\\button.py 166 167 168 169 170 171 172 173 174 175 @classmethod def request_location ( cls , text , * , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button to request the user's location on click. ``resize``, ``single_use`` and ``selective`` are documented in `text`. \"\"\" return cls ( types . KeyboardButtonRequestGeoLocation ( text ), resize = resize , single_use = single_use , selective = selective )","title":"request_location()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.request_phone","text":"Creates a new keyboard button to request the user's phone on click. resize , single_use and selective are documented in text . Source code in telethon\\tl\\custom\\button.py 177 178 179 180 181 182 183 184 185 186 @classmethod def request_phone ( cls , text , * , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button to request the user's phone on click. ``resize``, ``single_use`` and ``selective`` are documented in `text`. \"\"\" return cls ( types . KeyboardButtonRequestPhone ( text ), resize = resize , single_use = single_use , selective = selective )","title":"request_phone()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.request_poll","text":"Creates a new keyboard button to request the user to create a poll. If force_quiz is False , the user will be allowed to choose whether they want their poll to be a quiz or not. Otherwise, the user will be forced to create a quiz when creating the poll. If a poll is a quiz, there will be only one answer that is valid, and the votes cannot be retracted. Otherwise, users can vote and retract the vote, and the pol might be multiple choice. resize , single_use and selective are documented in text . Source code in telethon\\tl\\custom\\button.py 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 @classmethod def request_poll ( cls , text , * , force_quiz = False , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button to request the user to create a poll. If `force_quiz` is `False`, the user will be allowed to choose whether they want their poll to be a quiz or not. Otherwise, the user will be forced to create a quiz when creating the poll. If a poll is a quiz, there will be only one answer that is valid, and the votes cannot be retracted. Otherwise, users can vote and retract the vote, and the pol might be multiple choice. ``resize``, ``single_use`` and ``selective`` are documented in `text`. \"\"\" return cls ( types . KeyboardButtonRequestPoll ( text , quiz = force_quiz ), resize = resize , single_use = single_use , selective = selective )","title":"request_poll()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.switch_inline","text":"Creates a new inline button to switch to inline query. If query is given, it will be the default text to be used when making the inline query. If same_peer is True the inline query will directly be set under the currently opened chat. Otherwise, the user will have to select a different dialog to make the query. Source code in telethon\\tl\\custom\\button.py 75 76 77 78 79 80 81 82 83 84 85 86 87 @staticmethod def switch_inline ( text , query = '' , same_peer = False ): \"\"\" Creates a new inline button to switch to inline query. If `query` is given, it will be the default text to be used when making the inline query. If ``same_peer is True`` the inline query will directly be set under the currently opened chat. Otherwise, the user will have to select a different dialog to make the query. \"\"\" return types . KeyboardButtonSwitchInline ( text , query , same_peer )","title":"switch_inline()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.text","text":"Creates a new keyboard button with the given text. Parameters: Name Type Description Default resize `bool` If present, the entire keyboard will be reconfigured to be resized and be smaller if there are not many buttons. None single_use `bool` If present, the entire keyboard will be reconfigured to be usable only once before it hides itself. None selective `bool` If present, the entire keyboard will be reconfigured to be \"selective\". The keyboard will be shown only to specific users. It will target users that are @mentioned in the text of the message or to the sender of the message you reply to. None Source code in telethon\\tl\\custom\\button.py 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 @classmethod def text ( cls , text , * , resize = None , single_use = None , selective = None ): \"\"\" Creates a new keyboard button with the given text. Args: resize (`bool`): If present, the entire keyboard will be reconfigured to be resized and be smaller if there are not many buttons. single_use (`bool`): If present, the entire keyboard will be reconfigured to be usable only once before it hides itself. selective (`bool`): If present, the entire keyboard will be reconfigured to be \"selective\". The keyboard will be shown only to specific users. It will target users that are @mentioned in the text of the message or to the sender of the message you reply to. \"\"\" return cls ( types . KeyboardButton ( text ), resize = resize , single_use = single_use , selective = selective )","title":"text()"},{"location":"modules/custom/#telethon.tl.custom.button.Button.url","text":"Creates a new inline button to open the desired URL on click. If no url is given, the text will be used as said URL instead. You cannot detect that the user clicked this button directly. Source code in telethon\\tl\\custom\\button.py 89 90 91 92 93 94 95 96 97 98 @staticmethod def url ( text , url = None ): \"\"\" Creates a new inline button to open the desired URL on click. If no `url` is given, the `text` will be used as said URL instead. You cannot detect that the user clicked this button directly. \"\"\" return types . KeyboardButtonUrl ( text , url or text )","title":"url()"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter","text":"Helper base class that introduces the chat , input_chat and chat_id properties and get_chat and get_input_chat methods.","title":"ChatGetter"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat","text":"Returns the :tl: User , :tl: Chat or :tl: Channel where this object belongs to. It may be None if Telegram didn't send the chat. If you only need the ID, use chat_id instead. If you need to call a method which needs this chat, use input_chat instead. If you're using telethon.events , use get_chat() instead.","title":"chat"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id","text":"Returns the marked chat integer ID. Note that this value will be different from to_id for incoming private messages, since the chat to which the messages go is to your own person, but the chat itself is with the one who sent the message. TL;DR; this gets the ID that you expect. If there is a chat in the object, chat_id will always be set, which is why you should use it instead of chat.id <chat> .","title":"chat_id"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat","text":"This :tl: InputPeer is the input version of the chat where the message was sent. Similarly to input_sender <telethon.tl.custom.sendergetter.SenderGetter.input_sender> , this doesn't have things like username or similar, but still useful in some cases. Note that this might not be available if the library doesn't have enough information available.","title":"input_chat"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel","text":"True if the message was sent on a megagroup or channel.","title":"is_channel"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group","text":"True if the message was sent on a group or megagroup. Returns None if there isn't enough information (e.g. on events.MessageDeleted <telethon.events.messagedeleted.MessageDeleted> ).","title":"is_group"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private","text":"True if the message was sent as a private message. Returns None if there isn't enough information (e.g. on events.MessageDeleted <telethon.events.messagedeleted.MessageDeleted> ).","title":"is_private"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat","text":"Returns chat , but will make an API call to find the chat unless it's already cached. If you only need the ID, use chat_id instead. If you need to call a method which needs this chat, use get_input_chat() instead. Source code in telethon\\tl\\custom\\chatgetter.py 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 async def get_chat ( self ): \"\"\" Returns `chat`, but will make an API call to find the chat unless it's already cached. If you only need the ID, use `chat_id` instead. If you need to call a method which needs this chat, use `get_input_chat()` instead. \"\"\" # See `get_sender` for information about 'min'. if ( self . _chat is None or getattr ( self . _chat , 'min' , None )) \\ and await self . get_input_chat (): try : self . _chat = \\ await self . _client . get_entity ( self . _input_chat ) except ValueError : await self . _refetch_chat () return self . _chat","title":"get_chat()"},{"location":"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat","text":"Returns input_chat , but will make an API call to find the input chat unless it's already cached. Source code in telethon\\tl\\custom\\chatgetter.py 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 async def get_input_chat ( self ): \"\"\" Returns `input_chat`, but will make an API call to find the input chat unless it's already cached. \"\"\" if self . input_chat is None and self . chat_id and self . _client : try : # The chat may be recent, look in dialogs target = self . chat_id async for d in self . _client . iter_dialogs ( 100 ): if d . id == target : self . _chat = d . entity self . _input_chat = d . input_entity break except errors . RPCError : pass return self . _input_chat","title":"get_input_chat()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation","text":"Represents a conversation inside an specific chat. A conversation keeps track of new messages since it was created until its exit and easily lets you query the current state. If you need a conversation across two or more chats, you should use two conversations and synchronize them as you better see fit.","title":"Conversation"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__","text":"Helps to cut boilerplate on async context managers that offer synchronous variants. Source code in telethon\\tl\\custom\\conversation.py 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 def _sync_enter ( self ): \"\"\" Helps to cut boilerplate on async context managers that offer synchronous variants. \"\"\" if hasattr ( self , 'loop' ): loop = self . loop else : loop = self . _client . loop if loop . is_running (): raise RuntimeError ( 'You must use \"async with\" if the event loop ' 'is running (i.e. you are inside an \"async def\")' ) return loop . run_until_complete ( self . __aenter__ ())","title":"__enter__()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel","text":"Cancels the current conversation. Pending responses and subsequent calls to get a response will raise asyncio.CancelledError . This method is synchronous and should not be awaited. Source code in telethon\\tl\\custom\\conversation.py 482 483 484 485 486 487 488 489 def cancel ( self ): \"\"\" Cancels the current conversation. Pending responses and subsequent calls to get a response will raise ``asyncio.CancelledError``. This method is synchronous and should not be awaited. \"\"\" self . _cancel_all ()","title":"cancel()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all","text":"Calls cancel on all conversations in this chat. Note that you should await this method, since it's meant to be used outside of a context manager, and it needs to resolve the chat. Source code in telethon\\tl\\custom\\conversation.py 491 492 493 494 495 496 497 498 499 500 async def cancel_all ( self ): \"\"\" Calls `cancel` on *all* conversations in this chat. Note that you should ``await`` this method, since it's meant to be used outside of a context manager, and it needs to resolve the chat. \"\"\" chat_id = await self . _client . get_peer_id ( self . _input_chat ) for conv in self . _client . _conversations [ chat_id ]: conv . cancel ()","title":"cancel_all()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit","text":"Awaits for an edit after the last message to arrive. The arguments are the same as those for get_response . Source code in telethon\\tl\\custom\\conversation.py 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 def get_edit ( self , message = None , * , timeout = None ): \"\"\" Awaits for an edit after the last message to arrive. The arguments are the same as those for `get_response`. \"\"\" start_time = time . time () target_id = self . _get_message_id ( message ) target_date = self . _edit_dates . get ( target_id , 0 ) earliest_edit = min ( ( x for x in self . _incoming if x . edit_date and x . id > target_id and x . edit_date . timestamp () > target_date ), key = lambda x : x . edit_date . timestamp (), default = None ) future = self . _client . loop . create_future () if earliest_edit and earliest_edit . edit_date . timestamp () > target_date : self . _edit_dates [ target_id ] = earliest_edit . edit_date . timestamp () future . set_result ( earliest_edit ) return future # we should always return something we can await # Otherwise the next incoming response will be the one to use self . _pending_edits [ target_id ] = future return self . _get_result ( future , start_time , timeout , self . _pending_edits , target_id )","title":"get_edit()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply","text":"Gets the next message that explicitly replies to a previous one. Source code in telethon\\tl\\custom\\conversation.py 156 157 158 159 160 161 162 163 def get_reply ( self , message = None , * , timeout = None ): \"\"\" Gets the next message that explicitly replies to a previous one. \"\"\" return self . _get_message ( message , self . _reply_indices , self . _pending_replies , timeout , lambda x , y : x . reply_to_msg_id == y )","title":"get_reply()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response","text":"Gets the next message that responds to a previous one. Parameters: Name Type Description Default message Message | int The [message][telethon.tl.custom.message.Message] (or the message ID) for which a response is expected. By default this is the last sent message. None timeout Optional[Union[int, float]] If present, this timeout (in seconds) will override the per-action timeout defined for the conversation. None Source code in telethon\\tl\\custom\\conversation.py 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 def get_response ( self , message = None , * , timeout : Optional [ Union [ int , float ]] = None ): \"\"\" Gets the next message that responds to a previous one. Args: message (Message | int): The [message][telethon.tl.custom.message.Message] (or the message ID) for which a response is expected. By default this is the last sent message. timeout: If present, this `timeout` (in seconds) will override the per-action timeout defined for the conversation. \"\"\" # Optional[Union['[Message][telethon.tl.custom.message.Message]' return self . _get_message ( message , self . _response_indices , self . _pending_responses , timeout , lambda x , y : True )","title":"get_response()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read","text":"Marks as read the latest received message if message is None . Otherwise, marks as read until the given message (or message ID). This is equivalent to calling client.send_read_acknowledge <telethon.client.messages.MessageMethods.send_read_acknowledge> . Source code in telethon\\tl\\custom\\conversation.py 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 @_checks_cancelled def mark_read ( self , message = None ): \"\"\" Marks as read the latest received message if ``message is None``. Otherwise, marks as read until the given message (or message ID). This is equivalent to calling `client.send_read_acknowledge <telethon.client.messages.MessageMethods.send_read_acknowledge>`. \"\"\" if message is None : if self . _incoming : message = self . _incoming [ - 1 ] . id else : message = 0 elif not isinstance ( message , int ): message = message . id return self . _client . send_read_acknowledge ( self . _input_chat , max_id = message )","title":"mark_read()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file","text":"Sends a file in the context of this conversation. Shorthand for telethon.client.uploads.UploadMethods.send_file with entity already set. Source code in telethon\\tl\\custom\\conversation.py 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 @_checks_cancelled async def send_file ( self , * args , ** kwargs ): \"\"\" Sends a file in the context of this conversation. Shorthand for `telethon.client.uploads.UploadMethods.send_file` with ``entity`` already set. \"\"\" sent = await self . _client . send_file ( self . _input_chat , * args , ** kwargs ) # Albums will be lists, so handle that ms = sent if isinstance ( sent , list ) else ( sent ,) self . _outgoing . update ( m . id for m in ms ) self . _last_outgoing = ms [ - 1 ] . id return sent","title":"send_file()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message","text":"Sends a message in the context of this conversation. Shorthand for telethon.client.messages.MessageMethods.send_message with entity already set. Source code in telethon\\tl\\custom\\conversation.py 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 @_checks_cancelled async def send_message ( self , * args , ** kwargs ): \"\"\" Sends a message in the context of this conversation. Shorthand for `telethon.client.messages.MessageMethods.send_message` with ``entity`` already set. \"\"\" sent = await self . _client . send_message ( self . _input_chat , * args , ** kwargs ) # Albums will be lists, so handle that ms = sent if isinstance ( sent , list ) else ( sent ,) self . _outgoing . update ( m . id for m in ms ) self . _last_outgoing = ms [ - 1 ] . id return sent","title":"send_message()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event","text":"Waits for a custom event to occur. Timeouts still apply. Note Only use this if there isn't another method available! For example, don't use wait_event for new messages, since get_response already exists, etc. Unless you're certain that your code will run fast enough, generally you should get a \"handle\" of this special coroutine before acting. Generally, you should do this: from telethon import TelegramClient , events client = TelegramClient ( ... ) async def main (): async with client . conversation ( ... ) as conv : response = conv . wait_event ( events . NewMessage ( incoming = True )) await conv . send_message ( 'Hi' ) response = await response This way your event can be registered before acting, since the response may arrive before your event was registered. It depends on your use case since this also means the event can arrive before you send a previous action. Source code in telethon\\tl\\custom\\conversation.py 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 async def wait_event ( self , event , * , timeout = None ): \"\"\" Waits for a custom event to occur. Timeouts still apply. Note: Only use this if there isn't another method available! For example, don't use `wait_event` for new messages, since `get_response` already exists, etc. Unless you're certain that your code will run fast enough, generally you should get a \"handle\" of this special coroutine before acting. Generally, you should do this: ```python from telethon import TelegramClient, events client = TelegramClient(...) async def main(): async with client.conversation(...) as conv: response = conv.wait_event(events.NewMessage(incoming=True)) await conv.send_message('Hi') response = await response ``` This way your event can be registered before acting, since the response may arrive before your event was registered. It depends on your use case since this also means the event can arrive before you send a previous action. \"\"\" start_time = time . time () if isinstance ( event , type ): event = event () await event . resolve ( self . _client ) counter = Conversation . _custom_counter Conversation . _custom_counter += 1 future = self . _client . loop . create_future () self . _custom [ counter ] = ( event , future ) return await self . _get_result ( future , start_time , timeout , self . _custom , counter )","title":"wait_event()"},{"location":"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read","text":"Awaits for the sent message to be marked as read. Note that receiving a response doesn't imply the message was read, and this action will also trigger even without a response. Source code in telethon\\tl\\custom\\conversation.py 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 def wait_read ( self , message = None , * , timeout = None ): \"\"\" Awaits for the sent message to be marked as read. Note that receiving a response doesn't imply the message was read, and this action will also trigger even without a response. \"\"\" start_time = time . time () future = self . _client . loop . create_future () target_id = self . _get_message_id ( message ) if self . _last_read is None : self . _last_read = target_id - 1 if self . _last_read >= target_id : return self . _pending_reads [ target_id ] = future return self . _get_result ( future , start_time , timeout , self . _pending_reads , target_id )","title":"wait_read()"},{"location":"modules/custom/#telethon.tl.custom.dialog.Dialog","text":"Custom class that encapsulates a dialog (an open \"conversation\" with someone, a group or a channel) providing an abstraction to easily access the input version/normal entity/message etc. The library will return instances of this class when calling :meth: .get_dialogs() . Parameters: Name Type Description Default dialog The original Dialog instance. required pinned `bool` Whether this dialog is pinned to the top or not. required folder_id `folder_id` The folder ID that this dialog belongs to. required archived `bool` Whether this dialog is archived or not ( folder_id is None ). required message `Message <telethon.tl.custom.message.Message>` The last message sent on this dialog. Note that this member will not be updated when new messages arrive, it's only set on creation of the instance. required date `datetime` The date of the last message sent on this dialog. required entity `entity` The entity that belongs to this dialog (user, chat or channel). required input_entity Input version of the entity. required id `int` The marked ID of the entity, which is guaranteed to be unique. required name `str` Display name for this dialog. For chats and channels this is their title, and for users it's \"First-Name Last-Name\". required title `str` Alias for name . required unread_count `int` How many messages are currently unread in this dialog. Note that this value won't update when new messages arrive. required unread_mentions_count `int` How many mentions are currently unread in this dialog. Note that this value won't update when new messages arrive. required draft `Draft <telethon.tl.custom.draft.Draft>` The draft object in this dialog. It will not be None , so you can call draft.set_message(...) . required is_user `bool` True if the entity is a :tl: User . required is_group `bool` True if the entity is a :tl: Chat or a :tl: Channel megagroup. required is_channel `bool` True if the entity is a :tl: Channel . required","title":"Dialog"},{"location":"modules/custom/#telethon.tl.custom.dialog.Dialog.archive","text":"Archives (or un-archives) this dialog. Parameters: Name Type Description Default folder `int` The folder to which the dialog should be archived to. If you want to \"un-archive\" it, use folder=0 . 1 Returns: Type Description The .. code-block :: python # Archiving dialog . archive () # Un-archiving dialog . archive ( 0 ) Source code in telethon\\tl\\custom\\dialog.py 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 async def archive ( self , folder = 1 ): \"\"\" Archives (or un-archives) this dialog. Args: folder (`int`, optional): The folder to which the dialog should be archived to. If you want to \"un-archive\" it, use ``folder=0``. Returns: The :tl:`Updates` object that the request produces. Example: .. code-block:: python # Archiving dialog.archive() # Un-archiving dialog.archive(0) \"\"\" return await self . _client ( functions . folders . EditPeerFoldersRequest ([ types . InputFolderPeer ( self . input_entity , folder_id = folder ) ]))","title":"archive()"},{"location":"modules/custom/#telethon.tl.custom.dialog.Dialog.delete","text":"Deletes the dialog from your dialog list. If you own the channel this won't destroy it, only delete it from the list. Shorthand for telethon.client.dialogs.DialogMethods.delete_dialog with entity already set. Source code in telethon\\tl\\custom\\dialog.py 107 108 109 110 111 112 113 114 115 116 117 118 async def delete ( self , revoke = False ): \"\"\" Deletes the dialog from your dialog list. If you own the channel this won't destroy it, only delete it from the list. Shorthand for `telethon.client.dialogs.DialogMethods.delete_dialog` with ``entity`` already set. \"\"\" # Pass the entire entity so the method can determine whether # the `Chat` is deactivated (in which case we don't kick ourselves, # or it would raise `PEER_ID_INVALID`). await self . _client . delete_dialog ( self . entity , revoke = revoke )","title":"delete()"},{"location":"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message","text":"Sends a message to this dialog. This is just a wrapper around client.send_message(dialog.input_entity, *args, **kwargs) . Source code in telethon\\tl\\custom\\dialog.py 99 100 101 102 103 104 105 async def send_message ( self , * args , ** kwargs ): \"\"\" Sends a message to this dialog. This is just a wrapper around ``client.send_message(dialog.input_entity, *args, **kwargs)``. \"\"\" return await self . _client . send_message ( self . input_entity , * args , ** kwargs )","title":"send_message()"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft","text":"Custom class that encapsulates a draft on the Telegram servers, providing an abstraction to change the message conveniently. The library will return instances of this class when calling :meth: get_drafts() . Parameters: Name Type Description Default date `datetime` The date of the draft. required link_preview `bool` Whether the link preview is enabled or not. required reply_to_msg_id `int` The message ID that the draft will reply to. required","title":"Draft"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.entity","text":"The entity that belongs to this dialog (user, chat or channel).","title":"entity"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.input_entity","text":"Input version of the entity.","title":"input_entity"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.is_empty","text":"Convenience bool to determine if the draft is empty or not.","title":"is_empty"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.raw_text","text":"The raw (text without formatting) contained in the draft. It will be empty if there is no text (thus draft not set).","title":"raw_text"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.text","text":"The markdown text contained in the draft. It will be empty if there is no text (and hence no draft is set).","title":"text"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.delete","text":"Deletes this draft, and returns True on success. Source code in telethon\\tl\\custom\\draft.py 165 166 167 168 169 async def delete ( self ): \"\"\" Deletes this draft, and returns `True` on success. \"\"\" return await self . set_message ( text = '' )","title":"delete()"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.get_entity","text":"Returns entity but will make an API call if necessary. Source code in telethon\\tl\\custom\\draft.py 62 63 64 65 66 67 68 69 70 71 72 73 async def get_entity ( self ): \"\"\" Returns `entity` but will make an API call if necessary. \"\"\" if not self . entity and await self . get_input_entity (): try : self . _entity = \\ await self . _client . get_entity ( self . _input_entity ) except ValueError : pass return self . _entity","title":"get_entity()"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity","text":"Returns input_entity but will make an API call if necessary. Source code in telethon\\tl\\custom\\draft.py 75 76 77 78 79 80 81 async def get_input_entity ( self ): \"\"\" Returns `input_entity` but will make an API call if necessary. \"\"\" # We don't actually have an API call we can make yet # to get more info, but keep this method for consistency. return self . input_entity","title":"get_input_entity()"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.send","text":"Sends the contents of this draft to the dialog. This is just a wrapper around send_message(dialog.input_entity, *args, **kwargs) . Source code in telethon\\tl\\custom\\draft.py 154 155 156 157 158 159 160 161 162 163 async def send ( self , clear = True , parse_mode = ()): \"\"\" Sends the contents of this draft to the dialog. This is just a wrapper around ``send_message(dialog.input_entity, *args, **kwargs)``. \"\"\" await self . _client . send_message ( self . _peer , self . text , reply_to = self . reply_to_msg_id , link_preview = self . link_preview , parse_mode = parse_mode , clear_draft = clear )","title":"send()"},{"location":"modules/custom/#telethon.tl.custom.draft.Draft.set_message","text":"Changes the draft message on the Telegram servers. The changes are reflected in this object. :param str text: New text of the draft. Preserved if left as None. :param int reply_to: Message ID to reply to. Preserved if left as 0, erased if set to None. :param bool link_preview: Whether to attach a web page preview. Preserved if left as None. :param str parse_mode: The parse mode to be used for the text. :return bool: True on success. Source code in telethon\\tl\\custom\\draft.py 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 async def set_message ( self , text = None , reply_to = 0 , parse_mode = (), link_preview = None ): \"\"\" Changes the draft message on the Telegram servers. The changes are reflected in this object. :param str text: New text of the draft. Preserved if left as None. :param int reply_to: Message ID to reply to. Preserved if left as 0, erased if set to None. :param bool link_preview: Whether to attach a web page preview. Preserved if left as None. :param str parse_mode: The parse mode to be used for the text. :return bool: `True` on success. \"\"\" if text is None : text = self . _text if reply_to == 0 : reply_to = self . reply_to_msg_id if link_preview is None : link_preview = self . link_preview raw_text , entities = \\ await self . _client . _parse_message_text ( text , parse_mode ) result = await self . _client ( SaveDraftRequest ( peer = self . _peer , message = raw_text , no_webpage = not link_preview , reply_to_msg_id = reply_to , entities = entities )) if result : self . _text = text self . _raw_text = raw_text self . link_preview = link_preview self . reply_to_msg_id = reply_to self . date = datetime . datetime . now ( tz = datetime . timezone . utc ) return result","title":"set_message()"},{"location":"modules/custom/#telethon.tl.custom.file.File","text":"Convenience class over media like photos or documents, which supports accessing the attributes in a more convenient way. If any of the attributes are not present in the current media, the properties will be None . The original media is available through the media attribute.","title":"File"},{"location":"modules/custom/#telethon.tl.custom.file.File.duration","text":"The duration in seconds of the audio or video.","title":"duration"},{"location":"modules/custom/#telethon.tl.custom.file.File.emoji","text":"A string with all emoji that represent the current sticker.","title":"emoji"},{"location":"modules/custom/#telethon.tl.custom.file.File.ext","text":"The extension from the mime type of this file. If the mime type is unknown, the extension from the file name (if any) will be used.","title":"ext"},{"location":"modules/custom/#telethon.tl.custom.file.File.height","text":"The height in pixels of this media if it's a photo or a video.","title":"height"},{"location":"modules/custom/#telethon.tl.custom.file.File.id","text":"The bot-API style file_id representing this file. .. note:: This file ID may not work under user accounts , but should still be usable by bot accounts . You can , however , still use it to identify a file in for example a database .","title":"id"},{"location":"modules/custom/#telethon.tl.custom.file.File.mime_type","text":"The mime-type of this file.","title":"mime_type"},{"location":"modules/custom/#telethon.tl.custom.file.File.name","text":"The file name of this document.","title":"name"},{"location":"modules/custom/#telethon.tl.custom.file.File.performer","text":"The performer of the song.","title":"performer"},{"location":"modules/custom/#telethon.tl.custom.file.File.size","text":"The size in bytes of this file.","title":"size"},{"location":"modules/custom/#telethon.tl.custom.file.File.sticker_set","text":"The :tl: InputStickerSet to which the sticker file belongs.","title":"sticker_set"},{"location":"modules/custom/#telethon.tl.custom.file.File.title","text":"The title of the song.","title":"title"},{"location":"modules/custom/#telethon.tl.custom.file.File.width","text":"The width in pixels of this media if it's a photo or a video.","title":"width"},{"location":"modules/custom/#telethon.tl.custom.forward.Forward","text":"Custom class that encapsulates a :tl: MessageFwdHeader providing an abstraction to easily access information like the original sender. Remember that this class implements ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> and SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> which means you have access to all their sender and chat properties and methods. Attributes: original_fwd (: tl : `MessageFwdHeader` ): The original : tl : `MessageFwdHeader` instance . Any other attribute : Attributes not described here are the same as those available in the original : tl : `MessageFwdHeader` .","title":"Forward"},{"location":"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder","text":"Helper class to allow defining InlineQuery <telethon.events.inlinequery.InlineQuery> results . Common arguments to all methods are explained here to avoid repetition: text ( `str` , optional ): If present , the user will send a text message with this text upon being clicked . link_preview ( `bool` , optional ): Whether to show a link preview in the sent text message or not . geo (: tl : `InputGeoPoint` , : tl : `GeoPoint` , : tl : `InputMediaVenue` , : tl : `MessageMediaVenue` , optional ): If present , it may either be a geo point or a venue . period ( int , optional ): The period in seconds to be used for geo points . contact (: tl : `InputMediaContact` , : tl : `MessageMediaContact` , optional ): If present , it must be the contact information to send . game ( `bool` , optional ): May be `True` to indicate that the game will be sent . buttons ( `list` , `custom.Button <telethon.tl.custom.button.Button>` , : tl : `KeyboardButton` , optional ): Same as `` buttons `` for `client.send_message() <telethon.client.messages.MessageMethods.send_message>` . parse_mode ( `str` , optional ): Same as `` parse_mode `` for `client.send_message() <telethon.client.messageparse.MessageParseMethods.parse_mode>` . id ( `str` , optional ): The string ID to use for this result . If not present , it will be the SHA256 hexadecimal digest of converting the created : tl : `InputBotInlineResult` with empty ID to `` bytes () `` , so that the ID will be deterministic for the same input . .. note :: If two inputs are exactly the same , their IDs will be the same too . If you send two articles with the same ID , it will raise `` ResultIdDuplicateError `` . Consider giving them an explicit ID if you need to send two results that are the same .","title":"InlineBuilder"},{"location":"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article","text":"Creates new inline result of article type. Parameters: Name Type Description Default title `str` The title to be shown for this result. required description `str` Further explanation of what this result means. None url `str` The URL to be shown for this result. None thumb The thumbnail to be shown for this result. For now it has to be a :tl: InputWebDocument if present. None content The content to be shown for this result. For now it has to be a :tl: InputWebDocument if present. None Source code in telethon\\tl\\custom\\inlinebuilder.py 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 async def article ( self , title , description = None , * , url = None , thumb = None , content = None , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates new inline result of article type. Args: title (`str`): The title to be shown for this result. description (`str`, optional): Further explanation of what this result means. url (`str`, optional): The URL to be shown for this result. thumb (:tl:`InputWebDocument`, optional): The thumbnail to be shown for this result. For now it has to be a :tl:`InputWebDocument` if present. content (:tl:`InputWebDocument`, optional): The content to be shown for this result. For now it has to be a :tl:`InputWebDocument` if present. \"\"\" # TODO Does 'article' work always? # article, photo, gif, mpeg4_gif, video, audio, # voice, document, location, venue, contact, game result = types . InputBotInlineResult ( id = id or '' , type = 'article' , send_message = await self . _message ( text = text , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ), title = title , description = description , url = url , thumb = thumb , content = content ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result","title":"article()"},{"location":"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document","text":"Creates a new inline result of document type. use_cache , mime_type , attributes , force_document , voice_note and video_note are described in client.send_file <telethon.client.uploads.UploadMethods.send_file> . Parameters: Name Type Description Default file `obj` Same as file for client.send_file() <telethon.client.uploads.UploadMethods.send_file> . required title `str` The title to be shown for this result. None description `str` Further explanation of what this result means. None type `str` The type of the document. May be one of: photo, gif, mpeg4_gif, video, audio, voice, document, sticker. See \"Type of the result\" in https://core.telegram.org/bots/api . None Source code in telethon\\tl\\custom\\inlinebuilder.py 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 async def document ( self , file , title = None , * , description = None , type = None , mime_type = None , attributes = None , force_document = False , voice_note = False , video_note = False , use_cache = True , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates a new inline result of document type. `use_cache`, `mime_type`, `attributes`, `force_document`, `voice_note` and `video_note` are described in `client.send_file <telethon.client.uploads.UploadMethods.send_file>`. Args: file (`obj`): Same as ``file`` for `client.send_file() <telethon.client.uploads.UploadMethods.send_file>`. title (`str`, optional): The title to be shown for this result. description (`str`, optional): Further explanation of what this result means. type (`str`, optional): The type of the document. May be one of: photo, gif, mpeg4_gif, video, audio, voice, document, sticker. See \"Type of the result\" in https://core.telegram.org/bots/api. \"\"\" if type is None : if voice_note : type = 'voice' else : type = 'document' try : fh = utils . get_input_document ( file ) except TypeError : _ , media , _ = await self . _client . _file_to_media ( file , mime_type = mime_type , attributes = attributes , force_document = True , voice_note = voice_note , video_note = video_note , allow_cache = use_cache ) if isinstance ( media , types . InputDocument ): fh = media else : r = await self . _client ( functions . messages . UploadMediaRequest ( types . InputPeerSelf (), media = media )) fh = utils . get_input_document ( r . document ) result = types . InputBotInlineResultDocument ( id = id or '' , type = type , document = fh , send_message = await self . _message ( # Empty string for text if there's media but text is None. # We may want to display a document but send text; however # default to sending the media (without text, i.e. stickers). text = text or '' , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ), title = title , description = description ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result","title":"document()"},{"location":"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game","text":"Creates a new inline result of game type. Parameters: Name Type Description Default short_name `str` The short name of the game to use. required Source code in telethon\\tl\\custom\\inlinebuilder.py 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 async def game ( self , short_name , * , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates a new inline result of game type. Args: short_name (`str`): The short name of the game to use. \"\"\" result = types . InputBotInlineResultGame ( id = id or '' , short_name = short_name , send_message = await self . _message ( text = text , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ) ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result","title":"game()"},{"location":"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo","text":"Creates a new inline result of photo type. Parameters: Name Type Description Default file `obj` Same as file for client.send_file() <telethon.client.uploads.UploadMethods.send_file> . required Source code in telethon\\tl\\custom\\inlinebuilder.py 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 async def photo ( self , file , * , id = None , text = None , parse_mode = (), link_preview = True , geo = None , period = 60 , contact = None , game = False , buttons = None ): \"\"\" Creates a new inline result of photo type. Args: file (`obj`, optional): Same as ``file`` for `client.send_file() <telethon.client.uploads.UploadMethods.send_file>`. \"\"\" try : fh = utils . get_input_photo ( file ) except TypeError : _ , media , _ = await self . _client . _file_to_media ( file , allow_cache = True , as_image = True ) if isinstance ( media , types . InputPhoto ): fh = media else : r = await self . _client ( functions . messages . UploadMediaRequest ( types . InputPeerSelf (), media = media )) fh = utils . get_input_photo ( r . photo ) result = types . InputBotInlineResultPhoto ( id = id or '' , type = 'photo' , photo = fh , send_message = await self . _message ( text = text or '' , parse_mode = parse_mode , link_preview = link_preview , geo = geo , period = period , contact = contact , game = game , buttons = buttons ) ) if id is None : result . id = hashlib . sha256 ( bytes ( result )) . hexdigest () return result","title":"photo()"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult","text":"Custom class that encapsulates a bot inline result providing an abstraction to easily access some commonly needed features (such as clicking a result to select it). Attributes: result (: tl : `BotInlineResult` ): The original : tl : `BotInlineResult` object .","title":"InlineResult"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description","text":"The description for this inline result. It may be None .","title":"description"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document","text":"Returns either the :tl: WebDocument content for normal results or the :tl: Document for media results.","title":"document"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message","text":"The always-present :tl: BotInlineMessage that will be sent if click is called on this result.","title":"message"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo","text":"Returns either the :tl: WebDocument thumbnail for normal results or the :tl: Photo for media results.","title":"photo"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title","text":"The title for this inline result. It may be None .","title":"title"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type","text":"The always-present type of this result. It will be one of: 'article' , 'photo' , 'gif' , 'mpeg4_gif' , 'video' , 'audio' , 'voice' , 'document' , 'location' , 'venue' , 'contact' , 'game' . You can access all of these constants through InlineResult , such as InlineResult.ARTICLE , InlineResult.VIDEO_GIF , etc.","title":"type"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url","text":"The URL present in this inline results. If you want to \"click\" this URL to open it in your browser, you should use Python's webbrowser.open(url) for such task.","title":"url"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click","text":"Clicks this result and sends the associated message . Parameters: Name Type Description Default entity `entity` The entity to which the message of this result should be sent. required reply_to `int` | `Message <telethon.tl.custom.message.Message>` If present, the sent message will reply to this ID or message. None silent `bool` Whether the message should notify people with sound or not. Defaults to False (send with a notification sound unless the person has the chat muted). Set it to True to alter this behaviour. False clear_draft `bool` Whether the draft should be removed after sending the message from this result or not. Defaults to False . False hide_via `bool` Whether the \"via @bot\" should be hidden or not. Only works with certain bots (like @bing or @gif). False Source code in telethon\\tl\\custom\\inlineresult.py 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 async def click ( self , entity , reply_to = None , silent = False , clear_draft = False , hide_via = False ): \"\"\" Clicks this result and sends the associated `message`. Args: entity (`entity`): The entity to which the message of this result should be sent. reply_to (`int` | `Message <telethon.tl.custom.message.Message>`, optional): If present, the sent message will reply to this ID or message. silent (`bool`, optional): Whether the message should notify people with sound or not. Defaults to `False` (send with a notification sound unless the person has the chat muted). Set it to `True` to alter this behaviour. clear_draft (`bool`, optional): Whether the draft should be removed after sending the message from this result or not. Defaults to `False`. hide_via (`bool`, optional): Whether the \"via @bot\" should be hidden or not. Only works with certain bots (like @bing or @gif). \"\"\" entity = await self . _client . get_input_entity ( entity ) reply_id = None if reply_to is None else utils . get_message_id ( reply_to ) req = functions . messages . SendInlineBotResultRequest ( peer = entity , query_id = self . _query_id , id = self . result . id , silent = silent , clear_draft = clear_draft , hide_via = hide_via , reply_to_msg_id = reply_id ) return self . _client . _get_response_message ( req , await self . _client ( req ), entity )","title":"click()"},{"location":"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media","text":"Downloads the media in this result (if there is a document, the document will be downloaded; otherwise, the photo will if present). This is a wrapper around client.download_media <telethon.client.downloads.DownloadMethods.download_media> . Source code in telethon\\tl\\custom\\inlineresult.py 140 141 142 143 144 145 146 147 148 149 150 async def download_media ( self , * args , ** kwargs ): \"\"\" Downloads the media in this result (if there is a document, the document will be downloaded; otherwise, the photo will if present). This is a wrapper around `client.download_media <telethon.client.downloads.DownloadMethods.download_media>`. \"\"\" if self . document or self . photo : return await self . _client . download_media ( self . document or self . photo , * args , ** kwargs )","title":"download_media()"},{"location":"modules/custom/#telethon.tl.custom.inlineresults.InlineResults","text":"Custom class that encapsulates :tl: BotResults providing an abstraction to easily access some commonly needed features (such as clicking one of the results to select it) Note that this is a list of InlineResult <telethon.tl.custom.inlineresult.InlineResult> so you can iterate over it or use indices to access its elements. In addition, it has some attributes. Attributes result (:tl: BotResults ): The original :tl: BotResults object. query_id ( int ): The random ID that identifies this query. cache_time ( int ): For how long the results should be considered valid. You can call results_valid at any moment to determine if the results are still valid or not. users (:tl: User ): The users present in this inline query. gallery ( bool ): Whether these results should be presented in a grid (as a gallery of images) or not. next_offset ( str , optional): The string to be used as an offset to get the next chunk of results, if any. switch_pm (:tl: InlineBotSwitchPM , optional): If presents, the results should show a button to switch to a private conversation with the bot using the text in this object.","title":"InlineResults"},{"location":"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid","text":"Returns True if the cache time has not expired yet and the results can still be considered valid. Source code in telethon\\tl\\custom\\inlineresults.py 60 61 62 63 64 65 def results_valid ( self ): \"\"\" Returns `True` if the cache time has not expired yet and the results can still be considered valid. \"\"\" return time . time () < self . _valid_until","title":"results_valid()"},{"location":"modules/custom/#telethon.tl.custom.message.Message","text":"This custom class aggregates both :tl: Message and :tl: MessageService to ease accessing their members. Remember that this class implements ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> and SenderGetter <telethon.tl.custom.sendergetter.SenderGetter> which means you have access to all their sender and chat properties and methods. Members id ( int ): The ID of this message. This field is always present. Any other member is optional and may be None . out ( bool ): Whether the message is outgoing (i.e. you sent it from another session) or incoming (i.e. someone else sent it). Note that messages in your own chat are always incoming , but this member will be `True` if you send a message to your own chat . Messages you forward to your chat are * not * considered outgoing , just like official clients display them . mentioned ( bool ): Whether you were mentioned in this message or not. Note that replies to your own messages also count as mentions. media_unread ( bool ): Whether you have read the media in this message or not, e.g. listened to the voice note media. silent ( bool ): Whether the message should notify people with sound or not. Previously used in channels, but since 9 August 2019, it can also be used in private chats <https://telegram.org/blog/silent-messages-slow-mode> _. post ( bool ): Whether this message is a post in a broadcast channel or not. from_scheduled ( bool ): Whether this message was originated from a previously-scheduled message or not. legacy ( bool ): Whether this is a legacy message or not. to_id (:tl: Peer ): The peer to which this message was sent, which is either :tl: PeerUser , :tl: PeerChat or :tl: PeerChannel . This will always be present except for empty messages. date ( datetime ): The UTC+0 datetime object indicating when this message was sent. This will always be present except for empty messages. message ( str ): The string text of the message for Message <telethon.tl.custom.message.Message> instances, which will be None for other types of messages. action (:tl: MessageAction ): The message action object of the message for :tl: MessageService instances, which will be None for other types of messages. from_id ( int ): The ID of the user who sent this message. This will be None if the message was sent in a broadcast channel. reply_to_msg_id ( int ): The ID to which this message is replying to, if any. fwd_from (:tl: MessageFwdHeader ): The original forward header if this message is a forward. You should probably use the forward property instead. via_bot_id ( int ): The ID of the bot used to send this message through its inline mode (e.g. \"via @like \"). media (:tl: MessageMedia ): The media sent with this message if any (such as photos, videos, documents, gifs, stickers, etc.). You may want to access the `photo` , `document` etc . properties instead . If the media was not present or it was : tl : `MessageMediaEmpty` , this member will instead be `None` for convenience . reply_markup (:tl: ReplyMarkup ): The reply markup for this message (which was sent either via a bot or by a bot). You probably want to access buttons instead. entities (List[:tl: MessageEntity ]): The list of markup entities in this message, such as bold, italics, code, hyperlinks, etc. views ( int ): The number of views this message from a broadcast channel has. This is also present in forwards. edit_date ( datetime ): The date when this message was last edited. edit_hide ( bool ): Whether the edited mark of this message is edited should be hidden (e.g. in GUI clients) or shown. post_author ( str ): The display name of the message sender to show in messages sent to broadcast channels. grouped_id ( int ): If this message belongs to a group of messages (photo albums or video albums), all of them will have the same value here. restriction_reason (List[:tl: RestrictionReason ]) An optional list of reasons why this message was restricted. If the list is None , this message has not been restricted.","title":"Message"},{"location":"modules/custom/#telethon.tl.custom.message.Message.action_entities","text":"Returns a list of entities that took part in this action. Possible cases for this are :tl: MessageActionChatAddUser , :tl: types.MessageActionChatCreate , :tl: MessageActionChatDeleteUser , :tl: MessageActionChatJoinedByLink :tl: MessageActionChatMigrateTo and :tl: MessageActionChannelMigrateFrom . If the action is neither of those, the result will be None . If some entities could not be retrieved, the list may contain some None items in it.","title":"action_entities"},{"location":"modules/custom/#telethon.tl.custom.message.Message.audio","text":"The :tl: Document media in this message, if it's an audio file.","title":"audio"},{"location":"modules/custom/#telethon.tl.custom.message.Message.button_count","text":"Returns the total button count (sum of all buttons rows).","title":"button_count"},{"location":"modules/custom/#telethon.tl.custom.message.Message.buttons","text":"Returns a list of lists of MessageButton <telethon.tl.custom.messagebutton.MessageButton> , if any. Otherwise, it returns None .","title":"buttons"},{"location":"modules/custom/#telethon.tl.custom.message.Message.client","text":"Returns the TelegramClient <telethon.client.telegramclient.TelegramClient> that patched this message. This will only be present if you use the friendly methods , it won't be there if you invoke raw API methods manually, in which case you should only access members, not properties.","title":"client"},{"location":"modules/custom/#telethon.tl.custom.message.Message.contact","text":"The :tl: MessageMediaContact in this message, if it's a contact.","title":"contact"},{"location":"modules/custom/#telethon.tl.custom.message.Message.dice","text":"The :tl: MessageMediaDice in this message, if it's a dice roll.","title":"dice"},{"location":"modules/custom/#telethon.tl.custom.message.Message.document","text":"The :tl: Document media in this message, if any.","title":"document"},{"location":"modules/custom/#telethon.tl.custom.message.Message.file","text":"Returns a File <telethon.tl.custom.file.File> wrapping the photo or document in this message. If the media type is different (polls, games, none, etc.), this property will be None . This instance lets you easily access other properties, such as file.id <telethon.tl.custom.file.File.id> , file.name <telethon.tl.custom.file.File.name> , etc., without having to manually inspect the document.attributes .","title":"file"},{"location":"modules/custom/#telethon.tl.custom.message.Message.forward","text":"The Forward <telethon.tl.custom.forward.Forward> information if this message is a forwarded message.","title":"forward"},{"location":"modules/custom/#telethon.tl.custom.message.Message.game","text":"The :tl: Game media in this message, if it's a game.","title":"game"},{"location":"modules/custom/#telethon.tl.custom.message.Message.geo","text":"The :tl: GeoPoint media in this message, if it has a location.","title":"geo"},{"location":"modules/custom/#telethon.tl.custom.message.Message.gif","text":"The :tl: Document media in this message, if it's a \"gif\". \"Gif\" files by Telegram are normally .mp4 video files without sound, the so called \"animated\" media. However, it may be the actual gif format if the file is too large.","title":"gif"},{"location":"modules/custom/#telethon.tl.custom.message.Message.invoice","text":"The :tl: MessageMediaInvoice in this message, if it's an invoice.","title":"invoice"},{"location":"modules/custom/#telethon.tl.custom.message.Message.is_reply","text":"True if the message is a reply to some other message. Remember that you can access the ID of the message this one is replying to through reply_to_msg_id , and the Message object with get_reply_message() .","title":"is_reply"},{"location":"modules/custom/#telethon.tl.custom.message.Message.photo","text":"The :tl: Photo media in this message, if any. This will also return the photo for :tl: MessageService if its action is :tl: MessageActionChatEditPhoto , or if the message has a web preview with a photo.","title":"photo"},{"location":"modules/custom/#telethon.tl.custom.message.Message.poll","text":"The :tl: MessageMediaPoll in this message, if it's a poll.","title":"poll"},{"location":"modules/custom/#telethon.tl.custom.message.Message.raw_text","text":"The raw message text, ignoring any formatting. Will be None for :tl: MessageService . Setting a value to this field will erase the entities , unlike changing the message member.","title":"raw_text"},{"location":"modules/custom/#telethon.tl.custom.message.Message.sticker","text":"The :tl: Document media in this message, if it's a sticker.","title":"sticker"},{"location":"modules/custom/#telethon.tl.custom.message.Message.text","text":"The message text, formatted using the client's default parse mode. Will be None for :tl: MessageService .","title":"text"},{"location":"modules/custom/#telethon.tl.custom.message.Message.venue","text":"The :tl: MessageMediaVenue in this message, if it's a venue.","title":"venue"},{"location":"modules/custom/#telethon.tl.custom.message.Message.via_bot","text":"The bot :tl: User if the message was sent via said bot. This will only be present if via_bot_id is not None and the entity is known.","title":"via_bot"},{"location":"modules/custom/#telethon.tl.custom.message.Message.via_input_bot","text":"Returns the input variant of via_bot .","title":"via_input_bot"},{"location":"modules/custom/#telethon.tl.custom.message.Message.video","text":"The :tl: Document media in this message, if it's a video.","title":"video"},{"location":"modules/custom/#telethon.tl.custom.message.Message.video_note","text":"The :tl: Document media in this message, if it's a video note.","title":"video_note"},{"location":"modules/custom/#telethon.tl.custom.message.Message.voice","text":"The :tl: Document media in this message, if it's a voice note.","title":"voice"},{"location":"modules/custom/#telethon.tl.custom.message.Message.web_preview","text":"The :tl: WebPage media in this message, if any.","title":"web_preview"},{"location":"modules/custom/#telethon.tl.custom.message.Message.click","text":"Calls button.click <telethon.tl.custom.messagebutton.MessageButton.click> on the specified button. Does nothing if the message has no buttons. Parameters: Name Type Description Default i int Clicks the i'th button (starting from the index 0). Will raise IndexError if out of bounds. Example: message = ... # get the message somehow # Clicking the 3rd button # [button1] [button2] # [ button3 ] # [button4] [button5] await message . click ( 2 ) # index None j int Clicks the button at position (i, j), these being the indices for the (row, column) respectively. Example: # Clicking the 2nd button on the 1st row. # [button1] [button2] # [ button3 ] # [button4] [button5] await message . click ( 0 , 1 ) # (row, column) This is equivalent to message.buttons[0][1].click() . None text str | callable Clicks the first button with the text \"text\". This may also be a callable, like a re.compile(...).match , and the text will be passed to it. None filter callable Clicks the first button for which the callable returns True . The callable should accept a single MessageButton <telethon.tl.custom.messagebutton.MessageButton> argument. None data bytes This argument overrides the rest and will not search any buttons. Instead, it will directly send the request to behave as if it clicked a button with said data. Note that if the message does not have this data, it will raise DataInvalidError . None Example # Click the first button await message . click ( 0 ) # Click some row/column await message . click ( row , column ) # Click by text await message . click ( text = ':thumbsup:' ) # Click by data await message . click ( data = b 'payload' ) Source code in telethon\\tl\\custom\\message.py 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 async def click ( self , i = None , j = None , * , text = None , filter = None , data = None ): \"\"\" Calls `button.click <telethon.tl.custom.messagebutton.MessageButton.click>` on the specified button. Does nothing if the message has no buttons. Args: i (int): Clicks the i'th button (starting from the index 0). Will ``raise IndexError`` if out of bounds. Example: ```python message = ... # get the message somehow # Clicking the 3rd button # [button1] [button2] # [ button3 ] # [button4] [button5] await message.click(2) # index ``` j (int): Clicks the button at position (i, j), these being the indices for the (row, column) respectively. Example: ```python # Clicking the 2nd button on the 1st row. # [button1] [button2] # [ button3 ] # [button4] [button5] await message.click(0, 1) # (row, column) ``` This is equivalent to ``message.buttons[0][1].click()``. text (str | callable): Clicks the first button with the text \"text\". This may also be a callable, like a ``re.compile(...).match``, and the text will be passed to it. filter (callable): Clicks the first button for which the callable returns `True`. The callable should accept a single `MessageButton <telethon.tl.custom.messagebutton.MessageButton>` argument. data (bytes): This argument overrides the rest and will not search any buttons. Instead, it will directly send the request to behave as if it clicked a button with said data. Note that if the message does not have this data, it will ``raise DataInvalidError``. Example: ```python # Click the first button await message.click(0) # Click some row/column await message.click(row, column) # Click by text await message.click(text=':thumbsup:') # Click by data await message.click(data=b'payload') ``` \"\"\" if not self . _client : return if data : if not await self . get_input_chat (): return None try : return await self . _client ( functions . messages . GetBotCallbackAnswerRequest ( peer = self . _input_chat , msg_id = self . id , data = data ) ) except errors . BotTimeout : return None if sum ( int ( x is not None ) for x in ( i , text , filter )) >= 2 : raise ValueError ( 'You can only set either of i, text or filter' ) if not await self . get_buttons (): return # Accessing the property sets self._buttons[_flat] if text is not None : if callable ( text ): for button in self . _buttons_flat : if text ( button . text ): return await button . click () else : for button in self . _buttons_flat : if button . text == text : return await button . click () return if filter is not None : for button in self . _buttons_flat : if filter ( button ): return await button . click () return if i is None : i = 0 if j is None : return await self . _buttons_flat [ i ] . click () else : return await self . _buttons [ i ][ j ] . click ()","title":"click()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.delete","text":"Deletes the message. You're responsible for checking whether you have the permission to do so, or to except the error otherwise. Shorthand for telethon.client.messages.MessageMethods.delete_messages with entity and message_ids already set. If you need to delete more than one message at once, don't use this delete method. Use a telethon.client.telegramclient.TelegramClient instance directly. Source code in telethon\\tl\\custom\\message.py 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 async def delete ( self , * args , ** kwargs ): \"\"\" Deletes the message. You're responsible for checking whether you have the permission to do so, or to except the error otherwise. Shorthand for `telethon.client.messages.MessageMethods.delete_messages` with ``entity`` and ``message_ids`` already set. If you need to delete more than one message at once, don't use this `delete` method. Use a `telethon.client.telegramclient.TelegramClient` instance directly. \"\"\" if self . _client : return await self . _client . delete_messages ( await self . get_input_chat (), [ self . id ], * args , ** kwargs )","title":"delete()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.download_media","text":"Downloads the media contained in the message, if any. Shorthand for telethon.client.downloads.DownloadMethods.download_media with the message already set. Source code in telethon\\tl\\custom\\message.py 757 758 759 760 761 762 763 764 async def download_media ( self , * args , ** kwargs ): \"\"\" Downloads the media contained in the message, if any. Shorthand for `telethon.client.downloads.DownloadMethods.download_media` with the ``message`` already set. \"\"\" if self . _client : return await self . _client . download_media ( self , * args , ** kwargs )","title":"download_media()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.edit","text":"Edits the message iff it's outgoing. Shorthand for telethon.client.messages.MessageMethods.edit_message with both entity and message already set. Returns None if the message was incoming, or the edited Message otherwise. .. note:: This is different from `client.edit_message <telethon.client.messages.MessageMethods.edit_message>` and ** will respect ** the previous state of the message . For example , if the message didn 't have a link preview, the edit won' t add one by default , and you should force it by setting it to `True` if you want it . This is generally the most desired and convenient behaviour , and will work for link previews and message buttons . Source code in telethon\\tl\\custom\\message.py 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 async def edit ( self , * args , ** kwargs ): \"\"\" Edits the message iff it's outgoing. Shorthand for `telethon.client.messages.MessageMethods.edit_message` with both ``entity`` and ``message`` already set. Returns `None` if the message was incoming, or the edited `Message` otherwise. .. note:: This is different from `client.edit_message <telethon.client.messages.MessageMethods.edit_message>` and **will respect** the previous state of the message. For example, if the message didn't have a link preview, the edit won't add one by default, and you should force it by setting it to `True` if you want it. This is generally the most desired and convenient behaviour, and will work for link previews and message buttons. \"\"\" if self . fwd_from or not self . out or not self . _client : return None # We assume self.out was patched for our chat if 'link_preview' not in kwargs : kwargs [ 'link_preview' ] = bool ( self . web_preview ) if 'buttons' not in kwargs : kwargs [ 'buttons' ] = self . reply_markup return await self . _client . edit_message ( await self . get_input_chat (), self . id , * args , ** kwargs )","title":"edit()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.forward_to","text":"Forwards the message. Shorthand for telethon.client.messages.MessageMethods.forward_messages with both messages and from_peer already set. If you need to forward more than one message at once, don't use this forward_to method. Use a telethon.client.telegramclient.TelegramClient instance directly. Source code in telethon\\tl\\custom\\message.py 689 690 691 692 693 694 695 696 697 698 699 700 701 702 async def forward_to ( self , * args , ** kwargs ): \"\"\" Forwards the message. Shorthand for `telethon.client.messages.MessageMethods.forward_messages` with both ``messages`` and ``from_peer`` already set. If you need to forward more than one message at once, don't use this `forward_to` method. Use a `telethon.client.telegramclient.TelegramClient` instance directly. \"\"\" if self . _client : kwargs [ 'messages' ] = self . id kwargs [ 'from_peer' ] = await self . get_input_chat () return await self . _client . forward_messages ( * args , ** kwargs )","title":"forward_to()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.get_buttons","text":"Returns buttons when that property fails (this is rarely needed). Source code in telethon\\tl\\custom\\message.py 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 async def get_buttons ( self ): \"\"\" Returns `buttons` when that property fails (this is rarely needed). \"\"\" if not self . buttons and self . reply_markup : chat = await self . get_input_chat () if not chat : return try : bot = self . _needed_markup_bot () except ValueError : await self . _reload_message () bot = self . _needed_markup_bot () # TODO use via_input_bot self . _set_buttons ( chat , bot ) return self . _buttons","title":"get_buttons()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.get_entities_text","text":"Returns a list of (markup entity, inner text) (like bold or italics). The markup entity is a :tl: MessageEntity that represents bold, italics, etc., and the inner text is the str inside that markup entity. For example: .. code-block:: python print ( repr ( message . text )) # shows : 'Hello **world**!' for ent , txt in message . get_entities_text (): print ( ent ) # shows : MessageEntityBold ( offset = 6 , length = 5 ) print ( txt ) # shows : world Parameters: Name Type Description Default cls `type` Returns entities matching this type only. For example, the following will print the text for all code entities: from telethon.tl.types import MessageEntityCode m = ... # get the message for _, inner_text in m.get_entities_text(MessageEntityCode): print(inner_text) None Source code in telethon\\tl\\custom\\message.py 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 def get_entities_text ( self , cls = None ): \"\"\" Returns a list of ``(markup entity, inner text)`` (like bold or italics). The markup entity is a :tl:`MessageEntity` that represents bold, italics, etc., and the inner text is the `str` inside that markup entity. For example: .. code-block:: python print(repr(message.text)) # shows: 'Hello **world**!' for ent, txt in message.get_entities_text(): print(ent) # shows: MessageEntityBold(offset=6, length=5) print(txt) # shows: world Args: cls (`type`): Returns entities matching this type only. For example, the following will print the text for all ``code`` entities: >>> from telethon.tl.types import MessageEntityCode >>> >>> m = ... # get the message >>> for _, inner_text in m.get_entities_text(MessageEntityCode): >>> print(inner_text) \"\"\" ent = self . entities if not ent : return [] if cls : ent = [ c for c in ent if isinstance ( c , cls )] texts = utils . get_inner_text ( self . message , ent ) return list ( zip ( ent , texts ))","title":"get_entities_text()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.get_reply_message","text":"The Message that this message is replying to, or None . The result will be cached after its first use. Source code in telethon\\tl\\custom\\message.py 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 async def get_reply_message ( self ): \"\"\" The `Message` that this message is replying to, or `None`. The result will be cached after its first use. \"\"\" if self . _reply_message is None and self . _client : if not self . reply_to_msg_id : return None # Bots cannot access other bots' messages by their ID. # However they can access them through replies... self . _reply_message = await self . _client . get_messages ( await self . get_input_chat () if self . is_channel else None , ids = types . InputMessageReplyTo ( self . id ) ) if not self . _reply_message : # ...unless the current message got deleted. # # If that's the case, give it a second chance accessing # directly by its ID. self . _reply_message = await self . _client . get_messages ( self . _input_chat if self . is_channel else None , ids = self . reply_to_msg_id ) return self . _reply_message","title":"get_reply_message()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.mark_read","text":"Marks the message as read. Shorthand for client.send_read_acknowledge() <telethon.client.messages.MessageMethods.send_read_acknowledge> with both entity and message already set. Source code in telethon\\tl\\custom\\message.py 883 884 885 886 887 888 889 890 891 892 async def mark_read ( self ): \"\"\" Marks the message as read. Shorthand for `client.send_read_acknowledge() <telethon.client.messages.MessageMethods.send_read_acknowledge>` with both ``entity`` and ``message`` already set. \"\"\" if self . _client : await self . _client . send_read_acknowledge ( await self . get_input_chat (), max_id = self . id )","title":"mark_read()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.pin","text":"Pins the message. Shorthand for telethon.client.messages.MessageMethods.pin_message with both entity and message already set. Source code in telethon\\tl\\custom\\message.py 894 895 896 897 898 899 900 901 902 903 904 905 async def pin ( self , * , notify = False ): \"\"\" Pins the message. Shorthand for `telethon.client.messages.MessageMethods.pin_message` with both ``entity`` and ``message`` already set. \"\"\" # TODO Constantly checking if client is a bit annoying, # maybe just make it illegal to call messages from raw API? # That or figure out a way to always set it directly. if self . _client : return await self . _client . pin_message ( await self . get_input_chat (), self . id , notify = notify )","title":"pin()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.reply","text":"Replies to the message (as a reply). Shorthand for telethon.client.messages.MessageMethods.send_message with both entity and reply_to already set. Source code in telethon\\tl\\custom\\message.py 678 679 680 681 682 683 684 685 686 687 async def reply ( self , * args , ** kwargs ): \"\"\" Replies to the message (as a reply). Shorthand for `telethon.client.messages.MessageMethods.send_message` with both ``entity`` and ``reply_to`` already set. \"\"\" if self . _client : kwargs [ 'reply_to' ] = self . id return await self . _client . send_message ( await self . get_input_chat (), * args , ** kwargs )","title":"reply()"},{"location":"modules/custom/#telethon.tl.custom.message.Message.respond","text":"Responds to the message (not as a reply). Shorthand for telethon.client.messages.MessageMethods.send_message with entity already set. Source code in telethon\\tl\\custom\\message.py 668 669 670 671 672 673 674 675 676 async def respond ( self , * args , ** kwargs ): \"\"\" Responds to the message (not as a reply). Shorthand for `telethon.client.messages.MessageMethods.send_message` with ``entity`` already set. \"\"\" if self . _client : return await self . _client . send_message ( await self . get_input_chat (), * args , ** kwargs )","title":"respond()"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton","text":".. note:: `Message.buttons <telethon.tl.custom.message.Message.buttons>` are instances of this type. If you want to **define** a reply markup for e.g. sending messages, refer to `Button <telethon.tl.custom.button.Button>` instead. Custom class that encapsulates a message button providing an abstraction to easily access some commonly needed features (such as clicking the button itself). Attributes: button (: tl : `KeyboardButton` ): The original : tl : `KeyboardButton` object .","title":"MessageButton"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client","text":"Returns the telethon.client.telegramclient.TelegramClient instance that created this instance.","title":"client"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data","text":"The bytes data for :tl: KeyboardButtonCallback objects.","title":"data"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query","text":"The query str for :tl: KeyboardButtonSwitchInline objects.","title":"inline_query"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text","text":"The text string of the button.","title":"text"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url","text":"The url str for :tl: KeyboardButtonUrl objects.","title":"url"},{"location":"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click","text":"Emulates the behaviour of clicking this button. If it's a normal :tl: KeyboardButton with text, a message will be sent, and the sent Message <telethon.tl.custom.message.Message> returned. If it's an inline :tl: KeyboardButtonCallback with text and data, it will be \"clicked\" and the :tl: BotCallbackAnswer returned. If it's an inline :tl: KeyboardButtonSwitchInline button, the :tl: StartBotRequest will be invoked and the resulting updates returned. If it's a :tl: KeyboardButtonUrl , the URL of the button will be passed to webbrowser.open and return True on success. Source code in telethon\\tl\\custom\\messagebutton.py 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 async def click ( self ): \"\"\" Emulates the behaviour of clicking this button. If it's a normal :tl:`KeyboardButton` with text, a message will be sent, and the sent `Message <telethon.tl.custom.message.Message>` returned. If it's an inline :tl:`KeyboardButtonCallback` with text and data, it will be \"clicked\" and the :tl:`BotCallbackAnswer` returned. If it's an inline :tl:`KeyboardButtonSwitchInline` button, the :tl:`StartBotRequest` will be invoked and the resulting updates returned. If it's a :tl:`KeyboardButtonUrl`, the URL of the button will be passed to ``webbrowser.open`` and return `True` on success. \"\"\" if isinstance ( self . button , types . KeyboardButton ): return await self . _client . send_message ( self . _chat , self . button . text , parse_mode = None ) elif isinstance ( self . button , types . KeyboardButtonCallback ): req = functions . messages . GetBotCallbackAnswerRequest ( peer = self . _chat , msg_id = self . _msg_id , data = self . button . data ) try : return await self . _client ( req ) except BotTimeout : return None elif isinstance ( self . button , types . KeyboardButtonSwitchInline ): return await self . _client ( functions . messages . StartBotRequest ( bot = self . _bot , peer = self . _chat , start_param = self . button . query )) elif isinstance ( self . button , types . KeyboardButtonUrl ): return webbrowser . open ( self . button . url ) elif isinstance ( self . button , types . KeyboardButtonGame ): req = functions . messages . GetBotCallbackAnswerRequest ( peer = self . _chat , msg_id = self . _msg_id , game = True ) try : return await self . _client ( req ) except BotTimeout : return None","title":"click()"},{"location":"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter","text":"Helper base class that introduces the sender , input_sender and sender_id properties and get_sender and get_input_sender methods.","title":"SenderGetter"},{"location":"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender","text":"This :tl: InputPeer is the input version of the user/channel who sent the message. Similarly to input_chat <telethon.tl.custom.chatgetter.ChatGetter.input_chat> , this doesn't have things like username or similar, but still useful in some cases. Note that this might not be available if the library can't find the input chat, or if the message a broadcast on a channel.","title":"input_sender"},{"location":"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender","text":"Returns the :tl: User or :tl: Channel that sent this object. It may be None if Telegram didn't send the sender. If you only need the ID, use sender_id instead. If you need to call a method which needs this chat, use input_sender instead. If you're using telethon.events , use get_sender() instead.","title":"sender"},{"location":"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id","text":"Returns the marked sender integer ID, if present. If there is a sender in the object, sender_id will always be set, which is why you should use it instead of sender.id <sender> .","title":"sender_id"},{"location":"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender","text":"Returns input_sender , but will make an API call to find the input sender unless it's already cached. Source code in telethon\\tl\\custom\\sendergetter.py 75 76 77 78 79 80 81 82 async def get_input_sender ( self ): \"\"\" Returns `input_sender`, but will make an API call to find the input sender unless it's already cached. \"\"\" if self . input_sender is None and self . _sender_id and self . _client : await self . _refetch_sender () return self . _input_sender","title":"get_input_sender()"},{"location":"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender","text":"Returns sender , but will make an API call to find the sender unless it's already cached. If you only need the ID, use sender_id instead. If you need to call a method which needs this sender, use get_input_sender() instead. Source code in telethon\\tl\\custom\\sendergetter.py 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 async def get_sender ( self ): \"\"\" Returns `sender`, but will make an API call to find the sender unless it's already cached. If you only need the ID, use `sender_id` instead. If you need to call a method which needs this sender, use `get_input_sender()` instead. \"\"\" # ``sender.min`` is present both in :tl:`User` and :tl:`Channel`. # It's a flag that will be set if only minimal information is # available (such as display name, but username may be missing), # in which case we want to force fetch the entire thing because # the user explicitly called a method. If the user is okay with # cached information, they may use the property instead. if ( self . _sender is None or self . _sender . min ) \\ and await self . get_input_sender (): try : self . _sender = \\ await self . _client . get_entity ( self . _input_sender ) except ValueError : await self . _refetch_sender () return self . _sender","title":"get_sender()"},{"location":"modules/errors/","text":"API Errors \u00b6 These are the base errors that Telegram's API may raise. See :ref: rpc-errors for a more in-depth explanation on how to handle all known possible errors and learning to determine what a method may raise. \u00b6 Errors not related to the Telegram API itself AlreadyInConversationError \u00b6 Occurs when another exclusive conversation is opened in the same chat. BadMessageError \u00b6 Occurs when handling a bad_message_notification. CdnFileTamperedError \u00b6 Occurs when there's a hash mismatch between the decrypted CDN file and its expected hash. InvalidBufferError \u00b6 Occurs when the buffer is invalid, and may contain an HTTP error code. For instance, 404 means \"forgotten/broken authorization key\", while InvalidChecksumError \u00b6 Occurs when using the TCP full mode and the checksum of a received packet doesn't match the expected checksum. MultiError \u00b6 Exception container for multiple TLRequest 's. __new__ ( cls , exceptions , result , requests ) special staticmethod \u00b6 Create and return a new object. See help(type) for accurate signature. Source code in telethon\\errors\\common.py 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 def __new__ ( cls , exceptions , result , requests ): if len ( result ) != len ( exceptions ) != len ( requests ): raise ValueError ( 'Need result, exception and request for each error' ) for e , req in zip ( exceptions , requests ): if not isinstance ( e , BaseException ) and e is not None : raise TypeError ( \"Expected an exception object, not ' %r '\" % e ) if not isinstance ( req , TLRequest ): raise TypeError ( \"Expected TLRequest object, not ' %r '\" % req ) if len ( exceptions ) == 1 : return exceptions [ 0 ] self = BaseException . __new__ ( cls ) self . exceptions = list ( exceptions ) self . results = list ( result ) self . requests = list ( requests ) return self ReadCancelledError \u00b6 Occurs when a read operation was cancelled. SecurityError \u00b6 Generic security error, mostly used when generating a new AuthKey. TypeNotFoundError \u00b6 Occurs when a type is not found, for example, when trying to read a TLObject with an invalid constructor code. \u00b6 AuthKeyError \u00b6 Errors related to invalid authorization key, like AUTH_KEY_DUPLICATED which can cause the connection to fail. BadRequestError \u00b6 The query contains errors. In the event that a request was created using a form and contains user generated data, the user should be notified that the data must be corrected before the query is repeated. BotTimeout \u00b6 Clicking the inline buttons of bots that never (or take to long to) call answerCallbackQuery will result in this \"special\" RPCError. FloodError \u00b6 The maximum allowed number of attempts to invoke the given method with the given input parameters has been exceeded. For example, in an attempt to request a large number of text messages (SMS) for the same phone number. ForbiddenError \u00b6 Privacy violation. For example, an attempt to write a message to someone who has blacklisted the current user. InvalidDCError \u00b6 The request must be repeated, but directed to a different data center. NotFoundError \u00b6 An attempt to invoke a non-existent object, such as a method. RPCError \u00b6 Base class for all Remote Procedure Call errors. ServerError \u00b6 An internal server error occurred while a request was being processed for example, there was a disruption while accessing a database or file storage. TimedOutError \u00b6 Clicking the inline buttons of bots that never (or take to long to) call answerCallbackQuery will result in this \"special\" RPCError. UnauthorizedError \u00b6 There was an unauthorized attempt to use functionality available only to authorized users.","title":"API Errors"},{"location":"modules/errors/#api-errors","text":"These are the base errors that Telegram's API may raise. See :ref: rpc-errors for a more in-depth explanation on how to handle all known possible errors and learning to determine what a method may raise.","title":"API Errors"},{"location":"modules/errors/#telethon.errors.common","text":"Errors not related to the Telegram API itself","title":"telethon.errors.common"},{"location":"modules/errors/#telethon.errors.common.AlreadyInConversationError","text":"Occurs when another exclusive conversation is opened in the same chat.","title":"AlreadyInConversationError"},{"location":"modules/errors/#telethon.errors.common.BadMessageError","text":"Occurs when handling a bad_message_notification.","title":"BadMessageError"},{"location":"modules/errors/#telethon.errors.common.CdnFileTamperedError","text":"Occurs when there's a hash mismatch between the decrypted CDN file and its expected hash.","title":"CdnFileTamperedError"},{"location":"modules/errors/#telethon.errors.common.InvalidBufferError","text":"Occurs when the buffer is invalid, and may contain an HTTP error code. For instance, 404 means \"forgotten/broken authorization key\", while","title":"InvalidBufferError"},{"location":"modules/errors/#telethon.errors.common.InvalidChecksumError","text":"Occurs when using the TCP full mode and the checksum of a received packet doesn't match the expected checksum.","title":"InvalidChecksumError"},{"location":"modules/errors/#telethon.errors.common.MultiError","text":"Exception container for multiple TLRequest 's.","title":"MultiError"},{"location":"modules/errors/#telethon.errors.common.MultiError.__new__","text":"Create and return a new object. See help(type) for accurate signature. Source code in telethon\\errors\\common.py 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 def __new__ ( cls , exceptions , result , requests ): if len ( result ) != len ( exceptions ) != len ( requests ): raise ValueError ( 'Need result, exception and request for each error' ) for e , req in zip ( exceptions , requests ): if not isinstance ( e , BaseException ) and e is not None : raise TypeError ( \"Expected an exception object, not ' %r '\" % e ) if not isinstance ( req , TLRequest ): raise TypeError ( \"Expected TLRequest object, not ' %r '\" % req ) if len ( exceptions ) == 1 : return exceptions [ 0 ] self = BaseException . __new__ ( cls ) self . exceptions = list ( exceptions ) self . results = list ( result ) self . requests = list ( requests ) return self","title":"__new__()"},{"location":"modules/errors/#telethon.errors.common.ReadCancelledError","text":"Occurs when a read operation was cancelled.","title":"ReadCancelledError"},{"location":"modules/errors/#telethon.errors.common.SecurityError","text":"Generic security error, mostly used when generating a new AuthKey.","title":"SecurityError"},{"location":"modules/errors/#telethon.errors.common.TypeNotFoundError","text":"Occurs when a type is not found, for example, when trying to read a TLObject with an invalid constructor code.","title":"TypeNotFoundError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors","text":"","title":"telethon.errors.rpcbaseerrors"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError","text":"Errors related to invalid authorization key, like AUTH_KEY_DUPLICATED which can cause the connection to fail.","title":"AuthKeyError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError","text":"The query contains errors. In the event that a request was created using a form and contains user generated data, the user should be notified that the data must be corrected before the query is repeated.","title":"BadRequestError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout","text":"Clicking the inline buttons of bots that never (or take to long to) call answerCallbackQuery will result in this \"special\" RPCError.","title":"BotTimeout"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.FloodError","text":"The maximum allowed number of attempts to invoke the given method with the given input parameters has been exceeded. For example, in an attempt to request a large number of text messages (SMS) for the same phone number.","title":"FloodError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError","text":"Privacy violation. For example, an attempt to write a message to someone who has blacklisted the current user.","title":"ForbiddenError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError","text":"The request must be repeated, but directed to a different data center.","title":"InvalidDCError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError","text":"An attempt to invoke a non-existent object, such as a method.","title":"NotFoundError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.RPCError","text":"Base class for all Remote Procedure Call errors.","title":"RPCError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.ServerError","text":"An internal server error occurred while a request was being processed for example, there was a disruption while accessing a database or file storage.","title":"ServerError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError","text":"Clicking the inline buttons of bots that never (or take to long to) call answerCallbackQuery will result in this \"special\" RPCError.","title":"TimedOutError"},{"location":"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError","text":"There was an unauthorized attempt to use functionality available only to authorized users.","title":"UnauthorizedError"},{"location":"modules/helpers/","text":"Helpers telethon.helpers \u00b6 Various helpers not related to the Telegram API itself TotalList \u00b6 A list with an extra total property, which may not match its len since the total represents the total amount of items available somewhere else, not the items in this list . Example # Telethon returns these lists in some cases (for example, # only when a chunk is returned, but the \"total\" count # is available). result = await client . get_messages ( chat , limit = 10 ) print ( result . total ) # large number print ( len ( result )) # 10 print ( result [ 0 ]) # latest message for x in result : # show the 10 messages print ( x . text ) ensure_parent_dir_exists ( file_path ) \u00b6 Ensures that the parent directory exists Source code in telethon\\helpers.py 23 24 25 26 27 def ensure_parent_dir_exists ( file_path ): \"\"\"Ensures that the parent directory exists\"\"\" parent = os . path . dirname ( file_path ) if parent : os . makedirs ( parent , exist_ok = True ) generate_key_data_from_nonce ( server_nonce , new_nonce ) \u00b6 Generates the key data corresponding to the given nonce Source code in telethon\\helpers.py 215 216 217 218 219 220 221 222 223 224 225 def generate_key_data_from_nonce ( server_nonce , new_nonce ): \"\"\"Generates the key data corresponding to the given nonce\"\"\" server_nonce = server_nonce . to_bytes ( 16 , 'little' , signed = True ) new_nonce = new_nonce . to_bytes ( 32 , 'little' , signed = True ) hash1 = sha1 ( new_nonce + server_nonce ) . digest () hash2 = sha1 ( server_nonce + new_nonce ) . digest () hash3 = sha1 ( new_nonce + new_nonce ) . digest () key = hash1 + hash2 [: 12 ] iv = hash2 [ 12 : 20 ] + hash3 + new_nonce [: 4 ] return key , iv generate_random_long ( signed = True ) \u00b6 Generates a random long integer (8 bytes), which is optionally signed Source code in telethon\\helpers.py 18 19 20 def generate_random_long ( signed = True ): \"\"\"Generates a random long integer (8 bytes), which is optionally signed\"\"\" return int . from_bytes ( os . urandom ( 8 ), signed = signed , byteorder = 'little' ) retry_range ( retries ) \u00b6 Generates an integer sequence starting from 1. If retries is not a zero or a positive integer value, the sequence will be infinite, otherwise it will end at retries + 1 . Source code in telethon\\helpers.py 97 98 99 100 101 102 103 104 105 106 107 def retry_range ( retries ): \"\"\" Generates an integer sequence starting from 1. If `retries` is not a zero or a positive integer value, the sequence will be infinite, otherwise it will end at `retries + 1`. \"\"\" yield 1 attempt = 0 while attempt != retries : attempt += 1 yield 1 + attempt strip_text ( text , entities ) \u00b6 Strips whitespace from the given text modifying the provided entities. This assumes that there are no overlapping entities, that their length is greater or equal to one, and that their length is not out of bounds. Source code in telethon\\helpers.py 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 def strip_text ( text , entities ): \"\"\" Strips whitespace from the given text modifying the provided entities. This assumes that there are no overlapping entities, that their length is greater or equal to one, and that their length is not out of bounds. \"\"\" if not entities : return text . strip () while text and text [ - 1 ] . isspace (): e = entities [ - 1 ] if e . offset + e . length == len ( text ): if e . length == 1 : del entities [ - 1 ] if not entities : return text . strip () else : e . length -= 1 text = text [: - 1 ] while text and text [ 0 ] . isspace (): for i in reversed ( range ( len ( entities ))): e = entities [ i ] if e . offset != 0 : e . offset -= 1 continue if e . length == 1 : del entities [ 0 ] if not entities : return text . lstrip () else : e . length -= 1 text = text [ 1 :] return text within_surrogate ( text , index , * , length = None ) \u00b6 True if index is within a surrogate (before and after it, not at!). Source code in telethon\\helpers.py 43 44 45 46 47 48 49 50 51 52 53 54 def within_surrogate ( text , index , * , length = None ): \"\"\" `True` if ``index`` is within a surrogate (before and after it, not at!). \"\"\" if length is None : length = len ( text ) return ( 1 < index < len ( text ) and # in bounds ' \\ud800 ' <= text [ index - 1 ] <= ' \\udfff ' and # previous is ' \\ud800 ' <= text [ index ] <= ' \\udfff ' # current is )","title":"Helpers"},{"location":"modules/helpers/#helpers-telethonhelpers","text":"Various helpers not related to the Telegram API itself","title":"Helpers telethon.helpers"},{"location":"modules/helpers/#telethon.helpers.TotalList","text":"A list with an extra total property, which may not match its len since the total represents the total amount of items available somewhere else, not the items in this list . Example # Telethon returns these lists in some cases (for example, # only when a chunk is returned, but the \"total\" count # is available). result = await client . get_messages ( chat , limit = 10 ) print ( result . total ) # large number print ( len ( result )) # 10 print ( result [ 0 ]) # latest message for x in result : # show the 10 messages print ( x . text )","title":"TotalList"},{"location":"modules/helpers/#telethon.helpers.ensure_parent_dir_exists","text":"Ensures that the parent directory exists Source code in telethon\\helpers.py 23 24 25 26 27 def ensure_parent_dir_exists ( file_path ): \"\"\"Ensures that the parent directory exists\"\"\" parent = os . path . dirname ( file_path ) if parent : os . makedirs ( parent , exist_ok = True )","title":"ensure_parent_dir_exists()"},{"location":"modules/helpers/#telethon.helpers.generate_key_data_from_nonce","text":"Generates the key data corresponding to the given nonce Source code in telethon\\helpers.py 215 216 217 218 219 220 221 222 223 224 225 def generate_key_data_from_nonce ( server_nonce , new_nonce ): \"\"\"Generates the key data corresponding to the given nonce\"\"\" server_nonce = server_nonce . to_bytes ( 16 , 'little' , signed = True ) new_nonce = new_nonce . to_bytes ( 32 , 'little' , signed = True ) hash1 = sha1 ( new_nonce + server_nonce ) . digest () hash2 = sha1 ( server_nonce + new_nonce ) . digest () hash3 = sha1 ( new_nonce + new_nonce ) . digest () key = hash1 + hash2 [: 12 ] iv = hash2 [ 12 : 20 ] + hash3 + new_nonce [: 4 ] return key , iv","title":"generate_key_data_from_nonce()"},{"location":"modules/helpers/#telethon.helpers.generate_random_long","text":"Generates a random long integer (8 bytes), which is optionally signed Source code in telethon\\helpers.py 18 19 20 def generate_random_long ( signed = True ): \"\"\"Generates a random long integer (8 bytes), which is optionally signed\"\"\" return int . from_bytes ( os . urandom ( 8 ), signed = signed , byteorder = 'little' )","title":"generate_random_long()"},{"location":"modules/helpers/#telethon.helpers.retry_range","text":"Generates an integer sequence starting from 1. If retries is not a zero or a positive integer value, the sequence will be infinite, otherwise it will end at retries + 1 . Source code in telethon\\helpers.py 97 98 99 100 101 102 103 104 105 106 107 def retry_range ( retries ): \"\"\" Generates an integer sequence starting from 1. If `retries` is not a zero or a positive integer value, the sequence will be infinite, otherwise it will end at `retries + 1`. \"\"\" yield 1 attempt = 0 while attempt != retries : attempt += 1 yield 1 + attempt","title":"retry_range()"},{"location":"modules/helpers/#telethon.helpers.strip_text","text":"Strips whitespace from the given text modifying the provided entities. This assumes that there are no overlapping entities, that their length is greater or equal to one, and that their length is not out of bounds. Source code in telethon\\helpers.py 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 def strip_text ( text , entities ): \"\"\" Strips whitespace from the given text modifying the provided entities. This assumes that there are no overlapping entities, that their length is greater or equal to one, and that their length is not out of bounds. \"\"\" if not entities : return text . strip () while text and text [ - 1 ] . isspace (): e = entities [ - 1 ] if e . offset + e . length == len ( text ): if e . length == 1 : del entities [ - 1 ] if not entities : return text . strip () else : e . length -= 1 text = text [: - 1 ] while text and text [ 0 ] . isspace (): for i in reversed ( range ( len ( entities ))): e = entities [ i ] if e . offset != 0 : e . offset -= 1 continue if e . length == 1 : del entities [ 0 ] if not entities : return text . lstrip () else : e . length -= 1 text = text [ 1 :] return text","title":"strip_text()"},{"location":"modules/helpers/#telethon.helpers.within_surrogate","text":"True if index is within a surrogate (before and after it, not at!). Source code in telethon\\helpers.py 43 44 45 46 47 48 49 50 51 52 53 54 def within_surrogate ( text , index , * , length = None ): \"\"\" `True` if ``index`` is within a surrogate (before and after it, not at!). \"\"\" if length is None : length = len ( text ) return ( 1 < index < len ( text ) and # in bounds ' \\ud800 ' <= text [ index - 1 ] <= ' \\udfff ' and # previous is ' \\ud800 ' <= text [ index ] <= ' \\udfff ' # current is )","title":"within_surrogate()"},{"location":"modules/utils/","text":"Utilities telethon.utils \u00b6 Utilities for working with the Telegram API itself (such as handy methods to convert between an entity like a User, Chat, etc. into its Input version) chunks ( iterable , size = 100 ) \u00b6 Turns the given iterable into chunks of the specified size, which is 100 by default since that's what Telegram uses the most. Source code in telethon\\utils.py 79 80 81 82 83 84 85 86 87 def chunks ( iterable , size = 100 ): \"\"\" Turns the given iterable into chunks of the specified size, which is 100 by default since that's what Telegram uses the most. \"\"\" it = iter ( iterable ) size -= 1 for head in it : yield itertools . chain ([ head ], itertools . islice ( it , size )) decode_waveform ( waveform ) \u00b6 Inverse operation of encode_waveform . Source code in telethon\\utils.py 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 def decode_waveform ( waveform ): \"\"\" Inverse operation of `encode_waveform`. \"\"\" bit_count = len ( waveform ) * 8 value_count = bit_count // 5 if value_count == 0 : return b '' result = bytearray ( value_count ) for i in range ( value_count - 1 ): byte_index , bit_shift = divmod ( i * 5 , 8 ) value = struct . unpack ( '<H' , waveform [ byte_index : byte_index + 2 ])[ 0 ] result [ i ] = ( value >> bit_shift ) & 0b00011111 byte_index , bit_shift = divmod ( value_count - 1 , 8 ) if byte_index == len ( waveform ) - 1 : value = waveform [ byte_index ] else : value = struct . unpack ( '<H' , waveform [ byte_index : byte_index + 2 ])[ 0 ] result [ value_count - 1 ] = ( value >> bit_shift ) & 0b00011111 return bytes ( result ) encode_waveform ( waveform ) \u00b6 Encodes the input bytes into a 5-bit byte-string to be used as a voice note's waveform. See decode_waveform for the reverse operation. Example chat = ... file = 'my.ogg' # Send 'my.ogg' with a ascending-triangle waveform await client . send_file ( chat , file , attributes = [ types . DocumentAttributeAudio ( duration = 7 , voice = True , waveform = utils . encode_waveform ( bytes ( range ( 2 ** 5 )) # 2**5 because 5-bit )] # Send 'my.ogg' with a square waveform await client . send_file ( chat , file , attributes = [ types . DocumentAttributeAudio ( duration = 7 , voice = True , waveform = utils . encode_waveform ( bytes (( 31 , 31 , 15 , 15 , 15 , 15 , 31 , 31 )) * 4 ) )] Source code in telethon\\utils.py 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 def encode_waveform ( waveform ): \"\"\" Encodes the input `bytes` into a 5-bit byte-string to be used as a voice note's waveform. See `decode_waveform` for the reverse operation. Example: ```python chat = ... file = 'my.ogg' # Send 'my.ogg' with a ascending-triangle waveform await client.send_file(chat, file, attributes=[types.DocumentAttributeAudio( duration=7, voice=True, waveform=utils.encode_waveform(bytes(range(2 ** 5)) # 2**5 because 5-bit )] # Send 'my.ogg' with a square waveform await client.send_file(chat, file, attributes=[types.DocumentAttributeAudio( duration=7, voice=True, waveform=utils.encode_waveform(bytes((31, 31, 15, 15, 15, 15, 31, 31)) * 4) )] ``` \"\"\" bits_count = len ( waveform ) * 5 bytes_count = ( bits_count + 7 ) // 8 result = bytearray ( bytes_count + 1 ) for i in range ( len ( waveform )): byte_index , bit_shift = divmod ( i * 5 , 8 ) value = ( waveform [ i ] & 0b00011111 ) << bit_shift or_what = struct . unpack ( '<H' , ( result [ byte_index : byte_index + 2 ]))[ 0 ] or_what |= value result [ byte_index : byte_index + 2 ] = struct . pack ( '<H' , or_what ) return bytes ( result [: bytes_count ]) get_appropriated_part_size ( file_size ) \u00b6 Gets the appropriated part size when uploading or downloading files, given an initial file size. Source code in telethon\\utils.py 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 def get_appropriated_part_size ( file_size ): \"\"\" Gets the appropriated part size when uploading or downloading files, given an initial file size. \"\"\" if file_size <= 104857600 : # 100MB return 128 if file_size <= 786432000 : # 750MB return 256 if file_size <= 1572864000 : # 1500MB return 512 raise ValueError ( 'File size too large' ) get_attributes ( file , * , attributes = None , mime_type = None , force_document = False , voice_note = False , video_note = False , supports_streaming = False ) \u00b6 Get a list of attributes for the given file and the mime type as a tuple ([attribute], mime_type). Source code in telethon\\utils.py 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 def get_attributes ( file , * , attributes = None , mime_type = None , force_document = False , voice_note = False , video_note = False , supports_streaming = False ): \"\"\" Get a list of attributes for the given file and the mime type as a tuple ([attribute], mime_type). \"\"\" # Note: ``file.name`` works for :tl:`InputFile` and some `IOBase` streams name = file if isinstance ( file , str ) else getattr ( file , 'name' , 'unnamed' ) if mime_type is None : mime_type = mimetypes . guess_type ( name )[ 0 ] attr_dict = { types . DocumentAttributeFilename : types . DocumentAttributeFilename ( os . path . basename ( name ))} if is_audio ( file ): m = _get_metadata ( file ) if m : attr_dict [ types . DocumentAttributeAudio ] = \\ types . DocumentAttributeAudio ( voice = voice_note , title = m . get ( 'title' ) if m . has ( 'title' ) else None , performer = m . get ( 'author' ) if m . has ( 'author' ) else None , duration = int ( m . get ( 'duration' ) . seconds if m . has ( 'duration' ) else 0 ) ) if not force_document and is_video ( file ): m = _get_metadata ( file ) if m : doc = types . DocumentAttributeVideo ( round_message = video_note , w = m . get ( 'width' ) if m . has ( 'width' ) else 0 , h = m . get ( 'height' ) if m . has ( 'height' ) else 0 , duration = int ( m . get ( 'duration' ) . seconds if m . has ( 'duration' ) else 0 ), supports_streaming = supports_streaming ) else : doc = types . DocumentAttributeVideo ( 0 , 1 , 1 , round_message = video_note , supports_streaming = supports_streaming ) attr_dict [ types . DocumentAttributeVideo ] = doc if voice_note : if types . DocumentAttributeAudio in attr_dict : attr_dict [ types . DocumentAttributeAudio ] . voice = True else : attr_dict [ types . DocumentAttributeAudio ] = \\ types . DocumentAttributeAudio ( 0 , voice = True ) # Now override the attributes if any. As we have a dict of # {cls: instance}, we can override any class with the list # of attributes provided by the user easily. if attributes : for a in attributes : attr_dict [ type ( a )] = a # Ensure we have a mime type, any; but it cannot be None # 'The \"octet-stream\" subtype is used to indicate that a body # contains arbitrary binary data.' if not mime_type : mime_type = 'application/octet-stream' return list ( attr_dict . values ()), mime_type get_display_name ( entity ) \u00b6 Gets the display name for the given :tl: User , :tl: Chat or :tl: Channel . Returns an empty string otherwise. Source code in telethon\\utils.py 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 def get_display_name ( entity ): \"\"\" Gets the display name for the given :tl:`User`, :tl:`Chat` or :tl:`Channel`. Returns an empty string otherwise. \"\"\" if isinstance ( entity , types . User ): if entity . last_name and entity . first_name : return ' {} {} ' . format ( entity . first_name , entity . last_name ) elif entity . first_name : return entity . first_name elif entity . last_name : return entity . last_name else : return '' elif isinstance ( entity , ( types . Chat , types . Channel )): return entity . title return '' get_extension ( media ) \u00b6 Gets the corresponding extension for any Telegram media. Source code in telethon\\utils.py 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 def get_extension ( media ): \"\"\"Gets the corresponding extension for any Telegram media.\"\"\" # Photos are always compressed as .jpg by Telegram try : get_input_photo ( media ) return '.jpg' except TypeError : # These cases are not handled by input photo because it can't if isinstance ( media , ( types . UserProfilePhoto , types . ChatPhoto )): return '.jpg' # Documents will come with a mime type if isinstance ( media , types . MessageMediaDocument ): media = media . document if isinstance ( media , ( types . Document , types . WebDocument , types . WebDocumentNoProxy )): if media . mime_type == 'application/octet-stream' : # Octet stream are just bytes, which have no default extension return '' else : return guess_extension ( media . mime_type ) or '' return '' get_inner_text ( text , entities ) \u00b6 Gets the inner text that's surrounded by the given entities. For instance: text = 'hey!', entity = MessageEntityBold(2, 2) -> 'y!'. Parameters: Name Type Description Default text str the original text. required entities Iterable the entity or entities that must be matched. required Returns: Type Description Union[str, list] A single result or a list of the text surrounded by the entities. Source code in telethon\\utils.py 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 def get_inner_text ( text : str , entities : \"Iterable\" ) -> \"Union[str, list]\" : \"\"\" Gets the inner text that's surrounded by the given entities. For instance: text = 'hey!', entity = MessageEntityBold(2, 2) -> 'y!'. Args: text: the original text. entities: the entity or entities that must be matched. Returns: A single result or a list of the text surrounded by the entities. \"\"\" text = add_surrogate ( text ) result = [] for e in entities : start = e . offset end = e . offset + e . length result . append ( del_surrogate ( text [ start : end ])) return result get_input_channel ( entity ) \u00b6 Similar to :meth: get_input_peer , but for :tl: InputChannel 's alone. .. important:: This method does not validate for invalid general - purpose access hashes , unlike `get_input_peer` . Consider using instead : `` get_input_channel ( get_input_peer ( channel )) `` . Source code in telethon\\utils.py 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 def get_input_channel ( entity ): \"\"\" Similar to :meth:`get_input_peer`, but for :tl:`InputChannel`'s alone. .. important:: This method does not validate for invalid general-purpose access hashes, unlike `get_input_peer`. Consider using instead: ``get_input_channel(get_input_peer(channel))``. \"\"\" try : if entity . SUBCLASS_OF_ID == 0x40f202fd : # crc32(b'InputChannel') return entity except AttributeError : _raise_cast_fail ( entity , 'InputChannel' ) if isinstance ( entity , ( types . Channel , types . ChannelForbidden )): return types . InputChannel ( entity . id , entity . access_hash or 0 ) if isinstance ( entity , types . InputPeerChannel ): return types . InputChannel ( entity . channel_id , entity . access_hash ) if isinstance ( entity , types . InputPeerChannelFromMessage ): return types . InputChannelFromMessage ( entity . peer , entity . msg_id , entity . channel_id ) _raise_cast_fail ( entity , 'InputChannel' ) get_input_chat_photo ( photo ) \u00b6 Similar to :meth: get_input_peer , but for chat photos Source code in telethon\\utils.py 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 def get_input_chat_photo ( photo ): \"\"\"Similar to :meth:`get_input_peer`, but for chat photos\"\"\" try : if photo . SUBCLASS_OF_ID == 0xd4eb2d74 : # crc32(b'InputChatPhoto') return photo elif photo . SUBCLASS_OF_ID == 0xe7655f1f : # crc32(b'InputFile'): return types . InputChatUploadedPhoto ( photo ) except AttributeError : _raise_cast_fail ( photo , 'InputChatPhoto' ) photo = get_input_photo ( photo ) if isinstance ( photo , types . InputPhoto ): return types . InputChatPhoto ( photo ) elif isinstance ( photo , types . InputPhotoEmpty ): return types . InputChatPhotoEmpty () _raise_cast_fail ( photo , 'InputChatPhoto' ) get_input_dialog ( dialog ) \u00b6 Similar to :meth: get_input_peer , but for dialogs Source code in telethon\\utils.py 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 def get_input_dialog ( dialog ): \"\"\"Similar to :meth:`get_input_peer`, but for dialogs\"\"\" try : if dialog . SUBCLASS_OF_ID == 0xa21c9795 : # crc32(b'InputDialogPeer') return dialog if dialog . SUBCLASS_OF_ID == 0xc91c90b6 : # crc32(b'InputPeer') return types . InputDialogPeer ( dialog ) except AttributeError : _raise_cast_fail ( dialog , 'InputDialogPeer' ) try : return types . InputDialogPeer ( get_input_peer ( dialog )) except TypeError : pass _raise_cast_fail ( dialog , 'InputDialogPeer' ) get_input_document ( document ) \u00b6 Similar to :meth: get_input_peer , but for documents Source code in telethon\\utils.py 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 def get_input_document ( document ): \"\"\"Similar to :meth:`get_input_peer`, but for documents\"\"\" try : if document . SUBCLASS_OF_ID == 0xf33fdb68 : # crc32(b'InputDocument'): return document except AttributeError : _raise_cast_fail ( document , 'InputDocument' ) if isinstance ( document , types . Document ): return types . InputDocument ( id = document . id , access_hash = document . access_hash , file_reference = document . file_reference ) if isinstance ( document , types . DocumentEmpty ): return types . InputDocumentEmpty () if isinstance ( document , types . MessageMediaDocument ): return get_input_document ( document . document ) if isinstance ( document , types . Message ): return get_input_document ( document . media ) _raise_cast_fail ( document , 'InputDocument' ) get_input_geo ( geo ) \u00b6 Similar to :meth: get_input_peer , but for geo points Source code in telethon\\utils.py 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 def get_input_geo ( geo ): \"\"\"Similar to :meth:`get_input_peer`, but for geo points\"\"\" try : if geo . SUBCLASS_OF_ID == 0x430d225 : # crc32(b'InputGeoPoint'): return geo except AttributeError : _raise_cast_fail ( geo , 'InputGeoPoint' ) if isinstance ( geo , types . GeoPoint ): return types . InputGeoPoint ( lat = geo . lat , long = geo . long ) if isinstance ( geo , types . GeoPointEmpty ): return types . InputGeoPointEmpty () if isinstance ( geo , types . MessageMediaGeo ): return get_input_geo ( geo . geo ) if isinstance ( geo , types . Message ): return get_input_geo ( geo . media ) _raise_cast_fail ( geo , 'InputGeoPoint' ) get_input_location ( location ) \u00b6 Similar to :meth: get_input_peer , but for input messages. Note that this returns a tuple (dc_id, location) , the dc_id being present if known. Source code in telethon\\utils.py 696 697 698 699 700 701 702 703 704 def get_input_location ( location ): \"\"\" Similar to :meth:`get_input_peer`, but for input messages. Note that this returns a tuple ``(dc_id, location)``, the ``dc_id`` being present if known. \"\"\" info = _get_file_info ( location ) return info . dc_id , info . location get_input_media ( media , * , is_photo = False , attributes = None , force_document = False , voice_note = False , video_note = False , supports_streaming = False ) \u00b6 Similar to :meth: get_input_peer , but for media. If the media is :tl: InputFile and is_photo is known to be True , it will be treated as an :tl: InputMediaUploadedPhoto . Else, the rest of parameters will indicate how to treat it. Source code in telethon\\utils.py 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 def get_input_media ( media , * , is_photo = False , attributes = None , force_document = False , voice_note = False , video_note = False , supports_streaming = False ): \"\"\" Similar to :meth:`get_input_peer`, but for media. If the media is :tl:`InputFile` and ``is_photo`` is known to be `True`, it will be treated as an :tl:`InputMediaUploadedPhoto`. Else, the rest of parameters will indicate how to treat it. \"\"\" try : if media . SUBCLASS_OF_ID == 0xfaf846f4 : # crc32(b'InputMedia') return media elif media . SUBCLASS_OF_ID == 0x846363e0 : # crc32(b'InputPhoto') return types . InputMediaPhoto ( media ) elif media . SUBCLASS_OF_ID == 0xf33fdb68 : # crc32(b'InputDocument') return types . InputMediaDocument ( media ) except AttributeError : _raise_cast_fail ( media , 'InputMedia' ) if isinstance ( media , types . MessageMediaPhoto ): return types . InputMediaPhoto ( id = get_input_photo ( media . photo ), ttl_seconds = media . ttl_seconds ) if isinstance ( media , ( types . Photo , types . photos . Photo , types . PhotoEmpty )): return types . InputMediaPhoto ( id = get_input_photo ( media ) ) if isinstance ( media , types . MessageMediaDocument ): return types . InputMediaDocument ( id = get_input_document ( media . document ), ttl_seconds = media . ttl_seconds ) if isinstance ( media , ( types . Document , types . DocumentEmpty )): return types . InputMediaDocument ( id = get_input_document ( media ) ) if isinstance ( media , ( types . InputFile , types . InputFileBig )): if is_photo : return types . InputMediaUploadedPhoto ( file = media ) else : attrs , mime = get_attributes ( media , attributes = attributes , force_document = force_document , voice_note = voice_note , video_note = video_note , supports_streaming = supports_streaming ) return types . InputMediaUploadedDocument ( file = media , mime_type = mime , attributes = attrs ) if isinstance ( media , types . MessageMediaGame ): return types . InputMediaGame ( id = types . InputGameID ( id = media . game . id , access_hash = media . game . access_hash )) if isinstance ( media , types . MessageMediaContact ): return types . InputMediaContact ( phone_number = media . phone_number , first_name = media . first_name , last_name = media . last_name , vcard = '' ) if isinstance ( media , types . MessageMediaGeo ): return types . InputMediaGeoPoint ( geo_point = get_input_geo ( media . geo )) if isinstance ( media , types . MessageMediaVenue ): return types . InputMediaVenue ( geo_point = get_input_geo ( media . geo ), title = media . title , address = media . address , provider = media . provider , venue_id = media . venue_id , venue_type = '' ) if isinstance ( media , types . MessageMediaDice ): return types . InputMediaDice ( media . emoticon ) if isinstance ( media , ( types . MessageMediaEmpty , types . MessageMediaUnsupported , types . ChatPhotoEmpty , types . UserProfilePhotoEmpty , types . ChatPhoto , types . UserProfilePhoto , types . FileLocationToBeDeprecated )): return types . InputMediaEmpty () if isinstance ( media , types . Message ): return get_input_media ( media . media , is_photo = is_photo ) _raise_cast_fail ( media , 'InputMedia' ) get_input_message ( message ) \u00b6 Similar to :meth: get_input_peer , but for input messages. Source code in telethon\\utils.py 531 532 533 534 535 536 537 538 539 540 541 542 543 def get_input_message ( message ): \"\"\"Similar to :meth:`get_input_peer`, but for input messages.\"\"\" try : if isinstance ( message , int ): # This case is really common too return types . InputMessageID ( message ) elif message . SUBCLASS_OF_ID == 0x54b6bcc5 : # crc32(b'InputMessage'): return message elif message . SUBCLASS_OF_ID == 0x790009e3 : # crc32(b'Message'): return types . InputMessageID ( message . id ) except AttributeError : pass _raise_cast_fail ( message , 'InputMedia' ) get_input_peer ( entity , allow_self = True , check_hash = True ) \u00b6 Gets the input peer for the given \"entity\" (user, chat or channel). A TypeError is raised if the given entity isn't a supported type or if check_hash is True but the entity's access_hash is None or the entity contains min information. In this case, the hash cannot be used for general purposes, and thus is not returned to avoid any issues which can derive from invalid access hashes. Note that check_hash is ignored if an input peer is already passed since in that case we assume the user knows what they're doing. This is key to getting entities by explicitly passing hash = 0 . Source code in telethon\\utils.py 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 def get_input_peer ( entity , allow_self = True , check_hash = True ): \"\"\" Gets the input peer for the given \"entity\" (user, chat or channel). A ``TypeError`` is raised if the given entity isn't a supported type or if ``check_hash is True`` but the entity's ``access_hash is None`` *or* the entity contains ``min`` information. In this case, the hash cannot be used for general purposes, and thus is not returned to avoid any issues which can derive from invalid access hashes. Note that ``check_hash`` **is ignored** if an input peer is already passed since in that case we assume the user knows what they're doing. This is key to getting entities by explicitly passing ``hash = 0``. \"\"\" # NOTE: It is important that this method validates the access hashes, # because it is used when we *require* a valid general-purpose # access hash. This includes caching, which relies on this method. # Further, when resolving raw methods, they do e.g., # utils.get_input_channel(client.get_input_peer(...)) # # ...which means that the client's method verifies the hashes. # # Excerpt from a conversation with official developers (slightly edited): # > We send new access_hash for Channel with min flag since layer 102. # > Previously, we omitted it. # > That one works just to download the profile picture. # # < So, min hashes only work for getting files, # < but the non-min hash is required for any other operation? # # > Yes. # # More information: https://core.telegram.org/api/min try : if entity . SUBCLASS_OF_ID == 0xc91c90b6 : # crc32(b'InputPeer') return entity except AttributeError : # e.g. custom.Dialog (can't cyclic import). if allow_self and hasattr ( entity , 'input_entity' ): return entity . input_entity elif hasattr ( entity , 'entity' ): return get_input_peer ( entity . entity ) else : _raise_cast_fail ( entity , 'InputPeer' ) if isinstance ( entity , types . User ): if entity . is_self and allow_self : return types . InputPeerSelf () elif ( entity . access_hash is not None and not entity . min ) or not check_hash : return types . InputPeerUser ( entity . id , entity . access_hash ) else : raise TypeError ( 'User without access_hash or min info cannot be input' ) if isinstance ( entity , ( types . Chat , types . ChatEmpty , types . ChatForbidden )): return types . InputPeerChat ( entity . id ) if isinstance ( entity , types . Channel ): if ( entity . access_hash is not None and not entity . min ) or not check_hash : return types . InputPeerChannel ( entity . id , entity . access_hash ) else : raise TypeError ( 'Channel without access_hash or min info cannot be input' ) if isinstance ( entity , types . ChannelForbidden ): # \"channelForbidden are never min\", and since their hash is # also not optional, we assume that this truly is the case. return types . InputPeerChannel ( entity . id , entity . access_hash ) if isinstance ( entity , types . InputUser ): return types . InputPeerUser ( entity . user_id , entity . access_hash ) if isinstance ( entity , types . InputChannel ): return types . InputPeerChannel ( entity . channel_id , entity . access_hash ) if isinstance ( entity , types . InputUserSelf ): return types . InputPeerSelf () if isinstance ( entity , types . InputUserFromMessage ): return types . InputPeerUserFromMessage ( entity . peer , entity . msg_id , entity . user_id ) if isinstance ( entity , types . InputChannelFromMessage ): return types . InputPeerChannelFromMessage ( entity . peer , entity . msg_id , entity . channel_id ) if isinstance ( entity , types . UserEmpty ): return types . InputPeerEmpty () if isinstance ( entity , types . UserFull ): return get_input_peer ( entity . user ) if isinstance ( entity , types . ChatFull ): return types . InputPeerChat ( entity . id ) if isinstance ( entity , types . PeerChat ): return types . InputPeerChat ( entity . chat_id ) _raise_cast_fail ( entity , 'InputPeer' ) get_input_photo ( photo ) \u00b6 Similar to :meth: get_input_peer , but for photos Source code in telethon\\utils.py 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 def get_input_photo ( photo ): \"\"\"Similar to :meth:`get_input_peer`, but for photos\"\"\" try : if photo . SUBCLASS_OF_ID == 0x846363e0 : # crc32(b'InputPhoto'): return photo except AttributeError : _raise_cast_fail ( photo , 'InputPhoto' ) if isinstance ( photo , types . Message ): photo = photo . media if isinstance ( photo , ( types . photos . Photo , types . MessageMediaPhoto )): photo = photo . photo if isinstance ( photo , types . Photo ): return types . InputPhoto ( id = photo . id , access_hash = photo . access_hash , file_reference = photo . file_reference ) if isinstance ( photo , types . PhotoEmpty ): return types . InputPhotoEmpty () if isinstance ( photo , types . messages . ChatFull ): photo = photo . full_chat if isinstance ( photo , types . ChannelFull ): return get_input_photo ( photo . chat_photo ) elif isinstance ( photo , types . UserFull ): return get_input_photo ( photo . profile_photo ) elif isinstance ( photo , ( types . Channel , types . Chat , types . User )): return get_input_photo ( photo . photo ) if isinstance ( photo , ( types . UserEmpty , types . ChatEmpty , types . ChatForbidden , types . ChannelForbidden )): return types . InputPhotoEmpty () _raise_cast_fail ( photo , 'InputPhoto' ) get_input_user ( entity ) \u00b6 Similar to :meth: get_input_peer , but for :tl: InputUser 's alone. .. important:: This method does not validate for invalid general - purpose access hashes , unlike `get_input_peer` . Consider using instead : `` get_input_channel ( get_input_peer ( channel )) `` . Source code in telethon\\utils.py 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 def get_input_user ( entity ): \"\"\" Similar to :meth:`get_input_peer`, but for :tl:`InputUser`'s alone. .. important:: This method does not validate for invalid general-purpose access hashes, unlike `get_input_peer`. Consider using instead: ``get_input_channel(get_input_peer(channel))``. \"\"\" try : if entity . SUBCLASS_OF_ID == 0xe669bf46 : # crc32(b'InputUser'): return entity except AttributeError : _raise_cast_fail ( entity , 'InputUser' ) if isinstance ( entity , types . User ): if entity . is_self : return types . InputUserSelf () else : return types . InputUser ( entity . id , entity . access_hash or 0 ) if isinstance ( entity , types . InputPeerSelf ): return types . InputUserSelf () if isinstance ( entity , ( types . UserEmpty , types . InputPeerEmpty )): return types . InputUserEmpty () if isinstance ( entity , types . UserFull ): return get_input_user ( entity . user ) if isinstance ( entity , types . InputPeerUser ): return types . InputUser ( entity . user_id , entity . access_hash ) if isinstance ( entity , types . InputPeerUserFromMessage ): return types . InputUserFromMessage ( entity . peer , entity . msg_id , entity . user_id ) _raise_cast_fail ( entity , 'InputUser' ) get_message_id ( message ) \u00b6 Similar to :meth: get_input_peer , but for message IDs. Source code in telethon\\utils.py 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 def get_message_id ( message ): \"\"\"Similar to :meth:`get_input_peer`, but for message IDs.\"\"\" if message is None : return None if isinstance ( message , int ): return message try : if message . SUBCLASS_OF_ID == 0x790009e3 : # hex(crc32(b'Message')) = 0x790009e3 return message . id except AttributeError : pass raise TypeError ( 'Invalid message type: {} ' . format ( type ( message ))) get_peer_id ( peer , add_mark = True ) \u00b6 Convert the given peer into its marked ID by default. This \"mark\" comes from the \"bot api\" format, and with it the peer type can be identified back. User ID is left unmodified, chat ID is negated, and channel ID is prefixed with -100: user_id -chat_id -100channel_id The original ID and the peer type class can be returned with a call to :meth: resolve_id(marked_id) . Source code in telethon\\utils.py 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 def get_peer_id ( peer , add_mark = True ): \"\"\" Convert the given peer into its marked ID by default. This \"mark\" comes from the \"bot api\" format, and with it the peer type can be identified back. User ID is left unmodified, chat ID is negated, and channel ID is prefixed with -100: * ``user_id`` * ``-chat_id`` * ``-100channel_id`` The original ID and the peer type class can be returned with a call to :meth:`resolve_id(marked_id)`. \"\"\" # First we assert it's a Peer TLObject, or early return for integers if isinstance ( peer , int ): return peer if add_mark else resolve_id ( peer )[ 0 ] # Tell the user to use their client to resolve InputPeerSelf if we got one if isinstance ( peer , types . InputPeerSelf ): _raise_cast_fail ( peer , 'int (you might want to use client.get_peer_id)' ) try : peer = get_peer ( peer ) except TypeError : _raise_cast_fail ( peer , 'int' ) if isinstance ( peer , types . PeerUser ): return peer . user_id elif isinstance ( peer , types . PeerChat ): # Check in case the user mixed things up to avoid blowing up if not ( 0 < peer . chat_id <= 0x7fffffff ): peer . chat_id = resolve_id ( peer . chat_id )[ 0 ] return - peer . chat_id if add_mark else peer . chat_id else : # if isinstance(peer, types.PeerChannel): # Check in case the user mixed things up to avoid blowing up if not ( 0 < peer . channel_id <= 0x7fffffff ): peer . channel_id = resolve_id ( peer . channel_id )[ 0 ] if not add_mark : return peer . channel_id # Concat -100 through math tricks, .to_supergroup() on # Madeline IDs will be strictly positive -> log works. try : return - ( peer . channel_id + pow ( 10 , math . floor ( math . log10 ( peer . channel_id ) + 3 ))) except ValueError : raise TypeError ( 'Cannot get marked ID of a channel ' 'unless its ID is strictly positive' ) from None is_audio ( file ) \u00b6 Returns True if the file extension looks like an audio file. Source code in telethon\\utils.py 784 785 786 787 def is_audio ( file ): \"\"\"Returns `True` if the file extension looks like an audio file.\"\"\" file = 'a' + _get_extension ( file ) return ( mimetypes . guess_type ( file )[ 0 ] or '' ) . startswith ( 'audio/' ) is_gif ( file ) \u00b6 Returns True if the file extension looks like a gif file to Telegram. Source code in telethon\\utils.py 777 778 779 780 781 def is_gif ( file ): \"\"\" Returns `True` if the file extension looks like a gif file to Telegram. \"\"\" return re . match ( r '\\.gif' , _get_extension ( file ), re . IGNORECASE ) is_image ( file ) \u00b6 Returns True if the file extension looks like an image file to Telegram. Source code in telethon\\utils.py 766 767 768 769 770 771 772 773 774 def is_image ( file ): \"\"\" Returns `True` if the file extension looks like an image file to Telegram. \"\"\" match = re . match ( r '\\.(png|jpe?g)' , _get_extension ( file ), re . IGNORECASE ) if match : return True else : return isinstance ( resolve_bot_file_id ( file ), types . Photo ) is_list_like ( obj ) \u00b6 Returns True if the given object looks like a list. Checking if hasattr(obj, '__iter__') and ignoring str/bytes is not enough. Things like open() are also iterable (and probably many other things), so just support the commonly known list-like objects. Source code in telethon\\utils.py 796 797 798 799 800 801 802 803 804 def is_list_like ( obj ): \"\"\" Returns `True` if the given object looks like a list. Checking ``if hasattr(obj, '__iter__')`` and ignoring ``str/bytes`` is not enough. Things like ``open()`` are also iterable (and probably many other things), so just support the commonly known list-like objects. \"\"\" return isinstance ( obj , ( list , tuple , set , dict , GeneratorType )) is_video ( file ) \u00b6 Returns True if the file extension looks like a video file. Source code in telethon\\utils.py 790 791 792 793 def is_video ( file ): \"\"\"Returns `True` if the file extension looks like a video file.\"\"\" file = 'a' + _get_extension ( file ) return ( mimetypes . guess_type ( file )[ 0 ] or '' ) . startswith ( 'video/' ) pack_bot_file_id ( file ) \u00b6 Inverse operation for resolve_bot_file_id . The only parameters this method will accept are :tl: Document and :tl: Photo , and it will return a variable-length file_id string. If an invalid parameter is given, it will return None . Source code in telethon\\utils.py 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 def pack_bot_file_id ( file ): \"\"\" Inverse operation for `resolve_bot_file_id`. The only parameters this method will accept are :tl:`Document` and :tl:`Photo`, and it will return a variable-length ``file_id`` string. If an invalid parameter is given, it will ``return None``. \"\"\" if isinstance ( file , types . MessageMediaDocument ): file = file . document elif isinstance ( file , types . MessageMediaPhoto ): file = file . photo if isinstance ( file , types . Document ): file_type = 5 for attribute in file . attributes : if isinstance ( attribute , types . DocumentAttributeAudio ): file_type = 3 if attribute . voice else 9 elif isinstance ( attribute , types . DocumentAttributeVideo ): file_type = 13 if attribute . round_message else 4 elif isinstance ( attribute , types . DocumentAttributeSticker ): file_type = 8 elif isinstance ( attribute , types . DocumentAttributeAnimated ): file_type = 10 else : continue break return _encode_telegram_base64 ( _rle_encode ( struct . pack ( '<iiqqb' , file_type , file . dc_id , file . id , file . access_hash , 2 ))) elif isinstance ( file , types . Photo ): size = next (( x for x in reversed ( file . sizes ) if isinstance ( x , ( types . PhotoSize , types . PhotoCachedSize ))), None ) if not size : return None size = size . location return _encode_telegram_base64 ( _rle_encode ( struct . pack ( '<iiqqqqib' , 2 , file . dc_id , file . id , file . access_hash , size . volume_id , 0 , size . local_id , 2 # 0 = old `secret` ))) else : return None parse_phone ( phone ) \u00b6 Parses the given phone, or returns None if it's invalid. Source code in telethon\\utils.py 807 808 809 810 811 812 813 814 def parse_phone ( phone ): \"\"\"Parses the given phone, or returns `None` if it's invalid.\"\"\" if isinstance ( phone , int ): return str ( phone ) else : phone = re . sub ( r '[+()\\s-]' , '' , str ( phone )) if phone . isdigit (): return phone parse_username ( username ) \u00b6 Parses the given username or channel access hash, given a string, username or URL. Returns a tuple consisting of both the stripped, lowercase username and whether it is a joinchat/ hash (in which case is not lowercase'd). Returns (None, False) if the username or link is not valid. Source code in telethon\\utils.py 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 def parse_username ( username ): \"\"\" Parses the given username or channel access hash, given a string, username or URL. Returns a tuple consisting of both the stripped, lowercase username and whether it is a joinchat/ hash (in which case is not lowercase'd). Returns ``(None, False)`` if the ``username`` or link is not valid. \"\"\" username = username . strip () m = USERNAME_RE . match ( username ) or TG_JOIN_RE . match ( username ) if m : username = username [ m . end ():] is_invite = bool ( m . group ( 1 )) if is_invite : return username , True else : username = username . rstrip ( '/' ) if VALID_USERNAME_RE . match ( username ): return username . lower (), False else : return None , False resolve_bot_file_id ( file_id ) \u00b6 Given a Bot API-style file_id <telethon.tl.custom.file.File.id> , returns the media it represents. If the file_id <telethon.tl.custom.file.File.id> is not valid, None is returned instead. Note that the file_id <telethon.tl.custom.file.File.id> does not have information such as image dimensions or file size, so these will be zero if present. For thumbnails, the photo ID and hash will always be zero. Source code in telethon\\utils.py 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 def resolve_bot_file_id ( file_id ): \"\"\" Given a Bot API-style `file_id <telethon.tl.custom.file.File.id>`, returns the media it represents. If the `file_id <telethon.tl.custom.file.File.id>` is not valid, `None` is returned instead. Note that the `file_id <telethon.tl.custom.file.File.id>` does not have information such as image dimensions or file size, so these will be zero if present. For thumbnails, the photo ID and hash will always be zero. \"\"\" data = _rle_decode ( _decode_telegram_base64 ( file_id )) if not data : return None # This isn't officially documented anywhere, but # we assume the last byte is some kind of \"version\". data , version = data [: - 1 ], data [ - 1 ] if version not in ( 2 , 4 ): return None if ( version == 2 and len ( data ) == 24 ) or ( version == 4 and len ( data ) == 25 ): if version == 2 : file_type , dc_id , media_id , access_hash = struct . unpack ( '<iiqq' , data ) # elif version == 4: else : # TODO Figure out what the extra byte means file_type , dc_id , media_id , access_hash , _ = struct . unpack ( '<iiqqb' , data ) if not ( 1 <= dc_id <= 5 ): # Valid `file_id`'s must have valid DC IDs. Since this method is # called when sending a file and the user may have entered a path # they believe is correct but the file doesn't exist, this method # may detect a path as \"valid\" bot `file_id` even when it's not. # By checking the `dc_id`, we greatly reduce the chances of this # happening. return None attributes = [] if file_type == 3 or file_type == 9 : attributes . append ( types . DocumentAttributeAudio ( duration = 0 , voice = file_type == 3 )) elif file_type == 4 or file_type == 13 : attributes . append ( types . DocumentAttributeVideo ( duration = 0 , w = 0 , h = 0 , round_message = file_type == 13 )) # elif file_type == 5: # other, cannot know which elif file_type == 8 : attributes . append ( types . DocumentAttributeSticker ( alt = '' , stickerset = types . InputStickerSetEmpty () )) elif file_type == 10 : attributes . append ( types . DocumentAttributeAnimated ()) return types . Document ( id = media_id , access_hash = access_hash , date = None , mime_type = '' , size = 0 , thumbs = None , dc_id = dc_id , attributes = attributes , file_reference = b '' ) elif ( version == 2 and len ( data ) == 44 ) or ( version == 4 and len ( data ) == 49 ): if version == 2 : ( file_type , dc_id , media_id , access_hash , volume_id , secret , local_id ) = struct . unpack ( '<iiqqqqi' , data ) # elif version == 4: else : # TODO Figure out what the extra five bytes mean ( file_type , dc_id , media_id , access_hash , volume_id , secret , local_id , _ ) = struct . unpack ( '<iiqqqqi5s' , data ) if not ( 1 <= dc_id <= 5 ): return None # Thumbnails (small) always have ID 0; otherwise size 'x' photo_size = 's' if media_id or access_hash else 'x' return types . Photo ( id = media_id , access_hash = access_hash , file_reference = b '' , date = None , sizes = [ types . PhotoSize ( type = photo_size , location = types . FileLocationToBeDeprecated ( volume_id = volume_id , local_id = local_id ), w = 0 , h = 0 , size = 0 )], dc_id = dc_id , has_stickers = None ) resolve_id ( marked_id ) \u00b6 Given a marked ID, returns the original ID and its :tl: Peer type. Source code in telethon\\utils.py 948 949 950 951 952 953 954 955 956 957 958 959 960 961 def resolve_id ( marked_id ): \"\"\"Given a marked ID, returns the original ID and its :tl:`Peer` type.\"\"\" if marked_id >= 0 : return marked_id , types . PeerUser # There have been report of chat IDs being 10000xyz, which means their # marked version is -10000xyz, which in turn looks like a channel but # it becomes 00xyz (= xyz). Hence, we must assert that there are only # two zeroes. m = re . match ( r '-100([^0]\\d*)' , str ( marked_id )) if m : return int ( m . group ( 1 )), types . PeerChannel return - marked_id , types . PeerChat resolve_inline_message_id ( inline_msg_id ) \u00b6 Resolves an inline message ID. Returns a tuple of (message id, peer, dc id, access hash) The peer may either be a :tl: PeerUser referencing the user who sent the message via the bot in a private conversation or small group chat, or a :tl: PeerChannel if the message was sent in a channel. The access_hash does not have any use yet. Source code in telethon\\utils.py 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 def resolve_inline_message_id ( inline_msg_id ): \"\"\" Resolves an inline message ID. Returns a tuple of ``(message id, peer, dc id, access hash)`` The ``peer`` may either be a :tl:`PeerUser` referencing the user who sent the message via the bot in a private conversation or small group chat, or a :tl:`PeerChannel` if the message was sent in a channel. The ``access_hash`` does not have any use yet. \"\"\" try : dc_id , message_id , pid , access_hash = \\ struct . unpack ( '<iiiq' , _decode_telegram_base64 ( inline_msg_id )) peer = types . PeerChannel ( - pid ) if pid < 0 else types . PeerUser ( pid ) return message_id , peer , dc_id , access_hash except ( struct . error , TypeError ): return None , None , None , None resolve_invite_link ( link ) \u00b6 Resolves the given invite link. Returns a tuple of (link creator user id, global chat id, random int) . Note that for broadcast channels, the link creator user ID will be zero to protect their identity. Normal chats and megagroup channels will have such ID. Note that the chat ID may not be accurate for chats with a link that were upgraded to megagroup, since the link can remain the same, but the chat ID will be correct once a new link is generated. Source code in telethon\\utils.py 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 def resolve_invite_link ( link ): \"\"\" Resolves the given invite link. Returns a tuple of ``(link creator user id, global chat id, random int)``. Note that for broadcast channels, the link creator user ID will be zero to protect their identity. Normal chats and megagroup channels will have such ID. Note that the chat ID may not be accurate for chats with a link that were upgraded to megagroup, since the link can remain the same, but the chat ID will be correct once a new link is generated. \"\"\" link_hash , is_link = parse_username ( link ) if not is_link : # Perhaps the user passed the link hash directly link_hash = link # Little known fact, but invite links with a # hex-string of bytes instead of base64 also works. if re . match ( r '[a-fA-F\\d] {32} ' , link_hash ): payload = bytes . fromhex ( link_hash ) else : payload = _decode_telegram_base64 ( link_hash ) try : return struct . unpack ( '>LLQ' , payload ) except ( struct . error , TypeError ): return None , None , None sanitize_parse_mode ( mode ) \u00b6 Converts the given parse mode into an object with parse and unparse callable properties. Source code in telethon\\utils.py 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 def sanitize_parse_mode ( mode ): \"\"\" Converts the given parse mode into an object with ``parse`` and ``unparse`` callable properties. \"\"\" if not mode : return None if callable ( mode ): class CustomMode : @staticmethod def unparse ( text , entities ): raise NotImplementedError CustomMode . parse = mode return CustomMode elif ( all ( hasattr ( mode , x ) for x in ( 'parse' , 'unparse' )) and all ( callable ( x ) for x in ( mode . parse , mode . unparse ))): return mode elif isinstance ( mode , str ): try : return { 'md' : markdown , 'markdown' : markdown , 'htm' : html , 'html' : html }[ mode . lower ()] except KeyError : raise ValueError ( 'Unknown parse mode {} ' . format ( mode )) else : raise TypeError ( 'Invalid parse mode type {} ' . format ( mode )) stripped_photo_to_jpg ( stripped ) \u00b6 Adds the JPG header and footer to a stripped image. Ported from https://github.com/telegramdesktop/tdesktop/blob/bec39d89e19670eb436dc794a8f20b657cb87c71/Telegram/SourceFiles/ui/image/image.cpp#L225 Source code in telethon\\utils.py 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 def stripped_photo_to_jpg ( stripped ): \"\"\" Adds the JPG header and footer to a stripped image. Ported from https://github.com/telegramdesktop/tdesktop/blob/bec39d89e19670eb436dc794a8f20b657cb87c71/Telegram/SourceFiles/ui/image/image.cpp#L225 \"\"\" # NOTE: Changes here should update _photo_size_byte_count if len ( stripped ) < 3 or stripped [ 0 ] != 1 : return stripped header = bytearray ( b ' \\xff\\xd8\\xff\\xe0\\x00\\x10 JFIF \\x00\\x01\\x01\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\xff\\xdb\\x00 C \\x00 ( \\x1c\\x1e # \\x1e\\x19 (#!#-+(0<dA<77<{X]Id \\x91\\x80\\x99\\x96\\x8f\\x80\\x8c\\x8a\\xa0\\xb4\\xe6\\xc3\\xa0\\xaa\\xda\\xad\\x8a\\x8c\\xc8\\xff\\xcb\\xda\\xee\\xf5\\xff\\xff\\xff\\x9b\\xc1\\xff\\xff\\xff\\xfa\\xff\\xe6\\xfd\\xff\\xf8\\xff\\xdb\\x00 C \\x01 +--<5<vAAv \\xf8\\xa5\\x8c\\xa5\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xff\\xc0\\x00\\x11\\x08\\x00\\x00\\x00\\x00\\x03\\x01 \" \\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xc4\\x00\\x1f\\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\xff\\xc4\\x00\\xb5\\x10\\x00\\x02\\x01\\x03\\x03\\x02\\x04\\x03\\x05\\x05\\x04\\x04\\x00\\x00\\x01 } \\x01\\x02\\x03\\x00\\x04\\x11\\x05\\x12 !1A \\x06\\x13 Qa \\x07 \"q \\x14 2 \\x81\\x91\\xa1\\x08 #B \\xb1\\xc1\\x15 R \\xd1\\xf0 $3br \\x82\\t\\n\\x16\\x17\\x18\\x19\\x1a %& \\' ()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz \\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xff\\xc4\\x00\\x1f\\x01\\x00\\x03\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\xff\\xc4\\x00\\xb5\\x11\\x00\\x02\\x01\\x02\\x04\\x04\\x03\\x04\\x07\\x05\\x04\\x04\\x00\\x01\\x02 w \\x00\\x01\\x02\\x03\\x11\\x04\\x05 !1 \\x06\\x12 AQ \\x07 aq \\x13 \"2 \\x81\\x08\\x14 B \\x91\\xa1\\xb1\\xc1\\t #3R \\xf0\\x15 br \\xd1\\n\\x16 $4 \\xe1 % \\xf1\\x17\\x18\\x19\\x1a & \\' ()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz \\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xff\\xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00 ? \\x00 ' ) footer = b \" \\xff\\xd9 \" header [ 164 ] = stripped [ 1 ] header [ 166 ] = stripped [ 2 ] return bytes ( header ) + stripped [ 3 :] + footer","title":"Utilities"},{"location":"modules/utils/#utilities-telethonutils","text":"Utilities for working with the Telegram API itself (such as handy methods to convert between an entity like a User, Chat, etc. into its Input version)","title":"Utilities telethon.utils"},{"location":"modules/utils/#telethon.utils.chunks","text":"Turns the given iterable into chunks of the specified size, which is 100 by default since that's what Telegram uses the most. Source code in telethon\\utils.py 79 80 81 82 83 84 85 86 87 def chunks ( iterable , size = 100 ): \"\"\" Turns the given iterable into chunks of the specified size, which is 100 by default since that's what Telegram uses the most. \"\"\" it = iter ( iterable ) size -= 1 for head in it : yield itertools . chain ([ head ], itertools . islice ( it , size ))","title":"chunks()"},{"location":"modules/utils/#telethon.utils.decode_waveform","text":"Inverse operation of encode_waveform . Source code in telethon\\utils.py 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 def decode_waveform ( waveform ): \"\"\" Inverse operation of `encode_waveform`. \"\"\" bit_count = len ( waveform ) * 8 value_count = bit_count // 5 if value_count == 0 : return b '' result = bytearray ( value_count ) for i in range ( value_count - 1 ): byte_index , bit_shift = divmod ( i * 5 , 8 ) value = struct . unpack ( '<H' , waveform [ byte_index : byte_index + 2 ])[ 0 ] result [ i ] = ( value >> bit_shift ) & 0b00011111 byte_index , bit_shift = divmod ( value_count - 1 , 8 ) if byte_index == len ( waveform ) - 1 : value = waveform [ byte_index ] else : value = struct . unpack ( '<H' , waveform [ byte_index : byte_index + 2 ])[ 0 ] result [ value_count - 1 ] = ( value >> bit_shift ) & 0b00011111 return bytes ( result )","title":"decode_waveform()"},{"location":"modules/utils/#telethon.utils.encode_waveform","text":"Encodes the input bytes into a 5-bit byte-string to be used as a voice note's waveform. See decode_waveform for the reverse operation. Example chat = ... file = 'my.ogg' # Send 'my.ogg' with a ascending-triangle waveform await client . send_file ( chat , file , attributes = [ types . DocumentAttributeAudio ( duration = 7 , voice = True , waveform = utils . encode_waveform ( bytes ( range ( 2 ** 5 )) # 2**5 because 5-bit )] # Send 'my.ogg' with a square waveform await client . send_file ( chat , file , attributes = [ types . DocumentAttributeAudio ( duration = 7 , voice = True , waveform = utils . encode_waveform ( bytes (( 31 , 31 , 15 , 15 , 15 , 15 , 31 , 31 )) * 4 ) )] Source code in telethon\\utils.py 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 def encode_waveform ( waveform ): \"\"\" Encodes the input `bytes` into a 5-bit byte-string to be used as a voice note's waveform. See `decode_waveform` for the reverse operation. Example: ```python chat = ... file = 'my.ogg' # Send 'my.ogg' with a ascending-triangle waveform await client.send_file(chat, file, attributes=[types.DocumentAttributeAudio( duration=7, voice=True, waveform=utils.encode_waveform(bytes(range(2 ** 5)) # 2**5 because 5-bit )] # Send 'my.ogg' with a square waveform await client.send_file(chat, file, attributes=[types.DocumentAttributeAudio( duration=7, voice=True, waveform=utils.encode_waveform(bytes((31, 31, 15, 15, 15, 15, 31, 31)) * 4) )] ``` \"\"\" bits_count = len ( waveform ) * 5 bytes_count = ( bits_count + 7 ) // 8 result = bytearray ( bytes_count + 1 ) for i in range ( len ( waveform )): byte_index , bit_shift = divmod ( i * 5 , 8 ) value = ( waveform [ i ] & 0b00011111 ) << bit_shift or_what = struct . unpack ( '<H' , ( result [ byte_index : byte_index + 2 ]))[ 0 ] or_what |= value result [ byte_index : byte_index + 2 ] = struct . pack ( '<H' , or_what ) return bytes ( result [: bytes_count ])","title":"encode_waveform()"},{"location":"modules/utils/#telethon.utils.get_appropriated_part_size","text":"Gets the appropriated part size when uploading or downloading files, given an initial file size. Source code in telethon\\utils.py 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 def get_appropriated_part_size ( file_size ): \"\"\" Gets the appropriated part size when uploading or downloading files, given an initial file size. \"\"\" if file_size <= 104857600 : # 100MB return 128 if file_size <= 786432000 : # 750MB return 256 if file_size <= 1572864000 : # 1500MB return 512 raise ValueError ( 'File size too large' )","title":"get_appropriated_part_size()"},{"location":"modules/utils/#telethon.utils.get_attributes","text":"Get a list of attributes for the given file and the mime type as a tuple ([attribute], mime_type). Source code in telethon\\utils.py 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 def get_attributes ( file , * , attributes = None , mime_type = None , force_document = False , voice_note = False , video_note = False , supports_streaming = False ): \"\"\" Get a list of attributes for the given file and the mime type as a tuple ([attribute], mime_type). \"\"\" # Note: ``file.name`` works for :tl:`InputFile` and some `IOBase` streams name = file if isinstance ( file , str ) else getattr ( file , 'name' , 'unnamed' ) if mime_type is None : mime_type = mimetypes . guess_type ( name )[ 0 ] attr_dict = { types . DocumentAttributeFilename : types . DocumentAttributeFilename ( os . path . basename ( name ))} if is_audio ( file ): m = _get_metadata ( file ) if m : attr_dict [ types . DocumentAttributeAudio ] = \\ types . DocumentAttributeAudio ( voice = voice_note , title = m . get ( 'title' ) if m . has ( 'title' ) else None , performer = m . get ( 'author' ) if m . has ( 'author' ) else None , duration = int ( m . get ( 'duration' ) . seconds if m . has ( 'duration' ) else 0 ) ) if not force_document and is_video ( file ): m = _get_metadata ( file ) if m : doc = types . DocumentAttributeVideo ( round_message = video_note , w = m . get ( 'width' ) if m . has ( 'width' ) else 0 , h = m . get ( 'height' ) if m . has ( 'height' ) else 0 , duration = int ( m . get ( 'duration' ) . seconds if m . has ( 'duration' ) else 0 ), supports_streaming = supports_streaming ) else : doc = types . DocumentAttributeVideo ( 0 , 1 , 1 , round_message = video_note , supports_streaming = supports_streaming ) attr_dict [ types . DocumentAttributeVideo ] = doc if voice_note : if types . DocumentAttributeAudio in attr_dict : attr_dict [ types . DocumentAttributeAudio ] . voice = True else : attr_dict [ types . DocumentAttributeAudio ] = \\ types . DocumentAttributeAudio ( 0 , voice = True ) # Now override the attributes if any. As we have a dict of # {cls: instance}, we can override any class with the list # of attributes provided by the user easily. if attributes : for a in attributes : attr_dict [ type ( a )] = a # Ensure we have a mime type, any; but it cannot be None # 'The \"octet-stream\" subtype is used to indicate that a body # contains arbitrary binary data.' if not mime_type : mime_type = 'application/octet-stream' return list ( attr_dict . values ()), mime_type","title":"get_attributes()"},{"location":"modules/utils/#telethon.utils.get_display_name","text":"Gets the display name for the given :tl: User , :tl: Chat or :tl: Channel . Returns an empty string otherwise. Source code in telethon\\utils.py 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 def get_display_name ( entity ): \"\"\" Gets the display name for the given :tl:`User`, :tl:`Chat` or :tl:`Channel`. Returns an empty string otherwise. \"\"\" if isinstance ( entity , types . User ): if entity . last_name and entity . first_name : return ' {} {} ' . format ( entity . first_name , entity . last_name ) elif entity . first_name : return entity . first_name elif entity . last_name : return entity . last_name else : return '' elif isinstance ( entity , ( types . Chat , types . Channel )): return entity . title return ''","title":"get_display_name()"},{"location":"modules/utils/#telethon.utils.get_extension","text":"Gets the corresponding extension for any Telegram media. Source code in telethon\\utils.py 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 def get_extension ( media ): \"\"\"Gets the corresponding extension for any Telegram media.\"\"\" # Photos are always compressed as .jpg by Telegram try : get_input_photo ( media ) return '.jpg' except TypeError : # These cases are not handled by input photo because it can't if isinstance ( media , ( types . UserProfilePhoto , types . ChatPhoto )): return '.jpg' # Documents will come with a mime type if isinstance ( media , types . MessageMediaDocument ): media = media . document if isinstance ( media , ( types . Document , types . WebDocument , types . WebDocumentNoProxy )): if media . mime_type == 'application/octet-stream' : # Octet stream are just bytes, which have no default extension return '' else : return guess_extension ( media . mime_type ) or '' return ''","title":"get_extension()"},{"location":"modules/utils/#telethon.utils.get_inner_text","text":"Gets the inner text that's surrounded by the given entities. For instance: text = 'hey!', entity = MessageEntityBold(2, 2) -> 'y!'. Parameters: Name Type Description Default text str the original text. required entities Iterable the entity or entities that must be matched. required Returns: Type Description Union[str, list] A single result or a list of the text surrounded by the entities. Source code in telethon\\utils.py 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 def get_inner_text ( text : str , entities : \"Iterable\" ) -> \"Union[str, list]\" : \"\"\" Gets the inner text that's surrounded by the given entities. For instance: text = 'hey!', entity = MessageEntityBold(2, 2) -> 'y!'. Args: text: the original text. entities: the entity or entities that must be matched. Returns: A single result or a list of the text surrounded by the entities. \"\"\" text = add_surrogate ( text ) result = [] for e in entities : start = e . offset end = e . offset + e . length result . append ( del_surrogate ( text [ start : end ])) return result","title":"get_inner_text()"},{"location":"modules/utils/#telethon.utils.get_input_channel","text":"Similar to :meth: get_input_peer , but for :tl: InputChannel 's alone. .. important:: This method does not validate for invalid general - purpose access hashes , unlike `get_input_peer` . Consider using instead : `` get_input_channel ( get_input_peer ( channel )) `` . Source code in telethon\\utils.py 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 def get_input_channel ( entity ): \"\"\" Similar to :meth:`get_input_peer`, but for :tl:`InputChannel`'s alone. .. important:: This method does not validate for invalid general-purpose access hashes, unlike `get_input_peer`. Consider using instead: ``get_input_channel(get_input_peer(channel))``. \"\"\" try : if entity . SUBCLASS_OF_ID == 0x40f202fd : # crc32(b'InputChannel') return entity except AttributeError : _raise_cast_fail ( entity , 'InputChannel' ) if isinstance ( entity , ( types . Channel , types . ChannelForbidden )): return types . InputChannel ( entity . id , entity . access_hash or 0 ) if isinstance ( entity , types . InputPeerChannel ): return types . InputChannel ( entity . channel_id , entity . access_hash ) if isinstance ( entity , types . InputPeerChannelFromMessage ): return types . InputChannelFromMessage ( entity . peer , entity . msg_id , entity . channel_id ) _raise_cast_fail ( entity , 'InputChannel' )","title":"get_input_channel()"},{"location":"modules/utils/#telethon.utils.get_input_chat_photo","text":"Similar to :meth: get_input_peer , but for chat photos Source code in telethon\\utils.py 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 def get_input_chat_photo ( photo ): \"\"\"Similar to :meth:`get_input_peer`, but for chat photos\"\"\" try : if photo . SUBCLASS_OF_ID == 0xd4eb2d74 : # crc32(b'InputChatPhoto') return photo elif photo . SUBCLASS_OF_ID == 0xe7655f1f : # crc32(b'InputFile'): return types . InputChatUploadedPhoto ( photo ) except AttributeError : _raise_cast_fail ( photo , 'InputChatPhoto' ) photo = get_input_photo ( photo ) if isinstance ( photo , types . InputPhoto ): return types . InputChatPhoto ( photo ) elif isinstance ( photo , types . InputPhotoEmpty ): return types . InputChatPhotoEmpty () _raise_cast_fail ( photo , 'InputChatPhoto' )","title":"get_input_chat_photo()"},{"location":"modules/utils/#telethon.utils.get_input_dialog","text":"Similar to :meth: get_input_peer , but for dialogs Source code in telethon\\utils.py 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 def get_input_dialog ( dialog ): \"\"\"Similar to :meth:`get_input_peer`, but for dialogs\"\"\" try : if dialog . SUBCLASS_OF_ID == 0xa21c9795 : # crc32(b'InputDialogPeer') return dialog if dialog . SUBCLASS_OF_ID == 0xc91c90b6 : # crc32(b'InputPeer') return types . InputDialogPeer ( dialog ) except AttributeError : _raise_cast_fail ( dialog , 'InputDialogPeer' ) try : return types . InputDialogPeer ( get_input_peer ( dialog )) except TypeError : pass _raise_cast_fail ( dialog , 'InputDialogPeer' )","title":"get_input_dialog()"},{"location":"modules/utils/#telethon.utils.get_input_document","text":"Similar to :meth: get_input_peer , but for documents Source code in telethon\\utils.py 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 def get_input_document ( document ): \"\"\"Similar to :meth:`get_input_peer`, but for documents\"\"\" try : if document . SUBCLASS_OF_ID == 0xf33fdb68 : # crc32(b'InputDocument'): return document except AttributeError : _raise_cast_fail ( document , 'InputDocument' ) if isinstance ( document , types . Document ): return types . InputDocument ( id = document . id , access_hash = document . access_hash , file_reference = document . file_reference ) if isinstance ( document , types . DocumentEmpty ): return types . InputDocumentEmpty () if isinstance ( document , types . MessageMediaDocument ): return get_input_document ( document . document ) if isinstance ( document , types . Message ): return get_input_document ( document . media ) _raise_cast_fail ( document , 'InputDocument' )","title":"get_input_document()"},{"location":"modules/utils/#telethon.utils.get_input_geo","text":"Similar to :meth: get_input_peer , but for geo points Source code in telethon\\utils.py 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 def get_input_geo ( geo ): \"\"\"Similar to :meth:`get_input_peer`, but for geo points\"\"\" try : if geo . SUBCLASS_OF_ID == 0x430d225 : # crc32(b'InputGeoPoint'): return geo except AttributeError : _raise_cast_fail ( geo , 'InputGeoPoint' ) if isinstance ( geo , types . GeoPoint ): return types . InputGeoPoint ( lat = geo . lat , long = geo . long ) if isinstance ( geo , types . GeoPointEmpty ): return types . InputGeoPointEmpty () if isinstance ( geo , types . MessageMediaGeo ): return get_input_geo ( geo . geo ) if isinstance ( geo , types . Message ): return get_input_geo ( geo . media ) _raise_cast_fail ( geo , 'InputGeoPoint' )","title":"get_input_geo()"},{"location":"modules/utils/#telethon.utils.get_input_location","text":"Similar to :meth: get_input_peer , but for input messages. Note that this returns a tuple (dc_id, location) , the dc_id being present if known. Source code in telethon\\utils.py 696 697 698 699 700 701 702 703 704 def get_input_location ( location ): \"\"\" Similar to :meth:`get_input_peer`, but for input messages. Note that this returns a tuple ``(dc_id, location)``, the ``dc_id`` being present if known. \"\"\" info = _get_file_info ( location ) return info . dc_id , info . location","title":"get_input_location()"},{"location":"modules/utils/#telethon.utils.get_input_media","text":"Similar to :meth: get_input_peer , but for media. If the media is :tl: InputFile and is_photo is known to be True , it will be treated as an :tl: InputMediaUploadedPhoto . Else, the rest of parameters will indicate how to treat it. Source code in telethon\\utils.py 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 def get_input_media ( media , * , is_photo = False , attributes = None , force_document = False , voice_note = False , video_note = False , supports_streaming = False ): \"\"\" Similar to :meth:`get_input_peer`, but for media. If the media is :tl:`InputFile` and ``is_photo`` is known to be `True`, it will be treated as an :tl:`InputMediaUploadedPhoto`. Else, the rest of parameters will indicate how to treat it. \"\"\" try : if media . SUBCLASS_OF_ID == 0xfaf846f4 : # crc32(b'InputMedia') return media elif media . SUBCLASS_OF_ID == 0x846363e0 : # crc32(b'InputPhoto') return types . InputMediaPhoto ( media ) elif media . SUBCLASS_OF_ID == 0xf33fdb68 : # crc32(b'InputDocument') return types . InputMediaDocument ( media ) except AttributeError : _raise_cast_fail ( media , 'InputMedia' ) if isinstance ( media , types . MessageMediaPhoto ): return types . InputMediaPhoto ( id = get_input_photo ( media . photo ), ttl_seconds = media . ttl_seconds ) if isinstance ( media , ( types . Photo , types . photos . Photo , types . PhotoEmpty )): return types . InputMediaPhoto ( id = get_input_photo ( media ) ) if isinstance ( media , types . MessageMediaDocument ): return types . InputMediaDocument ( id = get_input_document ( media . document ), ttl_seconds = media . ttl_seconds ) if isinstance ( media , ( types . Document , types . DocumentEmpty )): return types . InputMediaDocument ( id = get_input_document ( media ) ) if isinstance ( media , ( types . InputFile , types . InputFileBig )): if is_photo : return types . InputMediaUploadedPhoto ( file = media ) else : attrs , mime = get_attributes ( media , attributes = attributes , force_document = force_document , voice_note = voice_note , video_note = video_note , supports_streaming = supports_streaming ) return types . InputMediaUploadedDocument ( file = media , mime_type = mime , attributes = attrs ) if isinstance ( media , types . MessageMediaGame ): return types . InputMediaGame ( id = types . InputGameID ( id = media . game . id , access_hash = media . game . access_hash )) if isinstance ( media , types . MessageMediaContact ): return types . InputMediaContact ( phone_number = media . phone_number , first_name = media . first_name , last_name = media . last_name , vcard = '' ) if isinstance ( media , types . MessageMediaGeo ): return types . InputMediaGeoPoint ( geo_point = get_input_geo ( media . geo )) if isinstance ( media , types . MessageMediaVenue ): return types . InputMediaVenue ( geo_point = get_input_geo ( media . geo ), title = media . title , address = media . address , provider = media . provider , venue_id = media . venue_id , venue_type = '' ) if isinstance ( media , types . MessageMediaDice ): return types . InputMediaDice ( media . emoticon ) if isinstance ( media , ( types . MessageMediaEmpty , types . MessageMediaUnsupported , types . ChatPhotoEmpty , types . UserProfilePhotoEmpty , types . ChatPhoto , types . UserProfilePhoto , types . FileLocationToBeDeprecated )): return types . InputMediaEmpty () if isinstance ( media , types . Message ): return get_input_media ( media . media , is_photo = is_photo ) _raise_cast_fail ( media , 'InputMedia' )","title":"get_input_media()"},{"location":"modules/utils/#telethon.utils.get_input_message","text":"Similar to :meth: get_input_peer , but for input messages. Source code in telethon\\utils.py 531 532 533 534 535 536 537 538 539 540 541 542 543 def get_input_message ( message ): \"\"\"Similar to :meth:`get_input_peer`, but for input messages.\"\"\" try : if isinstance ( message , int ): # This case is really common too return types . InputMessageID ( message ) elif message . SUBCLASS_OF_ID == 0x54b6bcc5 : # crc32(b'InputMessage'): return message elif message . SUBCLASS_OF_ID == 0x790009e3 : # crc32(b'Message'): return types . InputMessageID ( message . id ) except AttributeError : pass _raise_cast_fail ( message , 'InputMedia' )","title":"get_input_message()"},{"location":"modules/utils/#telethon.utils.get_input_peer","text":"Gets the input peer for the given \"entity\" (user, chat or channel). A TypeError is raised if the given entity isn't a supported type or if check_hash is True but the entity's access_hash is None or the entity contains min information. In this case, the hash cannot be used for general purposes, and thus is not returned to avoid any issues which can derive from invalid access hashes. Note that check_hash is ignored if an input peer is already passed since in that case we assume the user knows what they're doing. This is key to getting entities by explicitly passing hash = 0 . Source code in telethon\\utils.py 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 def get_input_peer ( entity , allow_self = True , check_hash = True ): \"\"\" Gets the input peer for the given \"entity\" (user, chat or channel). A ``TypeError`` is raised if the given entity isn't a supported type or if ``check_hash is True`` but the entity's ``access_hash is None`` *or* the entity contains ``min`` information. In this case, the hash cannot be used for general purposes, and thus is not returned to avoid any issues which can derive from invalid access hashes. Note that ``check_hash`` **is ignored** if an input peer is already passed since in that case we assume the user knows what they're doing. This is key to getting entities by explicitly passing ``hash = 0``. \"\"\" # NOTE: It is important that this method validates the access hashes, # because it is used when we *require* a valid general-purpose # access hash. This includes caching, which relies on this method. # Further, when resolving raw methods, they do e.g., # utils.get_input_channel(client.get_input_peer(...)) # # ...which means that the client's method verifies the hashes. # # Excerpt from a conversation with official developers (slightly edited): # > We send new access_hash for Channel with min flag since layer 102. # > Previously, we omitted it. # > That one works just to download the profile picture. # # < So, min hashes only work for getting files, # < but the non-min hash is required for any other operation? # # > Yes. # # More information: https://core.telegram.org/api/min try : if entity . SUBCLASS_OF_ID == 0xc91c90b6 : # crc32(b'InputPeer') return entity except AttributeError : # e.g. custom.Dialog (can't cyclic import). if allow_self and hasattr ( entity , 'input_entity' ): return entity . input_entity elif hasattr ( entity , 'entity' ): return get_input_peer ( entity . entity ) else : _raise_cast_fail ( entity , 'InputPeer' ) if isinstance ( entity , types . User ): if entity . is_self and allow_self : return types . InputPeerSelf () elif ( entity . access_hash is not None and not entity . min ) or not check_hash : return types . InputPeerUser ( entity . id , entity . access_hash ) else : raise TypeError ( 'User without access_hash or min info cannot be input' ) if isinstance ( entity , ( types . Chat , types . ChatEmpty , types . ChatForbidden )): return types . InputPeerChat ( entity . id ) if isinstance ( entity , types . Channel ): if ( entity . access_hash is not None and not entity . min ) or not check_hash : return types . InputPeerChannel ( entity . id , entity . access_hash ) else : raise TypeError ( 'Channel without access_hash or min info cannot be input' ) if isinstance ( entity , types . ChannelForbidden ): # \"channelForbidden are never min\", and since their hash is # also not optional, we assume that this truly is the case. return types . InputPeerChannel ( entity . id , entity . access_hash ) if isinstance ( entity , types . InputUser ): return types . InputPeerUser ( entity . user_id , entity . access_hash ) if isinstance ( entity , types . InputChannel ): return types . InputPeerChannel ( entity . channel_id , entity . access_hash ) if isinstance ( entity , types . InputUserSelf ): return types . InputPeerSelf () if isinstance ( entity , types . InputUserFromMessage ): return types . InputPeerUserFromMessage ( entity . peer , entity . msg_id , entity . user_id ) if isinstance ( entity , types . InputChannelFromMessage ): return types . InputPeerChannelFromMessage ( entity . peer , entity . msg_id , entity . channel_id ) if isinstance ( entity , types . UserEmpty ): return types . InputPeerEmpty () if isinstance ( entity , types . UserFull ): return get_input_peer ( entity . user ) if isinstance ( entity , types . ChatFull ): return types . InputPeerChat ( entity . id ) if isinstance ( entity , types . PeerChat ): return types . InputPeerChat ( entity . chat_id ) _raise_cast_fail ( entity , 'InputPeer' )","title":"get_input_peer()"},{"location":"modules/utils/#telethon.utils.get_input_photo","text":"Similar to :meth: get_input_peer , but for photos Source code in telethon\\utils.py 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 def get_input_photo ( photo ): \"\"\"Similar to :meth:`get_input_peer`, but for photos\"\"\" try : if photo . SUBCLASS_OF_ID == 0x846363e0 : # crc32(b'InputPhoto'): return photo except AttributeError : _raise_cast_fail ( photo , 'InputPhoto' ) if isinstance ( photo , types . Message ): photo = photo . media if isinstance ( photo , ( types . photos . Photo , types . MessageMediaPhoto )): photo = photo . photo if isinstance ( photo , types . Photo ): return types . InputPhoto ( id = photo . id , access_hash = photo . access_hash , file_reference = photo . file_reference ) if isinstance ( photo , types . PhotoEmpty ): return types . InputPhotoEmpty () if isinstance ( photo , types . messages . ChatFull ): photo = photo . full_chat if isinstance ( photo , types . ChannelFull ): return get_input_photo ( photo . chat_photo ) elif isinstance ( photo , types . UserFull ): return get_input_photo ( photo . profile_photo ) elif isinstance ( photo , ( types . Channel , types . Chat , types . User )): return get_input_photo ( photo . photo ) if isinstance ( photo , ( types . UserEmpty , types . ChatEmpty , types . ChatForbidden , types . ChannelForbidden )): return types . InputPhotoEmpty () _raise_cast_fail ( photo , 'InputPhoto' )","title":"get_input_photo()"},{"location":"modules/utils/#telethon.utils.get_input_user","text":"Similar to :meth: get_input_peer , but for :tl: InputUser 's alone. .. important:: This method does not validate for invalid general - purpose access hashes , unlike `get_input_peer` . Consider using instead : `` get_input_channel ( get_input_peer ( channel )) `` . Source code in telethon\\utils.py 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 def get_input_user ( entity ): \"\"\" Similar to :meth:`get_input_peer`, but for :tl:`InputUser`'s alone. .. important:: This method does not validate for invalid general-purpose access hashes, unlike `get_input_peer`. Consider using instead: ``get_input_channel(get_input_peer(channel))``. \"\"\" try : if entity . SUBCLASS_OF_ID == 0xe669bf46 : # crc32(b'InputUser'): return entity except AttributeError : _raise_cast_fail ( entity , 'InputUser' ) if isinstance ( entity , types . User ): if entity . is_self : return types . InputUserSelf () else : return types . InputUser ( entity . id , entity . access_hash or 0 ) if isinstance ( entity , types . InputPeerSelf ): return types . InputUserSelf () if isinstance ( entity , ( types . UserEmpty , types . InputPeerEmpty )): return types . InputUserEmpty () if isinstance ( entity , types . UserFull ): return get_input_user ( entity . user ) if isinstance ( entity , types . InputPeerUser ): return types . InputUser ( entity . user_id , entity . access_hash ) if isinstance ( entity , types . InputPeerUserFromMessage ): return types . InputUserFromMessage ( entity . peer , entity . msg_id , entity . user_id ) _raise_cast_fail ( entity , 'InputUser' )","title":"get_input_user()"},{"location":"modules/utils/#telethon.utils.get_message_id","text":"Similar to :meth: get_input_peer , but for message IDs. Source code in telethon\\utils.py 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 def get_message_id ( message ): \"\"\"Similar to :meth:`get_input_peer`, but for message IDs.\"\"\" if message is None : return None if isinstance ( message , int ): return message try : if message . SUBCLASS_OF_ID == 0x790009e3 : # hex(crc32(b'Message')) = 0x790009e3 return message . id except AttributeError : pass raise TypeError ( 'Invalid message type: {} ' . format ( type ( message )))","title":"get_message_id()"},{"location":"modules/utils/#telethon.utils.get_peer_id","text":"Convert the given peer into its marked ID by default. This \"mark\" comes from the \"bot api\" format, and with it the peer type can be identified back. User ID is left unmodified, chat ID is negated, and channel ID is prefixed with -100: user_id -chat_id -100channel_id The original ID and the peer type class can be returned with a call to :meth: resolve_id(marked_id) . Source code in telethon\\utils.py 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 def get_peer_id ( peer , add_mark = True ): \"\"\" Convert the given peer into its marked ID by default. This \"mark\" comes from the \"bot api\" format, and with it the peer type can be identified back. User ID is left unmodified, chat ID is negated, and channel ID is prefixed with -100: * ``user_id`` * ``-chat_id`` * ``-100channel_id`` The original ID and the peer type class can be returned with a call to :meth:`resolve_id(marked_id)`. \"\"\" # First we assert it's a Peer TLObject, or early return for integers if isinstance ( peer , int ): return peer if add_mark else resolve_id ( peer )[ 0 ] # Tell the user to use their client to resolve InputPeerSelf if we got one if isinstance ( peer , types . InputPeerSelf ): _raise_cast_fail ( peer , 'int (you might want to use client.get_peer_id)' ) try : peer = get_peer ( peer ) except TypeError : _raise_cast_fail ( peer , 'int' ) if isinstance ( peer , types . PeerUser ): return peer . user_id elif isinstance ( peer , types . PeerChat ): # Check in case the user mixed things up to avoid blowing up if not ( 0 < peer . chat_id <= 0x7fffffff ): peer . chat_id = resolve_id ( peer . chat_id )[ 0 ] return - peer . chat_id if add_mark else peer . chat_id else : # if isinstance(peer, types.PeerChannel): # Check in case the user mixed things up to avoid blowing up if not ( 0 < peer . channel_id <= 0x7fffffff ): peer . channel_id = resolve_id ( peer . channel_id )[ 0 ] if not add_mark : return peer . channel_id # Concat -100 through math tricks, .to_supergroup() on # Madeline IDs will be strictly positive -> log works. try : return - ( peer . channel_id + pow ( 10 , math . floor ( math . log10 ( peer . channel_id ) + 3 ))) except ValueError : raise TypeError ( 'Cannot get marked ID of a channel ' 'unless its ID is strictly positive' ) from None","title":"get_peer_id()"},{"location":"modules/utils/#telethon.utils.is_audio","text":"Returns True if the file extension looks like an audio file. Source code in telethon\\utils.py 784 785 786 787 def is_audio ( file ): \"\"\"Returns `True` if the file extension looks like an audio file.\"\"\" file = 'a' + _get_extension ( file ) return ( mimetypes . guess_type ( file )[ 0 ] or '' ) . startswith ( 'audio/' )","title":"is_audio()"},{"location":"modules/utils/#telethon.utils.is_gif","text":"Returns True if the file extension looks like a gif file to Telegram. Source code in telethon\\utils.py 777 778 779 780 781 def is_gif ( file ): \"\"\" Returns `True` if the file extension looks like a gif file to Telegram. \"\"\" return re . match ( r '\\.gif' , _get_extension ( file ), re . IGNORECASE )","title":"is_gif()"},{"location":"modules/utils/#telethon.utils.is_image","text":"Returns True if the file extension looks like an image file to Telegram. Source code in telethon\\utils.py 766 767 768 769 770 771 772 773 774 def is_image ( file ): \"\"\" Returns `True` if the file extension looks like an image file to Telegram. \"\"\" match = re . match ( r '\\.(png|jpe?g)' , _get_extension ( file ), re . IGNORECASE ) if match : return True else : return isinstance ( resolve_bot_file_id ( file ), types . Photo )","title":"is_image()"},{"location":"modules/utils/#telethon.utils.is_list_like","text":"Returns True if the given object looks like a list. Checking if hasattr(obj, '__iter__') and ignoring str/bytes is not enough. Things like open() are also iterable (and probably many other things), so just support the commonly known list-like objects. Source code in telethon\\utils.py 796 797 798 799 800 801 802 803 804 def is_list_like ( obj ): \"\"\" Returns `True` if the given object looks like a list. Checking ``if hasattr(obj, '__iter__')`` and ignoring ``str/bytes`` is not enough. Things like ``open()`` are also iterable (and probably many other things), so just support the commonly known list-like objects. \"\"\" return isinstance ( obj , ( list , tuple , set , dict , GeneratorType ))","title":"is_list_like()"},{"location":"modules/utils/#telethon.utils.is_video","text":"Returns True if the file extension looks like a video file. Source code in telethon\\utils.py 790 791 792 793 def is_video ( file ): \"\"\"Returns `True` if the file extension looks like a video file.\"\"\" file = 'a' + _get_extension ( file ) return ( mimetypes . guess_type ( file )[ 0 ] or '' ) . startswith ( 'video/' )","title":"is_video()"},{"location":"modules/utils/#telethon.utils.pack_bot_file_id","text":"Inverse operation for resolve_bot_file_id . The only parameters this method will accept are :tl: Document and :tl: Photo , and it will return a variable-length file_id string. If an invalid parameter is given, it will return None . Source code in telethon\\utils.py 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 def pack_bot_file_id ( file ): \"\"\" Inverse operation for `resolve_bot_file_id`. The only parameters this method will accept are :tl:`Document` and :tl:`Photo`, and it will return a variable-length ``file_id`` string. If an invalid parameter is given, it will ``return None``. \"\"\" if isinstance ( file , types . MessageMediaDocument ): file = file . document elif isinstance ( file , types . MessageMediaPhoto ): file = file . photo if isinstance ( file , types . Document ): file_type = 5 for attribute in file . attributes : if isinstance ( attribute , types . DocumentAttributeAudio ): file_type = 3 if attribute . voice else 9 elif isinstance ( attribute , types . DocumentAttributeVideo ): file_type = 13 if attribute . round_message else 4 elif isinstance ( attribute , types . DocumentAttributeSticker ): file_type = 8 elif isinstance ( attribute , types . DocumentAttributeAnimated ): file_type = 10 else : continue break return _encode_telegram_base64 ( _rle_encode ( struct . pack ( '<iiqqb' , file_type , file . dc_id , file . id , file . access_hash , 2 ))) elif isinstance ( file , types . Photo ): size = next (( x for x in reversed ( file . sizes ) if isinstance ( x , ( types . PhotoSize , types . PhotoCachedSize ))), None ) if not size : return None size = size . location return _encode_telegram_base64 ( _rle_encode ( struct . pack ( '<iiqqqqib' , 2 , file . dc_id , file . id , file . access_hash , size . volume_id , 0 , size . local_id , 2 # 0 = old `secret` ))) else : return None","title":"pack_bot_file_id()"},{"location":"modules/utils/#telethon.utils.parse_phone","text":"Parses the given phone, or returns None if it's invalid. Source code in telethon\\utils.py 807 808 809 810 811 812 813 814 def parse_phone ( phone ): \"\"\"Parses the given phone, or returns `None` if it's invalid.\"\"\" if isinstance ( phone , int ): return str ( phone ) else : phone = re . sub ( r '[+()\\s-]' , '' , str ( phone )) if phone . isdigit (): return phone","title":"parse_phone()"},{"location":"modules/utils/#telethon.utils.parse_username","text":"Parses the given username or channel access hash, given a string, username or URL. Returns a tuple consisting of both the stripped, lowercase username and whether it is a joinchat/ hash (in which case is not lowercase'd). Returns (None, False) if the username or link is not valid. Source code in telethon\\utils.py 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 def parse_username ( username ): \"\"\" Parses the given username or channel access hash, given a string, username or URL. Returns a tuple consisting of both the stripped, lowercase username and whether it is a joinchat/ hash (in which case is not lowercase'd). Returns ``(None, False)`` if the ``username`` or link is not valid. \"\"\" username = username . strip () m = USERNAME_RE . match ( username ) or TG_JOIN_RE . match ( username ) if m : username = username [ m . end ():] is_invite = bool ( m . group ( 1 )) if is_invite : return username , True else : username = username . rstrip ( '/' ) if VALID_USERNAME_RE . match ( username ): return username . lower (), False else : return None , False","title":"parse_username()"},{"location":"modules/utils/#telethon.utils.resolve_bot_file_id","text":"Given a Bot API-style file_id <telethon.tl.custom.file.File.id> , returns the media it represents. If the file_id <telethon.tl.custom.file.File.id> is not valid, None is returned instead. Note that the file_id <telethon.tl.custom.file.File.id> does not have information such as image dimensions or file size, so these will be zero if present. For thumbnails, the photo ID and hash will always be zero. Source code in telethon\\utils.py 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 def resolve_bot_file_id ( file_id ): \"\"\" Given a Bot API-style `file_id <telethon.tl.custom.file.File.id>`, returns the media it represents. If the `file_id <telethon.tl.custom.file.File.id>` is not valid, `None` is returned instead. Note that the `file_id <telethon.tl.custom.file.File.id>` does not have information such as image dimensions or file size, so these will be zero if present. For thumbnails, the photo ID and hash will always be zero. \"\"\" data = _rle_decode ( _decode_telegram_base64 ( file_id )) if not data : return None # This isn't officially documented anywhere, but # we assume the last byte is some kind of \"version\". data , version = data [: - 1 ], data [ - 1 ] if version not in ( 2 , 4 ): return None if ( version == 2 and len ( data ) == 24 ) or ( version == 4 and len ( data ) == 25 ): if version == 2 : file_type , dc_id , media_id , access_hash = struct . unpack ( '<iiqq' , data ) # elif version == 4: else : # TODO Figure out what the extra byte means file_type , dc_id , media_id , access_hash , _ = struct . unpack ( '<iiqqb' , data ) if not ( 1 <= dc_id <= 5 ): # Valid `file_id`'s must have valid DC IDs. Since this method is # called when sending a file and the user may have entered a path # they believe is correct but the file doesn't exist, this method # may detect a path as \"valid\" bot `file_id` even when it's not. # By checking the `dc_id`, we greatly reduce the chances of this # happening. return None attributes = [] if file_type == 3 or file_type == 9 : attributes . append ( types . DocumentAttributeAudio ( duration = 0 , voice = file_type == 3 )) elif file_type == 4 or file_type == 13 : attributes . append ( types . DocumentAttributeVideo ( duration = 0 , w = 0 , h = 0 , round_message = file_type == 13 )) # elif file_type == 5: # other, cannot know which elif file_type == 8 : attributes . append ( types . DocumentAttributeSticker ( alt = '' , stickerset = types . InputStickerSetEmpty () )) elif file_type == 10 : attributes . append ( types . DocumentAttributeAnimated ()) return types . Document ( id = media_id , access_hash = access_hash , date = None , mime_type = '' , size = 0 , thumbs = None , dc_id = dc_id , attributes = attributes , file_reference = b '' ) elif ( version == 2 and len ( data ) == 44 ) or ( version == 4 and len ( data ) == 49 ): if version == 2 : ( file_type , dc_id , media_id , access_hash , volume_id , secret , local_id ) = struct . unpack ( '<iiqqqqi' , data ) # elif version == 4: else : # TODO Figure out what the extra five bytes mean ( file_type , dc_id , media_id , access_hash , volume_id , secret , local_id , _ ) = struct . unpack ( '<iiqqqqi5s' , data ) if not ( 1 <= dc_id <= 5 ): return None # Thumbnails (small) always have ID 0; otherwise size 'x' photo_size = 's' if media_id or access_hash else 'x' return types . Photo ( id = media_id , access_hash = access_hash , file_reference = b '' , date = None , sizes = [ types . PhotoSize ( type = photo_size , location = types . FileLocationToBeDeprecated ( volume_id = volume_id , local_id = local_id ), w = 0 , h = 0 , size = 0 )], dc_id = dc_id , has_stickers = None )","title":"resolve_bot_file_id()"},{"location":"modules/utils/#telethon.utils.resolve_id","text":"Given a marked ID, returns the original ID and its :tl: Peer type. Source code in telethon\\utils.py 948 949 950 951 952 953 954 955 956 957 958 959 960 961 def resolve_id ( marked_id ): \"\"\"Given a marked ID, returns the original ID and its :tl:`Peer` type.\"\"\" if marked_id >= 0 : return marked_id , types . PeerUser # There have been report of chat IDs being 10000xyz, which means their # marked version is -10000xyz, which in turn looks like a channel but # it becomes 00xyz (= xyz). Hence, we must assert that there are only # two zeroes. m = re . match ( r '-100([^0]\\d*)' , str ( marked_id )) if m : return int ( m . group ( 1 )), types . PeerChannel return - marked_id , types . PeerChat","title":"resolve_id()"},{"location":"modules/utils/#telethon.utils.resolve_inline_message_id","text":"Resolves an inline message ID. Returns a tuple of (message id, peer, dc id, access hash) The peer may either be a :tl: PeerUser referencing the user who sent the message via the bot in a private conversation or small group chat, or a :tl: PeerChannel if the message was sent in a channel. The access_hash does not have any use yet. Source code in telethon\\utils.py 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 def resolve_inline_message_id ( inline_msg_id ): \"\"\" Resolves an inline message ID. Returns a tuple of ``(message id, peer, dc id, access hash)`` The ``peer`` may either be a :tl:`PeerUser` referencing the user who sent the message via the bot in a private conversation or small group chat, or a :tl:`PeerChannel` if the message was sent in a channel. The ``access_hash`` does not have any use yet. \"\"\" try : dc_id , message_id , pid , access_hash = \\ struct . unpack ( '<iiiq' , _decode_telegram_base64 ( inline_msg_id )) peer = types . PeerChannel ( - pid ) if pid < 0 else types . PeerUser ( pid ) return message_id , peer , dc_id , access_hash except ( struct . error , TypeError ): return None , None , None , None","title":"resolve_inline_message_id()"},{"location":"modules/utils/#telethon.utils.resolve_invite_link","text":"Resolves the given invite link. Returns a tuple of (link creator user id, global chat id, random int) . Note that for broadcast channels, the link creator user ID will be zero to protect their identity. Normal chats and megagroup channels will have such ID. Note that the chat ID may not be accurate for chats with a link that were upgraded to megagroup, since the link can remain the same, but the chat ID will be correct once a new link is generated. Source code in telethon\\utils.py 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 def resolve_invite_link ( link ): \"\"\" Resolves the given invite link. Returns a tuple of ``(link creator user id, global chat id, random int)``. Note that for broadcast channels, the link creator user ID will be zero to protect their identity. Normal chats and megagroup channels will have such ID. Note that the chat ID may not be accurate for chats with a link that were upgraded to megagroup, since the link can remain the same, but the chat ID will be correct once a new link is generated. \"\"\" link_hash , is_link = parse_username ( link ) if not is_link : # Perhaps the user passed the link hash directly link_hash = link # Little known fact, but invite links with a # hex-string of bytes instead of base64 also works. if re . match ( r '[a-fA-F\\d] {32} ' , link_hash ): payload = bytes . fromhex ( link_hash ) else : payload = _decode_telegram_base64 ( link_hash ) try : return struct . unpack ( '>LLQ' , payload ) except ( struct . error , TypeError ): return None , None , None","title":"resolve_invite_link()"},{"location":"modules/utils/#telethon.utils.sanitize_parse_mode","text":"Converts the given parse mode into an object with parse and unparse callable properties. Source code in telethon\\utils.py 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 def sanitize_parse_mode ( mode ): \"\"\" Converts the given parse mode into an object with ``parse`` and ``unparse`` callable properties. \"\"\" if not mode : return None if callable ( mode ): class CustomMode : @staticmethod def unparse ( text , entities ): raise NotImplementedError CustomMode . parse = mode return CustomMode elif ( all ( hasattr ( mode , x ) for x in ( 'parse' , 'unparse' )) and all ( callable ( x ) for x in ( mode . parse , mode . unparse ))): return mode elif isinstance ( mode , str ): try : return { 'md' : markdown , 'markdown' : markdown , 'htm' : html , 'html' : html }[ mode . lower ()] except KeyError : raise ValueError ( 'Unknown parse mode {} ' . format ( mode )) else : raise TypeError ( 'Invalid parse mode type {} ' . format ( mode ))","title":"sanitize_parse_mode()"},{"location":"modules/utils/#telethon.utils.stripped_photo_to_jpg","text":"Adds the JPG header and footer to a stripped image. Ported from https://github.com/telegramdesktop/tdesktop/blob/bec39d89e19670eb436dc794a8f20b657cb87c71/Telegram/SourceFiles/ui/image/image.cpp#L225 Source code in telethon\\utils.py 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 def stripped_photo_to_jpg ( stripped ): \"\"\" Adds the JPG header and footer to a stripped image. Ported from https://github.com/telegramdesktop/tdesktop/blob/bec39d89e19670eb436dc794a8f20b657cb87c71/Telegram/SourceFiles/ui/image/image.cpp#L225 \"\"\" # NOTE: Changes here should update _photo_size_byte_count if len ( stripped ) < 3 or stripped [ 0 ] != 1 : return stripped header = bytearray ( b ' \\xff\\xd8\\xff\\xe0\\x00\\x10 JFIF \\x00\\x01\\x01\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\xff\\xdb\\x00 C \\x00 ( \\x1c\\x1e # \\x1e\\x19 (#!#-+(0<dA<77<{X]Id \\x91\\x80\\x99\\x96\\x8f\\x80\\x8c\\x8a\\xa0\\xb4\\xe6\\xc3\\xa0\\xaa\\xda\\xad\\x8a\\x8c\\xc8\\xff\\xcb\\xda\\xee\\xf5\\xff\\xff\\xff\\x9b\\xc1\\xff\\xff\\xff\\xfa\\xff\\xe6\\xfd\\xff\\xf8\\xff\\xdb\\x00 C \\x01 +--<5<vAAv \\xf8\\xa5\\x8c\\xa5\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xff\\xc0\\x00\\x11\\x08\\x00\\x00\\x00\\x00\\x03\\x01 \" \\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xc4\\x00\\x1f\\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\xff\\xc4\\x00\\xb5\\x10\\x00\\x02\\x01\\x03\\x03\\x02\\x04\\x03\\x05\\x05\\x04\\x04\\x00\\x00\\x01 } \\x01\\x02\\x03\\x00\\x04\\x11\\x05\\x12 !1A \\x06\\x13 Qa \\x07 \"q \\x14 2 \\x81\\x91\\xa1\\x08 #B \\xb1\\xc1\\x15 R \\xd1\\xf0 $3br \\x82\\t\\n\\x16\\x17\\x18\\x19\\x1a %& \\' ()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz \\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xff\\xc4\\x00\\x1f\\x01\\x00\\x03\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\xff\\xc4\\x00\\xb5\\x11\\x00\\x02\\x01\\x02\\x04\\x04\\x03\\x04\\x07\\x05\\x04\\x04\\x00\\x01\\x02 w \\x00\\x01\\x02\\x03\\x11\\x04\\x05 !1 \\x06\\x12 AQ \\x07 aq \\x13 \"2 \\x81\\x08\\x14 B \\x91\\xa1\\xb1\\xc1\\t #3R \\xf0\\x15 br \\xd1\\n\\x16 $4 \\xe1 % \\xf1\\x17\\x18\\x19\\x1a & \\' ()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz \\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xff\\xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00 ? \\x00 ' ) footer = b \" \\xff\\xd9 \" header [ 164 ] = stripped [ 1 ] header [ 166 ] = stripped [ 2 ] return bytes ( header ) + stripped [ 3 :] + footer","title":"stripped_photo_to_jpg()"},{"location":"quick-references/client-reference/","text":"Client Reference \u00b6 This page contains a summary of all the important methods and properties that you may need when using Telethon. They are sorted by relevance and are not in alphabetical order. You should use this page to learn about which methods are available, and if you need an usage example or further description of the arguments, be sure to follow the links. TelegramClient \u00b6 This is a summary of the methods and properties you will find at :ref: telethon-client . Auth \u00b6 .. currentmodule:: telethon.client.auth.AuthMethods .. autosummary:: :nosignatures: start send_code_request sign_in sign_up log_out edit_2fa Base \u00b6 .. py:currentmodule:: telethon.client.telegrambaseclient.TelegramBaseClient .. autosummary:: :nosignatures: connect disconnect is_connected disconnected loop Messages \u00b6 .. py:currentmodule:: telethon.client.messages.MessageMethods .. autosummary:: :nosignatures: send_message edit_message delete_messages forward_messages iter_messages get_messages pin_message send_read_acknowledge Uploads \u00b6 .. py:currentmodule:: telethon.client.uploads.UploadMethods .. autosummary:: :nosignatures: send_file upload_file Downloads \u00b6 .. currentmodule:: telethon.client.downloads.DownloadMethods .. autosummary:: :nosignatures: download_media download_profile_photo download_file iter_download Dialogs \u00b6 .. py:currentmodule:: telethon.client.dialogs.DialogMethods .. autosummary:: :nosignatures: iter_dialogs get_dialogs edit_folder iter_drafts get_drafts delete_dialog conversation Users \u00b6 .. py:currentmodule:: telethon.client.users.UserMethods .. autosummary:: :nosignatures: get_me is_bot is_user_authorized get_entity get_input_entity get_peer_id Chats \u00b6 .. currentmodule:: telethon.client.chats.ChatMethods .. autosummary:: :nosignatures: iter_participants get_participants kick_participant iter_admin_log get_admin_log iter_profile_photos get_profile_photos edit_admin edit_permissions action Parse Mode \u00b6 .. py:currentmodule:: telethon.client.messageparse.MessageParseMethods .. autosummary:: :nosignatures: parse_mode Updates \u00b6 .. py:currentmodule:: telethon.client.updates.UpdateMethods .. autosummary:: :nosignatures: on run_until_disconnected add_event_handler remove_event_handler list_event_handlers catch_up Bots \u00b6 .. currentmodule:: telethon.client.bots.BotMethods .. autosummary:: :nosignatures: inline_query Buttons \u00b6 .. currentmodule:: telethon.client.buttons.ButtonMethods .. autosummary:: :nosignatures: build_reply_markup Account \u00b6 .. currentmodule:: telethon.client.account.AccountMethods .. autosummary:: :nosignatures: takeout end_takeout","title":"Client Reference"},{"location":"quick-references/client-reference/#client-reference","text":"This page contains a summary of all the important methods and properties that you may need when using Telethon. They are sorted by relevance and are not in alphabetical order. You should use this page to learn about which methods are available, and if you need an usage example or further description of the arguments, be sure to follow the links.","title":"Client Reference"},{"location":"quick-references/client-reference/#telegramclient","text":"This is a summary of the methods and properties you will find at :ref: telethon-client .","title":"TelegramClient"},{"location":"quick-references/client-reference/#auth","text":".. currentmodule:: telethon.client.auth.AuthMethods .. autosummary:: :nosignatures: start send_code_request sign_in sign_up log_out edit_2fa","title":"Auth"},{"location":"quick-references/client-reference/#base","text":".. py:currentmodule:: telethon.client.telegrambaseclient.TelegramBaseClient .. autosummary:: :nosignatures: connect disconnect is_connected disconnected loop","title":"Base"},{"location":"quick-references/client-reference/#messages","text":".. py:currentmodule:: telethon.client.messages.MessageMethods .. autosummary:: :nosignatures: send_message edit_message delete_messages forward_messages iter_messages get_messages pin_message send_read_acknowledge","title":"Messages"},{"location":"quick-references/client-reference/#uploads","text":".. py:currentmodule:: telethon.client.uploads.UploadMethods .. autosummary:: :nosignatures: send_file upload_file","title":"Uploads"},{"location":"quick-references/client-reference/#downloads","text":".. currentmodule:: telethon.client.downloads.DownloadMethods .. autosummary:: :nosignatures: download_media download_profile_photo download_file iter_download","title":"Downloads"},{"location":"quick-references/client-reference/#dialogs","text":".. py:currentmodule:: telethon.client.dialogs.DialogMethods .. autosummary:: :nosignatures: iter_dialogs get_dialogs edit_folder iter_drafts get_drafts delete_dialog conversation","title":"Dialogs"},{"location":"quick-references/client-reference/#users","text":".. py:currentmodule:: telethon.client.users.UserMethods .. autosummary:: :nosignatures: get_me is_bot is_user_authorized get_entity get_input_entity get_peer_id","title":"Users"},{"location":"quick-references/client-reference/#chats","text":".. currentmodule:: telethon.client.chats.ChatMethods .. autosummary:: :nosignatures: iter_participants get_participants kick_participant iter_admin_log get_admin_log iter_profile_photos get_profile_photos edit_admin edit_permissions action","title":"Chats"},{"location":"quick-references/client-reference/#parse-mode","text":".. py:currentmodule:: telethon.client.messageparse.MessageParseMethods .. autosummary:: :nosignatures: parse_mode","title":"Parse Mode"},{"location":"quick-references/client-reference/#updates","text":".. py:currentmodule:: telethon.client.updates.UpdateMethods .. autosummary:: :nosignatures: on run_until_disconnected add_event_handler remove_event_handler list_event_handlers catch_up","title":"Updates"},{"location":"quick-references/client-reference/#bots","text":".. currentmodule:: telethon.client.bots.BotMethods .. autosummary:: :nosignatures: inline_query","title":"Bots"},{"location":"quick-references/client-reference/#buttons","text":".. currentmodule:: telethon.client.buttons.ButtonMethods .. autosummary:: :nosignatures: build_reply_markup","title":"Buttons"},{"location":"quick-references/client-reference/#account","text":".. currentmodule:: telethon.client.account.AccountMethods .. autosummary:: :nosignatures: takeout end_takeout","title":"Account"},{"location":"quick-references/faq/","text":"FAQ \u00b6 Let's start the quick references section with some useful tips to keep in mind, with the hope that you will understand why certain things work the way that they do. Code without errors doesn't work \u00b6 Then it probably has errors, but you haven't enabled logging yet. To enable logging, at the following code to the top of your main file: import logging logging . basicConfig ( format = '[ %(levelname) 5s / %(asctime)s ] %(name)s : %(message)s ' , level = logging . WARNING ) You can change the logging level to be something different, from less to more information: level = logging . CRITICAL # won't show errors (same as disabled) level = logging . ERROR # will only show errors that you didn't handle level = logging . WARNING # will also show messages with medium severity, such as internal Telegram issues level = logging . INFO # will also show informational messages, such as connection or disconnections level = logging . DEBUG # will show a lot of output to help debugging issues in the library See the official Python documentation for more information on logging_. How can I except FloodWaitError? \u00b6 You can use all errors from the API by importing: from telethon import errors And except them as such: try : await client . send_message ( chat , 'Hi' ) except errors . FloodWaitError as e : # e.seconds is how many seconds you have # to wait before making the request again. print ( 'Flood for' , e . seconds ) My account was deleted/limited when using the library \u00b6 The library will only do things that you tell it to do. If you use the library with bad intentions, Telegram will hopefully ban you. However, you may also be part of a limited country, such as Iran or Russia. In that case, we have bad news for you. Telegram is much more likely to ban these numbers, as they are often used to spam other accounts, likely through the use of libraries like this one. The best advice we can give you is to not abuse the API, like calling many requests really quickly, and to sign up with these phones through an official application. We have also had reports from Kazakhstan and China, where connecting would fail. To solve these connection problems, you should use a proxy. Telegram may also ban virtual (VoIP) phone numbers, as again, they're likely to be used for spam. If you want to check if your account has been limited, simply send a private message to @SpamBot through Telegram itself. You should notice this by getting errors like PeerFloodError , which means you're limited, for instance, when sending a message to some accounts but not others. For more discussion, please see issue #297 . How can I use a proxy? \u00b6 This was one of the first things described in :ref: signing-in . How do I access a field? \u00b6 This is basic Python knowledge. You should use the dot operator: me = await client . get_me () print ( me . username ) # ^ we used the dot operator to access the username attribute result = await client ( functions . photos . GetUserPhotosRequest ( user_id = 'me' , offset = 0 , max_id = 0 , limit = 100 )) # Working with list is also pretty basic print ( result . photos [ 0 ] . sizes [ - 1 ] . type ) # ^ ^ ^ ^ ^ # | | | | \\ type # | | | \\ last size # | | \\ list of sizes # access | \\ first photo from the list # the... \\ list of photos # # To print all, you could do (or mix-and-match): for photo in result . photos : for size in photo . sizes : print ( size . type ) AttributeError: 'coroutine' object has no attribute 'id' \u00b6 You either forgot to: import telethon.sync # ^^^^^ import sync Or: async def handler ( event ): me = await client . get_me () # ^^^^^ note the await print ( me . username ) sqlite3.OperationalError: database is locked \u00b6 An older process is still running and is using the same 'session' file. This error occurs when two or more clients use the same session , that is, when you write the same session name to be used in the client: You have an older process using the same session file. You have two different scripts running (interactive sessions count too). You have two clients in the same script running at the same time. The solution is, if you need two clients, use two sessions. If the problem persists and you're on Linux, you can use fuser my.session to find out the process locking the file. As a last resort, you can reboot your system. If you really dislike SQLite, use a different session storage. There is an entire section covering that at :ref: sessions . event.chat or event.sender is None \u00b6 Telegram doesn't always send this information in order to save bandwidth. If you need the information, you should fetch it yourself, since the library won't do unnecessary work unless you need to: async def handler ( event ): chat = await event . get_chat () sender = await event . get_sender () What does bases ChatGetter mean? \u00b6 In Python, classes can base others. This is called inheritance <https://ddg.gg/python%20inheritance> _. What it means is that \"if a class bases another, you can use the other's methods too\". For example, Message <telethon.tl.custom.message.Message> bases ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> . In turn, ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> defines things like obj.chat_id <telethon.tl.custom.chatgetter.ChatGetter> . So if you have a message, you can access that too: # ChatGetter has a chat_id property, and Message bases ChatGetter. # Thus you can use ChatGetter properties and methods from Message print ( message . chat_id ) Telegram has a lot to offer, and inheritance helps the library reduce boilerplate, so it's important to know this concept. For newcomers, this may be a problem, so we explain what it means here in the FAQ. Can I use Flask with the library? \u00b6 Yes, if you know what you are doing. However, you will probably have a lot of headaches to get threads and asyncio to work together. Instead, consider using Quart , an asyncio-based alternative to Flask . Check out quart_login.py for an example web-application based on Quart. Can I use Anaconda/Spyder/IPython with the library? \u00b6 Yes, but these interpreters run the asyncio event loop implicitly, which interferes with the telethon.sync magic module. If you use them, you should not import sync : # Change any of these...: from telethon import TelegramClient , sync , ... from telethon.sync import TelegramClient , ... # ...with this: from telethon import TelegramClient , ... You are also more likely to get \"sqlite3.OperationalError: database is locked\" with them. If they cause too much trouble, just write your code in a .py file and run that, or use the normal python interpreter.","title":"FAQ"},{"location":"quick-references/faq/#faq","text":"Let's start the quick references section with some useful tips to keep in mind, with the hope that you will understand why certain things work the way that they do.","title":"FAQ"},{"location":"quick-references/faq/#code-without-errors-doesnt-work","text":"Then it probably has errors, but you haven't enabled logging yet. To enable logging, at the following code to the top of your main file: import logging logging . basicConfig ( format = '[ %(levelname) 5s / %(asctime)s ] %(name)s : %(message)s ' , level = logging . WARNING ) You can change the logging level to be something different, from less to more information: level = logging . CRITICAL # won't show errors (same as disabled) level = logging . ERROR # will only show errors that you didn't handle level = logging . WARNING # will also show messages with medium severity, such as internal Telegram issues level = logging . INFO # will also show informational messages, such as connection or disconnections level = logging . DEBUG # will show a lot of output to help debugging issues in the library See the official Python documentation for more information on logging_.","title":"Code without errors doesn't work"},{"location":"quick-references/faq/#how-can-i-except-floodwaiterror","text":"You can use all errors from the API by importing: from telethon import errors And except them as such: try : await client . send_message ( chat , 'Hi' ) except errors . FloodWaitError as e : # e.seconds is how many seconds you have # to wait before making the request again. print ( 'Flood for' , e . seconds )","title":"How can I except FloodWaitError?"},{"location":"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library","text":"The library will only do things that you tell it to do. If you use the library with bad intentions, Telegram will hopefully ban you. However, you may also be part of a limited country, such as Iran or Russia. In that case, we have bad news for you. Telegram is much more likely to ban these numbers, as they are often used to spam other accounts, likely through the use of libraries like this one. The best advice we can give you is to not abuse the API, like calling many requests really quickly, and to sign up with these phones through an official application. We have also had reports from Kazakhstan and China, where connecting would fail. To solve these connection problems, you should use a proxy. Telegram may also ban virtual (VoIP) phone numbers, as again, they're likely to be used for spam. If you want to check if your account has been limited, simply send a private message to @SpamBot through Telegram itself. You should notice this by getting errors like PeerFloodError , which means you're limited, for instance, when sending a message to some accounts but not others. For more discussion, please see issue #297 .","title":"My account was deleted/limited when using the library"},{"location":"quick-references/faq/#how-can-i-use-a-proxy","text":"This was one of the first things described in :ref: signing-in .","title":"How can I use a proxy?"},{"location":"quick-references/faq/#how-do-i-access-a-field","text":"This is basic Python knowledge. You should use the dot operator: me = await client . get_me () print ( me . username ) # ^ we used the dot operator to access the username attribute result = await client ( functions . photos . GetUserPhotosRequest ( user_id = 'me' , offset = 0 , max_id = 0 , limit = 100 )) # Working with list is also pretty basic print ( result . photos [ 0 ] . sizes [ - 1 ] . type ) # ^ ^ ^ ^ ^ # | | | | \\ type # | | | \\ last size # | | \\ list of sizes # access | \\ first photo from the list # the... \\ list of photos # # To print all, you could do (or mix-and-match): for photo in result . photos : for size in photo . sizes : print ( size . type )","title":"How do I access a field?"},{"location":"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id","text":"You either forgot to: import telethon.sync # ^^^^^ import sync Or: async def handler ( event ): me = await client . get_me () # ^^^^^ note the await print ( me . username )","title":"AttributeError: 'coroutine' object has no attribute 'id'"},{"location":"quick-references/faq/#sqlite3operationalerror-database-is-locked","text":"An older process is still running and is using the same 'session' file. This error occurs when two or more clients use the same session , that is, when you write the same session name to be used in the client: You have an older process using the same session file. You have two different scripts running (interactive sessions count too). You have two clients in the same script running at the same time. The solution is, if you need two clients, use two sessions. If the problem persists and you're on Linux, you can use fuser my.session to find out the process locking the file. As a last resort, you can reboot your system. If you really dislike SQLite, use a different session storage. There is an entire section covering that at :ref: sessions .","title":"sqlite3.OperationalError: database is locked"},{"location":"quick-references/faq/#eventchat-or-eventsender-is-none","text":"Telegram doesn't always send this information in order to save bandwidth. If you need the information, you should fetch it yourself, since the library won't do unnecessary work unless you need to: async def handler ( event ): chat = await event . get_chat () sender = await event . get_sender ()","title":"event.chat or event.sender is None"},{"location":"quick-references/faq/#what-does-bases-chatgetter-mean","text":"In Python, classes can base others. This is called inheritance <https://ddg.gg/python%20inheritance> _. What it means is that \"if a class bases another, you can use the other's methods too\". For example, Message <telethon.tl.custom.message.Message> bases ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> . In turn, ChatGetter <telethon.tl.custom.chatgetter.ChatGetter> defines things like obj.chat_id <telethon.tl.custom.chatgetter.ChatGetter> . So if you have a message, you can access that too: # ChatGetter has a chat_id property, and Message bases ChatGetter. # Thus you can use ChatGetter properties and methods from Message print ( message . chat_id ) Telegram has a lot to offer, and inheritance helps the library reduce boilerplate, so it's important to know this concept. For newcomers, this may be a problem, so we explain what it means here in the FAQ.","title":"What does bases ChatGetter mean?"},{"location":"quick-references/faq/#can-i-use-flask-with-the-library","text":"Yes, if you know what you are doing. However, you will probably have a lot of headaches to get threads and asyncio to work together. Instead, consider using Quart , an asyncio-based alternative to Flask . Check out quart_login.py for an example web-application based on Quart.","title":"Can I use Flask with the library?"},{"location":"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library","text":"Yes, but these interpreters run the asyncio event loop implicitly, which interferes with the telethon.sync magic module. If you use them, you should not import sync : # Change any of these...: from telethon import TelegramClient , sync , ... from telethon.sync import TelegramClient , ... # ...with this: from telethon import TelegramClient , ... You are also more likely to get \"sqlite3.OperationalError: database is locked\" with them. If they cause too much trouble, just write your code in a .py file and run that, or use the normal python interpreter.","title":"Can I use Anaconda/Spyder/IPython with the library?"}],"index":{"fieldVectors":[["title/",[0,2.236,1,1.87]],["text/",[0,3.527,1,2.95,2,3.966,3,2.81,4,0.603,5,3.074,6,1.681,7,3.127,8,3.482,9,2.043,10,3.297,11,3.202,12,2.545,13,2.428,14,2.959,15,4.289,16,2.761,17,4.063,18,3.249,19,3.647,20,5.597,21,1.715,22,1.09,23,2.647,24,1.519,25,2.761,26,3.966,27,3.249,28,2.293,29,2.544,30,4.969,31,5.597,32,3.074,33,2.856,34,1.649,35,4.448,36,3.661,37,3.877,38,2.626,39,3.202,40,2.569,41,4.17,42,2.45,43,3.795,44,1.314,45,1.617,46,2.45,47,4.755,48,3.402,49,2.732,50,4.17,51,3.361,52,2.81,53,2.191,54,2.343,55,3.58,56,4.063,57,3.402,58,1.617,59,2.647,60,4.289,61,2.308,62,4.576,63,1.059,64,4.373,65,4.063,66,2.107,67,3.718,68,2.996,69,2.14,70,3.795,71,3.718,72,3.877,73,3.877,74,2.406,75,3.58,76,5.597,77,4.423,78,4.969,79,3.58,80,2.52,81,3.348,82,4.576,83,3.402,84,2.428,85,5.597,86,3.58,87,3.297,88,4.969,89,3.647,90,3.877,91,4.969,92,3.074,93,3.647]],["title/#telethons-documentation",[2,3.384,3,1.576]],["text/#telethons-documentation",[]],["title/#getting-started",[0,2.236,1,1.87]],["text/#getting-started",[4,0.606,5,3.489,6,1.908,7,3.399,8,3.66,9,2.319,10,3.742,11,3.634,12,2.637,13,2.755,14,3.358,15,4.868,16,3.134,17,4.612,18,3.687,19,4.139,20,6.353,21,1.946,22,1.237,23,3.004,24,1.724,25,3.134,26,4.501,27,3.687,28,2.492,29,2.887,30,5.64,31,6.353,32,3.489,33,3.241,34,1.871,35,4.734,36,3.895,37,4.4,38,1.959,39,3.634,40,2.916,41,4.733,42,2.781,43,4.307,44,0.98,45,1.836,46,2.781,47,5.396,48,3.861,49,3.1,50,4.733,51,3.577,52,2.991,53,2.487,54,2.659,55,4.063,56,4.612,57,3.861,58,1.836,59,3.004,60,4.868]],["title/#what-is-this",[]],["text/#what-is-this",[38,2.527,61,2.934,62,6.701,63,1.551,64,5.559,65,5.95,66,3.085,67,5.445,68,4.387,69,3.133,70,5.557,71,5.445,72,5.677,73,5.677,74,3.523,75,5.242,76,8.196,77,6.477,78,7.276,79,5.242]],["title/#how-should-i-use-the-documentation",[3,1.576,44,0.737]],["text/#how-should-i-use-the-documentation",[0,3.877,1,3.242,3,2.732,38,2.554,44,1.278,80,3.728,81,4.953,82,6.77,83,5.033,84,3.592,85,8.281,86,5.297,87,4.878,88,7.351,89,5.396,90,5.736,91,7.351,92,4.547,93,5.396]],["title/basic/installation/",[32,3.408]],["text/basic/installation/",[3,1.578,4,0.555,6,1.437,12,1.243,32,5.867,37,3.313,38,2.957,42,3.934,44,1.315,45,2.462,46,2.094,53,1.873,58,1.382,61,2.071,68,2.56,69,3.567,74,2.056,79,4.324,80,3.043,94,1.968,95,3.299,96,4.783,97,3.665,98,2.195,99,3.145,100,6.325,101,7.564,102,2.627,103,4.324,104,4.783,105,2.038,106,4.108,107,2.781,108,4.783,109,2.215,110,3.867,111,3.472,112,4.783,113,3.117,114,1.814,115,2.529,116,2.529,117,3.91,118,3.91,119,3.389,120,3.91,121,4.682,122,4.783,123,2.593,124,3.712,125,3.472,126,2.36,127,5.208,128,5.742,129,1.495,130,3.708,131,3.006,132,3.243,133,3.91,134,2.593,135,0.797,136,3.472,137,2.246,138,4.783,139,2.324,140,2.818,141,4.246,142,3.472,143,2.31,144,4.246,145,4.783,146,4.583,147,3.531,148,2.818,149,4.783,150,2.217,151,2.627,152,2.486,153,4.783,154,4.783,155,2.861,156,3.91,157,6.001,158,3.243,159,4.682,160,2.861,161,3.564,162,2.278,163,2.075,164,4.063,165,2.627,166,2.861,167,2.698,168,3.91,169,3.78,170,2.038,171,3.923,172,1.733,173,4.063,174,4.246,175,4.063,176,1.968,177,4.783,178,2.907,179,4.783,180,2.776,181,3.564,182,2.907,183,2.907,184,3.178,185,1.858,186,2.955,187,2.593,188,1.888,189,2.386,190,2.662,191,3.06,192,2.334,193,2.627,194,2.498,195,2.153,196,5.691,197,7.84,198,2.31,199,3.117,200,2.818,201,3.178,202,3.117,203,4.783,204,4.783,205,4.783,206,4.783,207,7.84,208,4.783,209,4.783,210,3.313,211,4.783,212,3.91,213,2.955,214,1.888]],["title/basic/installation/#installation",[32,3.408]],["text/basic/installation/#installation",[32,5.725,37,5.619,38,2.936,42,3.551,45,2.751,58,2.344,69,3.863,74,3.487,94,3.338,95,3.959,96,8.113,97,6.217,98,3.723,99,3.255,100,7.592,101,7.202,102,2.502,103,5.189]],["title/basic/installation/#installing-development-versions",[32,2.131,42,1.699,79,2.482]],["text/basic/installation/#installing-development-versions",[4,0.431,32,4.396,38,2.468,42,4.135,44,1.235,53,3.134,79,5.12,80,3.603,99,3.212,100,7.49,101,7.106,102,2.468,103,5.12,104,8.005,105,3.41,106,4.865,107,3.294,108,8.005,109,2.623,110,4.957,111,5.811,112,8.005,113,5.216,114,3.036,115,4.232,116,4.232]],["title/basic/installation/#verification",[117,5.074]],["text/basic/installation/#verification",[6,2.505,32,4.579,38,2.983,42,3.65,45,2.41,80,3.754,99,3.346,106,5.067,118,6.817,119,5.908,120,6.817,121,5.776,122,8.338,123,4.52,124,4.579,125,6.053]],["title/basic/installation/#optional-dependencies",[126,2.356,127,3.173]],["text/basic/installation/#optional-dependencies",[3,1.887,4,0.542,12,1.486,32,5.743,38,2.357,44,1.328,45,1.652,46,2.502,61,2.341,68,3.06,69,3.29,95,2.79,101,6.784,102,2.357,107,2.352,109,1.874,121,3.96,124,3.14,127,5.077,128,6.491,129,1.787,130,4.071,131,3.593,132,3.876,133,4.674,134,3.099,135,0.952,136,4.15,137,2.539,138,5.717,139,2.552,140,3.368,141,5.076,142,4.15,143,2.761,144,5.076,145,5.717,146,5.181,147,3.991,148,3.368,149,5.717,150,2.65,151,3.14,152,2.811,153,5.717,154,5.717,155,3.42,156,4.674,157,6.784,158,3.876,159,5.293,160,3.42,161,4.26,162,2.575,163,2.48,164,4.856,165,3.14,166,3.42,167,3.225,168,4.674,169,4.518,170,2.436,171,4.435,172,2.071,173,4.856,174,5.076,175,4.856,176,2.352,177,5.717,178,3.475,179,5.717,180,3.318,181,4.26,182,3.475,183,3.475,184,3.798,185,2.22,186,3.532,187,3.099,188,2.257,189,2.852,190,3.182,191,3.657,192,2.79,193,3.14,194,2.986,195,2.574,196,6.249,197,8.608,198,2.761,199,3.725,200,3.368,201,3.798,202,3.725,203,5.717,204,5.717,205,5.717,206,5.717,207,8.608,208,5.717,209,5.717,210,3.96,211,5.717,212,4.674,213,3.532,214,2.257]],["title/basic/next-steps/",[83,2.902,215,3.384]],["text/basic/next-steps/",[1,2.749,3,2.317,4,0.378,6,2.109,8,2.684,12,1.825,23,3.321,34,2.925,35,3.667,36,3.018,38,2.691,44,1.532,53,2.749,58,2.029,80,3.161,82,5.74,83,5.769,84,3.045,87,4.136,88,6.233,89,4.575,129,2.727,215,6.182,216,4.075,217,3.427,218,7.022,219,3.444,220,2.965,221,2.47,222,4.338,223,1.554,224,2.991,225,2.939,226,3.758,227,3.254,228,4.412,229,4.975,230,4.213,231,3.961,232,6.233,233,2.317,234,2.961,235,7.022,236,3.321,237,4.992,238,4.975,239,3.464,240,4.136,241,3.961,242,5.74,243,4.975,244,5.381,245,3.856,246,3.856,247,4.664,248,7.022]],["title/basic/next-steps/#next-steps",[83,2.902,215,3.384]],["text/basic/next-steps/#next-steps",[1,2.773,3,2.337,6,2.128,8,2.708,12,1.841,23,3.35,34,2.934,35,3.7,36,3.045,38,2.705,44,1.537,53,2.773,58,2.047,80,3.189,82,5.791,83,5.332,84,3.072,87,4.173,88,6.289,89,4.616,129,2.742,215,5.019,216,4.111,217,3.457,218,7.084,219,3.463,220,2.991,221,2.492,222,4.376,223,1.568,224,3.018,225,2.965,226,3.792,227,3.283,228,4.451,229,5.019,230,4.236,231,3.996,232,6.289,233,2.337,234,2.977,235,7.084,236,3.35,237,5.019,238,5.019,239,3.494,240,4.173,241,3.996,242,5.791,243,5.019,244,5.428,245,3.89,246,3.89,247,4.706,248,7.084]],["title/basic/quick-start/",[1,1.87,228,3.001]],["text/basic/quick-start/",[0,2.491,1,2.083,3,1.142,4,0.609,5,1.9,6,1.598,7,2.208,9,1.263,10,3.135,11,3.044,12,2.614,13,3.408,14,3.849,15,2.651,16,4.819,21,2.733,22,1.531,24,2.618,25,2.625,29,2.947,34,2.445,36,3.129,38,1.641,43,2.346,44,1.377,45,1.874,46,1.514,48,2.103,49,1.688,53,2.083,58,1.538,61,1.63,63,1.942,66,2.003,68,1.852,75,2.213,94,1.424,95,3.164,99,1.388,102,1.067,109,2.125,124,1.9,130,1.636,135,1.212,139,2.33,162,2.453,163,1.501,170,1.474,176,2.19,187,1.875,189,1.726,213,2.137,216,2.008,221,1.217,222,2.137,223,1.178,224,3.348,225,1.448,226,1.852,227,1.604,228,3.344,234,1.806,237,3.044,241,1.952,245,2.922,249,2.346,250,2.578,251,2.103,252,1.829,253,1.653,254,1.9,255,1.9,256,3.071,257,2.939,258,2.939,259,2.651,260,3.479,261,3.764,262,3.234,263,2.452,264,4.078,265,1.9,266,3.071,267,1.312,268,3.071,269,2.174,270,3.572,271,1.829,272,3.46,273,1.9,274,3.428,275,2.829,276,2.104,277,1.961,278,3.46,279,1.925,280,2.103,281,3.46,282,2.829,283,1.636,284,2.829,285,3.344,286,2.396,287,2.939,288,3.46,289,3.46,290,2.298,291,1.807,292,1.557,293,2.512,294,1.9,295,2.512,296,2.939,297,2.346,298,2.298,299,3.46,300,2.512,301,1.302,302,3.941,303,2.684,304,2.396,305,2.466,306,3.135,307,1.9,308,2.174,309,2.254,310,1.979,311,3.46,312,1.528,313,2.298,314,2.137,315,1.323,316,2.103,317,1.604,318,1.925,319,1.543,320,6.485,321,3.46,322,1.671,323,2.779,324,3.46,325,3.46]],["title/basic/quick-start/#quick-start",[1,1.87,228,3.001]],["text/basic/quick-start/#quick-start",[0,2.5,1,1.36,3,1.147,4,0.609,5,1.908,6,1.604,7,2.216,9,1.268,10,3.145,11,3.055,12,2.616,13,3.415,14,3.858,15,2.663,16,4.824,21,2.737,22,1.534,24,2.62,25,2.634,29,2.955,34,2.449,36,3.136,38,1.646,43,2.356,44,1.379,45,1.879,46,1.521,48,2.112,49,1.696,53,2.09,58,1.543,61,1.636,63,1.943,66,2.009,68,1.86,75,2.223,94,1.43,95,3.173,99,1.394,102,1.072,109,2.131,124,1.908,130,1.643,135,1.215,139,2.335,162,2.459,163,1.507,170,1.48,176,2.197,187,1.884,189,1.733,213,2.147,216,2.017,221,1.222,222,2.147,223,1.182,224,3.354,225,1.455,226,1.86,227,1.611,228,2.184,234,1.812,237,3.055,241,1.96,245,2.932,249,2.356,250,2.589,251,2.112,252,1.837,253,1.66,254,1.908,255,1.908,256,3.085,257,2.952,258,2.952,259,2.663,260,3.486,261,3.774,262,3.245,263,2.462,264,4.091,265,1.908,266,3.085,267,1.318,268,3.085,269,2.184,270,3.579,271,1.837,272,3.475,273,1.908,274,3.437,275,2.841,276,2.109,277,1.966,278,3.475,279,1.934,280,2.112,281,3.475,282,2.841,283,1.643,284,2.841,285,3.355,286,2.407,287,2.952,288,3.475,289,3.475,290,2.308,291,1.815,292,1.564,293,2.523,294,1.908,295,2.523,296,2.952,297,2.356,298,2.308,299,3.475,300,2.523,301,1.308,302,3.951,303,2.693,304,2.407,305,2.475,306,3.145,307,1.908,308,2.184,309,2.264,310,1.988,311,3.475,312,1.535,313,2.308,314,2.147,315,1.328,316,2.112,317,1.611,318,1.934,319,1.549,320,6.502,321,3.475,322,1.678,323,2.789,324,3.475,325,3.475]],["title/basic/signing-in/",[307,3.408]],["text/basic/signing-in/",[1,2.291,4,0.604,5,1.62,6,2.538,7,3.849,9,2.66,10,4.978,11,4.835,12,2.369,13,1.279,14,1.559,15,2.26,21,0.904,22,0.575,24,0.8,28,1.781,32,1.62,33,1.505,36,1.268,38,1.448,44,1.504,45,2.105,46,1.291,49,1.439,51,3.437,52,2.789,53,2.291,54,2.793,57,4.055,58,2.579,61,1.793,63,0.558,64,3.873,66,2.202,68,2.514,69,1.795,70,2,74,1.268,79,3.004,80,1.328,99,2.348,102,0.91,105,2.493,109,1.539,114,1.119,115,1.559,120,2.411,123,3.172,129,1.829,135,1.293,137,0.98,139,1.735,143,1.424,150,4.137,151,1.62,160,1.764,162,0.994,165,1.62,171,1.712,172,1.069,180,1.712,187,1.599,190,3.257,214,1.164,217,2.856,219,1.854,221,2.059,226,1.579,233,0.973,234,1.001,236,1.395,240,1.738,255,1.62,256,2.619,257,3.99,258,3.99,259,5.583,260,1.409,267,1.119,271,3.094,276,2.105,283,1.395,285,1.854,301,1.11,302,1.793,305,2.177,306,1.738,307,4.001,312,2.075,313,1.96,314,1.822,315,2.237,316,1.793,317,1.367,319,1.315,322,1.424,326,2.614,327,4.262,328,2.726,329,4.725,330,2.614,331,1.712,332,2,333,2.411,334,2.95,335,2.411,336,3.711,337,2.043,338,1.764,339,1.688,340,1.822,341,2.411,342,3.12,343,1.424,344,1.922,345,5.783,346,1.424,347,2.411,348,2.136,349,2.141,350,2.043,351,2.169,352,1.793,353,2,354,2.043,355,1.664,356,4.697,357,2.95,358,2.09,359,1.764,360,2.95,361,2.95,362,2.26,363,2.579,364,1.949,365,2.343,366,2.411,367,1.793,368,1.246,369,2.686,370,1.664,371,3.599,372,2.331,373,1.688,374,2.331,375,2.141,376,2.619,377,2.043,378,1.455,379,1.887,380,2.198,381,2.411,382,2.411,383,2.331,384,1.303,385,1.664,386,3.253,387,1.395,388,2.331,389,2,390,1.642,391,1.793,392,2.141,393,2.198,394,2.198,395,3.132,396,1.822,397,1.62,398,1.541,399,4.147,400,2.95,401,2.26,402,2,403,2.26,404,2.141,405,2.411,406,2,407,6.477,408,4.17,409,2.95,410,2.95,411,2.95,412,2.95,413,2.141,414,3.599,415,3.615,416,3.12,417,2.141,418,2.141,419,2.331,420,2.09,421,1.96,422,1.303,423,2.506,424,2.95,425,2.95,426,5.852,427,1.887,428,1.793,429,2.767,430,2.135,431,2.95,432,2.95,433,4.697,434,4.697,435,2.141,436,1.712,437,1.559,438,1.328,439,1.922,440,1.409,441,2.198,442,2.411]],["title/basic/signing-in/#signing-in",[307,3.408]],["text/basic/signing-in/#signing-in",[4,0.531,9,2.512,28,2.094,44,1.451,46,3.012,51,2.716,52,3.417,54,3.606,58,2.49,61,2.639,64,5.722,79,5.511,105,2.931,109,2.255,123,5.099,129,2.15,180,3.994,217,3.358,255,3.779,271,4.973,276,2.718,283,3.254,313,4.571,326,3.829,327,5.414,328,3.994,329,5.459,330,4.795,331,3.994,332,4.665,333,5.625,334,6.881,335,5.625,336,5.437,337,4.766,338,4.116,339,3.936,340,4.251,341,5.625,342,4.571,343,3.322,344,4.483,345,5.127,346,3.322,347,5.625,348,2.512,349,4.995,350,4.766,351,2.55]],["title/basic/signing-in/#editing-the-code",[135,0.795,352,2.902]],["text/basic/signing-in/#editing-the-code",[4,0.553,6,2.973,7,3.204,9,2.819,12,2.007,28,2.35,44,1.427,68,4.133,69,3.534,70,5.235,99,3.098,114,2.929,120,6.313,135,1.54,165,4.24,172,2.797,221,2.716,226,4.133,301,2.906,315,2.952,319,3.443,348,2.819,353,5.235,354,5.348,355,4.356,356,9.246,357,7.722,358,5.471,359,4.619,360,7.722,361,7.722]],["title/basic/signing-in/#signing-in_1",[307,3.408]],["text/basic/signing-in/#signing-in_1",[1,2.293,4,0.589,6,2.333,7,3.615,9,2.835,10,4.575,11,4.443,12,2.631,13,2.54,14,3.096,15,4.488,21,1.794,22,1.141,24,1.589,28,1.782,36,2.517,38,2.395,44,1.432,45,2.244,49,2.858,52,1.933,53,2.293,54,3.251,58,1.692,63,1.108,66,2.204,68,3.135,74,2.517,99,3.116,109,1.919,135,0.975,139,2.583,143,2.828,151,3.216,160,3.503,162,1.974,171,3.399,187,3.175,217,3.79,219,2.312,221,2.06,233,1.933,234,1.987,236,2.77,256,5.199,257,4.975,258,4.975,259,4.488,260,2.799,276,1.692,302,3.559,305,3.599,306,3.45,307,3.216,314,3.618,315,2.239,317,2.715,322,2.828,327,3.216,328,3.399,329,3.399,348,2.138,362,4.488,363,4.264,364,2.43,365,3.873,366,4.788,367,3.559,368,2.473,369,3.564,370,3.304,371,5.951,372,4.628,373,3.351,374,4.628,375,4.252,376,5.199,377,4.057,378,2.889,379,3.746,380,4.364,381,4.788,382,4.788,383,4.628,384,2.587,385,3.304,386,4.057,387,2.77,388,4.628,389,3.971,390,3.259,391,3.559,392,4.252,393,4.364,394,4.364]],["title/basic/signing-in/#signing-in-as-a-bot-account",[51,1.532,307,2.131,329,2.253]],["text/basic/signing-in/#signing-in-as-a-bot-account",[1,3.447,4,0.599,5,3.913,6,2.14,7,3.654,10,5.187,11,5.037,12,1.852,44,1.359,45,2.059,51,4.179,52,2.351,53,2.79,58,2.544,102,2.197,115,3.767,190,3.965,221,2.507,257,6.053,258,6.053,276,2.059,327,3.913,329,5.11,369,3.27,395,3.814,396,4.402,397,3.913,398,3.722,399,6.771,400,7.126,401,5.46,402,4.831,403,5.46,404,5.173,405,5.826]],["title/basic/signing-in/#signing-in-behind-a-proxy",[307,2.131,406,2.631,407,2.578]],["text/basic/signing-in/#signing-in-behind-a-proxy",[4,0.598,7,3.736,10,5.304,11,5.151,32,4.058,44,1.14,58,2.602,61,2.264,105,3.148,214,2.916,240,4.353,259,6.899,267,2.802,285,4.643,364,3.066,407,6.714,408,7.993,409,7.389,410,7.389,411,7.389,412,7.389,413,5.364,414,6.899,415,5.562,416,4.908,417,5.364,418,5.364,419,5.839,420,5.236]],["title/basic/signing-in/#using-mtproto-proxies",[44,0.599,57,2.359,407,2.578]],["text/basic/signing-in/#using-mtproto-proxies",[4,0.605,6,2.303,7,3.82,9,2.097,10,4.516,11,4.386,12,1.993,33,2.931,44,1.331,45,2.215,53,2.249,57,5.244,58,2.493,66,2.885,80,2.586,105,2.447,129,2.396,135,1.277,137,1.909,150,4.852,190,4.266,219,2.267,259,5.875,312,3.387,315,2.196,316,3.491,326,3.197,336,4.539,342,3.816,345,7.146,351,2.841,386,3.979,395,4.103,407,6.954,415,3.549,416,3.816,421,3.816,422,2.538,423,4.88,424,5.745,425,5.745,426,8.629,427,3.674,428,3.491,429,4.516,430,3.484,431,5.745,432,5.745,433,7.666,434,7.666,435,4.17,436,3.334,437,3.037,438,2.586,439,3.743,440,2.745,441,4.28,442,4.696]],["title/basic/updates/",[137,2.062]],["text/basic/updates/",[0,1.452,1,2.924,4,0.607,6,2.243,7,2.848,8,4.117,9,1.132,10,2.879,11,2.796,12,2.301,14,3.629,17,2.252,18,4.818,19,3.185,21,2.43,22,1.545,23,3.532,24,2.402,25,4.47,27,1.801,28,1.488,29,2.222,34,2.2,38,0.957,39,1.775,44,1.059,45,1.748,46,1.358,52,1.024,53,1.215,58,1.413,61,0.95,63,1.907,66,1.167,69,1.186,74,1.333,80,2.2,94,1.276,95,1.514,102,0.957,109,1.017,116,2.584,129,0.969,131,1.949,135,0.814,137,2.281,139,0.92,151,1.704,155,1.856,162,1.045,163,2.12,176,2.489,185,1.205,190,1.726,198,1.498,212,2.536,216,1.801,220,1.31,221,1.719,224,2.082,225,2.046,226,1.66,227,1.438,230,1.498,233,2.265,234,1.659,237,1.775,245,1.704,249,4.101,255,1.704,259,3.746,270,1.41,276,1.748,277,2.258,285,1.949,293,3.548,301,1.167,303,3.051,308,1.949,313,2.061,314,1.916,317,1.438,327,1.704,346,1.498,348,2.505,350,2.149,354,2.149,355,1.75,363,3.769,365,1.547,370,1.75,378,1.53,395,1.66,397,2.684,430,1.41,443,2.754,444,2.754,445,2.377,446,2.149,447,2.103,448,1.984,449,1.801,450,0.852,451,2.754,452,2.754,453,2.149,454,1.245,455,2.311,456,1.775,457,2.635,458,2.252,459,2.754,460,2.684,461,2.754,462,2.754,463,2.754,464,2.754,465,2.754,466,2.149,467,2.061,468,2.635,469,6.049,470,3.618,471,1.801,472,3.102,473,1.949,474,2.754,475,2.198,476,2.536,477,2.536,478,1.601,479,2.536,480,5.138,481,2.252,482,1.31,483,3.102,484,3.102,485,2.536,486,1.827,487,1.984,488,1.107,489,3.102,490,3.386,491,1.01,492,3.247,493,2.754,494,2.377,495,4.516,496,2.149,497,3.314,498,2.252,499,4.635,500,3.102,501,2.971,502,1.424,503,1.41,504,1.583,505,2.198,506,2.65,507,1.53,508,4.888,509,3.102,510,3.102,511,3.102,512,1.41,513,3.102,514,2.103,515,3.102,516,2.754,517,3.185,518,1.601,519,2.377,520,1.949,521,1.141,522,1.984,523,1.885,524,2.061,525,3.122,526,4.101,527,2.311,528,1.64,529,2.377,530,2.536,531,2.198,532,2.252,533,2.061]],["title/basic/updates/#updates",[137,2.062]],["text/basic/updates/#updates",[1,2.806,4,0.593,6,2.878,8,3.663,23,3.39,28,2.182,39,4.101,44,1.106,53,2.806,61,2.196,63,1.672,80,3.227,129,2.24,137,2.382,139,2.125,185,2.784,227,3.322,363,5.493,397,3.936,443,6.364,444,6.364,445,5.493,446,4.965,447,4.86,448,4.585,449,4.16,450,1.969,451,6.364,452,6.364,453,4.965,454,2.876,455,5.341,456,4.101,457,6.089,458,5.204,459,6.364,460,3.936,461,6.364,462,6.364,463,6.364,464,6.364,465,6.364,466,4.965,467,4.762]],["title/basic/updates/#getting-started",[0,2.236,1,1.87]],["text/basic/updates/#getting-started",[1,2.913,4,0.604,6,2.235,7,3.752,8,4.084,9,2.006,10,4.383,11,4.257,12,2.532,14,4.46,18,5.248,21,2.584,22,1.643,23,2.599,24,2.289,25,4.46,27,3.189,34,1.619,38,1.694,44,0.848,45,2.438,52,1.813,63,1.408,69,2.1,74,2.362,94,2.261,109,1.801,116,2.905,131,3.453,135,0.915,155,3.287,198,2.653,212,4.492,216,3.189,220,2.32,221,2.617,225,3.115,234,1.865,249,5.044,259,5.702,276,1.588,285,3.453,293,5.402,301,2.068,314,3.395,317,2.547,327,3.018,348,2.006,365,2.741,370,3.1,378,2.711,395,2.941,430,2.497,468,4.668,469,8.437,470,5.047,471,3.189,472,5.495,473,3.453,474,4.878,475,3.894,476,4.492,477,4.492,478,2.836,479,4.492,480,6.32,481,3.989,482,2.32,483,5.495,484,5.495,485,4.492,486,3.237,487,3.515,488,1.961]],["title/basic/updates/#more-examples",[233,1.576,234,1.621]],["text/basic/updates/#more-examples",[1,2.191,4,0.605,8,3.982,12,2.214,14,2.959,17,4.063,18,4.943,19,4.909,21,2.308,22,1.467,23,3.563,24,2.472,25,4.831,29,2.544,34,2.219,63,1.925,95,2.732,137,1.86,151,3.074,162,1.886,163,3.268,226,2.996,233,2.81,237,3.202,249,3.795,270,2.544,303,4.296,313,3.718,348,2.043,350,3.877,354,3.877,355,3.158,397,3.074,460,3.074,480,4.755,489,5.597,490,5.218,491,1.822,492,5.005,493,4.969,494,4.289,495,4.851,496,3.877,497,5.108,498,4.063,499,6.526,500,5.597,501,4.579,502,2.569,503,2.544,504,2.856,505,3.966,506,4.084,507,2.761,508,7.534,509,5.597,510,5.597,511,5.597,512,2.544,513,5.597,514,3.795,515,5.597,516,4.969,517,3.647,518,2.889,519,4.289,520,3.517]],["title/basic/updates/#entities",[521,2.283]],["text/basic/updates/#entities",[4,0.601,8,4.127,21,1.956,22,1.244,23,3.02,24,2.23,28,1.944,29,2.903,34,2.421,44,1.268,46,2.795,58,2.375,63,1.955,66,2.404,80,2.875,102,1.969,116,3.376,135,1.064,137,2.122,176,3.738,190,3.554,224,3.501,230,3.084,245,3.507,255,3.507,276,2.375,277,3.001,308,4.013,346,3.084,348,3,495,4.894,517,4.161,522,4.085,523,3.881,524,4.243,525,4.69,526,6.16,527,4.758,528,3.376,529,4.894,530,5.221,531,4.525,532,4.636,533,4.243]],["title/concepts/asyncio/",[317,2.213,383,3.774]],["text/concepts/asyncio/",[1,1.815,4,0.608,5,2.123,6,2.315,7,0.689,8,2.013,12,2.358,13,1.259,14,3.295,16,3.901,17,2.107,21,2.721,22,1.607,23,0.785,24,2.239,26,2.057,27,1.685,28,0.505,29,1.319,32,0.912,34,1.366,36,1.662,38,1.922,40,0.762,44,1.296,45,1.673,46,0.727,48,1.764,49,1.887,52,0.548,53,2.267,54,2.609,58,1.801,63,0.877,66,1.745,69,2.013,70,1.126,71,1.103,74,1.662,92,1.594,94,2.382,95,0.81,99,3.997,102,0.895,107,1.194,114,0.63,125,1.205,129,1.646,130,2.49,131,1.043,135,1.101,137,0.552,140,0.978,143,0.802,147,1.516,150,0.77,152,2.129,162,0.978,163,0.72,165,1.594,168,1.357,172,0.602,185,1.801,188,0.655,191,1.857,210,1.15,213,1.026,216,0.964,217,1.416,219,1.146,220,1.226,221,0.584,223,1.165,225,1.941,226,0.889,227,0.77,233,1.276,234,1.312,241,1.637,243,1.177,245,1.594,247,1.103,251,1.009,252,0.878,260,4.194,261,0.964,262,3.2,265,1.594,270,2.833,277,0.502,279,0.924,284,4.305,285,1.824,292,0.747,300,1.205,303,0.837,305,4.893,306,4.258,308,1.824,309,1.082,314,4.622,315,1.11,316,1.009,317,4.565,318,0.924,319,1.294,326,0.924,332,1.968,343,1.401,344,1.082,346,1.401,348,1.693,349,1.205,351,0.615,359,2.774,370,0.937,371,1.272,373,1.661,375,1.205,377,4.317,378,2.598,379,1.857,383,1.312,384,0.734,385,2.971,387,1.829,388,1.312,391,1.009,396,1.793,397,0.912,398,0.867,421,1.928,422,0.734,429,0.978,430,2.107,437,0.878,438,1.741,439,1.891,440,1.387,441,2.163,446,2.01,450,0.456,453,1.15,454,0.666,478,0.857,482,1.958,485,1.357,486,5.03,488,1.38,491,0.945,495,0.847,502,0.762,504,1.973,505,1.177,514,1.968,517,1.891,518,0.857,534,1.357,535,1.66,536,1.357,537,2.35,538,1.312,539,1.357,540,1.685,541,1.474,542,0.747,543,2.294,544,4.116,545,1.082,546,1.312,547,2.01,548,1.416,549,1.793,550,1.41,551,1.026,552,1.474,553,2.294,554,1.272,555,1.66,556,1.009,557,1.312,558,0.785,559,2.558,560,1.062,561,1.573,562,1.474,563,5.672,564,2.224,565,4.035,566,2.903,567,4.229,568,1.474,569,1.474,570,3.851,571,1.66,572,1.474,573,1.928,574,2.224,575,1.66,576,1.647,577,1.66,578,1.474,579,1.66,580,1.66,581,1.272,582,2.716,583,1.082,584,1.205,585,1.736,586,1.103,587,1.103,588,2.482,589,2.558,590,2.903,591,1.928,592,1.062,593,1.312,594,1.66,595,1.009,596,3.433,597,1.66,598,1.66,599,6.642,600,1.928,601,2.903,602,2.577,603,1.66,604,1.15,605,5.87,606,1.312,607,1.66,608,1.082,609,2.163,610,1.66,611,1.66,612,1.474,613,1.15,614,1.474,615,1.272,616,1.891,617,1.66,618,1.41,619,0.924,620,1.043,621,1.312,622,1.474,623,1.357,624,1.66,625,2.881,626,2.963,627,0.937,628,1.661,629,2.621,630,3.433,631,1.357,632,1.66,633,1.66,634,1.474,635,1.66,636,1.66,637,1.009,638,2.716,639,2.716,640,1.205,641,1.464,642,1.66,643,1.66,644,1.41,645,1.66,646,1.474,647,1.312,648,1.66,649,1.272,650,1.237,651,1.237,652,1.66,653,1.66,654,1.764,655,2.389,656,3.867,657,2.903,658,1.272,659,0.964,660,1.66,661,1.66,662,1.237,663,1.66,664,0.937,665,1.66,666,0.95,667,1.272,668,1.272,669,1.177,670,1.474,671,1.474,672,1.357,673,1.062,674,1.177,675,1.272,676,1.66,677,1.474]],["title/concepts/asyncio/#mastering-asyncio",[317,2.213,383,3.774]],["text/concepts/asyncio/#mastering-asyncio",[]],["title/concepts/asyncio/#whats-asyncio",[317,2.213,534,3.904]],["text/concepts/asyncio/#whats-asyncio",[4,0.49,21,2.306,24,2.043,32,4.134,38,2.321,44,1.162,46,3.295,49,3.674,52,2.484,66,2.833,69,3.888,71,5.001,74,3.236,94,3.097,125,5.465,129,2.846,130,3.56,135,1.254,152,2.769,219,2.971,243,5.334,314,5.625,315,2.878,317,4.22,326,4.189,387,3.56,397,4.134,514,5.104,535,7.528,536,6.154,537,4.575,538,5.949,539,6.154,540,4.369,541,6.683,542,3.389,543,5.949,544,6.683,545,4.905,546,5.949,547,5.214]],["title/concepts/asyncio/#why-asyncio",[317,2.877]],["text/concepts/asyncio/#why-asyncio",[4,0.39,38,2.23,45,2.09,63,1.369,66,2.722,69,2.765,99,3.565,107,2.976,130,4.203,131,4.545,135,1.602,137,2.403,162,2.437,210,5.01,233,2.387,247,4.805,303,3.648,314,5.49,315,2.765,316,4.396,317,3.352,346,3.492,359,5.316,385,4.08,396,4.468,421,4.805,437,3.824,446,6.155,486,5.235,488,2.582,544,7.889,547,5.01,548,3.53,549,5.49,550,6.144,551,4.468,552,6.421,553,7.022,554,5.543,555,7.233,556,4.396,557,5.716,558,3.421,559,3.195,560,4.626,561,3.921,562,6.421,563,4.805,564,6.81]],["title/concepts/asyncio/#what-are-asyncio-basics",[216,2.772,317,2.213]],["text/concepts/asyncio/#what-are-asyncio-basics",[4,0.605,6,2.173,14,3.824,16,3.568,21,2.216,22,1.409,24,1.963,38,2.23,58,2.899,99,3.565,129,2.26,217,3.53,260,4.246,265,3.972,305,4.65,306,4.261,317,4.65,344,4.713,491,2.354,563,4.805,565,5.543,566,8.887,567,4.626,568,6.421,569,6.421,570,4.468,571,7.233]],["title/concepts/asyncio/#what-does-telethonsync-do",[5,3.408]],["text/concepts/asyncio/#what-does-telethonsync-do",[4,0.609,5,3.776,6,2.724,12,2.444,16,4.474,21,2.778,22,1.831,24,2.155,29,2.227,34,1.444,36,2.106,44,0.756,45,1.987,74,2.955,94,2.829,99,4.019,102,2.12,107,2.016,130,2.318,140,2.887,152,2.921,165,3.776,185,1.903,191,4.398,221,1.724,223,2.007,225,2.051,226,2.623,260,4.334,261,2.844,262,5.512,265,2.691,270,4.274,305,4.898,306,5.539,317,3.187,346,2.366,348,1.789,377,5.965,398,2.56,438,2.206,439,3.193,441,3.651,450,1.346,482,2.069,537,2.978,559,2.165,565,3.755,572,4.35,573,4.568,574,5.269,575,4.9,576,3.384,577,4.9,578,4.35,579,4.9,580,4.9,581,3.755,582,4.586,583,3.193,584,3.557,585,2.931,586,3.255,587,3.255,588,2.623,589,2.165]],["title/concepts/asyncio/#what-are-async-await-and-coroutines",[21,1.189,24,1.053,377,2.688]],["text/concepts/asyncio/#what-are-async-await-and-coroutines",[4,0.609,6,2.158,8,2.311,12,1.571,14,4.678,16,4.172,21,2.938,22,1.647,24,2.483,29,1.862,34,1.207,44,0.632,54,1.715,63,1.144,92,3.32,99,3.848,114,1.554,135,0.682,147,2.14,185,2.348,217,2,234,1.39,252,2.166,260,4.373,270,1.862,277,1.239,300,2.975,305,4.979,306,3.561,314,4.899,317,4.585,319,1.827,343,1.978,370,2.312,371,3.14,377,4.187,378,3.912,379,2.621,385,3.41,391,2.49,430,2.747,438,1.845,440,1.958,441,3.053,454,1.644,486,4.231,495,2.09,504,2.09,518,2.115,537,2.49,563,6.24,565,5.504,567,5.854,570,5.224,582,3.834,585,2.451,588,3.845,589,3.173,590,6.045,591,2.722,592,2.621,593,3.238,594,4.098,595,2.49,596,6.377,597,4.098,598,4.098,599,8.781,600,4.016,601,6.045,602,5.366,603,4.098,604,2.838,605,7.039,606,3.238,607,4.098,608,2.67,609,3.053,610,4.098,611,4.098,612,3.638]],["title/concepts/asyncio/#can-i-use-threads",[44,0.737,486,2.813]],["text/concepts/asyncio/#can-i-use-threads",[1,2.468,4,0.595,6,2.447,7,2.616,8,2.409,12,2.481,22,1.228,28,1.918,36,2.709,38,1.944,44,1.525,45,1.821,48,4.952,49,3.076,53,2.468,54,3.995,58,1.821,66,2.372,94,2.593,129,1.97,172,2.283,220,3.44,241,4.596,245,3.461,260,3.012,305,4.839,308,5.12,309,4.107,317,3.776,319,2.81,343,3.043,348,2.974,429,3.713,430,3.703,439,4.107,453,4.366,482,3.44,486,6.311,504,3.215,517,4.107,540,3.658,543,4.98,563,4.187,589,2.784,613,4.366,614,5.595,615,4.83,616,4.107,617,6.303,618,5.354,619,3.507,620,3.961,621,4.98,622,5.595,623,5.153,624,6.303]],["title/concepts/asyncio/#clientrun_until_disconnected-blocks",[385,2.694,625,3.558]],["text/concepts/asyncio/#clientrun_until_disconnected-blocks",[4,0.593,6,1.982,8,2.522,12,2.181,16,4.139,21,2.021,22,1.285,24,1.79,27,3.829,36,2.836,44,1.295,45,1.906,53,2.583,54,3.512,58,2.424,66,2.483,94,2.714,99,4.228,135,1.397,147,3.446,219,2.604,285,4.146,305,4.749,317,3.889,332,4.473,348,2.408,379,4.22,485,5.393,491,2.147,559,3.706,563,6.128,570,4.076,589,2.914,605,5.857,625,6.251,626,6.429,627,3.722,628,3.774,629,6.254,630,8.19,631,5.393,632,6.597,633,6.597,634,5.857,635,6.597,636,6.597,637,4.009,638,6.173,639,6.173,640,4.789]],["title/concepts/asyncio/#what-else-can-asyncio-do",[317,2.877]],["text/concepts/asyncio/#what-else-can-asyncio-do",[1,2.035,4,0.603,12,2.49,13,3.107,17,5.2,21,1.592,22,1.012,24,1.41,26,5.076,34,2.11,38,2.528,44,1.363,45,1.502,53,3.458,63,0.983,70,3.524,95,2.536,99,3.938,130,2.458,135,0.866,150,2.409,162,1.751,163,2.254,168,4.249,213,3.211,225,3.431,227,2.409,234,1.764,260,4.221,279,2.892,284,7.575,285,3.266,292,2.34,305,4.295,306,3.062,314,5.064,317,4.295,332,3.524,351,1.926,359,4.285,373,4.098,375,3.773,387,3.388,396,3.211,421,3.453,422,2.296,438,2.34,478,2.683,482,2.195,488,2.557,504,2.652,505,3.683,514,3.524,517,3.387,544,4.614,548,2.536,559,3.164,563,5.445,591,3.453,605,7.276,609,3.872,638,4.864,639,4.864,641,2.622,642,5.198,643,5.198,644,4.415,645,5.198,646,4.614,647,4.107,648,5.198,649,3.983,650,3.872,651,3.872,652,5.198,653,5.198,654,4.353,655,5.064,656,8.197,657,7.163,658,3.983,659,3.017,660,5.198,661,5.198,662,3.872,663,5.198,664,2.932,665,5.198,666,2.973,667,3.983,668,3.983,669,3.683,670,4.614]],["title/concepts/asyncio/#why-does-clientstart-work-outside-async",[21,1.001,129,1.021,671,2.902,672,2.672]],["text/concepts/asyncio/#why-does-clientstart-work-outside-async",[1,3.691,4,0.508,8,3.05,12,2.45,23,3.773,27,4.631,44,1.231,49,3.893,94,3.283,143,3.852,152,3.467,185,3.099,188,3.149,251,4.849,305,3.698,378,3.936,385,4.501,388,6.304,440,3.812,561,4.325,626,6.114,628,4.564,641,4.024,673,5.103,674,5.653,675,6.114]],["title/concepts/asyncio/#where-can-i-read-more",[40,2.192,233,1.576]],["text/concepts/asyncio/#where-can-i-read-more",[4,0.454,99,3.381,233,2.78,234,2.859,245,4.627,305,3.905,317,3.905,318,4.689,349,6.117,384,3.722,502,3.867,616,5.49,676,8.426,677,7.48]],["title/concepts/botapi-vs-mtproto/",[51,1.114,52,0.932,55,1.806,56,2.049,57,1.716]],["text/concepts/botapi-vs-mtproto/",[1,3.369,3,0.536,4,0.61,6,2.063,7,2.713,8,3.717,9,0.593,12,1.349,13,0.704,18,3.795,19,2.974,21,2.509,22,1.757,23,2.158,24,2.301,25,3.038,27,2.649,28,0.494,29,1.727,34,1.345,35,0.848,36,0.698,38,1.762,39,0.929,44,1.144,45,2.551,49,0.792,51,4.173,52,2.798,54,1.191,55,4.182,56,2.066,57,4.643,58,1.319,59,1.346,61,1.886,62,1.327,63,1.752,64,2.205,66,0.611,69,1.745,73,3.161,79,2.43,83,0.987,87,1.676,92,0.891,94,1.563,97,1.244,99,1.142,102,1.601,106,3.155,107,1.563,109,0.532,111,1.178,115,0.858,124,0.891,130,1.346,137,2.667,139,0.844,143,1.374,150,2.854,152,1.047,155,2.273,162,1.749,163,1.648,167,1.605,168,1.327,185,0.63,188,0.641,190,1.584,195,0.731,198,1.835,212,1.327,214,0.641,219,1.123,221,1.001,222,1.003,225,1.191,227,0.752,233,1.254,234,1.289,237,1.628,246,0.891,249,1.929,251,2.309,252,0.858,260,2.48,262,0.987,270,1.293,276,1.098,277,1.149,283,1.797,294,2.086,301,2.46,303,0.819,310,0.929,312,0.717,313,1.078,314,1.758,316,0.987,323,1.486,326,2.889,328,0.942,351,0.602,354,1.124,363,0.891,368,1.202,384,0.717,387,1.346,389,1.101,399,3.234,402,4.656,404,1.178,420,1.15,421,1.89,422,2.293,423,2.417,436,2.649,437,0.858,438,0.731,440,0.776,450,1.426,455,1.21,460,1.563,470,2.273,471,0.942,488,1.356,491,1.237,496,2.632,497,1.929,498,1.178,502,0.745,504,1.452,514,1.929,525,0.838,532,1.178,540,0.942,545,1.058,548,2.227,549,1.003,556,0.987,559,0.717,561,0.88,568,2.526,574,2.911,583,1.058,595,0.987,604,1.124,620,2.868,662,2.12,664,0.916,678,1.623,679,1.327,680,1.441,681,1.543,682,3.227,683,1.441,684,1.15,685,1.623,686,1.379,687,1.623,688,1.327,689,2.663,690,1.623,691,1.178,692,2.663,693,1.101,694,1.178,695,0.88,696,1.327,697,1.623,698,1.283,699,1.929,700,1.623,701,2.774,702,2.12,703,1.623,704,1.623,705,1.21,706,1.441,707,1.21,708,1.244,709,0.987,710,0.971,711,0.971,712,1.623,713,1.623,714,1.623,715,0.956,716,3.796,717,0.891,718,1.327,719,1.623,720,1.623,721,2.663,722,1.101,723,1.623,724,4.052,725,4.052,726,1.623,727,1.623,728,1.623,729,2.846,730,2.846,731,1.971,732,2.846,733,5.347,734,6.118,735,4.409,736,2.846,737,2.663,738,1.21,739,4.271,740,4.271,741,3.877,742,3.877,743,0.819,744,1.327,745,2.356,746,1.623,747,1.003,748,1.441,749,1.441,750,2.663,751,1.441,752,3.799,753,4.857,754,4.271,755,2.066,756,3.555,757,1.283,758,1.244,759,1.971,760,3.555,761,1.623,762,2.663,763,1.441,764,1.244,765,2.846,766,2.846,767,2.12,768,1.623,769,1.623,770,2.846,771,4.564,772,0.88,773,2.846,774,1.623,775,1.623,776,1.327,777,1.623,778,1.21,779,1.623,780,1.623,781,1.623,782,1.101,783,1.441,784,1.244,785,4.564,786,1.623,787,2.707,788,1.441,789,4.564,790,1.441,791,2.417,792,2.846,793,2.326,794,1.15,795,1.623,796,1.623,797,1.623,798,1.21]],["title/concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto",[51,1.114,52,0.932,55,1.806,56,2.049,57,1.716]],["text/concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto",[38,2.545,44,1.484,45,2.779,51,3.795,61,2.528,73,5.716,79,5.279,97,6.324,233,2.723,303,4.162,313,5.482,421,5.482,504,4.21,604,5.716,678,8.252,679,6.747,680,7.326]],["title/concepts/botapi-vs-mtproto/#what-is-bot-api",[51,1.885,52,1.576]],["text/concepts/botapi-vs-mtproto/#what-is-bot-api",[4,0.519,35,3.789,39,4.151,51,4.316,52,3.401,54,3.727,55,6.161,57,4.409,61,2.951,79,5.695,87,4.274,143,3.503,167,4.093,188,2.863,195,3.266,198,3.503,219,2.863,221,2.552,237,4.151,252,3.835,260,3.467,326,4.037,354,5.025,387,3.431,488,2.59,681,4.826,682,6.163,683,6.441,684,5.141,685,7.255,686,6.163,687,7.255,688,5.931,689,6.789,690,7.255,691,5.267,692,6.789]],["title/concepts/botapi-vs-mtproto/#what-is-mtproto",[57,3.772]],["text/concepts/botapi-vs-mtproto/#what-is-mtproto",[12,2.385,44,1.416,45,2.203,51,3.621,52,3.248,55,4.876,57,6.352,64,5.325,69,2.914,94,3.137,102,2.351,150,3.533,155,4.56,167,4.301,198,4.43,294,4.186,326,5.106,363,4.186,404,5.534,421,5.064,423,6.476,436,4.425,548,3.72,595,4.633,662,6.836,692,7.134,693,5.168,694,5.534,695,4.133,696,6.232,697,7.624]],["title/concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api",[51,1.114,52,0.932,57,1.716,92,1.55,698,2.231]],["text/concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api",[4,0.344,12,2.136,28,1.944,38,1.969,44,1.402,45,2.625,51,4.01,52,3.165,55,5.811,56,4.636,57,5.522,58,1.845,59,3.886,61,1.956,64,3.707,69,2.441,73,4.424,87,3.762,94,3.381,102,2.534,107,2.628,115,3.376,143,3.084,150,4.446,155,4.915,212,5.221,214,2.521,225,2.673,233,2.712,237,3.654,246,3.507,251,3.881,283,3.886,294,4.513,312,2.821,326,4.573,328,3.707,384,2.821,420,4.525,422,2.821,423,5.425,436,3.707,440,3.052,488,2.28,502,2.931,514,4.33,540,3.707,545,4.161,548,4.434,549,3.945,556,3.881,583,4.161,664,3.603,682,6.98,689,5.976,699,4.33,700,6.387,701,4.994,702,6.122,703,6.387,704,6.387,705,4.758,706,5.67,707,4.758,708,4.894,709,3.881,710,3.82,711,3.82,712,6.387,713,6.387,714,6.387,715,3.762]],["title/concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon",[45,0.945,51,1.29,52,1.079,716,2.171]],["text/concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon",[4,0.498,36,3.319,38,3.163,44,1.427,45,2.672,51,3.649,52,2.548,61,2.365,62,6.313,66,2.906,69,2.952,73,6.404,83,4.693,152,2.84,168,6.313,190,4.297,234,2.62,283,3.652,314,5.712,436,4.482,488,2.756,716,5.13,717,4.24,718,6.313,719,7.722,720,7.722,721,7.225,722,5.235,723,7.722,724,6.855,725,6.855]],["title/concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot",[51,1.29,61,1.001,69,1.249,716,2.171]],["text/concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot",[1,3.94,4,0.61,6,2.334,7,2.774,8,3.794,18,3.88,19,3.068,21,2.381,22,1.859,23,3.161,24,2.109,27,2.733,44,0.727,45,2.246,51,3.851,58,1.932,63,1.806,99,1.889,102,2.061,106,4.062,111,3.418,130,2.227,137,3.416,162,2.252,185,1.829,225,1.971,234,1.598,249,3.192,260,4.042,301,2.925,310,2.694,316,2.861,323,3.491,387,2.227,399,3.336,402,4.532,422,2.08,455,3.508,470,3.999,471,2.733,496,5.383,497,4.532,498,3.418,701,4.062,726,4.708,727,4.708,728,4.708,729,6.685,730,6.685,731,4.63,732,6.685,733,8.361,734,7.273,735,5.678,736,6.685,737,4.406,738,3.508,739,6.255,740,6.255,741,3.999,742,3.999,743,2.375,744,3.849,745,2.43,746,4.708,747,2.909,748,4.18,749,4.18]],["title/concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi",[716,3.173,721,4.469]],["text/concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi",[1,3.303,4,0.61,6,2.235,7,3.088,8,3.925,18,4.319,19,3.58,21,2.279,22,1.761,24,2.019,25,3.671,27,3.189,44,0.848,45,2.438,51,4.135,63,1.843,106,3.339,107,2.261,109,1.801,124,3.018,152,2.021,219,2.169,249,3.725,301,2.8,389,3.725,399,3.894,402,5.044,422,2.427,491,2.422,504,2.803,532,3.989,561,2.979,574,4.211,620,5.301,699,3.725,741,4.668,742,4.668,745,2.836,750,5.142,751,4.878,752,8.437,753,6.963,754,6.963,755,5.402,756,6.963,757,4.342,758,4.211,759,5.154,760,6.963,761,5.495,762,5.142,763,4.878]],["title/concepts/botapi-vs-mtproto/#migrating-from-aiogram",[716,3.173,724,4.24]],["text/concepts/botapi-vs-mtproto/#migrating-from-aiogram",[1,3.13,3,1.376,4,0.612,6,1.839,7,2.541,8,3.795,12,1.084,13,1.808,18,4.211,19,3.989,21,2.727,22,1.734,23,1.971,24,2.416,25,3.944,27,2.42,29,3.298,34,1.803,45,1.769,49,2.034,51,4.095,63,1.879,106,3.721,107,1.715,130,1.971,139,1.815,162,2.445,163,3.147,221,1.466,227,1.932,251,2.533,276,1.769,277,1.851,301,2.304,399,2.954,402,4.919,422,1.842,436,2.42,437,2.204,438,1.877,450,2.34,470,2.494,491,1.357,514,2.826,559,1.842,568,5.435,574,3.194,620,2.62,724,5.435,733,3.901,734,7.969,735,6.163,737,3.901,739,5.729,740,5.729,741,3.541,742,3.541,745,2.152,750,3.901,753,6.789,754,5.729,756,3.901,760,3.901,762,3.901,764,3.194,765,6.122,766,6.122,767,4.561,768,4.169,769,4.169,770,6.122,771,7.995,772,2.26,773,6.122,774,4.169,775,4.169,776,3.408,777,4.169,778,3.106,779,4.169,780,4.169,781,4.169,782,2.826]],["title/concepts/botapi-vs-mtproto/#migrating-from-dumbot",[716,3.173,725,4.24]],["text/concepts/botapi-vs-mtproto/#migrating-from-dumbot",[1,2.026,4,0.612,6,2.145,7,2.964,8,3.371,9,1.889,18,3.004,21,2.701,22,1.802,23,2.447,24,2.596,25,2.553,27,3.004,34,2.104,45,2.363,51,3.651,58,1.495,63,0.979,99,2.076,137,2.373,150,3.31,190,2.88,222,3.197,234,1.756,251,3.145,262,3.145,270,3.246,276,1.495,277,1.565,301,1.948,351,1.918,368,3.016,399,3.667,402,4.842,422,2.286,460,3.922,525,2.671,574,3.966,725,6.34,741,4.396,742,4.396,745,2.671,783,4.594,784,3.966,785,8.817,786,5.175,787,3.704,788,4.594,789,8.817,790,4.594,791,6.067,792,7.142,793,5.839,794,3.667,795,5.175,796,5.175,797,5.175,798,3.856]],["title/concepts/entities/",[521,2.283]],["text/concepts/entities/",[0,1.422,3,1.003,4,0.601,6,1.209,8,2.45,9,1.109,12,2.448,13,2.361,14,0.925,16,0.863,21,1.667,22,0.937,23,1.437,24,2.573,29,1.381,33,1.55,34,2.094,35,1.587,36,1.306,38,2.777,40,0.803,42,2.382,44,1.442,45,0.506,46,2.105,49,0.854,51,1.199,52,2.115,56,1.27,58,2.426,59,2.274,61,0.931,63,1.446,64,1.016,66,2.782,74,1.306,77,1.383,80,1.368,86,1.119,92,0.961,93,1.98,94,1.657,98,1.848,99,0.702,102,2.356,106,1.064,107,0.72,109,2.1,111,1.27,114,0.664,115,0.925,116,0.925,123,2.607,126,0.863,129,2.222,130,2.274,134,1.647,135,0.671,137,0.581,139,0.901,143,0.845,152,1.117,160,1.818,162,1.024,167,0.987,172,0.634,176,3.042,178,1.064,180,1.763,183,1.064,185,1.18,188,0.691,189,0.873,190,0.974,192,2.656,193,1.669,195,1.813,198,1.467,200,1.031,214,1.589,219,1.199,220,2.52,221,2.766,223,0.672,224,2.048,225,2.278,226,2.155,227,2.766,229,1.24,230,0.845,231,2.713,233,1.003,234,2.025,236,2.822,243,2.153,244,1.341,247,1.163,253,2.298,254,1.669,255,2.211,261,1.016,265,1.669,267,1.527,270,3.882,271,3.155,273,0.961,274,3.155,276,2.506,277,2.15,279,1.691,280,2.922,282,1.431,283,1.904,284,2.484,303,1.533,308,1.1,312,0.773,315,1.539,322,1.467,327,3.726,329,2.337,335,1.431,336,2.401,339,1.001,340,1.081,341,1.431,346,0.845,348,2.178,350,1.212,351,0.649,355,0.987,364,0.726,365,2.008,368,1.283,369,0.803,384,0.773,385,0.987,386,1.212,387,0.828,389,2.06,390,0.974,395,1.626,398,0.914,401,1.341,406,1.186,413,1.27,422,0.773,437,0.925,438,1.813,449,1.016,450,1.495,454,1.219,458,1.27,470,3.57,482,2.03,487,1.943,488,2.728,495,2.777,503,0.795,504,1.55,507,1.499,512,0.795,517,2.624,521,3.833,523,1.064,525,0.903,526,1.186,542,3.328,547,1.212,549,1.877,551,1.081,558,0.828,559,0.773,585,1.818,595,1.064,600,1.163,614,1.554,619,0.974,620,1.1,627,0.987,628,1.001,637,1.064,654,1.064,664,0.987,666,1.738,674,1.24,681,0.949,695,0.949,710,1.047,772,1.647,784,1.341,799,1.75,800,3.024,801,2.697,802,1.75,803,1.587,804,1.24,805,1.341,806,3.957,807,3.951,808,1.75,809,1.75,810,1.383,811,1.554,812,1.75,813,1.001,814,2.155,815,3.086,816,1.031,817,1.24,818,1.75,819,1.554,820,1.554,821,1.75,822,1.554,823,3.776,824,3.491,825,1.75,826,1.24,827,3,828,3.086,829,2.018,830,2.581,831,2.328,832,1.341,833,1.186,834,1.75,835,2.789,836,1.383,837,1.431,838,2.401,839,1.24,840,1.818,841,1.626,842,2.264,843,5.029,844,1.75,845,1.75,846,1.341,847,1.75,848,1.75,849,1.75,850,1.75,851,1.75,852,4.809,853,1.341,854,1.341,855,3,856,2.328,857,2.264,858,1.75,859,1.75,860,1.75,861,1.431,862,1.186,863,3.491,864,1.75,865,1.554,866,1.75,867,1.212,868,1.431,869,1.341,870,1.001,871,1.431,872,1.75,873,1.75,874,1.75,875,1.554,876,1.75,877,1.909,878,2.206,879,1.554,880,1.75,881,1.001,882,2.153,883,1.14,884,1.304,885,1.119,886,2.272,887,2.401,888,1.877,889,1.27,890,2.923,891,1.486,892,0.974,893,1.304,894,1.763,895,1.212,896,1.24,897,2.789,898,1.75,899,1.75,900,1.081,901,1.1,902,1.431,903,1.75,904,1.75,905,1.847,906,1.431,907,1.383,908,1.943,909,1.431,910,1.341,911,1.431,912,1.431,913,1.75,914,1.554,915,1.554,916,1.75,917,1.75,918,1.341,919,1.163,920,1.212,921,3.583,922,4.301,923,2.484,924,2.581,925,1.341,926,1.27,927,1.24,928,1.047,929,1.554,930,1.14,931,1.383,932,1.186,933,1.606,934,1.554,935,1.14,936,1.341,937,1.431,938,1.047,939,0.974,940,3.038,941,1.163,942,1.486,943,1.212,944,1.75]],["title/concepts/entities/#entities",[521,2.283]],["text/concepts/entities/#entities",[4,0.548,34,2.433,35,3.363,38,2.812,44,0.993,52,2.124,58,2.635,94,2.649,98,2.955,99,2.583,102,2.547,109,2.11,123,3.49,129,2.581,135,1.072,172,2.332,180,3.737,183,3.912,185,2.5,192,3.142,214,2.541,220,2.718,223,1.425,224,3.885,225,2.695,236,3.906,243,4.562,265,4.536,270,2.926,271,3.404,274,3.404,276,2.635,277,2.497,279,3.583,280,3.912,283,3.906,303,3.247,315,2.461,341,5.263,395,3.446,449,3.737,454,2.583,521,3.659,549,3.977,595,3.912,664,3.632,666,3.683,710,3.851,799,6.438,800,3.343,801,3.133,802,6.438,803,3.363,804,4.562,805,4.933,806,5.075,807,6.621,808,6.438,809,6.438,810,5.087,811,5.715,812,6.438,813,3.683,814,3.446,815,4.933,816,3.792]],["title/concepts/entities/#what-is-an-entity",[521,2.283]],["text/concepts/entities/#what-is-an-entity",[4,0.599,8,3.504,12,2.267,13,3.783,21,2.149,22,1.367,23,3.318,24,2.575,33,2.574,34,2.377,36,2.168,38,2.164,42,2.208,44,1.532,46,2.208,58,2.331,63,0.955,66,3.036,74,2.168,80,3.159,102,1.556,107,2.076,109,1.653,123,4.373,126,2.489,129,2.725,130,4.125,135,0.84,139,1.496,143,2.436,152,1.855,162,1.7,192,2.462,200,2.972,214,1.991,225,2.112,230,2.436,231,4.92,234,2.738,236,3.318,253,2.41,255,2.77,270,4.166,271,4.611,276,2.028,277,2.121,280,3.066,308,3.17,339,2.886,355,2.846,365,2.516,450,1.386,470,5.217,487,4.488,488,3.113,495,4.449,517,3.287,521,3.856,526,3.42,542,3.632,585,3.018,614,4.478,619,2.807,637,3.066,681,2.735,801,1.913,815,3.866,817,3.574,818,5.045,819,4.478,820,4.478,821,5.045,822,4.478,823,4.853,824,3.662,825,5.045,826,3.574,827,3.759,828,3.866,829,3.351,830,4.285,831,3.866,832,3.866,833,3.42,834,5.045,835,3.494,836,3.986]],["title/concepts/entities/#getting-entities",[0,2.236,521,1.756]],["text/concepts/entities/#getting-entities",[0,2.158,4,0.606,6,1.978,12,2.662,21,1.412,22,0.898,24,2.751,34,1.939,38,2.369,44,1.185,45,1.332,46,2.017,49,2.249,52,1.521,58,1.332,74,1.981,77,3.642,102,1.421,109,1.51,111,3.346,129,1.44,134,2.498,139,1.366,160,2.757,162,1.553,176,3.16,178,2.801,185,1.79,189,2.299,190,2.565,192,2.249,195,2.964,214,1.819,221,3.117,223,1.02,226,3.524,233,1.521,234,1.564,254,2.531,255,2.531,270,4.028,271,2.437,273,2.531,274,4.061,276,2.421,277,1.393,280,4.001,282,3.768,303,2.325,315,1.762,322,3.179,327,2.531,335,3.768,348,1.682,365,3.284,369,2.115,386,3.192,387,2.18,389,4.463,401,3.532,437,2.437,438,2.075,450,1.266,470,2.757,482,1.946,488,1.645,521,3.632,542,2.075,549,2.847,620,2.896,772,2.498,800,2.099,801,2.497,806,2.565,807,3.346,823,3.664,829,3.062,837,3.768,838,3.642,839,3.266,840,2.757,841,2.467,842,3.434,843,6.408,844,4.609,845,4.609,846,3.532,847,4.609,848,4.609,849,4.609,850,4.609,851,4.609,852,8.379,853,3.532,854,3.532,855,4.905,856,5.045,857,4.905,858,4.609,859,4.609,860,4.609,861,3.768,862,3.125,863,3.346,864,4.609,865,4.091,866,4.609,867,3.192,868,3.768,869,3.532,870,2.637,871,3.768,872,4.609,873,4.609,874,4.609,875,4.091]],["title/concepts/entities/#entities-vs-input-entities",[56,2.373,521,1.873,542,1.471]],["text/concepts/entities/#entities-vs-input-entities",[4,0.546,6,1.382,9,2.4,12,1.196,14,2.432,24,1.248,29,2.091,34,1.937,35,2.403,38,2.924,40,2.111,42,3.664,44,1.421,46,2.878,51,1.816,52,2.922,58,2.802,59,2.175,61,2.014,63,0.87,66,3.333,86,2.942,92,2.526,93,2.997,102,2.027,109,2.155,114,1.745,129,2.055,134,2.494,160,2.752,176,3.79,180,2.67,192,3.209,220,3.24,221,3.335,224,1.96,225,1.926,227,3.556,233,1.518,244,3.525,253,3.666,254,2.526,255,2.526,267,2.494,270,3.487,274,2.432,276,2.559,283,2.175,312,2.032,327,5.207,329,4.453,336,5.195,348,3.056,351,1.705,364,1.909,384,2.032,390,2.56,395,2.462,406,3.119,413,3.339,422,2.032,438,2.071,450,2.108,458,3.339,482,1.942,488,3.288,504,3.354,507,2.269,521,3.63,542,3.769,551,2.842,558,2.175,559,2.032,627,2.595,674,3.259,800,3.092,803,2.403,806,4.928,807,3.339,814,2.462,815,3.525,823,3.659,824,5.57,827,4.899,828,5.038,830,3.907,835,3.186,838,3.635,863,5.57,876,4.6,877,4.131,878,3.339,879,4.084,880,4.6,881,2.632,882,4.659,883,2.997,884,3.427,885,2.942,886,4.328,887,3.635,888,2.842,889,3.339,890,3.339,891,3.907,892,2.56,893,3.427,894,3.816,895,3.186,896,3.259,897,5.314,898,4.6,899,4.6,900,2.842,901,2.891,902,3.761,903,4.6,904,4.6,905,2.796,906,3.761,907,3.635,908,4.205,909,3.761]],["title/concepts/entities/#full-entities",[59,2.259,521,1.756]],["text/concepts/entities/#full-entities",[4,0.542,12,1.897,44,1.126,51,2.881,59,4.226,93,4.756,102,3.104,106,4.436,109,2.392,176,3.003,188,2.881,193,4.907,227,3.383,243,5.172,277,2.702,315,2.79,340,4.509,385,4.118,503,3.317,507,3.601,521,2.685,695,3.957,800,3.426,801,3.817,814,3.907,831,5.593,855,5.438,878,5.299,890,6.487,910,5.593,911,5.967,912,5.967,913,7.299,914,6.48,915,6.48,916,7.299,917,7.299,918,5.593]],["title/concepts/entities/#accessing-entities",[267,1.811,521,1.756]],["text/concepts/entities/#accessing-entities",[3,2.793,4,0.588,8,3.235,24,2.297,33,3.413,63,1.999,66,2.517,94,3.482,102,2.063,109,2.192,115,3.536,116,3.536,135,1.114,137,2.223,152,2.46,198,4.087,220,2.825,225,3.543,227,3.923,234,2.27,247,4.444,277,2.559,348,2.442,368,3.574,398,3.494,454,2.684,482,2.825,512,3.04,523,4.065,525,3.452,547,4.633,666,3.827,784,5.126,835,4.633,905,4.065,919,4.444,920,4.633,921,7.27,922,7.954,923,6.919,924,7.189,925,5.126,926,4.856,927,4.74,928,4.001,929,5.938,930,4.358,931,5.286,932,4.535,933,4.474]],["title/concepts/entities/#summary",[229,4.398]],["text/concepts/entities/#summary",[4,0.603,12,2.65,13,2.617,16,2.976,21,2.426,22,1.175,24,2.715,29,2.742,36,2.593,38,3.006,44,1.504,63,1.142,64,3.502,66,2.271,98,3.635,167,3.404,195,2.716,219,3.126,220,2.548,226,3.229,234,2.047,236,3.745,261,3.502,270,3.599,274,3.19,276,2.555,279,3.358,284,6.474,346,2.913,350,4.179,438,2.716,470,3.609,482,2.548,495,3.078,517,5.16,521,3.848,542,2.716,585,3.609,600,4.008,628,3.452,654,3.667,772,3.271,840,3.609,841,3.229,842,4.495,843,5.065,887,4.768,888,3.727,934,5.356,935,3.931,936,4.623,937,4.932,938,3.609,939,3.358,940,7.919,941,4.008,942,5.125,943,4.179,944,6.033]],["title/concepts/errors/",[172,1.73,945,3.308]],["text/concepts/errors/",[3,1.058,4,0.601,6,2.099,12,1.817,16,3.742,21,0.982,24,0.87,28,1.526,29,1.457,33,1.635,34,1.82,35,1.674,36,1.378,38,2.155,44,1.078,45,1.449,46,1.403,52,2.306,53,1.255,58,0.926,61,0.982,63,1.169,66,2.325,68,1.716,69,1.225,80,1.443,87,2.955,94,1.319,98,1.471,102,0.989,107,1.319,113,2.089,114,3.188,115,2.652,116,1.695,117,2.621,123,1.738,127,2.13,130,1.516,135,0.534,136,2.327,137,1.667,139,0.95,147,4.869,152,1.179,160,1.918,162,1.08,167,1.808,172,3.842,178,1.948,185,1.245,186,1.98,187,1.738,188,1.265,189,3.082,191,2.05,193,1.76,195,1.443,198,2.422,214,3.434,215,2.271,220,2.951,221,1.128,233,1.655,234,1.702,236,2.922,247,2.13,252,3.266,253,1.532,254,1.76,265,1.76,267,1.902,269,2.014,277,1.516,283,1.516,295,2.327,301,1.206,307,1.76,308,3.152,312,1.416,319,2.237,323,1.674,326,1.784,329,1.861,332,2.173,339,1.834,343,1.548,346,1.548,348,3.068,351,1.188,355,1.808,364,1.33,368,2.118,369,1.471,382,2.621,384,1.416,386,2.22,392,2.327,395,1.716,397,1.76,422,2.216,437,2.652,438,1.443,440,1.532,454,3.043,471,2.911,482,1.354,488,2.871,497,2.173,504,1.635,506,1.738,507,1.581,512,2.28,518,1.655,541,2.846,548,1.564,559,2.729,564,2.457,570,4.969,589,1.416,627,1.808,654,1.948,664,3.943,673,2.05,681,2.719,694,2.327,743,3.116,772,1.738,784,2.457,801,1.216,803,1.674,805,2.457,814,2.685,905,3.048,926,2.327,935,2.089,945,4.841,946,2.327,947,2.621,948,4.189,949,3.206,950,4.189,951,3.844,952,3.206,953,4.735,954,5.051,955,4.693,956,5.193,957,3.206,958,3.755,959,2.621,960,2.846,961,2.846,962,2.621,963,3.696,964,4.104,965,3.206,966,2.846,967,3.963,968,3.206,969,2.533,970,3.206,971,3.963,972,3.206,973,3.206,974,2.327,975,5.993,976,2.846,977,3.963,978,2.195,979,3.206,980,4.693,981,1.888,982,3.206,983,2.089,984,2.014,985,2.621,986,2.457,987,4.485,988,2.846,989,2.846,990,2.621,991,1.738,992,2.846,993,2.621,994,2.846,995,2.846,996,2.846,997,2.388,998,2.846,999,3.206,1000,3.206,1001,3.206,1002,1.532,1003,3.206,1004,3.206,1005,3.206,1006,3.206,1007,2.846,1008,6.989,1009,3.206,1010,3.206,1011,3.206,1012,3.206,1013,3.206,1014,3.206,1015,3.206,1016,4.101,1017,2.327,1018,5.016,1019,3.206,1020,2.621,1021,4.189,1022,3.554,1023,2.846,1024,4.453,1025,2.327,1026,2.846,1027,2.846]],["title/concepts/errors/#rpc-errors",[172,1.73,945,3.308]],["text/concepts/errors/#rpc-errors",[3,1.991,4,0.587,6,2.379,12,1.568,16,2.976,21,1.848,28,2.41,29,2.742,34,2.604,36,2.593,38,1.861,44,0.931,45,1.743,46,2.641,52,2.917,53,2.362,68,3.229,87,4.665,98,2.769,113,3.931,114,2.288,116,3.19,137,2.005,147,3.151,152,2.219,167,3.404,172,3.826,214,3.847,220,3.344,221,2.122,234,2.047,236,3.745,252,4.187,254,3.313,265,3.313,283,2.853,312,2.665,319,2.69,326,3.358,348,2.202,364,2.504,368,2.548,384,2.665,440,2.883,454,3.177,471,3.502,541,5.356,548,2.944,559,2.665,681,4.293,743,3.994,803,3.151,814,3.229,905,4.813,945,6.123,946,4.38,947,4.932,948,4.09,949,6.033,950,5.993,951,4.623,952,6.033,953,4.623,954,7.227,955,5.646,956,4.892,957,6.033,958,3.667,959,4.932,960,5.356,961,5.356,962,4.932,963,4.737,964,4.008,965,6.033,966,5.356,967,4.768]],["title/concepts/errors/#base-errors",[172,1.73,198,2.306]],["text/concepts/errors/#base-errors",[4,0.498,38,2.381,52,2.548,66,2.906,94,3.177,107,3.177,137,2.566,162,2.602,172,3.8,198,3.728,214,3.649,233,2.548,236,3.652,252,4.082,308,4.852,323,4.033,351,2.862,392,5.605,471,4.482,488,2.756,743,3.895,772,4.186,784,5.917,948,5.235,963,4.619,964,6.142,968,7.722,969,6.102,970,7.722,971,6.102,972,7.722,973,7.722,974,5.605]],["title/concepts/errors/#common-errors",[172,1.73,673,3.055]],["text/concepts/errors/#common-errors",[4,0.598,6,1.738,12,1.504,16,4.272,24,1.57,35,3.022,45,1.672,58,1.672,61,1.773,63,1.639,66,2.178,69,2.212,102,1.784,114,3.647,117,4.73,135,0.964,136,4.2,139,1.716,147,4.822,172,3.714,178,3.516,186,3.575,189,3.842,191,3.701,195,2.605,215,4.1,220,2.443,234,1.964,267,2.195,269,3.636,277,2.329,301,2.178,307,3.178,308,3.636,319,2.58,339,3.31,348,2.812,368,2.443,395,3.097,422,2.556,437,3.059,438,2.605,454,2.322,482,2.443,488,3.296,497,3.923,504,2.952,507,2.854,518,2.987,559,3.403,570,4.759,627,3.264,654,3.516,694,4.2,801,2.195,814,3.097,948,3.923,951,4.434,953,4.434,956,5.35,958,3.516,971,4.572,975,5.739,976,5.137,977,6.087,978,2.533,979,5.786,980,5.414,981,3.409,982,5.786,983,3.77,984,3.636,985,4.73,986,4.434,987,4.2,988,5.137,989,5.137,990,4.73,991,3.137,992,5.137,993,4.73,994,5.137,995,5.137,996,5.137,997,4.311,998,5.137,999,5.786,1000,5.786]],["title/concepts/errors/#attributes",[189,3.096]],["text/concepts/errors/#attributes",[4,0.596,33,3.805,80,3.357,147,5.296,172,3.532,187,4.043,193,4.095,214,2.943,267,2.829,343,3.601,369,3.423,955,6.979,975,5.556,980,6.979,987,6.573,1001,7.458,1002,3.563,1003,7.458,1004,7.458,1005,7.458,1006,7.458,1007,6.621,1008,10.139,1009,7.458,1010,7.458,1011,7.458,1012,7.458,1013,7.458,1014,7.458,1015,7.458]],["title/concepts/errors/#avoiding-limits",[437,2.525,664,2.694]],["text/concepts/errors/#avoiding-limits",[4,0.594,6,1.934,12,2.147,16,3.176,38,2.547,44,1.407,66,2.423,114,2.442,115,4.367,123,3.49,127,4.277,130,3.045,147,4.314,160,3.851,172,2.332,185,2.5,188,2.541,220,2.718,233,2.124,247,4.277,253,3.076,295,4.674,329,3.737,332,4.365,346,3.109,348,3.512,355,3.632,382,5.263,386,4.459,397,3.535,422,2.844,454,3.314,488,2.298,506,3.49,512,3.754,564,4.933,570,5.944,589,2.844,664,5.145,805,4.933,926,4.674,935,4.195,953,4.933,956,5.103,958,3.912,967,5.087,975,6.795,978,2.818,1016,6.753,1017,4.674,1018,8.26,1019,6.438,1020,5.263,1021,6.183,1022,5.853,1023,5.715,1024,7.333,1025,4.674,1026,5.715,1027,5.715]],["title/concepts/full-api/",[52,1.576,59,2.259]],["text/concepts/full-api/",[3,1.957,4,0.606,5,1.326,6,2.683,8,0.923,11,1.382,12,2.451,13,2.573,14,4.14,21,1.564,22,0.994,24,2.379,28,0.735,33,2.605,34,2.084,35,1.262,36,2.549,38,2.026,42,1.748,44,1.378,45,1.714,46,1.057,48,1.468,49,1.179,52,2.335,53,1.564,58,1.898,59,1.889,60,1.851,61,1.817,63,1.122,69,1.527,74,2.195,81,3.929,84,1.048,86,1.545,92,1.326,94,0.994,98,1.109,99,2.38,102,1.829,107,0.994,109,2.319,114,1.515,115,2.111,116,1.277,126,1.97,129,2.211,130,1.142,131,2.51,135,0.402,143,1.166,147,2.086,150,1.12,151,1.326,152,1.878,160,1.445,162,1.346,165,2.193,172,1.447,176,1.643,185,0.938,188,0.953,190,2.841,192,1.949,195,1.087,214,1.576,217,2.492,219,1.576,220,2.156,221,2.311,222,1.492,223,1.13,224,1.029,226,1.293,227,1.12,233,1.957,234,1.733,236,1.142,241,3.346,245,1.326,246,1.326,251,1.468,252,1.277,253,1.154,255,3.257,260,2.44,265,1.326,267,1.936,270,1.815,276,1.154,283,1.142,285,1.518,292,1.087,294,1.326,305,1.12,306,1.423,310,2.285,312,1.067,313,1.605,317,1.12,322,2.864,326,1.344,327,2.804,339,2.285,346,1.928,348,1.458,351,2.198,355,1.363,359,1.445,364,2.726,367,1.468,368,1.686,369,1.833,378,1.97,380,1.8,390,2.222,392,1.754,397,1.326,406,1.638,422,1.764,428,1.468,430,1.098,439,1.574,440,1.154,446,1.673,449,2.318,450,1.944,454,2.048,456,1.382,471,1.402,478,1.247,482,1.686,488,3.4,490,1.673,491,1.3,502,1.109,507,2.519,512,1.098,517,1.574,518,1.247,520,1.518,521,1.878,522,1.545,533,2.653,534,1.975,540,1.402,542,2.298,543,1.909,548,2.492,559,1.764,561,2.165,567,3.794,573,1.605,576,3.336,583,1.574,588,1.293,589,1.067,591,1.605,600,1.605,616,1.574,619,1.344,637,1.468,651,1.8,664,1.363,668,1.851,669,1.712,673,1.545,679,1.975,681,2.165,682,2.052,695,2.165,696,3.265,701,1.468,702,1.8,717,2.193,743,1.218,787,0.856,800,2.094,806,3.655,813,1.382,814,3.516,823,1.344,824,4.306,826,1.712,827,2.976,828,3.06,840,2.389,843,1.545,854,1.851,857,1.8,862,2.708,863,4.306,867,1.673,878,2.899,879,2.144,881,1.382,889,1.754,893,1.8,894,2.963,895,1.673,897,2.766,900,1.492,901,2.51,902,3.265,905,1.468,907,7.451,925,1.851,930,1.574,953,1.851,956,3.664,958,2.427,978,2.235,984,2.51,1002,1.154,1028,3.605,1029,1.975,1030,2.144,1031,2.416,1032,1.975,1033,3.156,1034,2.144,1035,3.545,1036,2.144,1037,2.416,1038,1.344,1039,2.976,1040,2.416,1041,1.909,1042,2.416,1043,2.416,1044,1.8,1045,2.416,1046,1.232,1047,2.144,1048,1.545,1049,1.851,1050,2.416,1051,1.909,1052,2.144,1053,2.144,1054,1.754,1055,1.8,1056,2.416,1057,2.467,1058,1.468,1059,2.144,1060,1.975,1061,2.416,1062,1.8,1063,1.423,1064,1.423,1065,2.052,1066,1.909,1067,1.754,1068,2.416,1069,1.8,1070,1.754,1071,2.416,1072,1.712,1073,2.416,1074,1.754,1075,1.8,1076,1.975,1077,1.8,1078,2.052,1079,2.416,1080,1.8,1081,3.265]],["title/concepts/full-api/#the-full-api",[52,1.576,59,2.259]],["text/concepts/full-api/#the-full-api",[3,2.325,4,0.595,5,1.787,6,2.856,11,1.861,12,2.388,14,3.725,21,1.554,22,0.988,24,2.373,28,0.99,33,3.182,34,2.384,35,1.699,36,2.681,38,1.565,42,2.221,44,1.417,45,2.036,46,1.424,48,1.977,49,1.588,52,2.058,53,1.987,58,2.207,59,1.539,60,2.493,61,1.911,63,1.18,69,1.94,74,2.681,84,1.411,86,2.081,92,1.787,94,1.339,102,2.173,107,1.339,109,2.503,116,1.72,126,1.605,129,2.387,130,1.539,143,1.571,151,1.787,152,2.294,162,1.096,176,2.088,185,1.264,188,1.284,190,1.811,192,2.476,195,1.465,214,2.003,219,2.003,220,2.143,221,2.687,222,2.01,223,1.38,224,1.386,226,1.741,227,1.508,233,2.058,234,2.117,236,1.539,241,3.519,245,1.787,246,1.787,251,1.977,252,1.72,253,1.555,255,3.869,260,2.424,265,1.787,267,1.924,270,2.306,276,1.466,283,1.539,285,2.044,292,1.465,305,1.508,306,1.917,310,2.903,312,1.437,313,2.161,322,3.402,327,3.425,339,2.903,346,2.45,348,1.852,351,1.206,355,1.835,359,1.946,364,3.17,367,1.977,368,2.143,369,2.329,378,2.503,380,2.424,390,2.824,392,2.362,397,1.787,422,1.437,428,1.977,430,1.479,449,2.945,450,2.224,456,1.861,471,1.888,478,1.679,482,2.143,488,3.207,502,1.493,512,1.479,517,2.12,520,2.044,521,2.294,522,2.081,533,3.371,534,2.66,540,1.888,542,2.808,543,2.571,559,1.437,561,1.764,573,2.161,576,3.254,583,2.12,616,2.12,619,1.811,637,1.977,664,1.835,668,2.493,669,2.305,673,2.081,679,2.66,681,2.751,682,2.764,695,2.751,717,2.786,787,1.153,800,2.436,806,4.251,813,1.861,814,3.771,823,1.811,824,5.114,827,3.78,828,3.888,840,3.035,843,2.081,854,2.493,857,2.424,862,3.44,863,5.114,867,2.254,878,3.683,879,2.888,881,1.861,893,2.424,894,3.62,895,2.254,897,3.515,900,2.01,901,3.188,902,4.148,907,6.395,925,2.493,930,2.12,978,2.221,984,3.188,1002,1.555,1028,3.084,1029,2.66,1030,2.888,1031,3.254,1032,2.66,1033,4.01,1034,2.888,1035,4.504,1036,2.888,1037,3.254,1038,1.811,1039,3.78,1040,3.254,1041,2.571,1042,3.254,1043,3.254,1044,2.424,1045,3.254,1046,1.66,1047,2.888,1048,2.081,1049,2.493,1050,3.254,1051,2.571,1052,2.888,1053,2.888,1054,2.362,1055,2.424,1056,3.254,1057,3.135,1058,1.977,1059,2.888,1060,2.66,1061,3.254,1062,2.424,1063,1.917,1064,1.917,1065,2.764,1066,2.571,1067,2.362,1068,3.254,1069,2.424,1070,2.362,1071,3.254,1072,2.305]],["title/concepts/full-api/#requests-in-parallel",[488,1.705,651,3.558]],["text/concepts/full-api/#requests-in-parallel",[4,0.611,6,1.384,8,1.762,12,2.466,13,3.634,14,4.43,21,1.412,22,0.898,24,2.274,36,1.981,38,2.369,44,1.185,52,2.172,61,1.412,63,0.872,81,5.301,98,2.115,99,3.362,109,1.51,114,2.497,115,3.481,126,2.274,129,1.44,131,4.137,135,0.768,147,3.439,150,2.136,160,2.757,162,1.553,165,3.615,172,2.385,190,3.664,217,3.748,220,1.946,233,1.521,241,2.6,260,2.202,267,1.748,294,2.531,317,2.136,326,2.565,351,2.846,406,3.125,422,2.036,439,3.003,440,2.202,446,3.192,454,3.082,488,3.463,490,3.192,491,2.143,507,3.789,518,2.379,548,3.748,559,2.036,561,2.498,567,5.359,576,3.272,588,2.467,589,2.036,591,3.062,600,3.062,696,5.382,701,2.801,702,3.434,743,2.325,814,2.467,826,3.266,889,3.346,905,2.801,907,8.011,953,3.532,956,5.176,958,4.001,978,2.017,1028,4.001,1073,4.609,1074,3.346,1075,3.434,1076,3.768,1077,3.434,1078,3.915,1079,4.609,1080,3.434,1081,5.382]],["title/concepts/sessions/",[139,1.416,365,2.382]],["text/concepts/sessions/",[1,1.12,2,2.028,4,0.594,5,2.518,6,2.3,7,3.469,9,2.394,10,3.864,11,3.752,12,2.429,13,1.241,16,2.83,38,1.769,44,1.462,45,1.657,49,2.237,51,1.13,53,2.246,54,2.746,58,1.895,59,1.353,61,1.404,63,0.541,64,1.661,67,1.901,69,1.094,72,3.176,74,1.23,75,1.831,80,2.064,90,1.982,92,2.518,98,3.01,102,1.414,105,1.219,107,1.177,109,1.88,123,1.551,125,2.078,129,2.243,131,1.798,132,1.94,134,1.551,135,1.195,137,0.951,139,2.809,140,1.686,150,2.125,152,2.412,162,1.545,176,3.151,185,2.787,188,1.13,192,2.237,198,1.382,214,1.13,217,1.397,227,1.326,233,1.513,234,0.971,236,1.353,241,1.614,244,2.193,246,1.572,254,2.518,267,1.085,270,2.084,271,3.032,273,1.572,276,1.325,277,0.865,291,1.495,294,2.518,301,1.077,302,2.786,303,4.557,305,1.326,306,1.686,310,1.637,312,1.264,315,1.753,316,1.739,319,1.276,322,2.214,323,1.495,328,4.445,329,2.661,331,1.661,337,1.982,343,2.769,346,1.382,348,2.094,350,1.982,351,1.699,358,2.028,359,1.712,363,1.572,364,1.188,365,5.203,366,2.34,368,1.208,369,2.104,371,2.193,372,6.605,375,2.078,384,1.264,387,3.102,394,2.132,395,1.532,398,1.495,402,1.94,404,2.078,414,2.193,415,1.768,422,2.025,430,2.981,436,1.661,439,1.865,440,2.191,450,0.786,456,1.637,467,1.901,470,1.712,482,2.422,488,1.022,502,1.313,506,1.551,507,2.83,512,2.084,517,1.865,521,2.11,534,2.34,542,1.288,546,2.261,548,1.397,558,1.353,559,1.264,604,1.982,609,2.132,615,2.193,631,2.34,641,1.443,659,1.661,662,4.273,666,1.637,667,2.193,681,1.551,698,2.261,745,2.96,801,1.739,813,2.623,823,2.551,835,1.982,869,5.026,870,4.106,886,2.586,892,1.593,894,1.661,919,1.901,933,4.419,935,1.865,946,2.078,974,2.078,991,3.109,1002,2.741,1028,2.786,1039,2.132,1048,1.831,1054,2.078,1082,2.541,1083,2.862,1084,2.862,1085,4.648,1086,5.356,1087,1.798,1088,2.34,1089,1.901,1090,2.028,1091,2.34,1092,2.261,1093,2.34,1094,2.261,1095,2.541,1096,5.343,1097,2.261,1098,2.261,1099,2.623,1100,1.982,1101,3.748,1102,4.29,1103,4.273,1104,3.748,1105,3.894,1106,4.29,1107,3.748,1108,7.049,1109,5.367,1110,4.872,1111,2.261,1112,2.541,1113,2.132,1114,2.862,1115,4.532,1116,4.585,1117,1.798,1118,4.585,1119,4.585,1120,3.623,1121,2.541,1122,2.028,1123,2.862,1124,2.862,1125,2.862,1126,2.862,1127,2.193,1128,2.862,1129,2.261,1130,5.736,1131,2.028,1132,2.261,1133,2.862,1134,2.862,1135,2.862,1136,2.078,1137,2.862,1138,2.862,1139,2.862]],["title/concepts/sessions/#session-files",[139,1.416,365,2.382]],["text/concepts/sessions/#session-files",[6,2.558,38,2.626,273,4.677,315,3.255,328,4.943,558,4.027,559,3.762,745,4.395,823,4.739,991,4.616,1082,7.56]],["title/concepts/sessions/#what-are-sessions",[365,3.096]],["text/concepts/sessions/#what-are-sessions",[4,0.469,7,2.425,9,3.176,12,2.015,38,2.391,44,1.196,45,1.688,54,3.245,58,2.24,59,2.763,61,2.375,63,1.105,72,4.047,74,2.511,90,4.047,98,2.681,102,2.391,105,2.489,109,1.915,123,3.167,129,2.896,132,3.961,135,1.291,137,1.941,139,2.999,150,3.593,162,2.612,176,3.969,185,3.379,188,2.306,192,3.784,217,2.851,233,2.558,241,3.296,267,2.216,270,3.524,271,4.099,276,2.24,277,1.766,291,3.052,302,4.712,303,3.911,315,2.233,322,2.821,328,3.391,337,4.047,343,2.821,348,2.133,364,2.425,365,4.623,366,4.776,369,2.681,372,4.617,394,4.353,404,4.241,414,4.477,415,3.609,430,3.955,440,2.792,482,3.274,507,3.825,517,3.807,521,3.2,542,2.63,548,2.851,667,4.477,745,3.016,801,2.941,813,4.435,823,3.251,870,3.342,886,3.296,894,3.391,919,3.881,991,3.167,1039,4.353,1048,3.737,1054,4.241,1083,5.843,1084,5.843,1085,6.166,1086,3.127,1087,3.671,1088,4.776,1089,3.881,1090,4.14,1091,4.776,1092,4.617,1093,4.776,1094,4.617,1095,5.187]],["title/concepts/sessions/#different-session-storage",[365,1.936,422,1.714,1096,2.578]],["text/concepts/sessions/#different-session-storage",[4,0.599,5,2.708,6,2.394,7,3.583,9,1.8,10,4.068,11,3.951,12,2.449,16,2.432,44,1.493,45,1.996,53,2.704,58,1.425,75,3.154,80,2.22,92,2.708,98,2.263,107,2.029,109,2.263,135,0.821,139,1.462,140,2.905,152,3.176,176,2.029,185,2.682,227,2.285,234,1.673,244,3.778,254,3.792,303,4.879,312,2.178,322,2.381,323,2.575,343,3.334,346,2.381,348,2.521,350,3.415,351,1.827,363,2.708,365,5.303,368,2.082,369,2.263,372,7.644,422,2.178,430,2.241,450,1.355,507,2.432,512,3.139,604,3.415,609,3.674,662,3.674,666,2.821,681,2.673,698,3.896,835,3.415,869,6.617,870,4.94,886,2.782,892,2.744,933,4.565,946,3.579,1002,3.808,1028,4.197,1086,5.284,1096,5.736,1097,3.896,1098,3.896,1099,3.951,1100,3.415,1101,4.031,1102,4.614,1103,5.938,1104,5.646,1105,4.188,1106,4.614,1107,5.646,1108,7.432,1109,6.462,1110,5.866,1111,3.896,1112,4.377,1113,3.674,1114,4.931,1115,3.896,1116,6.906,1117,3.098,1118,6.906,1119,6.906]],["title/concepts/sessions/#creating-your-own-storage",[54,1.999,1096,3.173]],["text/concepts/sessions/#creating-your-own-storage",[2,5.507,44,1.199,54,3.253,69,2.971,129,2.429,134,4.213,139,2.304,198,3.752,214,3.067,236,3.675,331,4.511,351,2.88,365,4.629,384,3.433,387,3.675,439,5.064,456,4.446,488,2.774,502,3.567,662,6.915,933,5.435,974,5.642,1085,5.507,1096,5.163,1101,6.354,1102,7.272,1105,6.601,1106,7.272,1115,7.334,1120,6.141,1121,6.899,1122,5.507]],["title/concepts/sessions/#string-sessions",[365,2.382,1086,2.556]],["text/concepts/sessions/#string-sessions",[1,2.244,4,0.594,5,3.147,6,2.299,7,3.576,10,4.509,11,4.379,12,2.491,13,2.486,16,3.776,44,1.419,49,3.735,51,2.262,53,2.244,58,1.656,64,3.326,67,3.807,72,3.97,80,2.58,92,3.147,98,3.513,125,4.16,131,3.601,135,1.275,139,2.727,246,3.147,271,3.03,294,4.203,301,2.157,303,3.861,305,2.656,306,3.376,310,3.279,316,3.483,319,2.556,328,5.338,329,4.442,358,4.061,359,3.428,365,4.299,371,4.392,375,4.16,387,4.076,395,3.068,398,2.993,402,3.885,436,3.326,440,2.738,467,3.807,470,3.428,482,2.42,506,3.107,534,4.685,546,4.529,615,4.392,631,4.685,641,2.891,659,3.326,745,2.958,935,3.734,991,3.107,1086,5.6,1108,7.519,1109,5.363,1110,4.868,1120,4.529,1123,5.731,1124,5.731,1125,5.731,1126,5.731,1127,4.392,1128,5.731,1129,4.529,1130,8.618,1131,4.061,1132,4.529,1133,5.731,1134,5.731,1135,5.731,1136,4.16,1137,5.731,1138,5.731,1139,5.731]],["title/concepts/strings/",[198,1.874,1086,2.077,1140,2.817]],["text/concepts/strings/",[4,0.612,6,1.694,12,0.971,16,4.011,24,1.013,36,2.921,42,2.469,44,0.87,45,1.079,52,1.232,53,2.208,58,1.63,61,1.728,67,2.481,80,1.681,89,3.675,118,4.611,124,3.097,130,2.667,152,2.074,155,2.234,163,3.285,180,4.719,187,3.057,189,2.813,198,1.803,219,1.474,220,1.577,225,2.361,226,1.999,230,1.803,234,1.914,238,2.646,254,2.051,255,2.051,264,2.862,265,2.051,267,1.416,270,4.034,276,1.63,291,5.392,301,1.405,309,2.433,315,1.427,326,2.078,340,2.307,348,2.059,375,2.711,398,1.95,450,1.867,491,2.782,499,2.862,502,1.714,521,3.144,533,2.481,576,1.591,613,2.587,629,5.796,637,3.428,641,2.845,715,4.461,801,2.578,813,3.227,843,2.389,881,2.136,978,2.469,984,2.347,1070,2.711,1086,3.638,1120,2.951,1140,4.095,1141,2.347,1142,3.734,1143,5.64,1144,6.034,1145,5.64,1146,4.611,1147,5.007,1148,6.433,1149,4.202,1150,5.64,1151,4.611,1152,4.611,1153,5.007,1154,4.095,1155,3.997,1156,5.007,1157,4.611,1158,4.322,1159,5.64,1160,5.64,1161,5.64,1162,5.64,1163,5.64,1164,5.007,1165,5.64,1166,2.914,1167,5.64,1168,5.64,1169,5.64,1170,3.172,1171,3.734,1172,5.007,1173,3.734,1174,3.734,1175,3.053,1176,2.813]],["title/concepts/strings/#string-based-debugging",[198,1.874,1086,2.077,1140,2.817]],["text/concepts/strings/#string-based-debugging",[4,0.612,6,1.702,12,0.977,16,4.022,24,1.02,36,2.932,42,2.48,44,0.874,45,1.086,52,1.24,53,2.219,58,1.638,61,1.736,67,2.496,80,1.692,89,3.692,118,4.633,124,3.112,130,2.68,152,2.084,155,2.248,163,3.295,180,4.731,187,3.072,189,2.826,219,1.483,220,1.587,225,2.372,226,2.011,230,1.814,234,1.923,238,2.663,254,2.064,255,2.064,264,2.879,265,2.064,267,1.425,270,4.043,276,1.638,291,5.398,301,1.414,309,2.448,315,1.436,326,2.091,340,2.321,348,2.069,375,2.728,398,1.963,450,1.874,491,2.789,499,2.879,502,1.725,521,3.152,533,2.496,576,1.601,613,2.603,629,5.81,637,3.444,641,2.858,715,4.475,801,2.588,813,3.242,843,2.403,881,2.15,978,2.48,984,2.361,1070,2.728,1086,3.033,1120,2.969,1140,2.728,1141,2.361,1142,3.758,1143,5.667,1144,6.057,1145,5.667,1146,4.633,1147,5.031,1148,6.453,1149,4.222,1150,5.667,1151,4.633,1152,4.633,1153,5.031,1154,4.114,1155,4.015,1156,5.031,1157,4.633,1158,4.343,1159,5.667,1160,5.667,1161,5.667,1162,5.667,1163,5.667,1164,5.031,1165,5.667,1166,2.92,1167,5.667,1168,5.667,1169,5.667,1170,3.192,1171,3.758,1172,5.031,1173,3.758,1174,3.758,1175,3.072,1176,2.826]],["title/concepts/updates/",[137,1.587,1177,4.469]],["text/concepts/updates/",[0,1.238,1,1.035,4,0.607,6,2.591,7,3.482,8,4.028,12,2.693,13,1.147,14,1.398,18,4.001,21,2.57,22,1.581,23,4.665,24,2.443,26,1.874,27,3.636,33,1.349,34,2.737,35,1.381,38,0.815,44,1.434,45,2.135,46,1.157,53,2.129,54,1.107,56,1.92,58,2.345,63,1.185,64,1.535,66,1.619,72,1.832,80,1.19,84,2.358,94,2.237,98,1.214,99,2.766,107,1.088,109,1.41,126,1.304,129,0.826,135,0.716,137,2.696,139,1.275,140,2.534,147,1.381,148,2.534,152,0.973,162,1.449,176,1.77,185,1.027,188,1.044,195,1.19,220,1.117,221,0.93,230,3.567,240,1.558,245,1.452,246,1.452,253,2.055,254,1.452,255,1.452,260,3.294,267,1.631,277,1.644,300,1.92,305,3.195,306,2.534,309,1.723,315,1.011,317,3.424,322,1.277,342,1.757,346,1.277,348,2.697,351,1.594,359,2.573,369,1.214,370,1.492,379,1.691,380,1.97,387,2.034,389,1.793,396,2.657,406,1.793,422,2.402,427,1.691,428,1.607,430,1.955,439,2.803,440,2.598,449,1.535,450,1.182,454,1.061,456,2.461,476,2.162,481,3.123,482,1.117,485,2.162,487,2.751,488,0.944,491,0.861,495,3.517,496,1.832,502,1.974,504,1.349,506,1.433,512,1.955,518,1.365,524,1.757,528,1.398,547,1.832,558,2.571,563,3.612,565,2.026,593,3.399,604,1.832,608,2.803,609,1.97,612,2.348,620,1.662,621,2.09,625,3.205,626,3.296,627,1.492,628,1.513,651,1.97,655,1.634,658,2.026,675,4.166,696,2.162,717,1.452,718,2.162,722,2.916,743,2.17,744,3.516,747,2.657,794,3.048,798,4.051,810,2.09,819,2.348,831,2.026,881,1.513,889,1.92,892,1.472,894,2.496,900,1.634,920,1.832,926,1.92,928,1.582,963,1.582,983,1.723,1047,2.348,1077,3.205,1087,2.703,1089,2.857,1113,1.97,1141,1.662,1166,1.734,1177,2.474,1178,2.348,1179,2.246,1180,2.246,1181,1.97,1182,2.348,1183,2.644,1184,1.662,1185,2.162,1186,1.874,1187,2.026,1188,2.644,1189,2.348,1190,2.644,1191,2.348,1192,2.644,1193,4.618,1194,2.348,1195,2.644,1196,2.644,1197,2.644,1198,2.644,1199,2.644,1200,4.618,1201,4.618,1202,2.348,1203,2.348,1204,2.246,1205,2.348,1206,2.348,1207,2.348,1208,2.348,1209,2.348,1210,2.348,1211,1.607,1212,1.832,1213,4.025,1214,2.162,1215,2.644,1216,3.516,1217,2.644,1218,2.246,1219,2.803,1220,2.162,1221,2.162,1222,4.445,1223,1.97,1224,2.644,1225,1.97,1226,2.162,1227,2.644,1228,2.348]],["title/concepts/updates/#updates-in-dept",[137,1.587,1177,4.469]],["text/concepts/updates/#updates-in-dept",[]],["title/concepts/updates/#properties-vs-methods",[34,1.143,56,2.817,230,1.874]],["text/concepts/updates/#properties-vs-methods",[4,0.605,8,3.973,12,2.505,18,3.383,21,2.662,22,1.508,23,2.756,24,2.615,34,2.919,44,1.194,58,2.676,63,1.752,66,2.193,84,3.77,94,3.185,140,3.433,162,1.964,176,3.185,221,2.05,230,4.471,253,3.699,260,2.785,267,2.211,277,2.628,300,4.231,309,3.798,342,3.872,348,2.127,370,3.288,389,3.951,422,2.575,439,3.798,487,4.951,495,4.917,524,3.872,655,3.601,717,3.201,819,5.174,894,3.383,926,4.231,928,3.486,1087,3.662,1166,2.468,1178,5.174,1179,4.951,1180,4.951,1181,4.342,1182,5.174,1183,5.828,1184,3.662,1185,4.765,1186,4.13,1187,4.466,1188,5.828,1189,5.174,1190,5.828,1191,5.174]],["title/concepts/updates/#events-without-the-client",[8,1.484,12,1.009,440,1.854]],["text/concepts/updates/#events-without-the-client",[0,2.749,1,2.299,4,0.601,6,2.789,7,3.228,8,4.017,12,2.772,13,2.546,14,3.104,18,3.408,21,1.799,22,1.143,23,5.01,24,2.111,26,4.16,27,3.408,34,2.291,44,1.346,45,2.248,58,2.248,64,3.408,72,4.067,94,2.416,98,2.695,109,1.924,135,0.978,139,2.306,152,2.159,267,2.227,348,2.143,387,2.777,422,3.436,427,3.755,440,2.805,449,3.408,450,1.613,456,4.45,485,4.8,496,4.067,502,2.695,518,3.03,593,6.146,604,4.067,722,3.98,747,3.627,794,4.16,798,6.499,900,3.627,1087,3.689,1113,4.374,1141,3.689,1192,5.871,1193,4.987,1194,5.212,1195,5.871,1196,5.871,1197,5.871,1198,5.871,1199,5.871,1200,4.987,1201,4.987,1202,5.212,1203,5.212,1204,4.987]],["title/concepts/updates/#events-without-decorators",[8,1.484,440,1.854,476,3.173]],["text/concepts/updates/#events-without-decorators",[4,0.598,6,2.049,7,3.556,8,3.95,12,2.435,18,3.96,21,2.09,22,1.329,23,4.431,27,3.96,34,2.524,44,1.517,45,1.971,46,2.986,53,2.671,109,2.236,126,3.365,185,2.65,240,4.019,315,2.608,348,2.49,430,3.101,450,1.874,481,6.221,609,5.083,747,4.215,794,4.834,810,5.391,881,3.903,892,3.796,894,3.96,920,4.725,1089,5.693,1166,2.175,1193,7.279,1200,7.279,1201,7.279,1205,6.056,1206,6.056,1207,6.056,1208,6.056,1209,6.056,1210,6.056,1211,4.146,1212,4.725]],["title/concepts/updates/#stopping-propagation-of-updates",[137,1.29,608,2.529,1213,3.632]],["text/concepts/updates/#stopping-propagation-of-updates",[4,0.598,6,2.038,8,4.05,12,2.219,18,4.956,21,2.616,22,1.663,23,4.781,24,1.841,33,3.461,34,1.998,35,3.543,44,1.047,45,1.96,66,2.553,129,2.12,137,2.254,147,3.543,195,3.054,254,3.725,255,3.725,322,3.275,346,3.275,396,4.191,430,3.083,454,2.722,482,2.864,502,3.113,506,3.677,512,3.881,547,4.699,608,4.42,722,4.599,743,4.307,744,6.981,963,4.058,1213,6.348,1214,5.546,1215,6.784,1216,6.981,1217,6.784,1218,5.762,1219,5.564,1220,5.546,1221,5.546]],["title/concepts/updates/#understanding-asyncio",[245,2.623,317,2.213]],["text/concepts/updates/#understanding-asyncio",[4,0.6,6,2.763,7,3.817,8,2.191,12,2.491,21,2.345,22,1.491,24,2.496,27,4.442,34,2.255,38,1.767,44,1.419,45,2.212,53,2.997,58,1.656,80,2.58,99,3.845,107,2.358,135,0.954,137,2.864,140,3.376,148,4.509,162,1.931,220,2.42,230,2.767,246,3.147,260,4.395,305,4.442,306,4.509,317,4.442,348,3.146,351,2.837,359,4.579,369,2.63,379,3.666,380,4.27,387,2.71,406,3.885,428,3.483,439,3.734,488,2.046,504,2.924,528,3.03,558,4.076,563,5.725,565,4.392,612,5.088,620,3.601,621,4.529,625,5.703,626,5.865,627,3.233,628,3.279,658,4.392,675,6.604,696,4.685,718,4.685,831,4.392,889,4.16,1047,5.088,1222,7.046,1223,4.27,1224,5.731,1225,4.27,1226,4.685]],["title/concepts/updates/#sequential-updates",[137,1.587,1077,3.558]],["text/concepts/updates/#sequential-updates",[4,0.587,7,3.413,12,2.495,54,3.443,58,2.377,137,2.733,188,3.246,396,5.081,491,2.677,651,6.127,983,5.359,1077,6.127,1227,8.224,1228,7.301]],["title/developing/coding-style/",[135,0.795,1229,3.238]],["text/developing/coding-style/",[4,0.553,28,2.03,39,5.305,40,3.061,42,2.92,44,1.029,46,2.92,63,1.262,66,3.49,67,4.431,69,3.23,98,3.061,105,3.95,107,2.745,109,2.186,111,4.842,114,2.53,129,2.085,135,1.407,139,1.978,216,3.871,220,2.817,246,3.663,255,3.663,312,2.947,318,3.712,323,3.484,348,3.084,358,4.726,363,3.663,367,4.054,369,3.061,398,3.484,451,5.922,482,2.817,537,4.054,659,3.871,664,3.763,710,3.99,861,5.453,886,3.763,1049,5.112,1064,3.929,1131,4.726,1166,2.957,1186,4.726,1229,5.728,1230,5.453,1231,5.112,1232,6.67,1233,6.67,1234,5.922,1235,6.67,1236,5.922,1237,5.922,1238,5.666,1239,5.922,1240,7.177,1241,5.922,1242,4.726,1243,5.112,1244,6.67,1245,6.133,1246,6.67,1247,4.97,1248,6.67,1249,4.62,1250,5.635]],["title/developing/coding-style/#coding-style",[135,0.795,1229,3.238]],["text/developing/coding-style/#coding-style",[4,0.543,28,2.047,39,5.326,40,3.087,42,2.944,44,1.038,46,2.944,63,1.273,66,3.503,67,4.468,69,3.247,98,3.087,105,3.966,107,2.768,109,2.204,111,4.883,114,2.551,129,2.102,135,1.12,139,1.994,216,3.904,220,2.84,246,3.694,255,3.694,312,2.972,318,3.743,323,3.513,348,3.1,358,4.766,363,3.694,367,4.088,369,3.087,398,3.513,451,5.971,482,2.84,537,4.088,659,3.904,664,3.795,710,4.024,861,5.499,886,3.795,1049,5.154,1064,3.962,1131,4.766,1166,2.968,1186,4.766,1229,4.56,1230,5.499,1231,5.154,1232,6.726,1233,6.726,1234,5.971,1235,6.726,1236,5.971,1237,5.971,1238,5.714,1239,5.971,1240,7.215,1241,5.971,1242,4.766,1243,5.154,1244,6.726,1245,6.166,1246,6.726,1247,5.012,1248,6.726,1249,4.659,1250,5.657]],["title/developing/philosophy/",[1251,5.808]],["text/developing/philosophy/",[4,0.35,38,3.146,40,2.979,44,1.489,57,5.046,61,1.988,63,1.571,66,2.442,69,3.174,78,5.762,94,2.67,95,3.167,99,2.604,121,4.495,127,4.311,129,2.595,131,4.078,132,4.4,133,5.306,135,1.081,137,2.156,139,2.462,142,4.711,143,3.134,155,3.882,156,5.306,162,2.187,178,3.944,194,3.39,199,4.229,245,3.564,246,3.564,260,3.101,263,5.883,269,4.078,273,3.564,292,2.922,312,3.668,315,3.174,346,3.134,348,2.369,359,3.882,369,2.979,384,2.867,390,4.62,488,2.317,512,2.95,528,3.431,533,4.311,560,4.151,669,4.599,673,4.151,693,5.629,804,4.599,900,4.009,906,5.306,933,3.431,974,4.711,981,3.823,1231,4.973,1251,6.073,1252,5.306,1253,6.49,1254,5.762,1255,6.49,1256,4.973,1257,6.49,1258,5.513,1259,5.762,1260,6.49,1261,8.303,1262,6.49,1263,5.762,1264,4.973,1265,5.306,1266,5.128,1267,6.49,1268,1.607,1269,6.49,1270,5.306]],["title/developing/philosophy/#philosophy",[1251,5.808]],["text/developing/philosophy/#philosophy",[38,3.151,40,2.995,44,1.492,57,5.063,61,1.999,63,1.576,66,2.456,69,3.185,78,5.793,94,2.685,95,3.184,99,2.618,121,4.52,127,4.335,129,2.604,131,4.1,132,4.424,133,5.335,135,1.087,137,2.168,139,2.47,142,4.737,143,3.151,155,3.903,156,5.335,162,2.199,178,3.966,194,3.408,199,4.252,245,3.583,246,3.583,260,3.118,263,5.903,269,4.1,273,3.583,292,2.937,312,3.681,315,3.185,346,3.151,348,2.382,359,3.903,369,2.995,384,2.883,390,4.636,488,2.329,512,2.966,528,3.45,533,4.335,560,4.174,669,4.624,673,4.174,693,5.648,804,4.624,900,4.031,906,5.335,933,3.45,974,4.737,981,3.844,1231,5,1252,5.335,1253,6.525,1254,5.793,1255,6.525,1256,5,1257,6.525,1258,5.543,1259,5.793,1260,6.525,1261,8.332,1262,6.525,1263,5.793,1264,5,1265,5.335,1266,5.156,1267,6.525,1268,1.616,1269,6.525,1270,5.335]],["title/developing/project-structure/",[1038,2.658,1271,4.057]],["text/developing/project-structure/",[0,2.412,3,1.7,4,0.527,6,1.548,7,2.955,12,1.339,32,2.83,34,2.404,38,2.196,43,3.493,44,1.358,45,1.489,46,2.255,52,1.7,57,3.132,58,1.489,61,2.5,63,1.544,66,3.071,69,2.722,71,3.423,81,3.082,99,2.857,102,1.589,106,3.132,129,2.225,132,3.493,135,1.466,137,1.712,139,2.739,148,3.035,150,3.3,152,1.895,162,2.399,172,1.867,176,2.12,195,2.32,201,3.423,213,4.399,216,2.991,217,2.515,220,3.007,224,3.033,225,2.157,227,2.388,251,3.132,260,3.402,283,2.437,292,2.32,310,2.948,315,3.119,319,4.366,331,4.736,367,3.132,368,3.901,370,2.907,378,2.542,384,2.276,387,2.437,450,1.956,460,3.91,466,3.569,478,2.66,487,3.296,488,1.839,490,3.569,495,2.629,518,2.66,521,1.895,528,2.724,542,2.32,548,2.515,549,3.183,558,3.368,561,2.793,583,3.357,609,3.839,616,3.357,641,2.599,662,3.839,684,5.046,705,3.839,708,3.949,711,4.259,717,2.83,800,2.271,814,2.758,892,2.868,901,3.238,908,3.296,925,3.949,964,3.423,966,4.574,1022,3.651,1028,3.132,1038,2.868,1048,3.296,1049,3.949,1069,3.839,1072,5.046,1085,3.651,1099,2.948,1113,3.839,1122,3.651,1136,3.741,1245,3.741,1271,4.377,1272,5.153,1273,3.741,1274,5.153,1275,5.153,1276,5.153,1277,5.153,1278,4.574,1279,4.574,1280,4.213,1281,3.949,1282,4.574,1283,5.153,1284,4.072,1285,3.569,1286,3.839,1287,3.949,1288,4.072,1289,3.651,1290,5.153,1291,3.569,1292,3.569,1293,4.574,1294,4.213,1295,5.153,1296,4.377,1297,5.153,1298,3.423,1299,4.213,1300,5.153,1301,5.153,1302,4.072,1303,4.574]],["title/developing/project-structure/#project-structure",[1038,2.658,1271,4.057]],["text/developing/project-structure/#project-structure",[]],["title/developing/project-structure/#main-interface",[260,2.282,684,3.384]],["text/developing/project-structure/#main-interface",[4,0.48,7,3.325,12,1.596,34,2.627,38,1.894,43,4.164,44,1.376,45,1.775,46,2.688,57,3.732,58,1.775,61,2.732,63,1.687,66,3.356,71,4.08,102,1.894,129,2.504,132,4.164,137,2.041,139,2.375,148,3.618,150,3.713,152,2.259,162,2.7,176,2.527,201,4.08,213,4.95,216,3.564,217,2.997,220,3.383,224,2.616,225,2.571,227,2.847,260,2.935,283,2.904,292,2.765,315,3.063,331,3.564,367,3.732,368,3.765,378,3.03,387,2.904,450,1.687,460,3.373,466,4.254,478,3.17,487,3.928,490,4.254,495,3.133,518,3.17,521,2.259,528,3.247,542,2.765,548,2.997,549,3.794,558,3.789,561,3.329,583,4.002,609,4.576,616,4.002,641,3.098,662,4.576,684,4.352,708,4.706,717,3.373,814,3.287,901,3.859,908,3.928,925,4.706,1028,3.732,1048,3.928,1072,4.352,1085,4.352,1113,4.576,1245,4.458,1272,6.141,1273,4.458,1274,6.141,1275,6.141,1276,6.141,1277,6.141,1278,5.452,1279,5.452,1280,5.021,1281,4.706,1282,5.452,1283,6.141,1284,4.853,1285,4.254,1286,4.576,1287,4.706,1288,4.853,1289,4.352,1290,6.141,1291,4.254,1292,4.254,1293,5.452]],["title/developing/project-structure/#auto-generated-code",[135,0.646,319,1.731,1022,2.75]],["text/developing/project-structure/#auto-generated-code",[0,3.346,3,2.358,4,0.385,6,2.147,32,3.925,38,2.204,44,1.103,52,2.358,69,3.372,81,4.275,99,3.539,106,4.343,135,1.594,139,2.837,172,2.589,195,3.217,224,3.045,251,4.343,310,4.089,315,2.732,319,4.662,331,5.12,368,3.725,370,4.032,384,3.157,450,1.964,460,3.925,488,2.551,705,5.325,711,5.277,800,2.813,892,3.977,964,4.748,966,6.345,1049,5.477,1069,5.325,1072,5.064,1099,4.089,1122,5.064,1136,5.188,1294,5.843,1295,7.147,1296,6.071,1297,7.147,1298,4.748,1299,5.843,1300,7.147,1301,7.147,1302,5.648,1303,6.345]],["title/developing/telegram-api-in-other-languages/",[52,1.281,61,1.189,560,2.482]],["text/developing/telegram-api-in-other-languages/",[2,3.465,3,2.618,4,0.584,9,1.785,12,2.062,28,1.488,29,2.223,32,2.686,33,2.495,36,2.102,38,2.898,44,1.328,45,2.293,52,2.618,55,3.128,58,1.413,61,3.018,69,3.289,79,3.128,92,2.686,103,3.128,121,4.756,126,2.413,129,2.146,134,4.913,143,2.361,146,3.315,148,2.881,151,2.686,167,4.854,176,2.012,202,3.186,210,3.387,213,4.242,214,1.93,220,2.899,221,1.72,233,2.266,236,2.313,238,3.465,241,2.759,245,2.686,252,2.585,254,2.686,267,1.855,283,2.313,312,2.16,331,4.605,343,2.361,344,3.186,351,2.941,384,2.16,393,3.644,397,2.686,415,3.021,421,3.249,438,2.202,471,2.838,488,1.746,504,2.495,516,4.342,551,3.021,560,5.797,591,3.249,640,3.55,641,2.467,666,2.798,691,4.984,693,5.833,695,2.651,772,2.651,805,3.748,894,2.838,933,4.968,991,3.722,1038,2.722,1117,4.315,1131,3.465,1234,4.342,1249,3.387,1250,2.972,1258,6.74,1268,1.211,1304,6.095,1305,4.89,1306,4.89,1307,4.89,1308,4.89,1309,4.342,1310,4.89,1311,4.89,1312,4.89,1313,2.524,1314,6.425,1315,4.89,1316,4.89,1317,4.89,1318,4.342,1319,4.89,1320,4.89,1321,4.89,1322,4.89,1323,6.425,1324,4.89,1325,4.89,1326,4.89,1327,4.342,1328,4.89,1329,6.866,1330,5.832,1331,4.89,1332,4.89,1333,4.89,1334,4.89,1335,6.425,1336,4.89,1337,4.89,1338,4.342,1339,4.89,1340,4.342,1341,4.342,1342,4.89,1343,3.998,1344,4.89,1345,4.89,1346,4.89,1347,2.925,1348,4.89,1349,2.925,1350,3.998,1351,4.342,1352,4.342,1353,4.89,1354,4.89]],["title/developing/telegram-api-in-other-languages/#telegram-api-in-other-languages",[52,1.281,61,1.189,560,2.482]],["text/developing/telegram-api-in-other-languages/#telegram-api-in-other-languages",[3,2.659,4,0.434,45,2.329,58,2.329,61,2.469,69,3.625,134,5.141,148,4.747,167,4.546,214,3.181,220,3.403,233,2.659,245,4.425,283,3.811,351,2.986,415,4.978,516,7.154,560,6.066,640,5.85,666,4.61,805,6.175,933,4.26,1304,8.419]],["title/developing/telegram-api-in-other-languages/#c",[121,4.299]],["text/developing/telegram-api-in-other-languages/#c",[4,0.563,12,2.13,61,2.511,79,5.242,103,5.242,238,5.808,252,4.333,254,4.501,384,3.621,393,6.107,772,4.443,933,4.333,1268,2.03,1305,8.196,1306,8.196,1307,8.196,1308,8.196,1309,7.276,1310,8.196]],["title/developing/telegram-api-in-other-languages/#c_1",[121,4.299]],["text/developing/telegram-api-in-other-languages/#c_1",[3,2.742,4,0.448,29,3.777,38,2.562,44,1.282,61,2.546,167,5.447,176,3.419,221,2.923,233,2.742,236,3.93,691,6.032,693,5.633,1250,5.05,1311,8.31,1312,8.31,1313,4.289]],["title/developing/telegram-api-in-other-languages/#javascript",[1314,5.808]],["text/developing/telegram-api-in-other-languages/#javascript",[4,0.518,12,2.145,32,4.532,38,2.545,61,2.528,134,4.473,933,4.363,991,4.473,1117,5.186,1234,7.326,1314,7.722,1315,8.252,1316,8.252,1317,8.252,1318,7.326,1319,8.252,1320,8.252,1321,8.252,1322,8.252]],["title/developing/telegram-api-in-other-languages/#kotlin",[1323,5.808]],["text/developing/telegram-api-in-other-languages/#kotlin",[4,0.551,61,2.563,129,2.615,167,4.72,343,4.04,351,3.101,560,5.352,693,5.673,933,4.424,1323,7.83,1324,8.368,1325,8.368,1326,8.368,1327,7.428]],["title/developing/telegram-api-in-other-languages/#language-agnostic",[560,3.055,1328,4.776]],["text/developing/telegram-api-in-other-languages/#language-agnostic",[12,2.102,44,1.557,52,3.135,55,5.172,61,2.477,146,5.482,151,4.44,267,3.067,331,5.515,488,2.886,591,5.371,691,5.87,1117,5.081,1249,5.601,1329,9.502,1330,8.071,1331,8.086,1332,8.086,1333,8.086,1334,8.086]],["title/developing/telegram-api-in-other-languages/#php",[1335,5.808]],["text/developing/telegram-api-in-other-languages/#php",[3,2.81,210,5.899,213,5.261,312,3.762,397,4.677,933,4.502,1038,4.739,1131,6.034,1335,7.969,1336,8.516,1337,8.516]],["title/developing/telegram-api-in-other-languages/#python",[69,2.373]],["text/developing/telegram-api-in-other-languages/#python",[28,2.412,36,3.407,38,3.086,45,2.29,61,2.428,69,3.03,92,4.352,143,3.827,202,5.164,213,4.896,220,3.347,241,4.471,344,5.164,351,2.937,471,4.6,551,4.896,641,3.998,693,5.373,695,4.296,894,4.6,1338,7.036,1339,7.926,1340,7.036,1341,7.036,1342,7.926,1343,6.479,1344,7.926,1345,7.926,1346,7.926,1347,4.741]],["title/developing/telegram-api-in-other-languages/#rust",[1258,5.272]],["text/developing/telegram-api-in-other-languages/#rust",[2,5.71,4,0.511,9,2.942,33,4.111,38,2.485,45,2.329,126,3.975,129,2.518,134,5.141,331,4.677,421,5.353,438,3.628,504,4.111,693,5.463,933,4.26,991,4.368,1258,8.055,1348,8.059,1349,4.82,1350,6.588,1351,7.154,1352,7.154,1353,8.059,1354,8.059]],["title/developing/test-servers/",[548,2.331,1355,2.813]],["text/developing/test-servers/",[1,2.271,4,0.603,7,3.202,10,4.545,11,4.414,12,2.501,28,1.765,29,2.636,44,1.191,45,1.676,53,2.271,61,1.777,80,2.611,98,2.662,99,2.327,107,2.386,109,1.901,114,2.2,123,4.182,129,1.813,135,1.285,143,2.801,150,3.576,165,3.185,188,2.289,234,1.968,255,3.185,267,2.2,271,4.584,292,2.611,307,4.237,319,2.586,348,2.117,365,4.609,372,4.583,414,4.445,415,3.583,482,3.258,502,2.662,504,2.959,512,2.636,548,3.765,559,2.562,588,4.13,745,2.994,758,4.445,935,3.779,977,4.583,991,3.144,1002,3.687,1064,5.107,1129,4.583,1166,2.765,1250,3.525,1349,3.47,1355,5.107,1356,7.716,1357,7.303,1358,7.716,1359,5.8,1360,4.11,1361,4.211,1362,4.321,1363,5.149,1364,4.742,1365,4.742,1366,5.8,1367,5.8,1368,5.8,1369,5.149,1370,7.716,1371,5.149,1372,7.716,1373,5.8,1374,5.8]],["title/developing/test-servers/#test-servers",[548,2.331,1355,2.813]],["text/developing/test-servers/#test-servers",[1,2.287,4,0.603,7,3.217,10,4.567,11,4.435,12,2.507,28,1.778,29,2.655,44,1.196,45,1.688,53,2.287,61,1.79,80,2.63,98,2.681,99,2.344,107,2.404,109,1.915,114,2.216,123,4.203,129,1.826,135,1.291,143,2.821,150,3.593,165,3.208,188,2.306,234,1.983,255,3.208,267,2.216,271,4.6,292,2.63,307,4.258,319,2.605,348,2.133,365,4.623,372,4.617,414,4.477,415,3.609,482,3.274,502,2.681,504,2.981,512,2.655,548,2.851,559,2.581,588,4.15,745,3.016,758,4.477,935,3.807,977,4.617,991,3.167,1002,3.705,1064,5.126,1129,4.617,1166,2.775,1250,3.551,1349,3.495,1355,4.567,1356,7.753,1357,7.324,1358,7.753,1359,5.843,1360,4.14,1361,4.241,1362,4.353,1363,5.187,1364,4.776,1365,4.776,1366,5.843,1367,5.843,1368,5.843,1369,5.187,1370,7.753,1371,5.187,1372,7.753,1373,5.843,1374,5.843]],["title/developing/testing/",[1355,3.656]],["text/developing/testing/",[1,3.039,2,2.78,3,1.295,4,0.577,6,1.758,8,1.5,9,1.432,21,1.202,22,1.14,24,1.065,29,1.783,33,2.002,34,1.156,40,2.686,42,2.562,44,1.489,45,1.134,59,2.768,66,1.477,67,2.606,69,2.238,71,2.606,90,2.718,99,3.494,106,2.384,109,1.286,113,3.814,126,2.888,127,2.606,129,1.226,130,1.855,135,1.45,139,1.735,150,2.713,151,2.155,152,1.443,155,2.347,172,2.537,176,1.614,185,1.524,191,2.51,192,1.915,199,2.556,214,1.549,225,1.642,227,1.818,229,2.78,233,1.295,236,2.768,238,4.148,254,2.155,265,2.155,294,2.155,302,2.384,305,3.245,312,1.733,315,2.238,317,4.037,318,2.183,319,2.61,332,4.747,343,1.894,351,2.169,354,4.849,364,2.429,367,3.557,368,2.472,377,2.718,378,4.297,384,1.733,390,2.183,397,2.155,415,2.424,430,1.783,436,2.277,437,2.074,458,2.848,468,4.972,488,2.499,507,1.935,519,3.007,522,2.51,548,1.915,551,3.616,584,2.848,593,6.882,640,2.848,644,4.972,669,2.78,681,3.173,694,5.083,747,2.424,803,3.057,829,2.606,835,2.718,877,2.465,882,2.78,885,2.51,933,2.074,946,2.848,956,2.424,964,4.651,984,2.465,1033,3.1,1085,2.78,1140,2.848,1220,3.208,1230,3.208,1249,2.718,1268,1.45,1349,2.347,1355,6.259,1360,2.78,1375,7.997,1376,7.665,1377,7.398,1378,7.372,1379,7.771,1380,3.333,1381,6.789,1382,3.923,1383,3.923,1384,3.483,1385,9.796,1386,5.853,1387,5.853,1388,7.001,1389,4.961,1390,4.625,1391,2.51,1392,7.001,1393,5.196,1394,5.853,1395,3.923,1396,3.923,1397,3.1,1398,3.923,1399,3.923,1400,5.853,1401,5.196,1402,3.1,1403,3.483,1404,3.923,1405,3.007,1406,3.333,1407,3.923,1408,3.923,1409,3.923,1410,3.923,1411,3.923,1412,3.923,1413,3.923,1414,3.923,1415,3.333,1416,3.923,1417,3.923,1418,2.78,1419,3.923,1420,3.923,1421,3.483]],["title/developing/testing/#tests",[1355,3.656]],["text/developing/testing/#tests",[3,2.65,40,4.344,44,1.239,45,2.321,59,3.798,130,3.798,229,5.691,317,4.387,332,5.445,522,5.137,640,5.83,644,6.822,694,5.83,803,4.195,885,5.137,1355,4.731,1375,7.952,1376,6.822,1377,6.822,1378,7.13,1379,7.516,1380,6.822,1381,6.566,1382,8.032]],["title/developing/testing/#brief-introduction-to-pytest",[354,2.688,1375,3.067,1381,3.173]],["text/developing/testing/#brief-introduction-to-pytest",[1,3.424,2,3.597,4,0.577,6,2.117,8,1.941,9,1.853,21,1.555,22,1.373,24,1.378,29,2.307,33,2.59,34,1.495,44,1.467,59,2.401,66,1.911,67,3.372,69,1.941,71,3.372,90,3.516,99,2.828,106,3.085,109,1.664,129,1.586,135,1.348,139,1.505,150,3.266,151,2.788,152,1.867,155,3.037,172,2.553,191,3.247,192,2.477,199,3.308,214,2.004,225,2.125,227,2.353,236,3.333,238,4.994,254,2.788,265,2.788,302,3.085,305,3.752,312,2.243,315,2.694,317,4.053,318,2.825,332,3.442,343,2.451,351,1.881,364,2.925,368,2.976,377,3.516,378,4.691,384,2.243,415,3.136,436,2.946,437,2.684,468,4.312,488,2.516,519,3.89,548,2.477,551,3.136,584,3.685,593,6.91,644,4.312,669,3.597,681,2.752,694,3.685,747,3.136,803,2.652,829,3.372,835,3.516,882,3.597,933,2.684,946,3.685,964,3.372,984,3.19,1085,3.597,1140,3.685,1220,4.15,1230,4.15,1249,3.516,1268,1.257,1349,3.037,1355,6.257,1360,3.597,1375,7.706,1383,5.077,1384,4.507,1385,10.328,1386,7.048,1387,7.048,1388,8.095,1389,5.736,1390,5.569,1391,3.247,1392,8.095,1393,6.256,1394,7.048,1395,5.077,1396,5.077,1397,4.012,1398,5.077,1399,5.077,1400,7.048,1401,6.256,1402,4.012,1403,4.507,1404,5.077]],["title/developing/testing/#brief-introduction-to-tox",[354,2.688,1376,3.297,1381,3.173]],["text/developing/testing/#brief-introduction-to-tox",[4,0.49,42,3.986,44,1.162,69,2.878,99,4.081,126,3.714,127,5.001,139,2.232,185,2.924,294,4.134,332,5.104,351,2.79,390,4.189,458,5.465,468,6.394,488,2.687,593,7.195,681,4.081,694,5.465,877,4.73,956,4.651,964,6.049,1355,5.767,1375,5.949,1376,8.64,1377,8.847,1405,5.769,1406,6.394,1407,7.528,1408,7.528,1409,7.528,1410,7.528]],["title/developing/testing/#brief-introduction-to-pytest-cov",[354,2.264,1375,2.583,1378,2.902,1381,2.672]],["text/developing/testing/#brief-introduction-to-pytest-cov",[4,0.527,44,1.405,113,5.933,126,3.714,135,1.63,172,2.727,176,3.097,233,2.484,319,4.06,367,5.534,397,4.134,430,3.421,507,3.714,551,4.651,1033,5.949,1268,1.864,1355,5.767,1375,5.949,1376,6.394,1378,8.691,1379,9.518,1381,6.154,1411,7.528,1412,7.528,1413,7.528,1414,7.528,1415,6.394,1416,7.528,1417,7.528,1418,5.334,1419,7.528,1420,7.528,1421,6.683]],["title/developing/tips-for-porting-the-project/",[415,2.398,1038,2.16,1422,3.297]],["text/developing/tips-for-porting-the-project/",[1,3.525,4,0.485,39,4.227,40,3.391,44,1.14,54,3.093,68,3.955,98,3.391,134,4.005,135,1.683,192,4.394,215,5.236,217,3.606,241,5.079,273,4.058,303,3.727,318,4.112,326,4.112,348,2.697,404,5.364,415,4.565,482,3.12,522,4.726,548,3.606,668,5.662,681,4.005,745,3.814,846,5.662,892,4.112,932,5.009,1038,5.01,1103,5.505,1122,5.236,1186,5.236,1268,1.83,1284,5.839,1422,6.276,1423,7.389,1424,5.009,1425,5.839,1426,6.041,1427,6.041,1428,7.389,1429,7.389,1430,5.662,1431,7.389]],["title/developing/tips-for-porting-the-project/#tips-for-porting-the-project",[415,2.398,1038,2.16,1422,3.297]],["text/developing/tips-for-porting-the-project/#tips-for-porting-the-project",[1,3.551,4,0.403,39,4.28,40,3.433,44,1.154,54,3.131,68,4.004,98,3.433,134,4.055,135,1.69,192,4.427,215,5.301,217,3.651,241,5.117,273,4.108,303,3.773,318,4.163,326,4.163,348,2.731,404,5.431,482,3.159,522,4.785,548,3.651,668,5.733,681,4.055,745,3.861,846,5.733,892,4.163,932,5.072,1038,4.163,1103,5.574,1122,5.301,1186,5.301,1268,1.853,1284,5.912,1423,7.481,1424,5.072,1425,5.912,1426,6.116,1427,6.116,1428,7.481,1429,7.481,1430,5.733,1431,7.481]],["title/developing/understanding-the-type-language/",[245,2.131,450,1.066,560,2.482]],["text/developing/understanding-the-type-language/",[4,0.44,9,2.307,38,1.949,39,3.615,44,0.975,61,1.936,67,4.198,68,4.369,70,4.284,80,3.674,92,3.47,94,2.6,134,3.426,135,1.506,136,4.587,139,2.42,152,3.002,201,4.198,220,4.034,221,2.223,224,2.692,225,2.645,233,2.085,237,3.615,240,3.723,245,3.47,246,3.47,252,3.341,276,1.826,292,2.845,315,2.416,318,3.517,319,4.26,326,3.517,351,2.342,354,4.377,367,4.96,368,2.668,370,4.604,384,2.792,387,2.989,428,3.84,444,5.61,450,2.625,471,4.737,479,5.166,482,2.668,487,4.042,488,2.256,560,6.111,627,4.604,641,3.187,693,5.533,800,2.883,803,3.301,829,4.198,846,4.842,883,4.117,892,3.517,1028,3.84,1038,3.517,1141,3.971,1249,4.377,1291,4.377,1294,5.166,1432,6.319,1433,4.478,1434,6.319,1435,6.319,1436,6.319,1437,6.262,1438,5.166,1439,8.162,1440,3.301,1441,4.993,1442,6.319,1443,3.971,1444,5.61,1445,4.708,1446,5.61]],["title/developing/understanding-the-type-language/#understanding-the-type-language",[245,2.131,450,1.066,560,2.482]],["text/developing/understanding-the-type-language/#understanding-the-type-language",[4,0.344,9,2.331,38,1.969,39,3.654,44,0.985,61,1.956,67,4.243,68,4.398,70,4.33,80,3.699,92,3.507,94,2.628,134,3.462,135,1.513,136,4.636,139,2.436,152,3.022,201,4.243,220,4.051,221,2.246,224,2.721,225,2.673,233,2.107,237,3.654,240,3.762,246,3.507,252,3.376,276,1.845,292,2.875,315,2.441,318,3.554,319,4.277,326,3.554,351,2.367,354,4.424,367,4.994,368,2.697,370,4.636,384,2.821,387,3.02,428,3.881,444,5.67,450,2.496,471,4.769,479,5.221,482,2.697,487,4.085,488,2.28,560,5.811,627,4.636,641,3.221,693,5.571,800,2.897,803,3.336,829,4.243,846,4.894,883,4.161,892,3.554,1028,3.881,1038,3.554,1141,4.013,1249,4.424,1291,4.424,1294,5.221,1432,6.387,1433,4.525,1434,6.387,1435,6.387,1436,6.387,1437,6.293,1438,5.221,1439,8.217,1440,3.336,1441,5.047,1442,6.387,1443,4.013,1444,5.67,1445,4.758,1446,5.67]],["title/examples/chats-and-channels/",[129,1.213,277,1.173,801,1.472]],["text/examples/chats-and-channels/",[4,0.602,6,2.56,9,1.524,12,2.316,24,2.417,36,1.795,40,1.917,44,1.315,52,1.378,53,2.843,58,1.207,59,1.975,63,0.79,66,1.572,74,2.635,80,1.88,98,2.813,99,2.459,102,1.89,109,2.622,129,1.305,137,1.388,146,2.831,151,2.293,152,2.254,176,1.718,183,2.538,188,1.648,195,3.269,214,1.648,219,1.648,231,3.458,233,1.378,234,2.08,245,2.293,247,2.774,253,1.995,261,2.424,273,2.293,274,2.208,276,1.207,277,2.855,279,4.453,305,1.936,310,2.389,315,2.776,322,2.96,327,3.366,329,2.424,346,2.016,348,2.651,351,1.548,364,1.733,373,2.389,387,1.975,395,3.281,397,2.293,428,2.538,438,1.88,440,1.995,447,2.831,448,6.041,449,3.558,456,4.155,482,1.763,491,1.995,502,3.333,503,1.898,518,3.164,521,2.254,525,2.155,551,2.58,556,2.538,559,1.845,592,2.671,606,3.3,619,2.324,641,2.106,654,2.538,655,3.787,666,2.389,681,2.264,707,3.111,747,2.58,793,3.414,800,3.073,801,4.032,806,2.324,827,3.111,840,2.498,875,5.442,886,2.356,932,2.831,935,3.994,958,2.538,1034,3.707,1044,4.567,1052,3.707,1067,3.032,1088,3.414,1155,4.343,1430,4.697,1447,3.414,1448,7.263,1449,6.796,1450,6.13,1451,4.176,1452,2.58,1453,4.176,1454,4.176,1455,4.176,1456,7.263,1457,4.176,1458,7.263,1459,7.263,1460,6.13,1461,4.176,1462,4.176,1463,4.176,1464,4.176,1465,5.937,1466,5.272,1467,2.959,1468,3.707,1469,6.13,1470,4.176,1471,6.13,1472,4.246,1473,4.176,1474,3.547,1475,4.176,1476,4.176]],["title/examples/chats-and-channels/#working-with-chats-and-channels",[129,1.213,277,1.173,801,1.472]],["text/examples/chats-and-channels/#working-with-chats-and-channels",[4,0.464,40,3.95,52,2.84,59,4.071,109,2.821,234,2.921,322,4.156,840,5.149]],["title/examples/chats-and-channels/#joining-a-chat-or-channel",[277,1.173,448,2.482,801,1.472]],["text/examples/chats-and-channels/#joining-a-chat-or-channel",[4,0.52,109,2.723,277,2.919,279,5.373,395,4.448,428,5.05,447,5.633,491,2.704,793,6.793,800,3.254,801,3.152,1155,5.888,1447,6.793]],["title/examples/chats-and-channels/#joining-a-public-channel",[448,2.482,707,2.892,801,1.472]],["text/examples/chats-and-channels/#joining-a-public-channel",[4,0.583,6,2.746,12,2.376,24,2.48,44,1.169,53,2.966,66,2.851,98,3.477,233,2.5,315,3.494,322,3.658,387,3.583,438,3.41,448,5.846,502,3.477,521,3.362,800,2.416,801,4.02,1034,6.725,1067,5.499,1448,9.816,1449,8.553,1450,9.14,1451,7.575]],["title/examples/chats-and-channels/#joining-a-private-chat-or-channel",[277,0.988,448,2.091,801,1.24,1452,2.019]],["text/examples/chats-and-channels/#joining-a-private-chat-or-channel",[4,0.576,6,2.373,12,2.053,24,2.144,44,1.219,74,3.395,80,3.556,137,2.625,176,3.25,219,3.118,231,4.456,234,2.681,273,4.338,277,2.388,327,4.338,351,2.928,448,5.053,800,2.519,801,2.996,886,4.456,1044,5.886,1453,7.899,1454,7.899,1455,7.899,1456,9.993,1457,7.899]],["title/examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel",[277,0.854,315,1.079,449,1.639,747,1.744,801,1.071]],["text/examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel",[4,0.599,6,2.607,9,2.541,12,2.256,24,2.355,36,2.992,44,1.074,53,3.397,63,1.317,74,2.992,102,2.676,109,2.281,151,3.822,152,2.56,183,4.23,253,3.326,261,4.04,277,2.104,348,2.541,364,2.889,373,3.982,395,3.726,397,3.822,449,4.04,456,5.409,482,2.939,525,3.593,655,5.361,800,2.767,801,3.586,1044,5.186,1052,6.179,1088,5.69,1155,4.932,1449,6.513,1458,9.455,1459,9.455,1460,8.678,1461,6.961,1462,6.961,1463,6.961]],["title/examples/chats-and-channels/#checking-a-link-without-joining",[231,1.844,440,1.562,448,2.091,502,1.5]],["text/examples/chats-and-channels/#checking-a-link-without-joining",[4,0.451,44,1.291,58,2.418,152,3.077,279,5.395,310,4.787,327,4.595,348,3.054,448,5.352,502,3.84,503,3.803,800,2.668,801,3.677,1464,8.368]],["title/examples/chats-and-channels/#increasing-view-count-in-a-channel",[801,1.24,1465,2.672,1466,2.373,1467,2.316]],["text/examples/chats-and-channels/#increasing-view-count-in-a-channel",[4,0.59,12,1.799,24,1.878,44,1.068,98,3.176,99,3.469,109,2.268,146,4.692,188,2.731,195,4.245,214,2.731,245,3.8,247,4.597,274,3.659,276,2,305,3.208,329,4.017,346,3.341,348,2.526,491,2.252,518,4.463,551,4.275,556,4.206,559,3.057,592,4.426,606,5.468,619,3.851,641,3.491,654,4.206,666,3.959,681,3.751,800,2.207,801,3.279,806,3.851,827,5.156,875,7.676,932,4.692,935,5.634,958,4.206,1430,6.626,1465,7.069,1466,6.277,1468,6.144,1469,8.647,1470,6.92,1471,8.647,1472,5.989,1473,6.92,1474,5.878,1475,6.92,1476,6.92]],["title/examples/projects-using-telethon/",[44,0.599,45,1.121,1038,2.16]],["text/examples/projects-using-telethon/",[1,1.946,3,2.292,4,0.578,12,1.805,23,2.351,28,1.513,29,3.939,38,2.469,39,2.844,44,1.526,45,2.73,46,2.176,49,2.426,51,1.962,61,3.079,63,0.941,83,3.021,87,2.929,95,3.39,99,2.787,102,1.533,103,3.18,109,1.629,129,1.554,135,1.157,139,1.474,170,2.118,183,4.221,194,2.597,198,3.354,199,3.239,214,2.741,220,2.099,233,1.64,234,2.357,236,3.285,237,3.974,239,2.452,260,2.375,274,2.628,277,2.62,283,2.351,295,3.609,303,2.508,308,3.124,323,3.628,332,3.37,342,4.614,345,5.964,348,1.815,352,3.021,358,3.523,370,2.805,384,2.196,441,3.704,456,3.974,457,5.9,497,3.37,502,2.282,520,3.124,527,3.704,536,4.064,567,3.18,585,2.974,596,4.413,709,4.865,715,2.929,764,6.987,783,4.413,801,1.886,841,2.661,870,2.844,881,2.844,919,3.303,1002,3.319,1038,4.823,1057,3.071,1067,3.609,1075,3.704,1096,3.303,1122,3.523,1127,5.322,1136,3.609,1141,3.124,1249,3.443,1405,3.81,1477,6.946,1478,3.81,1479,5.488,1480,4.413,1481,4.971,1482,4.971,1483,4.971,1484,6.499,1485,4.971,1486,6.544,1487,4.223,1488,4.971,1489,4.413,1490,4.064,1491,6.499,1492,4.971,1493,3.704,1494,6.499,1495,4.971,1496,4.971,1497,4.413,1498,4.971,1499,4.971,1500,6.499,1501,4.971,1502,6.499,1503,4.971,1504,4.971,1505,4.971,1506,6.499,1507,4.971,1508,4.971,1509,7.491,1510,4.971,1511,4.971,1512,4.064,1513,4.971,1514,3.443,1515,4.413,1516,4.971,1517,4.971]],["title/examples/projects-using-telethon/#projects-using-telethon",[44,0.599,45,1.121,1038,2.16]],["text/examples/projects-using-telethon/#projects-using-telethon",[3,2.484,29,4.449,38,2.808,39,4.307,44,1.511,46,3.295,51,2.971,83,4.575,87,4.435,109,2.467,183,5.534,194,3.932,214,3.594,220,3.179,234,2.555,323,4.756,348,2.748,441,5.609,536,6.154,567,4.815,585,4.503,709,4.575,783,6.683,881,4.307,919,5.001,1038,5.067,1067,5.465,1075,5.609,1141,4.73,1249,5.214,1477,9.106,1478,5.769,1479,7.195,1480,6.683,1481,7.528,1482,7.528,1483,7.528]],["title/examples/projects-using-telethon/#telethon_examples",[1484,5.808]],["text/examples/projects-using-telethon/#telethon_examples",[3,2.677,4,0.437,38,2.502,44,1.469,95,3.959,99,3.255,135,1.351,234,2.753,236,3.837,237,4.641,260,3.877,283,3.837,295,5.89,352,4.93,457,6.891,1122,5.749,1136,5.89,1484,7.592,1485,8.113,1486,6.633,1487,6.891,1488,8.113,1489,7.202,1490,6.633]],["title/examples/projects-using-telethon/#telethonsnippets",[1491,5.808]],["text/examples/projects-using-telethon/#telethonsnippets",[29,3.926,44,1.333,45,2.496,236,4.085,342,5.739,457,7.338,1491,8.083]],["title/examples/projects-using-telethon/#telegram-export",[61,1.463,1127,3.66]],["text/examples/projects-using-telethon/#telegram-export",[4,0.449,61,2.964,63,1.578,95,4.069,102,2.571,170,3.552,277,2.521,303,4.206,332,5.653,764,6.39,870,4.77,1002,4.623,1127,6.39,1492,8.338,1493,6.213]],["title/examples/projects-using-telethon/#mautrix-telegram",[61,1.463,1494,4.469]],["text/examples/projects-using-telethon/#mautrix-telegram",[4,0.46,61,3.006,1486,6.987,1494,7.997,1495,8.546,1496,8.546,1497,7.587,1498,8.546,1499,8.546]],["title/examples/projects-using-telethon/#telegramtui",[1500,5.808]],["text/examples/projects-using-telethon/#telegramtui",[4,0.464,12,2.237,61,2.637,358,6.099,527,6.413,764,6.596,1500,8.054,1501,8.608]],["title/examples/projects-using-telethon/#tgcloud",[1502,5.808]],["text/examples/projects-using-telethon/#tgcloud",[4,0.462,61,2.627,198,4.141,1096,5.698,1486,7.012,1502,8.026,1503,8.577,1504,8.577,1505,8.577]],["title/examples/projects-using-telethon/#tgmount",[1506,5.808]],["text/examples/projects-using-telethon/#tgmount",[4,0.459,61,2.609,139,2.525,199,5.549,274,4.502,764,6.526,801,3.23,1405,6.526,1506,7.969,1507,8.516,1508,8.516]],["title/examples/projects-using-telethon/#garnet",[1509,5.808]],["text/examples/projects-using-telethon/#garnet",[1,3.033,4,0.417,12,2.014,23,3.664,28,2.358,45,2.239,49,3.78,99,3.108,103,4.955,135,1.29,198,3.74,233,2.556,237,4.432,239,3.821,308,4.868,342,5.146,370,4.37,384,3.422,456,4.432,497,5.252,502,3.555,520,4.868,596,6.877,709,5.63,715,4.563,764,5.936,841,4.146,1038,4.311,1057,4.786,1509,8.669,1510,7.747,1511,7.747,1512,6.333,1513,7.747,1514,5.366,1515,6.877,1516,7.747]],["title/examples/projects-using-telethon/#telethon-secret-chat",[45,1.121,277,1.173,345,2.892]],["text/examples/projects-using-telethon/#telethon-secret-chat",[4,0.457,44,1.309,45,2.824,129,2.652,277,2.955,345,7.281,456,4.855,764,6.503,1517,8.486]],["title/examples/users/",[102,1.914]],["text/examples/users/",[4,0.603,6,2.789,9,3.184,12,2.581,24,2.694,28,1.787,36,2.524,40,2.695,44,1.346,45,1.697,52,1.937,58,2.248,59,4.569,102,2.69,105,3.314,109,1.924,137,2.898,139,1.741,163,3.374,176,3.2,195,2.643,217,2.865,220,2.479,234,1.992,267,2.227,270,3.535,283,2.777,322,2.835,340,4.805,346,2.835,373,3.359,387,2.777,438,2.643,488,2.096,505,5.511,800,2.781,814,3.143,840,3.512,910,4.499,912,7.592,915,5.212,981,3.459,1048,4.975,1120,4.639,1355,3.459,1518,5.871,1519,5.871,1520,8.723,1521,5.871,1522,4.499,1523,5.871,1524,7.278,1525,7.778,1526,5.871,1527,7.778,1528,5.871,1529,5.871,1530,5.871,1531,7.778,1532,5.212,1533,5.871]],["title/examples/users/#users",[102,1.914]],["text/examples/users/#users",[4,0.464,40,3.95,52,2.84,59,4.071,109,2.821,234,2.921,322,4.156,840,5.149]],["title/examples/users/#retrieving-full-information",[59,1.835,176,1.597,1048,2.482]],["text/examples/users/#retrieving-full-information",[4,0.595,6,2.297,12,2.389,24,2.495,36,3.287,44,1.18,58,2.21,59,4.661,102,2.835,176,3.147,220,3.229,267,2.901,270,3.476,283,3.617,340,4.725,800,2.931,910,5.861,912,7.515,915,6.789,1048,4.892,1518,7.648,1519,7.648,1520,9.857]],["title/examples/users/#updating-your-name-andor-bio",[9,1.193,137,1.086,912,2.672,1521,3.269]],["text/examples/users/#updating-your-name-andor-bio",[4,0.571,6,2.412,9,3.455,12,2.088,24,2.179,45,2.321,105,4.032,217,3.919,340,4.962,346,3.878,373,4.595,438,3.616,488,2.867,800,2.561,814,4.299,912,6.566,1355,4.731,1522,6.155,1523,8.032,1524,7.516,1525,9.465]],["title/examples/users/#updating-your-username",[137,1.587,270,2.171]],["text/examples/users/#updating-your-username",[4,0.568,6,2.531,12,2.19,24,2.286,44,1.3,58,2.435,1524,7.885,1526,8.426,1527,9.733,1528,8.426]],["title/examples/users/#updating-your-profile-photo",[137,1.29,163,1.683,505,2.75]],["text/examples/users/#updating-your-profile-photo",[4,0.585,6,2.421,12,2.465,24,2.573,28,2.452,44,1.243,139,2.389,163,3.495,195,3.628,387,3.811,505,5.71,981,4.747,1120,6.368,1529,8.059,1530,8.059,1531,9.483,1532,7.154,1533,8.059]],["title/examples/word-of-warning/",[467,3.173,1534,4.469]],["text/examples/word-of-warning/",[4,0.54,12,2.306,34,2.953,35,3.767,36,3.1,38,2.962,39,4.126,42,3.883,44,1.369,48,4.383,52,3.17,58,2.084,59,4.543,61,2.209,105,3.072,222,5.48,234,3.01,236,3.41,253,3.446,322,4.969,373,4.126,386,4.995,397,3.96,422,3.186,467,4.791,473,4.532,533,4.791,556,5.391,567,4.613,933,3.812,1478,5.526,1534,6.748,1535,7.535,1536,6.402,1537,5.235,1538,5.235,1539,6.402,1540,5.373,1541,7.211]],["title/examples/word-of-warning/#a-word-of-warning",[467,3.173,1534,4.469]],["text/examples/word-of-warning/#a-word-of-warning",[4,0.519,12,2.318,34,2.962,35,3.801,36,3.128,38,2.974,39,4.163,42,3.904,44,1.376,48,4.422,52,3.183,58,2.103,59,4.562,61,2.229,105,3.1,222,5.51,234,3.027,236,3.441,253,3.477,322,4.982,373,4.163,386,5.04,397,3.996,422,3.215,473,4.573,533,4.834,556,5.421,567,4.655,933,3.847,1478,5.576,1535,7.577,1536,6.46,1537,5.283,1538,5.283,1539,6.46,1540,5.422,1541,7.277]],["title/examples/working-with-messages/",[63,0.904,129,1.492]],["text/examples/working-with-messages/",[3,2.596,4,0.604,6,2.642,12,2.287,24,2.387,40,2.741,44,0.922,52,1.971,58,1.726,59,2.825,61,1.83,63,1.489,102,2.426,109,1.957,129,2.459,139,2.772,146,4.05,162,3.15,188,3.835,195,2.689,217,2.915,233,1.971,234,2.67,255,3.28,261,3.467,276,2.273,298,3.968,322,2.884,397,3.28,475,5.575,548,2.915,558,3.721,710,3.573,813,4.501,837,4.883,840,3.573,854,4.577,978,3.851,1044,5.862,1048,3.821,1365,4.883,1438,4.883,1542,6.719,1543,5.303,1544,5.973,1545,5.303,1546,5.973,1547,7.867,1548,8.625,1549,7.867,1550,7.867,1551,5.303]],["title/examples/working-with-messages/#working-with-messages",[63,0.904,129,1.492]],["text/examples/working-with-messages/#working-with-messages",[4,0.464,40,3.95,52,2.84,59,4.071,109,2.821,234,2.921,322,4.156,840,5.149]],["title/examples/working-with-messages/#sending-stickers",[162,1.609,1542,3.001]],["text/examples/working-with-messages/#sending-stickers",[3,2.657,4,0.604,6,2.688,12,2.326,24,2.429,44,0.955,58,1.788,61,1.896,63,1.171,102,2.483,129,1.934,139,2.81,146,4.196,162,3.016,188,3.879,195,2.786,217,3.02,233,2.042,234,2.1,255,3.399,261,3.592,276,2.327,298,4.111,397,3.399,475,5.705,548,3.02,558,3.808,710,3.702,813,4.607,837,5.06,854,4.743,978,3.918,1044,5.999,1048,3.959,1365,5.06,1438,5.06,1542,6.713,1543,5.494,1544,6.189,1545,5.494,1546,6.189,1547,8.052,1548,8.724,1549,8.052,1550,8.052,1551,5.494]],["title/misc/changelog/",[41,2.892,42,1.699,43,2.631]],["text/misc/changelog/",[0,1.145,1,1.342,2,0.303,3,1.825,4,0.577,5,0.655,6,1.344,7,1.553,8,2.068,9,1.126,10,0.252,11,0.124,12,1.356,13,1,14,1.219,16,0.211,17,0.158,18,0.692,19,0.41,21,0.831,22,0.449,23,1.022,24,0.93,25,0.675,28,2.59,29,0.542,32,0.934,33,0.608,34,2.005,35,0.971,36,0.354,37,0.826,38,1.904,39,0.973,40,1.416,41,0.318,42,2.193,43,0.147,44,1.408,45,1.468,46,1.13,47,0.534,48,0.5,49,1.259,50,0.889,51,1.395,52,1.057,53,0.728,54,1.34,55,0.763,57,0.5,58,1.77,59,0.647,60,1.048,61,1.083,62,0.178,63,1.43,64,0.365,65,0.734,66,1.684,68,0.337,69,1.742,70,0.289,71,0.418,72,0.296,73,0.151,74,0.929,75,1.651,77,0.497,80,0.906,81,1.204,82,0.178,83,0.132,84,1.232,86,1.287,87,0.37,89,0.41,90,0.151,91,0.379,92,1.343,93,0.278,94,1.41,95,2.7,97,0.167,98,1.36,99,0.746,102,1.185,103,0.647,105,3.184,106,0.5,107,2.251,109,0.708,110,4.042,111,0.31,113,1.311,114,0.82,115,1.434,116,0.723,117,0.349,119,1.829,120,0.178,123,0.741,124,0.751,125,0.158,126,0.588,127,0.672,128,0.363,129,2.377,130,1.908,131,0.749,132,0.289,134,1.172,135,1.066,136,0.866,137,2.569,139,2.165,140,0.905,141,0.193,142,0.598,143,2.12,144,0.193,146,0.426,147,0.623,148,1.52,150,2.816,151,0.751,152,1.615,155,0.919,156,0.178,157,0.193,158,0.426,159,0.826,160,1.463,161,0.162,162,2.214,163,1.286,164,0.859,165,2.752,166,0.605,167,0.241,170,1.906,171,0.126,172,2.088,173,0.363,174,0.379,175,0.363,176,0.632,178,0.934,182,0.5,183,1.223,184,0.284,185,1.453,186,0.737,187,0.646,188,1.17,189,0.927,190,0.761,191,0.875,192,0.75,193,3.282,194,2.422,195,1.334,196,0.866,198,0.398,199,1.108,200,0.485,201,0.145,202,2.01,210,1.394,213,0.625,214,1.17,215,0.303,216,0.365,217,1.055,219,3.883,220,0.718,221,1.763,222,0.845,223,1.125,224,1.46,225,1.802,226,0.541,227,0.291,228,1.168,230,1.431,231,0.772,232,0.193,233,2.38,234,0.522,236,0.727,237,0.124,238,0.969,239,0.31,240,1.44,241,0.241,242,0.178,243,0.154,244,0.167,245,0.119,246,0.234,247,0.547,249,0.289,250,2.298,251,0.382,252,0.535,253,1.584,254,1.021,260,0.57,261,0.794,262,0.132,263,0.845,264,1.048,265,0.655,266,0.193,267,1.419,269,0.137,270,0.845,271,1.631,273,1.021,274,0.899,276,1.317,277,1.302,279,0.563,280,0.382,282,0.349,283,1.817,285,0.517,286,1.597,290,0.145,291,0.43,292,1.278,293,0.158,294,0.751,295,0.457,297,1.563,298,0.672,300,0.158,301,0.64,302,0.615,303,1.556,304,0.436,305,0.788,307,1.266,308,0.137,309,0.142,310,0.682,312,0.679,313,0.418,314,0.388,315,1.224,316,0.615,317,0.469,318,1.203,319,1.757,322,0.304,323,1.672,326,0.238,327,0.555,328,0.794,329,0.365,330,0.458,331,0.794,333,0.673,335,0.178,336,0.172,337,0.436,338,0.493,339,0.782,340,0.509,342,0.145,343,0.304,344,0.278,346,0.576,348,0.842,349,0.158,350,0.296,351,0.906,352,1.034,353,0.426,355,1.53,358,0.303,359,0.376,362,0.775,363,1.56,364,2.165,365,2.759,367,0.725,368,1.4,369,0.781,370,0.355,373,0.36,375,0.158,378,1.066,379,0.647,380,0.889,381,0.514,384,0.751,385,2.222,386,0.296,387,1.863,388,0.799,389,0.289,390,0.761,391,2.563,392,0.457,393,0.614,394,1.019,395,0.638,396,0.388,397,0.655,398,0.803,399,0.303,401,0.167,402,0.426,403,0.482,404,0.158,405,0.178,406,0.147,407,0.792,408,0.193,413,0.457,414,0.327,415,0.134,416,0.418,418,0.598,420,0.845,421,0.145,422,1.608,427,0.763,428,0.5,429,1.095,430,1.173,435,0.31,436,1.168,437,1.753,438,0.837,439,0.537,440,1.233,441,0.162,442,0.673,446,0.296,447,0.558,448,0.527,449,0.794,450,1.433,452,0.193,453,0.436,454,1.035,455,0.162,456,1.064,460,0.555,466,1.065,467,1.021,470,0.13,471,0.248,473,2.287,475,0.303,476,0.178,477,0.178,478,0.96,479,0.349,480,0.534,481,1.674,482,0.974,486,2.731,487,0.875,488,2.187,490,0.436,491,0.139,494,0.167,495,1.317,496,0.151,497,1.261,498,0.31,499,0.631,501,0.259,502,0.853,503,0.374,504,0.784,505,0.154,506,0.741,507,0.675,512,1.291,514,0.426,517,0.142,518,1.19,519,0.167,520,0.966,521,1.615,522,0.647,523,0.132,524,0.145,525,0.22,526,0.289,527,0.614,528,1.501,529,0.167,530,0.178,531,0.303,532,0.734,533,0.672,536,0.178,537,0.382,538,0.651,539,0.178,540,1.254,542,1.038,545,0.41,546,0.337,547,0.296,548,1.125,549,0.509,550,0.859,551,0.388,552,0.193,553,0.172,554,0.631,556,0.725,558,2.116,559,1.414,560,0.139,561,2.966,562,0.193,563,0.284,564,0.167,567,0.139,569,0.193,570,0.737,573,0.792,574,0.482,576,1.042,581,0.167,583,1.002,584,0.734,585,0.493,586,0.418,587,0.547,588,0.732,589,0.889,591,0.418,592,1.189,595,0.5,599,0.193,600,0.145,602,0.193,604,0.436,606,0.497,608,0.41,613,0.436,615,0.914,616,1.211,619,0.761,620,0.635,621,0.337,622,0.193,625,0.614,626,0.482,627,1.602,628,1.765,629,0.426,630,0.193,637,2.148,640,0.158,641,1.302,647,0.172,649,0.775,650,0.469,651,0.469,654,0.132,655,0.509,658,1.048,659,0.794,664,0.57,666,0.782,667,0.482,669,0.717,671,0.558,672,0.178,673,0.139,674,0.845,675,0.775,679,0.178,681,0.922,683,0.193,684,0.154,686,0.363,693,0.147,694,0.158,695,1.25,698,0.337,699,0.426,701,1.568,702,0.162,705,1.019,707,0.753,708,0.775,709,2.015,710,1.112,711,1.622,715,1.44,716,0.547,717,1.266,718,0.178,722,0.289,731,0.151,735,0.185,738,0.162,743,1.163,744,0.178,745,0.96,747,1.831,749,0.193,751,0.193,755,0.31,757,0.337,763,0.193,767,0.469,772,0.548,776,0.827,782,0.147,784,0.167,787,0.223,793,0.349,794,0.154,798,0.318,800,0.689,801,0.874,803,0.714,804,0.154,805,0.327,806,0.761,807,0.734,811,0.193,813,0.244,814,2.003,815,0.167,816,0.252,817,0.583,823,1.12,824,0.31,826,0.154,827,0.162,828,0.327,829,0.547,835,0.947,837,0.178,838,0.497,839,0.303,841,0.91,842,0.753,843,0.527,853,0.482,861,0.178,862,0.686,863,0.31,865,0.193,867,0.296,868,0.178,869,0.482,870,0.682,871,0.178,877,1.069,881,0.36,882,0.154,883,0.278,884,0.469,885,0.763,886,0.673,887,0.497,888,1.424,889,0.158,890,0.598,891,0.363,892,1.283,893,0.469,894,0.794,895,0.151,896,0.446,897,0.826,900,0.737,901,0.395,902,0.349,905,1.314,906,0.178,907,0.172,908,0.983,909,0.178,911,0.178,914,0.379,918,0.327,919,1.532,920,0.296,926,0.158,927,0.303,928,0.605,932,1.925,933,0.983,935,0.537,936,0.775,937,0.514,938,0.493,939,0.458,941,0.909,942,0.363,943,2.921,945,0.947,946,0.158,947,0.178,948,0.426,950,1.465,951,0.167,953,0.167,954,0.827,956,0.134,958,0.725,961,0.193,962,0.178,963,1.379,964,0.547,969,0.651,974,0.598,975,0.162,978,0.443,981,1.817,983,0.41,984,1.168,985,0.178,987,0.457,991,0.833,997,0.162,998,0.193,1002,0.962,1007,0.193,1016,0.178,1017,0.457,1020,0.673,1022,1.205,1023,0.193,1024,0.193,1025,0.866,1028,1.486,1029,0.178,1030,0.193,1032,0.178,1033,0.337,1035,0.193,1036,0.193,1038,0.238,1039,0.318,1041,0.497,1044,0.162,1048,0.763,1049,0.167,1051,0.172,1053,0.193,1054,0.457,1055,1.145,1057,0.264,1058,0.5,1059,0.193,1060,0.178,1063,3.294,1064,0.128,1065,0.363,1066,0.172,1067,0.598,1069,0.469,1070,0.457,1072,0.845,1074,0.734,1075,0.162,1076,0.178,1077,0.162,1078,0.363,1080,0.469,1081,0.178,1082,0.193,1086,0.823,1087,1.069,1089,1.887,1090,0.303,1091,0.673,1092,0.337,1093,0.178,1094,0.337,1095,0.193,1096,0.284,1097,0.497,1098,0.337,1099,1.696,1100,0.436,1101,0.349,1103,0.753,1104,0.827,1105,0.363,1107,0.514,1108,0.514,1110,0.185,1111,0.942,1112,0.193,1113,0.614,1115,0.497,1117,0.268,1122,0.303,1127,0.914,1129,0.497,1131,0.717,1132,0.799,1136,0.734,1140,0.31,1141,1.358,1146,0.178,1151,0.349,1152,0.349,1154,0.31,1166,0.984,1170,0.363,1172,0.193,1175,0.349,1178,0.193,1179,0.534,1180,0.534,1181,1.019,1182,0.193,1186,0.446,1189,0.379,1191,0.193,1193,0.185,1194,0.193,1200,0.363,1201,0.185,1202,0.193,1203,0.193,1204,0.363,1205,0.379,1206,0.193,1207,0.379,1208,0.193,1209,0.193,1210,0.193,1211,1.946,1212,0.436,1214,0.178,1216,0.178,1219,0.537,1220,0.673,1221,0.349,1222,0.673,1223,1.385,1225,0.162,1226,0.673,1228,0.193,1229,0.686,1230,0.349,1231,0.631,1236,0.193,1238,0.534,1239,0.193,1240,0.363,1241,0.193,1243,0.482,1245,0.158,1247,0.318,1250,0.132,1252,0.178,1256,1.178,1263,0.379,1264,1.048,1265,0.178,1266,0.942,1268,0.054,1270,0.349,1271,0.185,1273,0.158,1278,0.193,1279,0.379,1280,0.178,1282,0.379,1284,1.215,1285,2.053,1286,0.753,1288,0.799,1289,0.583,1291,0.151,1292,0.151,1294,0.349,1296,0.699,1298,0.418,1302,0.942,1303,0.193,1304,0.193,1309,0.193,1313,3.605,1327,0.193,1330,0.363,1338,0.193,1340,0.193,1341,0.193,1343,0.514,1347,2.413,1349,0.605,1351,0.193,1352,0.193,1355,1.095,1360,0.446,1361,0.734,1362,1.019,1364,0.349,1380,0.363,1384,0.193,1389,0.717,1391,0.273,1393,0.193,1397,0.172,1401,0.193,1402,1.081,1406,0.699,1415,0.534,1418,0.969,1421,0.193,1424,2.171,1425,0.497,1426,0.514,1427,0.178,1430,0.631,1433,0.154,1437,1.694,1440,0.971,1441,1.708,1443,1.168,1444,0.193,1445,1.019,1446,0.193,1447,0.178,1452,1.149,1465,0.349,1466,0.31,1467,0.154,1472,0.436,1474,0.363,1478,0.167,1479,0.337,1486,0.178,1490,0.514,1512,0.514,1514,0.296,1515,0.379,1522,0.327,1535,0.363,1538,0.993,1540,1.267,1542,0.749,1543,0.193,1552,0.218,1553,0.4,1554,0.4,1555,0.771,1556,0.218,1557,0.218,1558,2.629,1559,0.151,1560,4.472,1561,0.218,1562,0.218,1563,0.558,1564,0.558,1565,0.193,1566,0.558,1567,0.942,1568,0.993,1569,0.482,1570,0.514,1571,0.558,1572,0.218,1573,0.457,1574,3.828,1575,0.218,1576,0.514,1577,0.514,1578,0.218,1579,0.4,1580,1.303,1581,1.019,1582,0.651,1583,0.185,1584,0.558,1585,0.558,1586,0.218,1587,0.218,1588,0.218,1589,0.147,1590,0.218,1591,0.558,1592,0.514,1593,1.267,1594,0.699,1595,0.218,1596,0.218,1597,0.151,1598,0.827,1599,1.013,1600,0.218,1601,1.235,1602,0.4,1603,1.013,1604,0.558,1605,0.218,1606,0.218,1607,0.4,1608,0.193,1609,1.129,1610,0.891,1611,0.218,1612,0.218,1613,0.158,1614,0.558,1615,0.4,1616,0.363,1617,0.193,1618,0.588,1619,0.363,1620,1.013,1621,1.919,1622,0.218,1623,0.194,1624,0.4,1625,0.4,1626,0.4,1627,0.4,1628,0.4,1629,0.4,1630,0.363,1631,0.859,1632,0.218,1633,3.278,1634,0.4,1635,0.363,1636,0.218,1637,0.218,1638,0.218,1639,0.145,1640,0.629,1641,0.898,1642,0.427,1643,0.427,1644,0.588,1645,0.218,1646,0.218,1647,0.218,1648,0.218,1649,0.218,1650,0.193,1651,0.651,1652,0.363,1653,0.363,1654,0.859,1655,0.673,1656,0.4,1657,1.162,1658,0.469,1659,0.193,1660,0.363,1661,0.218,1662,0.218,1663,0.193,1664,1.234,1665,0.218,1666,0.731,1667,0.218,1668,0.218,1669,0.942,1670,0.4,1671,0.218,1672,0.218,1673,0.537,1674,0.4,1675,0.4,1676,0.4,1677,0.218,1678,0.218,1679,0.278,1680,0.218,1681,0.218,1682,0.469,1683,0.558,1684,0.218,1685,0.588,1686,0.218,1687,0.771,1688,0.218,1689,0.218,1690,0.4,1691,0.145,1692,0.218,1693,0.218,1694,1.438,1695,1.28,1696,0.218,1697,0.218,1698,0.427,1699,0.337,1700,0.4,1701,0.218,1702,0.218,1703,0.218,1704,0.4,1705,0.218,1706,2.192,1707,0.4,1708,0.4,1709,0.31,1710,0.4,1711,0.193,1712,0.218,1713,0.914,1714,0.218,1715,0.218,1716,0.167,1717,0.4,1718,0.218,1719,0.731,1720,0.731,1721,0.193,1722,0.4,1723,0.651,1724,0.558,1725,0.699,1726,1.445,1727,0.218,1728,0.218,1729,0.588,1730,0.218,1731,0.218,1732,0.427,1733,0.218,1734,0.914,1735,0.218,1736,0.218,1737,0.218,1738,0.193,1739,0.218,1740,0.218,1741,0.218,1742,0.218,1743,0.218,1744,0.809,1745,0.218,1746,0.218,1747,0.534,1748,0.218,1749,0.178,1750,0.218,1751,0.178,1752,0.193,1753,0.218,1754,0.218,1755,0.218,1756,0.651,1757,0.218,1758,0.218,1759,0.218,1760,0.363,1761,0.792,1762,0.218,1763,0.4,1764,0.4,1765,0.218,1766,0.218,1767,0.349,1768,0.218,1769,0.469,1770,1.579,1771,0.218,1772,1.002,1773,0.4,1774,0.427,1775,1.958,1776,0.193,1777,0.218,1778,0.588,1779,0.946,1780,0.363,1781,0.218,1782,0.534,1783,0.4,1784,0.218,1785,0.218,1786,0.4,1787,0.614,1788,0.218,1789,1.13,1790,1.394,1791,0.497,1792,0.558,1793,0.178,1794,0.193,1795,0.193,1796,0.218,1797,0.193,1798,0.193,1799,0.4,1800,0.427,1801,0.218,1802,0.218,1803,0.349,1804,0.771,1805,0.218,1806,0.218,1807,0.147,1808,0.629,1809,0.898,1810,0.218,1811,0.218,1812,0.218,1813,0.363,1814,0.218,1815,0.427,1816,0.588,1817,0.859,1818,0.898,1819,0.349,1820,0.218,1821,0.942,1822,0.193,1823,0.193,1824,0.142,1825,0.218,1826,0.218,1827,0.4,1828,0.139,1829,1.306,1830,0.218,1831,0.218,1832,0.363,1833,0.218,1834,0.218,1835,0.218,1836,0.218,1837,0.218,1838,0.4,1839,0.218,1840,0.218,1841,0.4,1842,0.218,1843,0.218,1844,0.4,1845,0.218,1846,0.218,1847,0.218,1848,0.731,1849,0.218,1850,0.218,1851,0.218,1852,0.154,1853,0.218,1854,0.218,1855,0.218,1856,0.363,1857,0.427,1858,0.218,1859,0.4,1860,0.497,1861,0.218,1862,0.218,1863,0.218,1864,0.218,1865,0.218,1866,0.218,1867,0.218,1868,0.218,1869,0.218,1870,0.218,1871,0.218,1872,0.218,1873,0.218,1874,0.4,1875,0.427,1876,0.218,1877,0.218,1878,0.218,1879,0.218,1880,0.218,1881,0.4,1882,0.218,1883,0.218,1884,0.337,1885,0.363,1886,0.497,1887,0.193,1888,0.218,1889,0.534,1890,0.218,1891,2.217,1892,0.218,1893,0.185,1894,0.218,1895,0.427,1896,0.147,1897,0.4,1898,0.218,1899,0.588,1900,0.534,1901,0.218,1902,0.185,1903,0.178,1904,0.558,1905,0.218,1906,0.218,1907,0.218,1908,0.218,1909,0.436,1910,0.178,1911,0.193,1912,0.4,1913,0.4,1914,0.193,1915,0.289,1916,0.673,1917,0.218,1918,0.218,1919,0.178,1920,0.193,1921,0.218,1922,0.4,1923,0.218,1924,0.218,1925,0.218,1926,0.218,1927,0.218,1928,0.193,1929,0.218,1930,0.558,1931,0.427,1932,0.218,1933,0.218,1934,0.193,1935,0.218,1936,0.218,1937,0.218,1938,0.218,1939,0.218,1940,0.218,1941,0.218,1942,0.218,1943,0.218,1944,0.457,1945,0.349,1946,0.218,1947,0.218,1948,0.218,1949,0.418,1950,1.71,1951,0.4,1952,0.273,1953,0.178,1954,0.218,1955,0.218,1956,0.4,1957,0.363,1958,0.218,1959,0.178,1960,0.193,1961,0.193,1962,0.218,1963,0.4,1964,0.218,1965,0.218,1966,0.734,1967,0.731,1968,0.4,1969,0.218,1970,0.218,1971,0.4,1972,0.218,1973,0.218,1974,0.218,1975,0.218,1976,0.218,1977,0.218,1978,0.218,1979,0.185,1980,0.185,1981,0.588,1982,0.218,1983,0.218,1984,0.218,1985,0.4,1986,0.4,1987,0.218,1988,1.708,1989,0.218,1990,0.218,1991,0.218,1992,0.218,1993,0.218,1994,0.218,1995,0.218,1996,0.218,1997,0.218,1998,0.218,1999,0.588,2000,0.218,2001,0.558,2002,0.588,2003,0.218,2004,0.193,2005,0.218,2006,0.218,2007,0.218,2008,0.178,2009,0.193,2010,0.193,2011,0.717,2012,0.4,2013,0.218,2014,0.218,2015,0.4,2016,0.327,2017,0.218,2018,0.218,2019,0.218,2020,0.898,2021,0.218,2022,0.218,2023,0.337,2024,0.178,2025,0.218,2026,0.218,2027,0.185,2028,0.218,2029,0.218,2030,0.588,2031,0.218,2032,0.218,2033,0.558,2034,0.866,2035,0.218,2036,0.193,2037,0.218,2038,0.588,2039,0.218,2040,0.218,2041,0.193,2042,0.218,2043,0.218,2044,0.193,2045,0.218,2046,0.185,2047,0.218,2048,0.379,2049,0.427,2050,0.218,2051,0.218,2052,0.218,2053,0.514,2054,0.4,2055,0.4,2056,0.558,2057,0.337,2058,0.218,2059,0.218,2060,0.218,2061,0.193,2062,0.193,2063,1.822,2064,0.734,2065,0.4,2066,0.218,2067,0.218,2068,0.218,2069,0.558,2070,0.4,2071,0.218,2072,0.218,2073,0.588,2074,0.4,2075,0.558,2076,0.218,2077,0.218,2078,0.4,2079,0.218,2080,0.218,2081,0.218,2082,0.218,2083,0.218,2084,0.218,2085,0.218,2086,0.363,2087,0.427,2088,0.379,2089,0.218,2090,0.218,2091,0.193,2092,0.218,2093,0.218,2094,0.771,2095,0.218,2096,0.218,2097,0.427,2098,0.218,2099,0.218,2100,0.218,2101,0.167,2102,0.218,2103,0.284,2104,0.218,2105,0.218,2106,0.218,2107,0.218,2108,0.218,2109,0.218,2110,0.218,2111,0.218,2112,0.218,2113,0.218,2114,0.218,2115,0.218,2116,0.379,2117,0.218,2118,0.162,2119,0.193,2120,0.318,2121,0.218,2122,0.178,2123,0.218,2124,0.827,2125,0.218,2126,0.193,2127,0.218,2128,0.218,2129,0.218,2130,0.218,2131,0.218,2132,0.218,2133,0.218,2134,0.193,2135,0.218,2136,0.193,2137,0.218,2138,0.218,2139,0.946,2140,0.4,2141,0.218,2142,0.4,2143,0.218,2144,0.588,2145,0.734,2146,0.218,2147,0.193,2148,0.218,2149,0.218,2150,0.534,2151,0.218,2152,0.218,2153,0.534,2154,0.588,2155,0.218,2156,0.218,2157,0.218,2158,0.218,2159,0.427,2160,0.799,2161,0.218,2162,0.218,2163,0.946,2164,0.379,2165,0.427,2166,0.218,2167,0.4,2168,0.558,2169,0.218,2170,0.218,2171,0.218,2172,0.218,2173,0.218,2174,0.218,2175,0.218,2176,0.218,2177,0.193,2178,0.193,2179,0.218,2180,0.218,2181,0.218,2182,0.427,2183,0.218,2184,0.218,2185,0.218,2186,0.427,2187,0.218,2188,1.445,2189,0.427,2190,0.193,2191,0.218,2192,0.218,2193,0.218,2194,0.218,2195,0.193,2196,0.218,2197,0.379,2198,0.427,2199,0.427,2200,0.218,2201,0.218,2202,0.142,2203,0.427,2204,0.218,2205,0.218,2206,0.427,2207,0.218,2208,0.218,2209,0.218,2210,0.218,2211,0.218,2212,0.193,2213,0.218,2214,1.116,2215,0.218,2216,0.193,2217,0.218,2218,0.218,2219,0.218,2220,0.218,2221,0.218,2222,0.427,2223,0.218,2224,0.218,2225,3.092,2226,0.218,2227,0.218,2228,0.218,2229,0.218,2230,0.218,2231,0.185,2232,0.193,2233,0.218,2234,0.427,2235,0.218,2236,0.859,2237,0.218,2238,0.218,2239,0.218,2240,0.218,2241,0.218,2242,0.185,2243,0.731,2244,0.218,2245,0.218,2246,0.218,2247,0.139,2248,0.218,2249,0.218,2250,0.218,2251,0.193,2252,0.218,2253,0.218,2254,0.218,2255,0.289,2256,0.218,2257,0.218,2258,0.218,2259,0.218,2260,0.731,2261,0.218,2262,0.218,2263,0.185,2264,0.193,2265,0.218,2266,0.218,2267,0.218,2268,0.218,2269,0.218,2270,0.4,2271,0.218,2272,0.218,2273,0.218,2274,0.218,2275,0.218,2276,0.218,2277,0.218,2278,0.427,2279,0.218,2280,0.218,2281,0.218,2282,0.178,2283,0.218,2284,0.218,2285,0.218,2286,0.185,2287,0.4,2288,0.193,2289,0.427,2290,0.427,2291,0.218,2292,0.427,2293,0.218,2294,0.218,2295,0.218,2296,0.218,2297,0.218,2298,0.427,2299,0.218,2300,0.497,2301,0.218,2302,0.218,2303,0.147,2304,0.427,2305,0.427,2306,0.218,2307,0.218,2308,0.427,2309,1.178,2310,0.218,2311,0.218,2312,0.218,2313,0.218,2314,0.218,2315,0.218,2316,0.4,2317,0.218,2318,0.218,2319,0.218,2320,0.218,2321,0.218,2322,0.588,2323,0.218,2324,0.4,2325,0.218,2326,0.289,2327,0.427,2328,0.193,2329,0.218,2330,0.218,2331,0.218,2332,0.218,2333,0.218,2334,0.218,2335,0.218,2336,0.457,2337,0.218,2338,0.218,2339,0.218,2340,0.218,2341,0.218,2342,0.218,2343,0.218,2344,0.218,2345,0.218,2346,0.327,2347,0.218,2348,0.218,2349,0.218,2350,0.218,2351,0.218,2352,0.218,2353,0.218,2354,0.218,2355,0.218,2356,0.218,2357,0.427,2358,0.427,2359,0.898,2360,0.95,2361,0.218,2362,0.218,2363,0.167,2364,0.218,2365,0.218,2366,0.218,2367,0.172,2368,0.218,2369,0.218,2370,0.588,2371,0.218,2372,0.218,2373,0.218,2374,0.218,2375,0.218,2376,0.218,2377,0.427,2378,0.218,2379,0.218,2380,0.427,2381,0.218,2382,0.185,2383,0.218,2384,0.218,2385,0.218,2386,0.218,2387,0.218,2388,0.218,2389,0.4,2390,0.218,2391,0.427,2392,0.218,2393,0.218,2394,0.218,2395,0.946,2396,0.218,2397,0.218,2398,0.318,2399,0.218,2400,0.218,2401,0.4,2402,0.178,2403,0.218,2404,0.218,2405,0.218,2406,0.218,2407,0.218,2408,0.218,2409,1.193,2410,0.218,2411,0.318,2412,0.218,2413,0.218,2414,0.379,2415,0.771,2416,0.218,2417,0.218,2418,0.349,2419,0.193,2420,0.218,2421,0.218,2422,0.218,2423,0.145,2424,0.218,2425,0.218,2426,0.7,2427,0.427,2428,0.193,2429,0.534,2430,0.211,2431,0.172,2432,0.218,2433,0.218,2434,0.427,2435,0.218,2436,0.218,2437,0.218,2438,0.218,2439,0.218,2440,0.218,2441,0.629,2442,0.218,2443,0.218,2444,0.218,2445,0.427,2446,1.193,2447,0.379,2448,0.193,2449,0.218,2450,0.379,2451,0.218,2452,0.218,2453,0.218,2454,0.427,2455,0.823,2456,0.218,2457,0.218,2458,0.427,2459,0.427,2460,0.218,2461,0.218,2462,0.162,2463,0.4,2464,0.193,2465,0.799,2466,0.218,2467,0.218,2468,0.218,2469,0.218,2470,0.167,2471,0.178,2472,0.218,2473,0.218,2474,0.4,2475,0.218,2476,0.363,2477,0.218,2478,0.218,2479,0.218,2480,0.193,2481,0.218,2482,0.218,2483,0.193,2484,0.218,2485,0.4,2486,0.218,2487,0.337,2488,0.218,2489,0.218,2490,0.218,2491,0.154,2492,0.218,2493,0.193,2494,0.218,2495,0.193,2496,0.185,2497,0.218,2498,0.167,2499,0.218,2500,0.218,2501,0.218,2502,0.218,2503,0.154,2504,0.218,2505,0.218,2506,0.218,2507,0.185,2508,0.218,2509,0.218,2510,0.558,2511,0.218,2512,0.218,2513,0.193,2514,0.178,2515,0.218,2516,0.588,2517,0.218,2518,0.218,2519,0.218,2520,0.218,2521,0.218,2522,0.218,2523,0.218,2524,0.218,2525,0.218,2526,0.218,2527,0.218,2528,0.558,2529,0.218,2530,0.218,2531,0.218,2532,0.218,2533,0.218,2534,0.218,2535,0.318,2536,0.218,2537,0.178,2538,0.218,2539,0.218,2540,0.162,2541,0.629,2542,0.193,2543,0.218,2544,0.218,2545,0.218,2546,0.193,2547,0.218,2548,0.158,2549,0.218,2550,0.218,2551,0.218,2552,0.218,2553,0.4,2554,0.218,2555,0.218,2556,0.22,2557,0.162,2558,0.218,2559,0.218,2560,0.218,2561,0.218,2562,0.218,2563,0.558,2564,0.218,2565,0.218,2566,0.363,2567,0.218,2568,0.218,2569,0.218,2570,0.178,2571,0.218,2572,0.218,2573,0.4,2574,0.4,2575,0.218,2576,0.218,2577,0.4,2578,0.193,2579,0.4,2580,0.4,2581,0.4,2582,0.218,2583,0.218,2584,0.218,2585,0.588,2586,0.218,2587,0.4,2588,0.218,2589,0.218,2590,0.218,2591,0.218,2592,0.218,2593,0.218,2594,0.427,2595,0.145,2596,0.218,2597,0.218,2598,0.427,2599,0.218,2600,0.218,2601,0.4,2602,0.218,2603,0.4,2604,0.218,2605,0.363,2606,0.218,2607,0.218,2608,0.185,2609,0.218,2610,0.185,2611,0.154,2612,1.162,2613,0.218,2614,0.4,2615,0.218,2616,0.4,2617,0.731,2618,0.178,2619,0.218,2620,0.218,2621,0.218,2622,0.218,2623,0.427,2624,0.218,2625,0.218,2626,0.218,2627,0.218,2628,0.218,2629,0.193,2630,0.218,2631,0.218,2632,0.193,2633,0.218,2634,0.218,2635,0.218,2636,0.427,2637,0.379,2638,0.427,2639,0.218,2640,0.218,2641,0.427,2642,0.218,2643,0.218,2644,0.218,2645,0.218,2646,0.218,2647,0.218,2648,0.218,2649,0.4,2650,0.218,2651,0.218,2652,0.218,2653,0.218,2654,0.218,2655,0.218,2656,0.427,2657,0.218,2658,0.218,2659,0.218,2660,0.218,2661,0.558,2662,0.218,2663,0.303,2664,0.172,2665,0.218,2666,0.427,2667,0.427,2668,0.218,2669,0.218,2670,0.218,2671,0.218,2672,0.218,2673,0.218,2674,0.193,2675,0.145,2676,0.823,2677,0.218,2678,0.218,2679,0.218,2680,0.178,2681,0.218,2682,0.185,2683,0.185,2684,0.4,2685,0.218,2686,0.218,2687,0.167,2688,0.427,2689,0.218,2690,0.218,2691,0.167,2692,0.193,2693,0.193,2694,0.427,2695,0.218,2696,0.218,2697,0.218,2698,0.427,2699,0.218,2700,0.218,2701,0.218,2702,0.218,2703,0.218,2704,0.427,2705,0.427,2706,0.218,2707,0.218,2708,0.363,2709,0.218,2710,0.218,2711,0.218,2712,0.218,2713,0.218,2714,0.446,2715,0.218,2716,0.218,2717,0.218,2718,0.218,2719,0.218,2720,0.218,2721,0.218,2722,0.218,2723,0.218,2724,0.193,2725,0.218,2726,0.185,2727,0.363,2728,0.218,2729,0.218,2730,0.4,2731,0.218,2732,0.558,2733,0.218,2734,0.218,2735,0.218,2736,0.218,2737,0.218,2738,0.218,2739,0.218,2740,0.218,2741,0.193,2742,0.218,2743,0.193,2744,0.218,2745,0.218,2746,0.218,2747,0.218,2748,0.218,2749,0.218,2750,0.154,2751,0.218,2752,0.218,2753,0.218,2754,0.218,2755,0.218,2756,0.218,2757,0.218,2758,0.218,2759,0.218,2760,0.218,2761,0.218,2762,0.218,2763,0.558,2764,0.218,2765,0.218,2766,0.218,2767,0.218,2768,0.218,2769,0.185,2770,0.193,2771,0.218,2772,0.218,2773,0.218,2774,0.4,2775,0.4,2776,0.218,2777,0.218,2778,0.218,2779,0.218,2780,0.218,2781,0.218,2782,0.427,2783,0.178,2784,0.4,2785,0.178,2786,0.218,2787,0.218,2788,0.218,2789,0.193,2790,0.218,2791,0.218,2792,0.218,2793,0.218,2794,0.218,2795,0.218,2796,0.218,2797,0.218,2798,0.427,2799,0.218,2800,0.218,2801,0.218,2802,0.296,2803,0.218,2804,0.218,2805,0.218,2806,0.218,2807,0.218,2808,0.178,2809,0.218,2810,0.218,2811,0.218,2812,0.218,2813,0.218,2814,0.218,2815,0.218,2816,0.218,2817,0.151,2818,0.218,2819,0.218,2820,0.193,2821,0.218,2822,0.218,2823,0.218,2824,0.151,2825,0.193,2826,0.218,2827,0.218,2828,0.167,2829,0.218,2830,0.218,2831,0.218,2832,0.218,2833,0.218,2834,0.218,2835,0.218,2836,0.218,2837,0.218,2838,0.363,2839,0.218,2840,0.218,2841,0.218,2842,0.218,2843,0.218,2844,0.218,2845,0.218,2846,0.218,2847,0.218,2848,0.218,2849,0.218,2850,0.178]],["title/misc/changelog/#changelog-version-history",[41,2.892,42,1.699,43,2.631]],["text/misc/changelog/#changelog-version-history",[28,2.538,37,5.776,38,2.983,40,3.827,42,3.65,81,4.988,87,4.912,135,1.389,214,3.291,220,3.521,310,4.77,312,3.684,473,5.24,698,6.589,1552,8.338,1553,7.803]],["title/misc/changelog/#minor-quality-of-life-improvements-v114",[1347,1.689,1538,2.049,1554,2.642,1555,2.642,1556,2.823]],["text/misc/changelog/#minor-quality-of-life-improvements-v114",[44,1.305,110,4.171,202,5.51,213,5.224,225,3.54,403,6.48,838,6.682,1063,4.981,1313,4.364,1557,8.456,1558,5.51,1559,5.857,1560,3.999]],["title/misc/changelog/#additions",[193,3.408]],["text/misc/changelog/#additions",[8,3.267,21,2.618,28,2.601,219,3.373,230,4.127,364,3.547,378,4.216,757,6.753,1561,8.546,1562,8.546]],["title/misc/changelog/#bug-fixes",[110,2.356,1560,2.259]],["text/misc/changelog/#bug-fixes",[0,3.558,8,2.905,34,2.239,63,1.733,147,3.969,162,2.561,165,4.173,172,2.753,187,4.964,202,4.952,223,2.027,233,2.508,277,2.298,279,4.229,297,5.152,460,4.173,520,4.775,558,3.594,583,4.952,637,4.618,885,4.861,888,4.695,895,5.264,950,5.152,958,4.618,1025,5.517,1560,4.826,1563,6.746,1564,6.746,1565,6.746,1566,6.746,1567,6.005,1568,5.517,1569,7.018,1570,6.213,1571,6.746,1572,7.599,1573,5.517]],["title/misc/changelog/#enhancements",[1574,4.123]],["text/misc/changelog/#enhancements",[63,1.77,129,2.461,139,2.773,162,3.152,170,3.354,202,5.13,219,4.075,223,1.743,364,3.267,390,4.382,430,3.579,877,4.948,998,6.99,1033,6.222,1330,6.688,1542,4.948,1575,7.874,1576,6.437,1577,6.437,1578,7.874,1579,7.368,1580,6.033,1581,5.866,1582,6.222,1583,6.688,1584,6.99,1585,6.99,1586,7.874]],["title/misc/changelog/#bug-fixes-v113",[110,1.915,1560,1.835,1587,3.881]],["text/misc/changelog/#bug-fixes-v113",[44,1.319,110,4.216,1063,5.781,1313,4.411,1558,5.568,1560,4.042,1588,8.546,1589,5.794,1590,8.546]],["title/misc/changelog/#bug-fixes_1",[110,2.356,1560,2.259]],["text/misc/changelog/#bug-fixes_1",[9,3.108,95,4.156,165,4.677,430,3.87,521,3.132,950,5.773,1166,2.715,1591,7.56,1592,6.962,1593,6.345,1594,7.234]],["title/misc/changelog/#bug-fixes-v112",[110,1.915,1560,1.835,1595,3.881]],["text/misc/changelog/#bug-fixes-v112",[28,2.927,44,1.273,98,3.787,110,4.071,391,5.015,475,5.847,932,5.595,1063,5.665,1313,4.259,1424,5.595,1538,5.991,1540,6.149,1558,5.377,1560,3.903,1596,8.252,1597,5.716,1598,6.747,1599,7.01]],["title/misc/changelog/#bug-fixes_2",[110,2.356,1560,2.259]],["text/misc/changelog/#bug-fixes_2",[0,3.449,4,0.522,63,1.394,74,3.166,102,2.272,110,3.634,114,2.794,139,2.664,150,3.414,158,4.994,162,3.028,165,5.325,172,2.669,183,4.477,194,3.847,219,2.907,297,4.994,312,3.254,318,4.099,352,4.477,385,4.156,407,4.893,437,4.751,481,5.347,502,3.381,504,3.758,512,3.348,531,5.22,542,3.316,800,2.349,815,5.645,823,4.099,1211,4.477,1264,5.645,1424,4.994,1560,4.25,1600,7.366,1601,5.347,1602,6.893,1603,6.257,1604,6.539,1605,7.366,1606,7.366,1607,6.893,1608,6.539,1609,3.847,1610,4.8]],["title/misc/changelog/#bug-fixes-v111",[110,1.915,1560,1.835,1611,3.881]],["text/misc/changelog/#bug-fixes-v111",[44,1.26,109,2.677,110,4.716,134,4.428,137,2.714,183,4.964,312,3.608,373,4.673,932,5.538,1063,5.631,1313,4.216,1424,6.48,1558,6.228,1560,4.521,1601,5.93,1612,8.168,1613,5.93,1614,7.251]],["title/misc/changelog/#bug-fixes_3",[110,2.356,1560,2.259]],["text/misc/changelog/#bug-fixes_3",[4,0.537,6,2.134,63,1.344,80,3.198,98,3.261,130,3.36,139,2.106,162,2.962,170,3.027,172,2.574,219,3.469,233,3.149,277,2.657,279,3.954,286,4.921,297,4.817,323,5.208,364,2.948,391,4.318,520,4.465,558,3.36,710,4.25,827,5.293,828,5.444,969,5.614,1055,5.293,1103,5.293,1211,4.318,1418,5.034,1538,5.158,1560,5.004,1570,5.808,1571,6.307,1607,6.648,1614,6.307,1615,6.648,1616,6.035,1617,6.307,1618,6.648,1619,6.035,1620,6.035,1621,6.307,1622,7.105,1623,3.229,1624,6.648,1625,6.648,1626,6.648,1627,6.648,1628,6.648,1629,6.648]],["title/misc/changelog/#enhancements_1",[1574,4.123]],["text/misc/changelog/#enhancements_1",[0,3.438,3,2.423,4,0.396,63,1.697,80,3.306,95,3.584,129,2.803,137,3.218,139,2.177,151,4.033,162,2.475,172,2.661,182,4.463,183,4.463,219,4.083,224,3.128,233,3.196,234,2.492,297,4.979,314,4.537,319,3.275,338,4.393,429,4.326,502,3.37,570,4.537,745,3.79,747,4.537,981,4.326,991,3.981,1022,5.204,1097,5.803,1285,5.087,1347,5.365,1349,4.393,1567,5.803,1614,6.519,1623,3.338,1630,6.238,1631,7.619,1632,7.344,1633,4.615,1634,6.872,1635,6.238,1636,7.344]],["title/misc/changelog/#scheduled-messages-v110",[63,0.734,649,2.974,1637,3.881]],["text/misc/changelog/#scheduled-messages-v110",[2,4.946,4,0.599,6,2.097,12,2.26,13,3.771,24,2.359,44,1.341,45,2.512,63,1.321,129,2.181,137,3.146,219,2.755,261,5.046,277,2.111,282,7.107,292,3.142,313,4.637,352,4.242,559,3.084,589,3.084,629,4.733,649,7.255,655,5.371,888,4.313,1063,4.112,1313,3.603,1430,5.349,1490,5.707,1558,4.548,1638,6.981,1639,4.637,1640,9.468,1641,8.405,1642,8.694,1643,8.694,1644,8.135,1645,6.981]],["title/misc/changelog/#additions_1",[193,3.408]],["text/misc/changelog/#additions_1",[2,5.489,4,0.534,28,3.016,34,2.282,44,1.429,51,3.057,84,3.36,102,2.389,219,3.057,222,4.786,328,4.496,364,3.215,507,3.821,649,5.936,867,5.366,887,6.121,935,5.047,1017,5.624,1041,6.121,1122,5.489,1580,5.936,1581,5.772,1626,7.249,1627,7.249,1646,7.747,1647,7.747,1648,7.747,1649,7.747,1650,6.877,1651,6.121,1652,6.58,1653,6.58,1654,6.58,1655,6.333]],["title/misc/changelog/#bug-fixes_4",[110,2.356,1560,2.259]],["text/misc/changelog/#bug-fixes_4",[3,2.226,4,0.458,12,2.212,19,4.395,40,3.096,44,1.313,50,5.026,63,1.276,84,2.926,87,3.974,139,2,150,3.126,162,2.273,176,2.775,185,2.62,189,3.364,194,3.523,221,2.373,223,1.493,224,2.874,233,2.226,276,1.949,363,3.704,397,3.704,430,3.066,478,3.482,545,4.395,569,5.988,608,4.395,628,3.859,715,3.974,731,4.672,800,2.151,888,4.167,939,3.754,962,5.515,963,4.035,1032,5.515,1074,4.897,1166,2.972,1179,5.73,1180,5.73,1418,4.78,1443,4.239,1452,4.167,1466,4.897,1486,5.515,1560,5.145,1563,5.988,1564,5.988,1566,5.988,1584,5.988,1585,5.988,1609,3.523,1619,5.73,1656,6.312,1657,5.73,1658,5.026,1659,5.988,1660,5.73,1661,6.745,1662,6.745,1663,5.988,1664,3.61,1665,6.745,1666,7.554,1667,6.745,1668,6.745]],["title/misc/changelog/#enhancements_2",[1574,4.123]],["text/misc/changelog/#enhancements_2",[3,3.033,4,0.495,5,4.2,21,2.343,22,1.49,28,2.327,35,3.994,45,2.21,63,1.447,94,3.147,129,2.39,139,2.268,172,2.771,183,4.648,219,4.129,276,2.21,277,2.312,437,4.043,521,2.813,637,4.648,701,4.648,800,2.439,958,4.648,1025,5.552,1028,5.99,1229,5.185,1347,4.575,1669,6.043,1670,7.156,1671,7.648,1672,7.648,1673,4.983,1674,7.156,1675,7.156,1676,7.156]],["title/misc/changelog/#animated-stickers-v19",[1542,2.439,1576,3.173,1677,3.881]],["text/misc/changelog/#animated-stickers-v19",[0,0.998,1,0.46,3,2.111,4,0.59,5,1.17,6,1.08,8,1.375,9,0.429,12,1.326,14,0.621,19,0.765,21,1.278,22,0.7,24,1.488,25,0.579,28,2.618,29,0.534,32,0.645,33,1.493,34,2.318,35,1.113,37,1.476,38,1.69,39,1.219,42,2.68,44,1.34,45,1.474,46,1.281,49,1.428,51,1.646,52,1.54,53,0.834,54,0.491,58,2.097,59,1.008,60,1.633,61,1.102,63,1.257,65,0.852,66,1.354,69,2.095,72,0.813,74,0.916,75,2.3,80,0.959,81,0.702,82,0.96,84,1.809,86,0.751,90,0.813,92,1.607,94,1.204,95,3.541,98,0.539,102,0.362,105,3.165,106,1.295,107,1.716,109,0.698,110,3.665,114,1.11,115,0.621,116,1.127,119,2.073,126,0.579,127,0.78,129,2.499,130,2.412,134,0.636,135,0.969,136,2.611,137,1.934,139,1.969,140,0.692,143,2.462,147,0.613,148,1.724,150,1.667,151,0.645,152,1.716,157,1.042,158,1.445,159,3.232,160,1.275,161,0.875,162,2.382,163,2.774,164,2.485,165,2.29,166,0.702,170,1.777,172,1.986,176,0.483,183,0.714,184,1.416,185,0.828,188,1.155,189,1.063,193,3.363,194,2.863,195,2.101,199,1.906,200,0.692,201,0.78,202,2.717,210,0.813,214,0.463,217,1.04,219,3.774,220,0.496,221,1.265,222,0.725,223,1.129,224,1.777,225,1.225,226,0.628,227,0.988,228,0.738,230,2.014,231,1.651,233,1.54,234,0.398,236,1.701,249,0.796,250,2.68,251,1.295,252,0.621,253,1.993,254,0.645,265,1.17,267,1.582,271,0.621,273,0.645,274,1.901,276,1.77,277,1.851,279,0.653,280,0.714,283,1.384,285,0.738,286,0.813,292,0.529,294,1.17,297,2.827,301,1.354,302,1.295,303,0.592,310,1.219,312,0.519,314,1.316,315,1.594,318,1.628,319,2.081,322,0.567,323,2.437,330,0.653,331,1.698,333,0.96,340,0.725,343,0.567,348,1.313,350,1.476,351,1.333,352,1.295,355,1.202,364,1.937,365,2.327,380,1.588,384,0.519,385,2.877,387,2.592,390,1.186,391,1.778,392,0.852,403,0.9,407,0.78,408,1.042,420,0.832,421,0.78,422,1.293,427,0.751,430,0.969,436,1.237,437,0.621,438,0.959,439,0.765,440,0.561,446,1.476,450,1.682,453,0.813,455,0.875,460,0.645,467,1.416,471,1.237,473,3.205,478,0.606,488,1.044,495,1.087,497,0.796,502,0.539,505,0.832,506,0.636,507,1.443,512,0.969,517,0.765,518,1.51,519,0.9,521,1.876,522,0.751,526,0.796,528,1.127,531,0.832,532,0.852,533,1.416,540,1.698,542,1.619,548,0.573,552,1.042,556,1.778,559,0.519,561,1.95,563,0.78,567,0.751,576,1.246,583,0.765,585,0.702,588,0.628,591,1.416,592,1.871,595,0.714,619,0.653,620,1.839,621,0.928,625,0.875,626,0.9,628,0.672,629,0.796,641,0.592,650,0.875,659,0.681,664,0.662,666,1.219,673,0.751,674,0.832,675,0.9,683,1.042,686,0.997,695,0.636,701,1.295,705,1.588,708,0.9,709,1.295,710,0.702,711,3.663,715,2.119,743,1.476,745,0.606,747,1.808,751,1.042,767,0.875,772,0.636,776,0.96,800,0.933,801,0.445,806,0.653,817,1.51,823,0.653,824,0.852,826,0.832,841,2.232,863,0.852,870,0.672,877,0.738,883,0.765,884,0.875,885,1.871,887,0.928,888,2.222,890,2.124,892,1.186,896,0.832,900,0.725,901,0.738,905,2.836,909,0.96,918,0.9,919,0.78,920,0.813,928,0.702,933,0.621,936,0.9,939,0.653,941,0.78,942,0.997,943,2.491,945,0.813,950,1.445,954,3.409,963,1.75,969,0.928,974,0.852,978,0.514,981,1.724,983,0.765,984,1.339,987,0.852,1002,1.018,1022,1.51,1025,0.852,1055,0.875,1057,0.725,1063,4.165,1067,1.547,1082,1.042,1087,1.839,1091,0.96,1096,0.78,1097,1.684,1099,1.219,1104,1.742,1107,0.96,1112,1.042,1127,2.756,1131,1.51,1132,0.928,1136,0.852,1141,1.339,1146,0.96,1181,2.18,1204,0.997,1211,1.778,1214,0.96,1222,0.96,1223,0.875,1231,0.9,1238,1.81,1239,1.042,1243,0.9,1247,1.588,1256,0.9,1264,1.633,1266,1.684,1285,0.813,1289,1.51,1302,0.928,1304,1.042,1313,3.004,1340,1.042,1347,3.051,1355,1.255,1402,0.928,1406,0.997,1418,0.832,1421,1.042,1424,0.796,1440,1.528,1441,0.928,1447,0.96,1452,1.808,1466,0.852,1490,0.96,1514,0.813,1535,0.997,1538,0.852,1540,0.875,1542,1.339,1553,1.099,1554,1.099,1555,2.738,1558,2.717,1560,4.78,1563,1.042,1564,1.042,1568,2.124,1573,0.852,1574,3.642,1576,0.96,1579,1.099,1580,2.242,1581,2.18,1584,1.042,1585,1.042,1591,1.042,1592,0.96,1593,3.8,1599,0.997,1601,2.124,1603,0.997,1604,1.042,1609,1.528,1610,0.765,1615,1.099,1616,0.997,1621,2.597,1624,1.099,1625,1.099,1628,1.099,1629,1.099,1631,0.997,1633,1.839,1634,1.099,1635,0.997,1651,0.928,1652,0.997,1653,0.997,1654,1.81,1655,1.742,1656,1.099,1657,1.81,1658,0.875,1660,0.997,1666,1.042,1669,1.684,1673,0.765,1674,1.099,1675,1.099,1676,1.099,1678,1.174,1679,1.388,1680,1.174,1681,1.174,1682,2.18,1683,1.042,1684,1.174,1685,1.994,1686,1.174,1687,2.738,1688,1.174,1689,1.174,1690,1.099,1691,0.78,1692,1.174,1693,1.174,1694,3.902,1695,3.902,1696,1.174,1697,1.174,1698,2.131,1699,0.928,1700,1.099,1701,1.174,1702,1.174,1703,1.174,1704,1.099,1705,1.174,1706,3.055,1707,1.099,1708,1.099,1709,1.547,1710,1.099,1711,1.042,1712,1.174,1713,0.9,1714,1.174,1715,1.174,1716,0.9,1717,1.099,1718,1.174,1719,1.892,1720,1.892,1721,1.042,1722,1.099,1723,2.312,1724,2.597,1725,3.055,1726,2.485,1727,1.174,1728,1.174,1729,1.994,1730,1.174,1731,1.174,1732,2.131,1733,1.174,1734,0.9,1735,1.174,1736,1.174,1737,1.174,1738,1.042,1739,1.174,1740,1.174,1741,1.174,1742,1.174,1743,1.174,1744,1.984,1745,1.174,1746,1.174,1747,1.81,1748,1.174,1749,0.96,1750,1.174,1751,0.96,1752,1.042,1753,1.174,1754,1.174,1755,1.174,1756,1.684,1757,1.174,1758,1.174,1759,1.174,1760,0.997,1761,2.389,1762,1.174,1763,1.099,1764,1.099,1765,1.174,1766,1.174,1767,1.742,1768,1.174,1769,0.875,1770,2.485,1771,1.174,1772,1.906,1773,1.099,1774,2.131,1775,2.485,1776,1.042,1777,1.174,1778,1.994,1779,1.099,1780,1.81,1781,1.174,1782,1.81,1783,1.099,1784,1.174,1785,1.174,1786,1.099,1787,0.875,1788,1.174,1789,1.416,1790,2.027,1791,1.684,1792,1.042,1793,0.96,1794,1.042,1795,1.042,1796,1.174,1797,1.042,1798,1.042,1799,1.099,1800,2.131,1801,1.174,1802,1.174,1803,0.96,1804,1.994,1805,1.174,1806,1.174,1807,0.796,1808,2.926,1809,2.597,1810,1.174,1811,1.174,1812,1.174,1813,0.997,1814,1.174,1815,2.131,1816,1.994,1817,1.81,1818,1.042,1819,0.96,1820,1.174,1821,2.312,1822,1.042,1823,1.042,1824,0.765,1825,1.174,1826,1.174,1827,1.099,1828,0.751,1829,0.997,1830,1.174,1831,1.174,1832,0.997,1833,1.174,1834,1.174,1835,1.174,1836,1.174,1837,1.174,1838,1.099,1839,1.174,1840,1.174,1841,1.099,1842,1.174,1843,1.174,1844,1.099,1845,1.174,1846,1.174,1847,1.174,1848,1.042,1849,1.174,1850,1.174,1851,1.174,1852,0.832,1853,1.174,1854,1.174,1855,1.174,1856,0.997,1857,2.131,1858,1.174,1859,1.099,1860,0.928,1861,1.174,1862,1.174,1863,1.174,1864,1.174,1865,1.174,1866,1.174,1867,1.174,1868,1.174,1869,1.174,1870,1.174,1871,1.174,1872,1.174,1873,1.174,1874,1.099,1875,2.131,1876,1.174,1877,1.174,1878,1.174,1879,1.174,1880,1.174,1881,1.099,1882,1.174,1883,1.174,1884,1.684,1885,0.997,1886,0.928,1887,1.042,1888,1.174,1889,0.997,1890,1.174,1891,1.742,1892,1.174,1893,0.997,1894,1.174,1895,2.131,1896,0.796,1897,1.099,1898,1.174,1899,1.994,1900,1.81,1901,1.174,1902,0.997,1903,0.96,1904,1.042,1905,1.174,1906,1.174,1907,1.174,1908,1.174,1909,0.813,1910,0.96,1911,1.042,1912,1.099,1913,1.099,1914,1.042,1915,0.796,1916,2.392,1917,1.174,1918,1.174,1919,0.96,1920,1.042,1921,1.174,1922,1.099,1923,1.174,1924,1.174,1925,1.174,1926,1.174,1927,1.174,1928,1.042,1929,1.174,1930,1.042,1931,2.131,1932,1.174,1933,1.174,1934,1.042,1935,1.174,1936,1.174,1937,1.174,1938,1.174,1939,1.174,1940,1.174,1941,1.174,1942,1.174,1943,1.174,1944,0.852,1945,0.96,1946,1.174]],["title/misc/changelog/#polls-with-the-latest-layer-v15",[103,2.091,699,2.216,1063,1.925,1947,3.269]],["text/misc/changelog/#polls-with-the-latest-layer-v15",[3,1.914,4,0.59,28,2.639,34,1.709,42,2.539,44,1.338,45,1.676,52,2.861,54,2.428,55,3.71,58,1.676,59,2.743,61,1.777,63,1.097,103,4.935,105,4.099,107,2.386,110,2.861,119,5.467,129,3.007,130,2.743,135,1.539,137,2.881,139,1.72,150,2.688,172,2.101,188,2.289,193,3.185,195,2.611,198,2.801,219,3.798,221,2.04,225,2.428,233,1.914,234,1.968,286,4.018,312,2.562,319,3.441,331,3.366,364,2.407,391,3.525,392,4.211,473,3.645,512,2.636,518,2.994,521,2.133,532,4.211,558,2.743,561,3.144,641,2.926,699,3.932,709,3.525,717,3.185,743,2.926,776,4.742,803,3.029,813,3.318,888,3.583,905,4.689,943,4.018,978,2.539,984,3.645,1063,5.668,1313,2.994,1347,3.47,1418,4.11,1443,3.645,1558,3.779,1560,2.743,1574,3.853,1633,3.645,1658,4.321,1687,5.428,1713,4.445,1772,3.779,1922,5.428,1948,5.8,1949,5.76,1950,6.554,1951,5.428,1952,3.71,1953,4.742,1954,5.8,1955,5.8,1956,5.428,1957,4.927,1958,5.8,1959,4.742,1960,5.149,1961,5.149,1962,5.8]],["title/misc/changelog/#error-descriptions-in-csv-files-v143",[139,0.837,172,1.023,239,1.393,1963,2.642,1964,2.823]],["text/misc/changelog/#error-descriptions-in-csv-files-v143",[0,1.68,3,2.778,4,0.582,5,1.971,8,1.372,12,0.933,21,1.099,24,0.974,25,2.7,28,2.431,34,2.186,38,2.046,41,2.674,42,3.248,44,1.393,48,2.181,51,2.618,52,1.184,58,1.037,59,1.697,63,1.512,65,2.606,66,1.351,94,1.477,102,2.288,105,2.826,107,2.252,110,3.661,113,2.339,115,1.897,119,4.701,129,2.736,130,2.588,132,2.433,134,1.946,135,1.105,137,1.193,139,1.967,146,2.433,147,1.875,148,2.114,150,2.537,152,1.32,160,2.147,165,4.075,172,3.172,176,1.477,183,2.181,185,2.126,186,2.217,192,1.752,193,1.971,194,2.859,217,1.752,219,3.84,225,1.502,226,1.921,228,2.255,230,3.203,231,2.025,233,1.806,234,1.218,239,1.771,247,2.384,250,4.943,252,1.897,253,1.715,267,2.516,273,1.971,276,1.037,277,1.085,292,2.464,303,1.81,307,1.971,309,2.339,315,2.092,318,1.997,319,1.6,323,1.875,328,2.083,352,2.181,364,1.489,365,1.79,368,1.516,391,3.326,392,2.606,418,2.606,422,1.586,429,2.114,436,2.083,442,2.934,466,2.486,473,2.255,481,3.973,486,3.224,487,2.296,488,1.281,499,2.75,503,1.631,512,1.631,527,2.674,540,2.083,542,1.616,556,2.181,558,3.137,561,2.967,576,1.529,599,3.186,628,2.053,637,3.326,641,1.81,667,2.75,674,2.543,675,2.75,681,1.946,695,1.946,705,2.674,711,2.147,722,2.433,745,1.853,747,2.217,749,3.186,798,2.674,800,1.745,807,2.606,823,1.997,828,2.75,839,2.543,841,2.93,892,1.997,894,2.083,928,2.147,932,2.433,943,5.14,945,2.486,963,2.147,991,1.946,1022,3.878,1028,2.181,1055,2.674,1078,3.049,1086,1.921,1087,2.255,1089,2.384,1099,2.053,1100,2.486,1104,2.934,1113,2.674,1115,5.242,1129,2.836,1132,2.836,1141,2.255,1212,2.486,1222,2.934,1223,2.674,1231,2.75,1236,3.186,1285,3.791,1286,2.674,1288,2.836,1296,3.049,1313,3.424,1347,3.274,1349,2.147,1380,3.049,1418,2.543,1443,2.255,1538,2.606,1560,4.705,1573,2.606,1574,4.407,1577,2.934,1598,2.934,1599,3.049,1603,3.049,1604,3.186,1609,1.875,1631,3.049,1633,2.255,1641,3.186,1657,4.649,1664,2.93,1685,3.359,1722,3.359,1723,2.836,1726,3.049,1729,3.359,1763,3.359,1764,3.359,1770,3.049,1789,2.384,1829,3.049,1859,3.359,1897,3.359,1899,3.359,1904,3.186,1957,3.049,1963,3.359,1965,3.589,1966,2.606,1967,3.186,1968,3.359,1969,3.589,1970,3.589,1971,3.359,1972,3.589,1973,3.589,1974,3.589,1975,3.589,1976,3.589,1977,3.589,1978,3.589,1979,3.049,1980,3.049,1981,3.359,1982,3.589,1983,3.589,1984,3.589,1985,3.359,1986,3.359,1987,3.589,1988,2.836,1989,3.589,1990,3.589,1991,3.589,1992,3.589,1993,3.589,1994,3.589,1995,3.589,1996,3.589,1997,3.589,1998,3.589,1999,3.359,2000,3.589,2001,3.186,2002,3.359,2003,3.589,2004,3.186,2005,3.589,2006,3.589,2007,3.589,2008,2.934,2009,3.186,2010,3.186,2011,2.543]],["title/misc/changelog/#event-templates-v13",[8,1.484,2012,3.632,2013,3.881]],["text/misc/changelog/#event-templates-v13",[0,3,3,1.465,4,0.586,6,2.259,7,2.659,8,3.338,12,2.141,14,2.346,21,1.963,22,0.864,23,3.557,24,1.739,28,2.658,38,1.369,44,0.989,45,1.852,46,1.943,49,3.127,58,1.283,63,1.817,66,1.67,69,2.45,98,2.037,99,1.781,105,2.73,107,1.826,109,1.454,110,2.19,120,3.629,129,1.387,135,1.454,137,1.475,139,1.9,141,3.94,155,2.655,162,1.496,163,1.925,165,2.437,170,2.73,171,2.576,178,2.697,188,1.752,193,2.437,194,3.928,195,1.998,198,2.143,219,3.25,223,0.982,233,2.114,234,1.506,240,2.615,263,3.145,270,2.017,276,1.283,277,2.274,283,2.099,292,2.885,305,2.057,310,2.539,313,2.948,318,2.47,323,2.318,333,3.629,340,2.742,348,1.62,363,2.437,367,2.697,368,1.874,370,3.615,385,3.615,388,3.507,391,2.697,420,3.145,438,1.998,440,2.121,449,2.576,456,4.302,466,3.074,473,2.789,478,2.291,481,5.459,488,1.584,495,3.269,518,2.291,521,1.632,522,2.839,528,2.346,540,2.576,545,2.892,547,3.074,558,2.099,561,2.406,595,2.697,625,3.307,628,3.666,647,3.507,686,3.77,709,2.697,745,2.291,757,3.507,763,3.94,772,2.406,798,3.307,801,2.43,811,3.94,814,2.376,823,2.47,867,3.074,908,2.839,956,2.742,963,2.655,984,4.027,1048,2.839,1081,3.629,1089,2.948,1098,3.507,1099,3.666,1101,3.629,1108,3.629,1141,2.789,1154,3.222,1166,1.415,1170,3.77,1193,3.77,1194,3.94,1202,3.94,1203,3.94,1211,2.697,1212,3.074,1240,3.77,1265,3.629,1285,3.074,1291,3.074,1313,2.291,1343,3.629,1347,2.655,1384,3.94,1389,3.145,1452,2.742,1542,2.789,1560,4.304,1567,3.507,1574,2.948,1610,2.892,1633,2.789,1704,4.153,1726,3.77,1786,4.153,1809,3.94,1817,3.77,1909,3.074,1986,4.153,2012,4.153,2014,4.438,2015,4.153,2016,3.401,2017,4.438,2018,4.438,2019,4.438,2020,3.94,2021,4.438,2022,4.438,2023,3.507,2024,3.629,2025,4.438,2026,4.438,2027,3.77,2028,4.438,2029,4.438,2030,4.153,2031,4.438,2032,4.438,2033,3.94,2034,3.222,2035,4.438,2036,3.94,2037,4.438,2038,5.996,2039,4.438,2040,4.438,2041,3.94]],["title/misc/changelog/#conversations-string-sessions-and-more-v12",[233,0.932,365,1.408,841,1.511,1086,1.511,2042,2.823]],["text/misc/changelog/#conversations-string-sessions-and-more-v12",[0,1.851,1,0.934,3,1.67,4,0.559,6,2.113,7,1.641,8,2.495,9,1.443,12,1.028,14,2.09,21,1.211,22,0.77,23,2.394,24,1.374,25,1.177,28,2.709,32,2.171,34,1.491,38,2.169,40,1.095,44,1.373,45,1.143,46,1.045,48,1.45,49,1.165,51,2.94,52,0.788,54,2.944,55,3.238,58,0.69,63,1.617,66,0.898,69,2.847,71,1.586,75,1.527,80,1.074,84,3.38,86,1.527,93,1.555,94,2.685,95,2.873,98,2.323,102,1.561,105,2.157,107,0.982,109,0.782,110,3.844,115,1.262,126,1.177,128,2.027,129,2.328,130,1.129,131,1.5,135,1.24,137,1.682,139,2.534,140,1.406,142,1.733,147,1.247,148,1.406,150,2.729,151,1.311,160,1.428,162,2.626,166,1.428,170,2.157,172,1.834,176,0.982,178,2.403,185,0.927,186,1.474,188,0.942,189,1.19,193,3.233,194,2.065,195,1.074,202,1.555,210,1.653,214,0.942,216,1.385,219,3.669,220,1.008,222,2.443,225,2.464,231,2.231,233,1.67,240,1.406,247,2.627,250,3.772,261,1.385,267,0.905,271,3.719,273,1.311,276,1.463,277,0.722,283,2.394,294,2.78,303,1.994,307,3.584,315,0.912,318,1.328,322,1.152,330,2.201,331,1.385,336,1.886,337,1.653,339,1.365,351,0.885,355,2.856,363,1.311,364,2.101,365,2.937,368,2.486,378,1.177,384,1.054,385,3.968,387,2.784,391,2.403,395,2.117,402,3.432,405,1.951,407,2.627,422,1.054,429,3.468,430,1.085,438,1.78,440,2.419,449,1.385,450,1.391,453,1.653,454,2.031,456,1.365,470,1.428,481,4.274,488,1.807,490,2.739,491,0.777,495,2.583,498,1.733,502,1.095,518,1.232,520,1.5,521,1.454,525,1.232,536,1.951,542,1.074,551,2.443,554,3.03,558,1.129,559,1.747,561,2.744,562,2.119,573,1.586,585,1.428,589,1.054,592,1.527,595,1.45,613,2.739,620,1.5,629,1.618,637,3.966,641,1.204,655,1.474,667,1.829,684,1.691,701,2.403,709,1.45,710,2.365,711,2.365,715,1.406,716,1.586,717,1.311,735,2.027,747,2.443,772,1.294,787,0.846,801,0.905,804,1.691,817,1.691,823,1.328,824,1.733,835,3.507,841,1.278,863,1.733,877,2.485,885,1.527,891,2.027,892,1.328,905,2.403,908,1.527,928,1.428,932,2.681,933,2.09,943,4.872,945,1.653,958,1.45,963,1.428,981,1.406,984,1.5,991,1.294,1002,2.419,1017,1.733,1022,1.691,1025,1.733,1035,2.119,1055,1.778,1086,1.278,1087,2.485,1089,1.586,1091,1.951,1099,2.896,1101,1.951,1107,1.951,1108,3.233,1110,2.027,1127,3.03,1132,1.886,1141,2.485,1151,3.233,1152,3.233,1154,1.733,1166,1.261,1178,2.119,1219,2.576,1223,1.778,1229,1.618,1241,2.119,1264,3.03,1286,2.946,1313,3.039,1355,2.329,1361,1.733,1362,2.946,1397,1.886,1424,3.432,1440,1.247,1441,1.886,1444,2.119,1479,1.886,1535,2.027,1542,1.5,1560,3.327,1568,1.733,1570,1.951,1571,2.119,1574,3.363,1582,1.886,1594,2.027,1598,1.951,1601,1.733,1609,2.644,1610,2.576,1633,2.485,1641,2.119,1654,2.027,1655,1.951,1657,3.359,1706,2.027,1708,2.233,1710,2.233,1719,2.119,1720,2.119,1744,1.618,1747,2.027,1772,2.576,1773,2.233,1783,2.233,1792,2.119,1809,2.119,1829,3.359,1838,2.233,1874,2.233,1881,2.233,1912,2.233,1913,2.233,1944,2.871,1945,1.951,1966,2.871,2002,3.7,2020,2.119,2033,2.119,2043,2.387,2044,2.119,2045,2.387,2046,2.027,2047,2.387,2048,3.51,2049,3.954,2050,2.387,2051,2.387,2052,2.387,2053,1.951,2054,2.233,2055,2.233,2056,4.494,2057,3.125,2058,2.387,2059,2.387,2060,2.387,2061,2.119,2062,2.119,2063,1.886,2064,2.871,2065,2.233,2066,2.387,2067,2.387,2068,2.387,2069,2.119,2070,2.233,2071,2.387,2072,2.387,2073,2.233,2074,2.233,2075,2.119,2076,2.387,2077,2.387,2078,2.233,2079,2.387,2080,2.387,2081,2.387,2082,2.387,2083,2.387,2084,2.387,2085,2.387,2086,2.027,2087,3.954,2088,3.51,2089,2.387,2090,2.387,2091,2.119,2092,2.387,2093,2.387,2094,4.737,2095,2.387,2096,2.387,2097,3.954,2098,2.387,2099,2.387,2100,2.387,2101,1.829,2102,2.387,2103,1.586,2104,2.387,2105,2.387,2106,2.387,2107,2.387,2108,2.387,2109,2.387,2110,2.387,2111,2.387,2112,2.387,2113,2.387,2114,2.387,2115,2.387,2116,3.51,2117,2.387,2118,1.778,2119,2.119,2120,2.946,2121,2.387,2122,1.951,2123,2.387,2124,1.951,2125,2.387,2126,2.119,2127,2.387,2128,2.387,2129,2.387,2130,2.387,2131,2.387,2132,2.387,2133,2.387,2134,2.119,2135,2.387,2136,2.119,2137,2.387,2138,2.387,2139,3.7,2140,2.233,2141,2.387,2142,2.233,2143,2.387,2144,2.233,2145,1.733,2146,2.387,2147,2.119]],["title/misc/changelog/#iterate-messages-in-reverse-v103",[63,0.618,592,2.091,1787,2.435,2148,3.269]],["text/misc/changelog/#iterate-messages-in-reverse-v103",[4,0.559,8,2.488,9,3.036,12,2.162,28,2.531,40,2.987,42,2.848,44,1.283,54,2.724,58,1.881,63,1.734,66,2.449,69,2.488,81,4.975,92,3.574,95,3.176,110,4.103,135,1.084,137,2.764,139,1.929,160,3.893,170,3.543,173,5.528,175,5.528,192,3.176,193,3.574,219,2.569,223,1.44,253,3.11,267,2.468,277,1.968,307,3.574,308,4.089,315,2.488,323,3.399,359,3.893,364,4.009,396,5.138,420,4.611,440,3.11,539,5.32,542,2.93,561,4.508,573,4.323,592,4.163,628,3.723,641,3.282,888,4.02,892,3.622,1063,3.834,1077,4.849,1166,2.075,1228,5.777,1256,4.987,1313,3.359,1427,5.32,1467,4.611,1558,4.24,1560,4.568,1719,5.777,1720,5.777,1770,5.528,1787,6.197,1952,4.163,2064,4.724,2142,6.09,2149,6.508,2150,5.528,2151,6.508,2152,6.508,2153,5.528,2154,6.09,2155,6.508]],["title/misc/changelog/#bug-fixes-v102",[110,1.915,1560,1.835,2156,3.881]],["text/misc/changelog/#bug-fixes-v102",[95,4.186,137,2.85,238,6.077,573,5.698,651,6.39,1313,4.427,1389,6.077,1560,4.056,2157,8.577]],["title/misc/changelog/#bug-fixes-v101",[110,1.915,1560,1.835,2158,3.881]],["text/misc/changelog/#bug-fixes-v101",[0,0.716,1,2.027,3,1.516,4,0.558,5,0.586,6,1.314,7,1.906,8,2.552,9,1.421,10,0.628,11,0.32,12,1.434,13,0.847,14,1.603,17,0.406,18,1.567,19,0.364,21,0.598,22,0.38,23,0.923,24,0.733,25,0.526,28,2.559,29,0.887,32,0.586,33,0.285,34,2.025,35,1.41,36,0.839,38,2.203,39,0.875,40,1.239,42,1.915,44,1.424,45,0.965,46,1.327,47,0.906,48,0.648,49,1.769,50,1.455,51,0.924,52,1.102,53,1.057,54,1.398,55,0.682,57,1.187,58,1.958,59,0.264,60,1.496,61,0.598,63,1.318,66,2.014,68,0.299,69,1.583,70,0.379,71,0.372,72,0.387,73,0.387,74,0.839,75,1.727,77,0.442,80,1.054,81,0.638,84,0.243,86,2.136,87,0.329,89,0.695,92,1.665,93,0.364,94,1.492,95,1.63,98,1.391,99,0.783,102,1.349,105,3.346,106,0.34,107,2.828,109,0.35,110,4.083,111,0.774,113,1.272,115,1.765,116,1.032,119,1.384,123,0.829,124,0.586,125,0.406,126,0.963,127,1.297,128,0.475,129,2.284,130,1.579,131,0.961,132,0.379,134,1.058,135,0.918,136,0.406,137,2.648,139,2.066,140,0.901,142,0.774,143,2.318,144,0.496,146,0.723,148,1.967,150,2.628,151,0.84,152,1.904,155,1.615,160,1.401,162,2.137,163,0.663,164,0.906,165,2.939,166,0.335,167,0.315,170,1.423,172,1.5,173,0.475,174,0.947,175,0.475,176,0.439,178,0.648,182,0.929,183,1.187,185,1.699,186,0.945,187,0.829,188,1.635,189,0.763,190,1.303,191,1.498,192,1.143,193,3.546,194,2.4,195,0.879,199,0.695,200,0.901,202,2.176,210,1.87,213,0.345,214,1.727,216,0.325,217,0.953,219,3.875,220,0.825,221,2.188,223,1.288,224,1.423,225,1.831,226,0.819,227,0.259,228,0.67,230,1.75,231,0.315,232,0.496,233,2.385,234,0.362,236,0.923,237,0.32,238,1.913,240,2.293,241,0.315,243,0.396,244,0.429,245,0.307,246,0.307,249,0.379,250,2.701,251,0.34,252,0.564,253,1.979,254,1.483,260,0.933,261,0.619,263,0.756,264,1.496,265,0.586,266,0.496,267,1.742,269,0.351,270,1.378,271,1.603,273,1.286,274,1.032,276,1.387,277,1.01,279,0.594,280,0.34,283,1.579,285,0.67,286,2.511,291,0.799,292,1.054,293,0.406,294,0.307,297,1.324,298,1.016,300,0.406,301,0.576,302,0.648,303,2.317,304,0.739,305,1.405,307,1.072,315,0.746,316,0.34,317,1.085,318,0.594,319,1.951,322,0.27,323,1.02,326,0.594,327,1.286,329,0.888,330,0.311,331,0.325,333,0.872,337,0.387,338,0.915,339,0.61,340,0.659,342,0.372,343,0.27,344,0.695,346,0.943,348,0.713,351,0.724,352,1.187,353,0.379,355,1.102,358,0.396,359,0.638,362,1.172,363,1.665,364,2.149,365,3.102,367,0.648,368,1.643,369,1.239,370,0.315,373,0.61,378,1.496,379,0.978,380,1.455,384,0.863,385,1.884,387,1.107,388,1.543,389,0.723,390,0.311,391,2.917,393,1.139,394,0.795,395,0.819,396,0.345,397,0.586,398,1.583,399,0.756,401,0.429,403,0.429,406,0.379,413,0.406,414,0.817,415,0.345,416,1.016,418,0.774,420,1.084,422,1.475,427,0.682,428,0.929,430,1.227,435,0.774,436,1.359,437,2.058,438,0.252,439,0.996,440,1.119,441,0.417,442,0.457,447,1.037,448,1.249,449,0.325,450,1.637,454,1.455,456,1.34,460,0.307,466,0.739,467,1.016,473,2.602,477,0.457,478,0.551,480,1.299,482,0.989,486,2.577,487,0.978,488,2.264,490,0.387,491,0.182,494,0.429,495,1.547,496,0.387,497,2.458,498,0.406,499,0.817,501,0.648,502,1.075,503,0.485,504,0.78,506,1.058,507,0.276,512,1.648,514,0.723,518,1.008,520,1.227,521,2.086,522,0.358,523,0.34,524,0.372,525,0.289,526,0.379,527,1.139,528,0.808,530,0.457,532,1.11,533,0.709,537,0.34,538,0.843,540,1.133,542,0.879,545,0.364,546,0.442,548,1.48,549,1.206,550,1.659,556,0.34,558,1.841,559,1.602,561,3.303,563,0.372,570,0.659,573,1.016,574,1.172,576,0.832,581,0.429,583,1.272,584,1.7,586,0.372,588,0.819,589,1.193,591,0.372,592,1.249,595,0.34,602,0.496,606,0.843,615,1.496,616,0.996,619,1.087,620,0.351,625,0.795,626,0.817,627,1.321,628,2.369,630,0.496,637,2.203,640,0.406,641,0.985,650,0.795,654,0.34,655,0.345,658,1.172,659,0.619,664,1.102,666,0.875,667,0.429,669,1.084,671,1.358,675,1.172,679,0.457,681,0.578,693,0.379,694,0.406,695,1.643,699,0.379,701,1.187,702,0.417,705,0.795,707,0.795,708,1.172,709,2.029,710,0.915,711,0.638,715,1.786,716,0.372,717,1.483,718,0.457,722,0.379,738,0.417,743,0.985,744,0.457,745,1.209,747,1.668,755,0.406,776,1.25,782,0.379,784,0.429,787,0.378,794,0.396,800,0.488,801,1.267,803,0.799,805,0.817,806,1.503,807,0.774,813,0.32,814,2.217,816,0.329,817,0.396,823,1.503,829,1.016,835,1.059,837,0.457,838,0.442,842,1.745,843,1.249,853,1.172,862,1.587,868,0.457,869,1.172,870,1.117,877,1.471,881,0.32,882,0.396,883,0.364,886,0.602,887,0.442,888,1.206,889,0.406,890,0.406,891,0.475,892,1.087,893,0.417,894,0.888,896,0.756,897,1.622,900,0.659,901,0.351,902,0.872,905,0.648,906,0.457,907,0.442,908,1.727,918,0.429,919,2.014,926,0.406,927,0.396,928,0.638,932,2.639,933,0.808,935,0.996,937,1.25,938,0.335,939,0.594,941,1.556,942,0.475,943,2.511,945,1.059,948,0.723,950,1.831,953,0.429,958,0.929,961,0.496,963,1.168,964,1.016,969,0.442,974,0.406,978,0.669,981,1.591,984,0.961,991,0.829,1002,0.51,1017,0.406,1020,0.872,1022,0.756,1023,0.496,1024,0.496,1025,0.774,1028,1.842,1030,0.496,1039,0.417,1041,0.843,1044,0.417,1048,1.498,1049,0.429,1053,0.496,1054,0.406,1055,0.795,1057,0.345,1058,0.648,1059,0.496,1060,0.457,1063,1.967,1064,0.329,1067,0.406,1069,0.795,1070,0.406,1072,1.913,1074,1.11,1075,0.417,1080,0.795,1086,1.045,1087,0.67,1089,2.906,1091,0.872,1092,0.442,1093,0.457,1094,0.442,1095,0.496,1096,0.372,1098,0.442,1099,2.074,1100,0.739,1104,0.872,1105,0.906,1111,0.442,1113,1.139,1122,0.396,1131,0.396,1132,0.843,1136,1.11,1141,0.351,1166,1.065,1170,0.475,1172,0.496,1175,0.872,1179,0.906,1180,0.906,1181,1.455,1182,0.496,1186,0.756,1189,0.947,1191,0.496,1200,0.906,1201,0.475,1204,0.475,1205,0.947,1206,0.496,1207,0.947,1208,0.496,1209,0.496,1210,0.496,1211,2.029,1212,0.387,1216,0.457,1219,0.695,1220,1.596,1221,0.872,1222,0.872,1223,1.455,1225,0.417,1226,0.872,1229,0.723,1230,0.872,1238,0.475,1240,0.475,1256,1.172,1264,0.429,1266,1.543,1270,0.872,1273,0.406,1278,0.496,1279,0.947,1280,0.457,1282,0.947,1284,2.396,1285,1.87,1286,0.795,1288,0.442,1289,0.396,1292,0.387,1294,0.872,1296,1.299,1298,1.016,1302,1.208,1303,0.496,1313,3.333,1327,0.496,1330,0.475,1338,0.496,1341,0.496,1343,0.457,1347,0.638,1349,0.915,1355,1.15,1360,0.396,1361,0.406,1362,0.417,1389,1.084,1391,0.358,1393,0.496,1402,1.543,1406,1.299,1415,0.475,1418,0.756,1424,1.831,1425,0.843,1426,0.457,1430,0.429,1433,0.396,1437,2.313,1440,0.799,1441,2.865,1443,1.697,1445,1.745,1452,0.659,1474,0.475,1478,0.429,1490,0.457,1512,1.25,1514,0.387,1515,0.947,1522,0.817,1538,0.406,1540,1.455,1543,0.496,1558,1.975,1560,4.123,1567,0.442,1569,0.429,1574,3.664,1577,0.457,1580,1.496,1581,0.795,1582,0.442,1591,0.496,1592,0.457,1593,0.417,1598,0.457,1599,1.299,1601,0.406,1603,1.299,1609,0.799,1610,0.364,1620,1.299,1621,2.964,1633,3.909,1651,0.442,1654,0.475,1664,0.819,1666,0.496,1669,0.843,1670,0.523,1673,0.695,1683,0.496,1694,1.431,1695,0.998,1699,0.442,1706,2.294,1707,0.523,1713,1.496,1726,1.659,1734,0.817,1744,0.379,1756,0.442,1761,0.709,1769,0.417,1770,1.989,1772,0.364,1775,2.837,1778,0.523,1779,1.827,1790,0.387,1791,0.442,1792,0.496,1803,0.457,1816,0.523,1817,0.475,1818,1.358,1819,0.457,1821,1.208,1827,0.523,1829,1.659,1832,0.475,1841,0.523,1844,0.523,1848,0.947,1860,0.843,1885,0.475,1886,0.843,1889,0.906,1891,3.386,1904,0.496,1909,0.387,1915,0.379,1916,0.457,1930,0.496,1950,1.659,1951,0.523,1956,0.523,1967,0.496,1971,0.523,1981,0.998,1985,0.523,1988,3.273,1999,0.998,2001,0.496,2011,1.384,2020,1.358,2023,0.442,2033,0.496,2034,1.11,2038,0.523,2053,0.457,2063,0.843,2064,0.774,2069,0.496,2070,0.523,2073,0.998,2074,0.523,2075,0.496,2078,0.523,2086,0.475,2094,0.523,2124,1.25,2139,1.431,2140,0.523,2144,0.998,2145,1.11,2150,0.906,2153,0.906,2154,0.998,2159,1.067,2160,0.442,2161,0.559,2162,0.559,2163,1.827,2164,0.947,2165,1.067,2166,0.559,2167,0.523,2168,0.496,2169,0.559,2170,0.559,2171,0.559,2172,0.559,2173,0.559,2174,0.559,2175,0.559,2176,0.559,2177,0.496,2178,0.496,2179,0.559,2180,0.559,2181,0.559,2182,1.067,2183,0.559,2184,0.559,2185,0.559,2186,1.067,2187,0.559,2188,1.989,2189,1.067,2190,0.496,2191,0.559,2192,0.559,2193,0.559,2194,0.559,2195,0.496,2196,0.559,2197,0.947,2198,1.067,2199,1.067,2200,0.559,2201,0.559,2202,0.364,2203,1.067,2204,0.559,2205,0.559,2206,1.067,2207,0.559,2208,0.559,2209,0.559,2210,0.559,2211,0.559,2212,0.496,2213,0.559,2214,1.827,2215,0.559,2216,0.496,2217,0.559,2218,0.559,2219,0.559,2220,0.559,2221,0.559,2222,1.067,2223,0.559,2224,0.559,2225,2.837,2226,0.559,2227,0.559,2228,0.559,2229,0.559,2230,0.559,2231,0.475,2232,0.496,2233,0.559,2234,1.067,2235,0.559,2236,1.659,2237,0.559,2238,0.559,2239,0.559,2240,0.559,2241,0.559,2242,0.475,2243,0.947,2244,0.559,2245,0.559,2246,0.559,2247,0.358,2248,0.559,2249,0.559,2250,0.559,2251,0.496,2252,0.559,2253,0.559,2254,0.559,2255,0.723,2256,0.559,2257,0.559,2258,0.559,2259,0.559,2260,0.947,2261,0.559,2262,0.559,2263,0.475,2264,0.496,2265,0.559,2266,0.559,2267,0.559,2268,0.559,2269,0.559,2270,0.523,2271,0.559,2272,0.559,2273,0.559,2274,0.559,2275,0.559,2276,0.559,2277,0.559,2278,1.067,2279,0.559,2280,0.559,2281,0.559,2282,0.457,2283,0.559,2284,0.559,2285,0.559,2286,0.475,2287,0.523,2288,0.496,2289,1.067,2290,1.067,2291,0.559,2292,1.067,2293,0.559,2294,0.559,2295,0.559,2296,0.559,2297,0.559,2298,1.067,2299,0.559,2300,0.843,2301,0.559,2302,0.559,2303,0.379,2304,1.067,2305,1.067,2306,0.559,2307,0.559,2308,1.067,2309,2.069,2310,0.559,2311,0.559,2312,0.559,2313,0.559,2314,0.559,2315,0.559,2316,0.523,2317,0.559,2318,0.559,2319,0.559,2320,0.559,2321,0.559,2322,0.998,2323,0.559,2324,0.523,2325,0.559,2326,0.723,2327,1.067,2328,0.496,2329,0.559,2330,0.559,2331,0.559,2332,0.559,2333,0.559,2334,0.559,2335,0.559,2336,0.774,2337,0.559,2338,0.559,2339,0.559,2340,0.559,2341,0.559,2342,0.559,2343,0.559,2344,0.559,2345,0.559,2346,0.817,2347,0.559,2348,0.559,2349,0.559,2350,0.559,2351,0.559,2352,0.559,2353,0.559,2354,0.559,2355,0.559,2356,0.559,2357,1.067,2358,1.067,2359,1.358,2360,2.063,2361,0.559,2362,0.559,2363,0.429,2364,0.559,2365,0.559,2366,0.559,2367,0.442,2368,0.559,2369,0.559,2370,0.998,2371,0.559,2372,0.559,2373,0.559,2374,0.559,2375,0.559,2376,0.559,2377,1.067,2378,0.559,2379,0.559,2380,1.067,2381,0.559,2382,0.475,2383,0.559,2384,0.559,2385,0.559,2386,0.559,2387,0.559,2388,0.559,2389,0.523,2390,0.559,2391,1.067,2392,0.559,2393,0.559,2394,0.559,2395,0.998,2396,0.559,2397,0.559,2398,0.417,2399,0.559,2400,0.559,2401,0.523,2402,0.457,2403,0.559,2404,0.559,2405,0.559,2406,0.559,2407,0.559,2408,0.559,2409,2.7,2410,0.559,2411,0.795,2412,0.559,2413,0.559,2414,0.947,2415,0.998,2416,0.559,2417,0.559,2418,0.872,2419,0.496,2420,0.559,2421,0.559,2422,0.559,2423,0.372,2424,0.559,2425,0.559,2426,0.387,2427,1.067,2428,0.496,2429,0.475,2430,0.526,2431,0.442,2432,0.559,2433,0.559,2434,1.067,2435,0.559,2436,0.559,2437,0.559,2438,0.559,2439,0.559,2440,0.559,2441,1.529,2442,0.559,2443,0.559,2444,0.559,2445,1.067,2446,2.7,2447,0.947,2448,0.496,2449,0.559,2450,0.947,2451,0.559,2452,0.559,2453,0.559,2454,1.067,2455,1.953,2456,0.559,2457,0.559,2458,1.067,2459,1.067,2460,0.559,2461,0.559,2462,0.417,2463,0.523,2464,0.496,2465,1.208,2466,0.559,2467,0.559,2468,0.559,2469,0.559,2470,0.429,2471,0.457,2472,0.559,2473,0.559,2474,0.523,2475,0.559,2476,0.475,2477,0.559,2478,0.559,2479,0.559,2480,0.496,2481,0.559,2482,0.559,2483,0.496,2484,0.559,2485,0.523,2486,0.559,2487,0.442,2488,0.559,2489,0.559,2490,0.559,2491,0.396,2492,0.559,2493,0.496,2494,0.559,2495,0.496,2496,0.475,2497,0.559,2498,0.429,2499,0.559,2500,0.559,2501,0.559,2502,0.559,2503,0.396,2504,0.559,2505,0.559,2506,0.559,2507,0.475,2508,0.559,2509,0.559,2510,1.358,2511,0.559,2512,0.559,2513,0.496,2514,0.457,2515,0.559,2516,0.523,2517,0.559,2518,0.559,2519,0.559,2520,0.559,2521,0.559,2522,0.559,2523,0.559,2524,0.559,2525,0.559,2526,0.559,2527,0.559,2528,0.496,2529,0.559,2530,0.559,2531,0.559,2532,0.559,2533,0.559,2534,0.559,2535,0.417,2536,0.559,2537,0.457,2538,0.559,2539,0.559,2540,0.417,2541,1.529,2542,0.496,2543,0.559,2544,0.559,2545,0.559,2546,0.496,2547,0.559,2548,0.406,2549,0.559,2550,0.559,2551,0.559,2552,0.559,2553,0.523,2554,0.559,2555,0.559,2556,0.551,2557,0.417,2558,0.559,2559,0.559,2560,0.559,2561,0.559,2562,0.559,2563,0.496,2564,0.559,2565,0.559,2566,0.475,2567,0.559,2568,0.559,2569,0.559,2570,0.457,2571,0.559,2572,0.559,2573,0.523,2574,0.523,2575,0.559,2576,0.559,2577,0.523,2578,0.496,2579,0.523,2580,0.523,2581,0.523,2582,0.559,2583,0.559,2584,0.559,2585,0.523,2586,0.559,2587,0.523,2588,0.559,2589,0.559,2590,0.559,2591,0.559,2592,0.559,2593,0.559,2594,1.067,2595,0.372,2596,0.559,2597,0.559,2598,1.067,2599,0.559,2600,0.559,2601,0.523,2602,0.559,2603,0.523,2604,0.559]],["title/misc/changelog/#several-requests-at-once-and-upload-compression-v014",[98,1.14,148,1.464,488,0.887,981,1.464,2601,2.325,2605,2.11]],["text/misc/changelog/#several-requests-at-once-and-upload-compression-v014",[4,0.339,6,1.888,28,2.475,34,1.852,39,3.596,44,1.255,58,1.817,63,1.189,75,5.203,81,3.76,92,3.452,95,3.068,98,2.885,105,2.678,107,2.586,109,2.06,110,3.101,113,5.3,114,2.384,129,1.964,135,1.047,160,3.76,162,2.118,165,3.452,170,3.465,172,2.277,178,3.82,193,3.452,195,2.83,219,3.559,224,2.678,233,2.074,253,3.004,267,2.384,283,2.973,319,2.803,323,3.283,339,3.596,364,2.609,378,3.101,381,5.139,413,4.563,450,1.727,488,2.903,504,4.15,542,2.83,548,3.068,564,4.817,570,3.883,576,2.678,604,4.354,658,4.817,681,3.408,709,3.82,717,3.452,747,3.883,814,3.365,886,3.546,919,4.176,933,3.323,950,4.262,981,3.703,1074,4.563,1076,5.139,1141,3.95,1245,4.563,1285,4.354,1302,4.967,1313,3.245,1355,3.703,1401,5.581,1424,4.262,1437,4.354,1440,3.283,1441,4.967,1474,5.34,1540,4.684,1560,2.973,1574,4.176,1633,3.95,1683,5.581,1734,4.817,1775,5.34,1789,4.176,1813,5.34,2034,4.563,2053,5.139,2145,4.563,2188,5.34,2236,5.34,2287,5.882,2370,5.882,2574,5.882,2603,5.882,2605,5.34,2606,6.286,2607,6.286,2608,5.34,2609,6.286,2610,5.34,2611,4.454,2612,5.34]],["title/misc/changelog/#quick-fix-up-v0136",[143,1.578,228,2.054,1560,1.546,2613,3.269]],["text/misc/changelog/#quick-fix-up-v0136",[0,3.58,4,0.531,34,2.253,46,3.347,114,2.901,129,2.39,137,2.541,143,3.693,193,4.2,202,4.983,219,3.628,223,1.693,225,3.201,228,4.806,264,5.861,265,4.2,381,6.252,488,2.73,528,4.043,558,3.617,608,4.983,627,4.314,681,4.146,814,4.094,901,4.806,943,5.297,964,5.08,1166,2.439,1211,4.648,1313,3.947,1437,5.297,1560,4.348,1789,5.08,1799,7.156,2359,6.789,2528,6.789,2614,7.156,2615,7.648,2616,7.156]],["title/misc/changelog/#attempts-at-more-stability-v0135",[233,1.079,1790,2.264,2616,3.059,2617,2.902]],["text/misc/changelog/#attempts-at-more-stability-v0135",[1,1.409,3,0.884,4,0.568,6,1.081,7,2.276,9,0.553,12,0.394,13,2.571,16,0.747,22,0.295,23,0.716,28,2.565,32,1.976,33,1.366,34,2.25,35,0.791,38,1.531,39,2.058,40,2.896,42,1.172,44,1.428,45,1.256,46,0.663,50,1.129,52,0.5,53,0.593,54,0.634,58,1.256,59,0.716,61,2.035,62,1.238,63,1.122,65,1.1,66,1.868,68,0.811,69,1.375,74,1.151,77,2.116,80,0.682,81,1.602,83,0.921,86,0.969,94,0.623,95,3.242,98,1.229,102,0.826,105,3.165,107,1.102,109,1.424,110,4.217,113,2.831,114,1.365,115,1.902,117,2.189,119,1.073,123,1.95,124,1.976,129,2.387,130,2.055,131,0.952,134,1.95,135,1.107,136,1.1,137,2.8,139,1.97,140,0.892,142,1.1,143,2.397,147,0.791,148,0.892,150,3.707,151,0.832,152,2.017,162,1.672,165,3.255,166,0.906,170,1.533,172,2.407,176,1.102,183,0.921,185,2.302,187,0.821,188,0.598,189,1.795,191,0.969,193,2.726,194,1.398,195,1.62,196,1.944,198,0.731,199,2.344,210,1.049,213,0.936,214,0.598,215,1.073,217,1.756,219,4.026,220,1.131,221,2.22,222,2.223,223,0.962,224,1.533,225,1.506,228,2.73,233,2.521,239,0.747,240,0.892,242,1.238,246,0.832,247,1.006,253,1.279,260,0.724,263,1.897,264,2.052,265,0.832,267,0.575,270,1.217,271,2.624,276,0.774,283,2.055,290,1.006,291,0.791,292,1.62,298,1.779,302,0.921,303,0.764,304,1.049,307,0.832,310,0.867,312,0.669,313,1.006,316,1.627,318,2.002,319,1.604,323,0.791,331,0.879,339,0.867,348,0.977,349,1.1,355,2.03,362,1.161,363,2.386,364,2.06,365,2.167,367,1.627,368,0.64,369,0.695,378,0.747,379,0.969,381,1.238,384,1.183,385,0.855,386,1.049,387,2.984,390,2.002,391,1.627,394,2.681,397,1.47,398,0.791,413,1.1,418,1.1,422,1.59,428,0.921,429,2.56,430,0.688,437,1.416,438,1.205,442,2.189,450,0.989,452,1.345,453,1.049,460,0.832,466,1.855,467,1.779,473,0.952,476,1.238,478,1.857,479,2.189,481,2.612,482,1.835,486,4.087,487,2.301,488,2.911,495,0.773,499,1.161,502,0.695,503,0.688,504,0.773,512,1.635,518,0.782,528,0.801,529,1.161,537,1.627,538,2.116,540,1.554,547,1.049,548,0.739,554,1.161,558,2.984,559,1.59,561,2.973,576,1.851,583,1.745,585,0.906,586,1.779,587,2.887,588,1.926,589,1.59,615,1.161,616,2.344,622,1.345,627,3.748,628,0.867,637,2.187,641,1.351,658,2.757,666,0.867,669,1.897,672,1.238,674,2.55,681,2.355,695,1.451,701,1.627,707,2.681,708,1.161,709,2.187,716,1.006,717,1.976,743,2.503,745,0.782,747,0.936,755,1.1,767,1.995,772,0.821,793,2.189,800,0.483,801,0.575,803,1.398,807,1.944,814,3.556,835,1.049,838,1.197,861,1.238,870,0.867,871,1.238,881,0.867,884,1.995,886,0.855,892,1.49,894,1.554,897,1.049,900,0.936,914,2.377,919,1.779,927,1.073,932,1.815,933,0.801,936,2.757,938,1.602,941,1.006,943,1.855,945,1.049,946,1.1,947,1.238,948,1.027,950,1.027,963,0.906,969,1.197,974,1.944,981,1.577,983,0.987,991,1.451,997,1.129,1002,1.279,1007,1.345,1022,1.073,1028,1.627,1036,1.345,1038,0.843,1039,1.129,1051,1.197,1054,1.1,1055,1.995,1063,3.492,1066,1.197,1067,1.1,1089,1.779,1090,1.073,1094,1.197,1103,3.237,1111,2.843,1117,0.952,1129,2.116,1136,1.1,1140,1.944,1141,1.683,1166,0.854,1211,3.016,1223,1.995,1231,2.052,1252,1.238,1256,2.052,1263,2.377,1264,1.161,1268,0.375,1285,2.492,1288,1.197,1289,1.073,1302,1.197,1313,3.943,1347,0.906,1355,0.892,1360,1.897,1362,1.995,1364,2.189,1380,1.287,1424,2.439,1425,1.197,1437,2.492,1440,0.791,1445,1.995,1446,1.345,1452,1.654,1465,1.238,1472,1.049,1479,1.197,1558,2.344,1560,4.233,1566,1.345,1567,1.197,1568,1.1,1574,4.609,1594,1.287,1601,1.944,1602,1.417,1610,0.987,1618,2.506,1620,1.287,1633,3.446,1664,2.935,1706,3.691,1717,1.417,1734,1.161,1744,1.027,1756,1.197,1760,1.287,1769,1.129,1772,0.987,1775,1.287,1789,1.006,1790,3.798,1804,2.506,1817,1.287,1818,1.345,1848,1.345,1856,1.287,1891,2.942,1930,1.345,1950,3.056,1967,2.377,1968,1.417,2030,2.506,2054,1.417,2063,3.922,2075,1.345,2160,2.116,2163,1.417,2167,1.417,2188,2.274,2225,5.644,2270,1.417,2309,2.052,2316,1.417,2322,1.417,2336,1.1,2359,1.345,2389,1.417,2395,3.367,2401,1.417,2415,2.506,2426,1.049,2429,2.274,2465,2.116,2474,1.417,2476,1.287,2485,1.417,2487,1.197,2516,2.506,2528,1.345,2535,1.129,2553,1.417,2563,1.345,2566,1.287,2581,1.417,2585,2.506,2612,4.658,2614,1.417,2617,2.377,2618,1.238,2619,1.515,2620,1.515,2621,1.515,2622,1.515,2623,2.678,2624,1.515,2625,1.515,2626,1.515,2627,1.515,2628,1.515,2629,1.345,2630,1.515,2631,1.515,2632,1.345,2633,1.515,2634,1.515,2635,1.515,2636,2.678,2637,2.377,2638,2.678,2639,1.515,2640,1.515,2641,2.678,2642,1.515,2643,1.515,2644,1.515,2645,1.515,2646,1.515,2647,1.515,2648,1.515,2649,1.417,2650,1.515,2651,1.515,2652,1.515,2653,1.515,2654,1.515,2655,1.515,2656,2.678,2657,1.515,2658,1.515,2659,1.515,2660,1.515,2661,1.345,2662,1.515,2663,1.897,2664,1.197,2665,1.515,2666,2.678,2667,2.678,2668,1.515,2669,1.515,2670,1.515,2671,1.515,2672,1.515,2673,1.515,2674,1.345,2675,1.006,2676,4.345,2677,1.515,2678,1.515,2679,1.515,2680,1.238,2681,1.515,2682,1.287,2683,1.287,2684,1.417,2685,1.515,2686,1.515,2687,1.161,2688,2.678,2689,1.515,2690,1.515,2691,1.161,2692,1.345,2693,1.345,2694,2.678,2695,1.515,2696,1.515,2697,1.515,2698,2.678,2699,1.515,2700,1.515,2701,1.515,2702,1.515,2703,1.515,2704,2.678,2705,2.678,2706,1.515,2707,1.515,2708,1.287,2709,1.515,2710,1.515,2711,1.515,2712,1.515,2713,1.515,2714,2.55,2715,1.515,2716,1.515,2717,1.515,2718,1.515,2719,1.515,2720,1.515,2721,1.515,2722,1.515,2723,1.515,2724,1.345,2725,1.515,2726,1.287,2727,2.274,2728,1.515,2729,1.515,2730,1.417,2731,1.515,2732,1.345,2733,1.515,2734,1.515,2735,1.515,2736,1.515,2737,1.515,2738,1.515,2739,1.515,2740,1.515,2741,1.345,2742,1.515,2743,1.345,2744,1.515,2745,1.515,2746,1.515,2747,1.515,2748,1.515,2749,1.515,2750,1.073,2751,1.515,2752,1.515,2753,1.515,2754,1.515]],["title/misc/changelog/#improvements-to-the-updates-v0111",[137,1.29,1347,2.321,2755,3.881]],["text/misc/changelog/#improvements-to-the-updates-v0111",[3,2.067,4,0.548,6,0.984,7,2.117,9,1.862,12,0.851,16,1.616,23,1.549,28,2.667,34,1.503,37,4.339,40,1.503,42,3.354,44,1.308,45,2.043,46,1.434,47,2.782,54,1.371,58,0.947,59,1.549,61,1.563,63,0.62,64,1.901,66,1.233,68,1.753,69,1.252,74,2.193,75,2.095,81,3.051,84,1.421,91,4.528,92,2.801,95,3.057,99,2.047,102,1.01,105,3.264,107,2.909,110,3.09,114,1.935,124,1.799,129,1.958,130,2.412,131,2.058,135,1.178,137,2.35,139,2.598,140,1.93,143,1.582,147,1.711,150,3.762,152,2.304,156,2.678,160,3.051,167,1.848,170,1.395,172,2.776,178,3.1,190,2.839,191,2.095,193,2.801,194,1.711,195,1.475,196,2.378,198,1.582,199,2.134,202,2.134,213,3.151,215,2.321,216,1.901,219,3.894,221,2.204,223,1.129,224,1.395,225,2.622,233,2.892,254,2.801,260,1.565,261,1.901,262,1.991,273,2.801,286,2.269,292,2.296,301,1.233,303,1.652,315,2.703,316,1.991,343,1.582,348,1.196,351,2.322,362,2.51,363,1.799,364,2.117,365,4.048,368,2.986,369,1.503,378,1.616,385,2.878,386,2.269,387,1.549,391,3.1,393,2.441,395,1.753,422,3.585,427,3.263,430,1.489,436,1.901,437,1.732,438,1.475,447,2.221,450,1.401,454,2.047,460,1.799,467,2.176,473,2.058,478,1.691,486,4.165,488,2.897,506,1.776,528,2.697,533,2.176,546,2.588,548,2.489,550,2.782,551,2.024,553,2.588,554,2.51,556,1.991,558,1.549,559,1.447,560,2.095,561,3.396,570,2.024,576,1.395,604,2.269,606,2.588,616,4.607,619,2.839,627,2.878,641,2.573,651,3.801,659,1.901,666,1.874,701,1.991,705,3.801,709,3.807,716,2.176,747,3.87,803,1.711,814,1.753,816,1.93,839,2.321,865,2.908,881,1.874,892,1.823,893,3.801,919,3.389,936,2.51,938,1.959,943,2.269,975,2.441,985,2.678,987,2.378,1002,2.437,1029,2.678,1033,2.588,1054,2.378,1058,3.1,1069,2.441,1070,2.378,1090,2.321,1111,2.588,1131,2.321,1223,2.441,1226,2.678,1243,2.51,1285,3.533,1313,3.65,1347,3.747,1361,4.548,1362,3.801,1402,2.588,1415,4.333,1440,1.711,1443,2.058,1452,2.024,1472,3.533,1560,4.007,1567,2.588,1574,4.162,1582,2.588,1594,2.782,1598,2.678,1620,2.782,1633,3.205,1651,2.588,1664,1.753,1782,2.782,1789,3.389,1900,2.782,1950,4.333,2034,2.378,2063,2.588,2069,2.908,2160,2.588,2168,2.908,2214,4.773,2225,6.894,2260,2.908,2324,3.065,2398,2.441,2426,2.269,2463,3.065,2563,2.908,2587,3.065,2649,3.065,2661,2.908,2684,3.065,2756,3.276,2757,3.276,2758,3.276,2759,3.276,2760,3.276,2761,3.276,2762,3.276,2763,2.908,2764,3.276,2765,3.276,2766,3.276,2767,3.276,2768,3.276,2769,2.782,2770,2.908,2771,3.276,2772,3.276,2773,3.276,2774,3.065,2775,3.065,2776,3.276,2777,3.276,2778,3.276,2779,3.276,2780,3.276,2781,3.276,2782,5.101,2783,2.678,2784,3.065,2785,2.678,2786,3.276,2787,3.276,2788,3.276,2789,2.908,2790,3.276,2791,3.276,2792,3.276,2793,3.276,2794,3.276,2795,3.276]],["title/misc/changelog/#stability-improvements-v091",[1347,2.321,2617,3.445,2796,3.881]],["text/misc/changelog/#stability-improvements-v091",[1,2.612,3,2.201,4,0.359,6,2.004,44,1.431,45,2.441,58,1.928,61,2.043,65,4.842,95,3.255,102,2.057,107,2.745,115,3.526,123,3.616,124,3.663,130,3.155,135,1.111,137,2.807,139,2.505,140,3.929,143,3.221,150,3.916,217,3.255,219,4.119,223,1.476,294,3.663,305,3.092,328,4.904,337,4.62,363,3.663,365,3.327,375,4.842,391,4.054,394,4.97,397,3.663,422,2.947,440,4.037,450,1.833,486,3.929,506,3.616,558,3.155,559,2.947,604,4.62,715,3.929,772,3.616,894,3.871,943,5.852,951,5.112,987,4.842,1063,3.929,1080,4.97,1087,4.192,1111,5.271,1226,5.453,1256,5.112,1285,4.62,1313,3.443,1465,5.453,1560,3.155,1568,4.842,1574,4.431,2001,5.922,2063,5.271,2124,5.453,2160,5.271,2225,5.666,2797,6.67,2798,8.449,2799,6.67,2800,6.67,2801,6.67,2802,4.62,2803,6.67]],["title/misc/changelog/#general-improvements-v09",[319,1.731,1347,2.321,2804,3.881]],["text/misc/changelog/#general-improvements-v09",[3,2.207,4,0.59,28,2.036,29,3.04,44,1.433,45,1.933,60,5.126,99,2.684,105,2.85,110,3.3,116,3.536,129,2.09,166,4.001,193,3.673,219,2.64,224,2.85,233,2.207,252,3.536,254,3.673,276,1.933,312,2.955,323,3.494,328,3.882,358,4.74,365,3.336,394,4.984,437,4.909,486,3.94,528,3.536,540,3.882,559,2.955,637,4.065,659,3.882,701,4.065,710,5.554,900,4.132,963,4.001,984,4.203,1063,3.94,1078,5.682,1086,3.58,1131,4.74,1243,5.126,1313,3.452,1347,4.001,1402,5.286,1558,4.358,1560,3.163,1631,5.682,1633,4.203,2063,7.337,2103,4.444,2243,5.938,2426,4.633,2579,6.259,2580,6.259,2774,6.259,2775,6.259,2802,4.633,2805,6.689,2806,6.689,2807,6.689,2808,5.468,2809,6.689,2810,6.689,2811,6.689,2812,6.689]],["title/misc/changelog/#bot-login-and-proxy-support-v08",[51,1.114,328,1.639,407,1.875,561,1.53,2813,2.823]],["text/misc/changelog/#bot-login-and-proxy-support-v08",[4,0.566,44,1.13,45,2.116,51,2.89,106,4.449,110,3.612,119,6.344,129,2.288,137,2.433,139,2.654,150,4.483,192,3.573,193,4.021,210,6.201,219,2.89,240,4.313,315,3.422,328,4.249,363,4.021,367,4.449,379,4.683,407,4.864,430,3.328,437,3.871,486,4.313,561,4.853,570,4.523,814,3.919,920,5.071,933,3.871,981,5.274,1141,5.626,1313,3.779,1352,6.5,1560,4.765,1734,5.61,2814,7.321,2815,7.321,2816,7.321,2817,5.071]],["title/misc/changelog/#long-run-bug-fix-v071",[99,1.133,110,1.393,659,1.639,1560,1.335,2818,2.823]],["text/misc/changelog/#long-run-bug-fix-v071",[45,2.337,61,2.477,99,3.244,115,4.275,137,3.157,162,3.202,233,2.668,348,2.951,351,2.997,355,4.561,482,3.414,528,4.275,548,3.946,559,3.572,628,4.626,659,4.693,1313,4.173,1644,7.566,2426,5.601,2661,7.178,2732,7.178,2819,8.086,2820,7.178,2821,8.086]],["title/misc/changelog/#two-factor-authentication-v07",[339,1.87,1020,2.672,1426,2.672,2822,3.269]],["text/misc/changelog/#two-factor-authentication-v07",[4,0.574,28,2.358,44,1.529,45,2.239,105,3.3,110,3.821,135,1.29,219,3.057,224,3.3,339,4.432,351,2.871,353,5.252,355,4.37,365,3.864,482,3.271,522,4.955,711,4.634,1020,6.333,1063,4.563,1099,4.432,1229,5.252,1313,3.998,1347,4.634,1426,6.333,1558,5.047,1560,3.664,1630,6.58,1633,4.868,2015,7.249,2823,7.747,2824,5.366,2825,6.877]],["title/misc/changelog/#updated-pip-version-v06",[42,1.431,137,1.086,196,2.373,2826,3.269]],["text/misc/changelog/#updated-pip-version-v06",[4,0.578,28,2.313,32,4.173,44,1.413,45,2.646,54,3.181,66,2.86,105,3.901,110,3.749,186,4.695,196,5.517,219,2.999,233,2.508,310,4.348,315,2.905,316,4.618,353,5.152,355,4.287,369,3.488,427,4.861,436,4.411,507,3.749,520,4.775,698,6.005,701,4.618,709,4.618,1063,4.477,1117,4.775,1313,3.922,1424,5.152,1437,5.264,1540,5.662,1558,4.952,1789,5.048,2827,7.599,2828,5.823]],["title/misc/changelog/#ready-pip-go-v05",[196,2.373,241,1.844,1186,2.316,2829,3.269]],["text/misc/changelog/#ready-pip-go-v05",[4,0.527,28,2.284,44,1.158,45,2.626,58,2.169,66,2.824,69,2.869,105,4.165,130,3.549,134,4.068,143,3.623,155,4.489,219,3.587,233,3.226,263,5.317,307,4.121,312,3.315,346,3.623,355,4.234,436,4.356,454,3.011,482,3.169,641,3.785,695,4.068,1038,4.176,1250,4.561,1271,6.374,1313,3.873,1347,4.489,1351,6.662,1538,5.448,1669,5.93,2055,7.022,2243,6.662,2300,5.93,2784,7.022,2830,7.504,2831,7.504,2832,7.504,2833,7.504,2834,7.504]],["title/misc/changelog/#made-interactivetelegramclient-cool-v04",[134,1.772,295,2.373,2763,2.902,2835,3.269]],["text/misc/changelog/#made-interactivetelegramclient-cool-v04",[3,2.788,4,0.455,12,2.41,38,2.859,58,1.928,63,1.845,65,4.842,71,4.431,75,4.267,94,2.745,95,4.123,103,4.267,110,3.291,114,2.53,137,2.216,162,2.248,163,3.664,170,3.599,194,3.484,214,3.335,219,3.335,225,2.792,274,3.526,277,2.554,280,4.054,283,4.757,292,3.003,295,4.842,301,2.51,384,2.947,404,4.842,438,3.003,449,3.871,456,3.816,478,3.443,482,2.817,518,4.361,522,4.267,528,3.526,585,3.99,613,4.62,641,3.364,701,4.054,717,3.663,886,3.763,892,3.712,900,4.121,911,5.453,981,3.929,983,4.346,1065,5.666,1070,4.842,1309,5.922,1313,3.443,1343,5.453,1430,6.474,1690,6.242,1966,4.842,2065,6.242,2577,6.242,2708,5.666,2730,6.242,2732,5.922,2763,5.922,2836,6.67,2837,6.67,2838,5.666,2839,6.67]],["title/misc/changelog/#media-revolution-and-improvements-to-update-handling-v03",[137,0.826,170,1.058,558,1.175,1347,1.486,2840,2.485,2841,2.485]],["text/misc/changelog/#media-revolution-and-improvements-to-update-handling-v03",[4,0.428,53,3.113,61,2.436,63,1.78,64,4.615,95,3.881,143,3.839,162,3.17,163,3.449,170,4.008,219,3.714,233,2.624,285,4.997,335,6.501,475,5.634,507,3.923,514,5.391,528,4.974,608,5.181,933,4.204,981,4.684,1107,6.501,1313,4.104,2016,6.093,2573,7.441,2842,7.952]],["title/misc/changelog/#handle-updates-in-their-own-thread-v02",[137,1.086,486,1.925,558,1.546,2843,3.269]],["text/misc/changelog/#handle-updates-in-their-own-thread-v02",[4,0.562,14,4.646,25,3.505,42,3.11,44,1.356,58,2.54,63,1.344,70,4.817,94,2.923,137,2.92,160,4.25,162,2.962,219,2.804,225,2.974,233,2.344,234,2.411,261,4.124,283,3.36,295,5.158,346,3.43,422,3.139,440,4.2,449,5.539,450,2.415,466,6.088,486,5.622,488,2.536,504,3.625,528,4.646,558,3.36,600,4.72,615,5.444,621,5.614,674,5.034,695,3.851,1016,5.808,1028,4.318,1065,6.035,1092,5.614,1284,5.614,1288,6.945,1313,3.667,2188,6.035,2260,6.307,2838,6.035,2844,7.105,2845,7.105,2846,7.105]],["title/misc/changelog/#first-working-alpha-version-v01",[42,1.236,129,0.882,217,1.378,2847,2.823,2848,2.823]],["text/misc/changelog/#first-working-alpha-version-v01",[4,0.574,44,1.531,64,4.511,74,3.34,89,5.064,97,5.955,103,4.971,110,3.834,129,2.429,135,1.294,172,2.816,194,4.059,219,3.067,387,3.675,558,3.675,637,4.723,829,5.163,885,4.971,886,4.384,1063,4.578,1313,4.011,1391,4.971,1424,5.269,1540,5.79,1558,6.048,1700,7.272,1966,5.642,2168,6.899,2849,7.772,2850,6.354]],["title/misc/compatibility-and-convenience/",[48,2.902,49,2.331]],["text/misc/compatibility-and-convenience/",[0,2.559,1,1.695,3,1.428,4,0.606,5,4.071,6,2.71,7,3.242,8,3.216,12,2.601,13,1.877,16,2.135,18,2.512,19,2.82,21,2.493,22,1.521,23,3.506,24,2.448,25,2.135,26,3.067,27,3.652,28,0.811,29,1.211,30,2.366,32,1.463,34,2.039,37,2.998,38,1.94,40,1.987,41,3.225,42,2.754,44,1.416,45,2.142,48,3.322,49,3.071,52,1.428,53,2.464,58,2.431,63,1.403,64,1.547,66,2.368,67,1.77,68,1.426,69,2.089,72,1.846,75,3.496,79,1.705,80,1.2,86,2.769,93,2.82,98,1.223,99,1.737,105,2.948,109,1.791,114,1.011,119,3.067,129,1.708,130,1.26,134,1.445,135,1.235,137,2.091,140,2.55,142,1.935,143,1.287,148,1.57,150,1.235,152,0.98,162,0.898,171,1.547,185,1.681,191,1.705,193,1.463,196,1.935,200,1.57,216,1.547,219,1.052,220,1.125,221,2.748,225,1.812,226,2.317,227,1.235,228,1.675,231,1.503,233,1.428,234,0.904,237,3.6,241,1.503,246,1.463,250,3.225,253,1.273,260,2.612,261,1.547,262,2.631,270,2.484,273,2.377,277,0.806,283,1.26,303,1.344,305,3.436,306,2.55,314,2.674,315,1.655,317,4.315,322,1.287,331,1.547,337,1.846,348,2.706,351,1.604,353,1.807,359,1.594,362,2.042,378,1.315,383,2.106,384,1.177,387,1.26,390,2.409,406,2.934,429,1.57,435,1.935,436,1.547,437,1.409,443,2.366,470,2.589,475,1.888,482,2.308,486,1.57,487,1.705,488,0.951,495,1.36,502,1.223,506,2.346,514,1.807,520,1.675,522,1.705,530,2.179,531,1.888,537,1.62,538,2.106,539,2.179,542,1.2,547,1.846,556,1.62,559,2.78,565,3.317,567,2.769,570,2.674,573,1.77,584,1.935,585,1.594,586,1.77,587,2.875,588,1.426,589,1.177,595,1.62,600,1.77,616,2.82,628,2.476,634,2.366,641,1.344,666,1.525,668,2.042,681,2.346,695,2.346,702,3.225,716,1.77,731,2.998,738,1.985,794,1.888,815,2.042,840,1.594,853,2.042,881,1.525,886,1.503,889,1.935,893,1.985,894,1.547,950,2.934,959,2.179,962,2.179,1038,1.483,1060,2.179,1070,1.935,1077,1.985,1115,2.106,1186,1.888,1212,2.998,1221,2.179,1247,1.985,1249,1.846,1266,2.106,1270,2.179,1350,2.179,1377,2.264,1389,1.888,1405,2.042,1479,2.106,1497,3.843,1539,2.366,1560,2.047,1658,1.985,1664,2.926,1713,2.042,1797,2.366,1798,2.366,1813,2.264,1966,1.935,2011,4.459,2118,4.072,2145,1.935,2160,2.106,2177,2.366,2178,2.366,2251,2.366,2264,2.366,2398,1.985,2414,2.366,2465,2.106,2680,2.179,2785,2.179,2851,2.665,2852,5.466,2853,2.665,2854,2.665,2855,2.665,2856,2.665,2857,2.366,2858,2.665,2859,2.665,2860,3.843,2861,2.665,2862,4.05,2863,2.665,2864,2.665,2865,2.665,2866,2.665]],["title/misc/compatibility-and-convenience/#compatibility-and-convenience",[48,2.902,49,2.331]],["text/misc/compatibility-and-convenience/#compatibility-and-convenience",[6,2.912,38,2.58,41,6.234,45,2.418,48,5.085,105,3.565,253,3.998,317,3.878,585,5.005,600,5.559,616,6.316,1539,7.428,2264,7.428,2851,8.368]],["title/misc/compatibility-and-convenience/#compatibility",[48,3.772]],["text/misc/compatibility-and-convenience/#compatibility",[0,3.252,1,1.946,4,0.602,5,3.814,6,2.086,7,2.063,12,2.674,21,1.523,22,0.968,23,3.786,24,1.349,27,2.885,28,1.513,29,2.26,30,4.413,32,2.73,34,1.465,37,4.811,38,2.142,40,2.282,41,3.704,42,3.793,44,1.526,45,1.437,53,2.719,58,2.007,66,2.614,67,3.303,69,2.655,75,3.18,79,3.18,86,3.18,105,3.692,114,1.886,134,2.695,135,1.519,137,2.66,143,2.4,148,2.929,150,2.304,193,2.73,196,3.609,200,2.929,219,1.962,221,1.749,225,2.081,241,2.805,250,5.175,277,1.503,315,1.9,317,3.219,322,2.4,337,3.443,348,2.535,351,1.842,362,3.81,387,2.351,390,3.865,435,3.609,475,3.523,482,2.099,486,2.929,487,3.18,488,1.775,495,2.536,520,3.124,522,3.18,537,3.021,538,3.928,539,4.064,542,2.238,547,3.443,559,2.196,586,3.303,588,2.661,589,2.196,628,2.844,641,2.508,666,2.844,716,3.303,738,3.704,794,3.523,815,3.81,886,2.805,893,3.704,950,4.709,1038,2.767,1115,3.928,1212,4.811,1221,4.064,1266,3.928,1350,4.064,1377,4.223,1389,3.523,1405,3.81,1560,3.285,1664,4.285,1713,3.81,1966,3.609,2011,3.523,2118,5.175,2145,3.609,2177,4.413,2178,4.413,2414,4.413,2465,3.928,2680,4.064,2785,4.064,2852,8.005,2853,4.971,2854,4.971,2855,4.971,2856,4.971,2857,4.413,2858,4.971,2859,4.971,2860,6.166]],["title/misc/compatibility-and-convenience/#convenience",[49,3.029]],["text/misc/compatibility-and-convenience/#convenience",[0,2.402,1,2.009,3,1.693,4,0.604,5,3.899,6,2.77,7,3.646,8,3.526,12,2.48,13,2.225,16,2.531,18,2.978,19,3.343,21,2.494,22,1.586,23,3.358,24,2.384,25,2.531,26,3.636,27,4.121,34,2.091,44,0.792,45,2.052,49,3.465,52,2.343,58,2.665,63,1.662,66,2.672,69,1.961,72,3.554,75,4.541,80,2.31,99,2.849,109,2.668,129,2.219,130,2.426,135,0.854,137,1.705,140,3.022,152,1.887,162,1.729,171,2.978,185,2.757,221,2.864,226,2.746,227,2.378,228,3.224,233,1.693,234,1.741,246,2.818,262,3.118,270,2.332,273,3.899,305,3.291,314,4.386,315,1.961,317,3.291,331,2.978,348,1.873,351,1.901,353,3.478,359,3.069,378,2.531,406,3.478,429,3.022,436,2.978,437,2.713,470,3.069,482,2.167,506,2.781,514,3.478,530,4.195,531,3.636,556,3.118,559,3.136,567,3.282,570,3.17,573,3.408,587,3.408,595,3.118,628,2.935,634,4.555,668,3.932,695,3.849,702,3.823,731,3.554,840,3.069,889,3.725,959,4.195,962,4.195,1077,3.823,1270,4.195,1497,6.303,1658,3.823,1813,4.358,2011,5.031,2251,4.555,2861,5.131,2862,4.801]],["title/misc/compatibility-and-convenience/#speed",[142,4.506]],["text/misc/compatibility-and-convenience/#speed",[4,0.608,5,4.183,6,2.579,7,3.161,8,3.506,12,2.485,13,2.468,16,2.807,18,3.303,19,3.708,21,2.809,22,1.673,23,2.691,24,2.727,25,2.807,26,4.032,27,3.303,34,2.244,45,1.644,53,2.228,58,1.644,63,1.441,64,3.303,68,3.046,129,1.778,140,3.352,191,3.64,216,3.303,221,2.68,226,3.046,260,4.103,261,3.303,262,3.458,270,3.462,303,2.87,305,4.251,306,4.487,317,4.251,348,3.135,406,3.858,470,3.404,482,2.403,506,3.085,559,2.514,565,5.837,570,3.515,584,4.131,587,3.78,681,4.129,702,4.24,731,3.941,853,4.36,881,3.255,1060,4.652,1186,4.032,1797,5.052,1798,5.052,2011,4.032,2398,4.24,2862,5.325,2863,5.69,2864,5.69,2865,5.69]],["title/misc/compatibility-and-convenience/#learning",[237,3.551]],["text/misc/compatibility-and-convenience/#learning",[3,2.524,38,2.358,40,3.51,44,1.578,45,2.21,53,2.994,58,2.21,86,4.892,93,5.99,98,3.51,119,6.514,220,3.229,221,2.69,225,3.201,231,4.314,233,2.524,237,5.639,283,3.617,317,4.848,383,6.043,384,3.379,443,6.789,502,3.51,567,4.892,894,4.439,1070,5.552,1247,5.698,1249,5.297,1479,6.043,2118,5.698,2160,6.043,2866,7.648]],["title/misc/wall-of-shame/",[2867,4.24,2868,4.24]],["text/misc/wall-of-shame/",[3,1.843,4,0.539,9,2.038,29,2.538,33,3.838,34,2.216,38,2.32,40,4.177,45,1.614,52,1.843,58,2.174,70,3.786,74,2.4,90,3.868,93,4.901,114,2.853,124,3.067,129,1.745,134,4.078,139,1.656,143,3.632,190,3.108,194,2.917,195,2.514,200,3.29,220,2.358,236,2.641,241,4.244,283,2.641,285,3.509,310,3.195,312,2.467,323,5.439,326,3.108,343,3.632,344,4.901,346,2.696,348,2.038,349,4.054,351,2.07,366,4.565,382,4.565,384,2.467,403,4.279,478,2.882,482,2.358,491,1.817,540,3.241,543,4.413,559,3.323,588,2.989,589,2.467,666,4.303,674,3.957,759,3.868,772,3.027,787,1.979,807,4.054,881,4.303,894,3.241,935,3.639,960,7.551,983,3.639,1038,3.108,1054,5.461,1254,4.958,1364,4.565,1425,4.413,1478,4.279,1514,3.868,1582,4.413,1747,4.744,1767,4.565,1772,3.639,1884,6.722,2232,4.958,2471,6.15,2514,4.565,2618,4.565,2664,4.413,2783,4.565,2867,7.551,2868,7.551,2869,7.522,2870,8.506,2871,5.584,2872,5.584,2873,5.584,2874,9.5,2875,5.584,2876,4.565,2877,5.584,2878,5.584,2879,7.522,2880,5.584,2881,5.584,2882,5.584,2883,5.584,2884,5.584,2885,5.584,2886,5.584,2887,5.584,2888,4.565,2889,5.584,2890,5.584,2891,5.584,2892,7.039,2893,4.161]],["title/misc/wall-of-shame/#wall-of-shame",[2867,4.24,2868,4.24]],["text/misc/wall-of-shame/#wall-of-shame",[3,1.9,4,0.496,9,2.102,29,2.617,33,3.917,34,2.262,38,2.368,40,4.229,45,1.664,52,1.9,58,2.219,70,3.904,74,2.475,90,3.989,93,5.003,114,2.912,124,3.162,129,1.8,134,4.162,139,1.707,143,3.708,190,3.205,194,3.008,195,2.592,200,3.392,220,2.432,236,2.723,241,4.332,283,2.723,285,3.619,310,3.294,312,2.544,323,5.348,326,3.205,344,5.003,346,2.78,348,2.102,349,4.18,351,2.134,366,4.708,382,4.708,384,2.544,403,4.413,478,2.972,482,2.432,491,1.874,540,3.342,543,4.55,559,3.392,588,3.082,589,2.544,666,4.393,674,4.08,759,3.989,772,3.122,787,2.04,807,4.18,881,4.393,894,3.342,935,3.752,960,7.669,983,3.752,1038,3.205,1054,5.574,1254,5.112,1364,4.708,1425,4.55,1478,4.413,1514,3.989,1582,4.55,1747,4.891,1767,4.708,1772,3.752,1884,6.068,2232,5.112,2471,6.278,2514,4.708,2618,4.708,2664,4.55,2783,4.708,2867,6.817,2868,6.817,2869,7.679,2870,8.639,2871,5.758,2872,5.758,2873,5.758,2874,9.599,2875,5.758,2876,4.708,2877,5.758,2878,5.758,2879,7.679,2880,5.758,2881,5.758,2882,5.758,2883,5.758,2884,5.758,2885,5.758,2886,5.758,2887,5.758,2888,4.708,2889,5.758,2890,5.758,2891,5.758]],["title/misc/wall-of-shame/#current-winner",[343,2.306,2892,4.469]],["text/misc/wall-of-shame/#current-winner",[4,0.465,323,5.157,343,4.171,1884,6.826,2892,8.083,2893,6.436]],["title/modules/client/",[7,2.576]],["text/modules/client/",[1,0.649,4,0.611,6,0.498,7,1.415,9,1.41,10,2.514,11,2.65,12,1.439,13,1.006,14,0.472,15,0.684,21,0.274,22,1.351,23,0.784,24,0.242,28,0.505,34,1.996,36,0.384,38,0.275,42,0.391,43,1.124,44,0.658,45,0.258,46,0.726,51,0.353,54,0.971,58,0.258,59,1.371,61,0.711,63,1.178,69,0.887,87,0.977,99,0.358,102,0.894,105,0.381,114,0.339,123,0.484,126,2.105,132,1.124,135,1.129,137,1.839,139,0.265,148,0.526,159,0.619,162,0.977,172,1.05,176,1.193,185,0.901,188,0.654,192,1.415,194,0.866,213,0.552,214,1.958,216,0.962,219,0.353,221,1.851,223,1.826,227,1.343,229,0.633,234,0.303,239,1.905,260,0.792,262,1.008,265,0.491,267,0.339,271,2.926,276,1.338,277,2.261,279,0.923,291,3.253,301,1.453,302,0.543,303,1.462,305,0.414,306,0.526,322,0.8,328,3.491,338,2.771,341,1.355,342,1.101,343,1.12,347,2.787,348,0.326,351,0.614,364,1.415,368,0.377,378,0.441,379,1.06,385,2.613,393,0.665,396,2.106,399,3.024,402,0.606,416,0.593,417,1.684,427,1.06,428,0.543,430,0.406,450,2.266,454,0.358,488,1.653,491,1.712,506,0.899,523,2.815,525,4.258,528,2.042,537,1.762,545,1.08,551,0.552,559,0.395,570,0.552,576,1.973,588,2.284,589,1.281,608,2.78,623,0.73,627,0.504,640,0.648,654,1.008,655,0.552,664,2.799,673,0.571,684,0.633,691,3.362,738,1.235,743,0.836,745,0.856,748,0.793,757,1.833,767,1.235,778,4.31,787,3.632,788,2.059,790,0.793,791,1.408,803,0.866,816,0.977,829,1.101,833,0.606,839,1.175,870,3.166,930,2.516,939,1.291,950,0.606,958,0.543,971,0.706,978,2.303,986,0.684,990,0.73,991,0.484,993,0.73,997,1.728,1002,3.07,1021,0.606,1032,2.37,1046,3.929,1062,0.665,1064,0.526,1085,0.633,1089,1.541,1092,1.31,1117,1.042,1148,0.759,1149,0.665,1166,2.456,1211,0.543,1259,0.793,1268,1.678,1280,1.355,1281,0.684,1291,0.619,1355,0.526,1390,0.706,1440,0.467,1466,1.204,1514,0.619,1559,0.619,1589,0.606,1597,0.619,1613,0.648,1639,0.593,1679,0.582,1716,1.27,1761,2.264,1807,0.606,1824,1.08,1852,0.633,1896,0.606,1900,1.971,1909,2.008,1949,0.593,1952,0.571,1959,0.73,2103,0.593,2202,0.582,2286,2.462,2303,0.606,2326,0.606,2336,1.204,2430,3.628,2462,0.665,2483,3.026,2491,0.633,2498,0.684,2503,0.633,2510,4.404,2514,0.73,2557,1.235,2663,0.633,2687,1.27,2714,0.633,2750,0.633,2802,0.619,2808,0.73,2817,2.361,2820,0.793,2824,0.619,2828,0.684,2850,0.73,2888,0.73,2893,0.665,2894,1.658,2895,0.793,2896,0.893,2897,0.893,2898,2.32,2899,4.267,2900,4.267,2901,3.409,2902,3.409,2903,3.409,2904,3.409,2905,0.98,2906,3.409,2907,3.409,2908,1.658,2909,2.32,2910,2.32,2911,3.19,2912,2.899,2913,2.899,2914,3.409,2915,1.658,2916,4.187,2917,0.893,2918,0.893,2919,0.73,2920,0.684,2921,0.793,2922,0.793,2923,0.759,2924,0.759,2925,0.759,2926,0.759,2927,0.759,2928,0.759,2929,0.759,2930,0.665,2931,0.706,2932,0.706,2933,0.706,2934,0.706,2935,0.665,2936,0.706,2937,0.706,2938,0.706,2939,0.706,2940,0.706,2941,0.793,2942,0.73,2943,0.73,2944,0.684,2945,0.648,2946,0.648,2947,0.648,2948,0.665,2949,0.665,2950,0.633,2951,0.633,2952,0.606,2953,0.619,2954,0.619,2955,0.619,2956,0.619,2957,0.619,2958,0.665,2959,0.648,2960,0.619,2961,0.619,2962,0.633,2963,0.665,2964,0.648,2965,0.606,2966,0.593,2967,0.619,2968,0.619,2969,0.606,2970,0.633,2971,0.665,2972,0.633,2973,0.633,2974,0.633,2975,0.633,2976,0.793,2977,0.893,2978,2.838,2979,2.448,2980,1.658,2981,0.893,2982,2.171,2983,0.893,2984,0.893,2985,0.893,2986,2.32,2987,0.706,2988,0.893,2989,1.658,2990,1.658,2991,0.706,2992,0.893,2993,1.551,2994,2.573,2995,0.684,2996,1.658,2997,0.893,2998,0.893,2999,0.893,3000,4.798,3001,1.551,3002,1.658,3003,2.171,3004,0.893,3005,0.893,3006,2.462,3007,3.409,3008,4.056,3009,0.893,3010,0.793,3011,0.793,3012,0.793,3013,0.793,3014,0.793,3015,0.793,3016,0.793,3017,0.793,3018,0.793,3019,0.793,3020,0.793,3021,0.793,3022,0.793,3023,0.793,3024,0.793,3025,0.793,3026,0.793,3027,0.793,3028,0.793,3029,3.728,3030,1.551,3031,3.409,3032,0.73,3033,0.73,3034,0.73,3035,0.73,3036,0.793,3037,0.793,3038,0.73,3039,0.73,3040,0.73,3041,0.893,3042,0.706,3043,0.706,3044,0.73,3045,0.73,3046,0.73,3047,0.73,3048,0.73,3049,0.73,3050,0.73,3051,0.793,3052,0.73,3053,0.73,3054,0.73,3055,0.73,3056,0.73,3057,0.73,3058,0.73,3059,0.73,3060,0.893,3061,0.619,3062,0.619,3063,0.619,3064,0.684,3065,0.706,3066,0.665,3067,0.684,3068,0.684,3069,1.551,3070,1.551,3071,3.409,3072,3.409,3073,0.706,3074,0.73,3075,0.665,3076,0.665,3077,0.665,3078,0.665,3079,0.665,3080,0.665,3081,0.665,3082,0.684,3083,0.684,3084,0.684,3085,0.684,3086,0.73,3087,0.73,3088,0.73,3089,0.73,3090,0.73,3091,0.706,3092,0.706,3093,0.706,3094,0.706,3095,0.706,3096,0.759,3097,0.759,3098,0.706,3099,0.706,3100,0.893,3101,2.899,3102,2.899,3103,1.658,3104,0.706,3105,0.706,3106,0.706,3107,0.706,3108,0.706,3109,0.706,3110,0.706,3111,0.706,3112,0.706,3113,0.706,3114,0.706,3115,0.706,3116,0.706,3117,0.706,3118,0.706,3119,0.706,3120,0.706,3121,0.706,3122,0.73,3123,0.706,3124,0.706,3125,0.706,3126,0.706,3127,1.658,3128,0.706,3129,0.706,3130,0.706,3131,0.706,3132,0.706,3133,0.706,3134,0.73,3135,0.706,3136,2.712,3137,0.73,3138,0.73,3139,0.706,3140,0.706,3141,0.706,3142,0.706,3143,0.706,3144,0.706,3145,0.706,3146,0.706,3147,0.706,3148,0.706,3149,0.706,3150,0.706,3151,0.684,3152,0.706,3153,0.706,3154,0.73,3155,0.706,3156,0.706,3157,0.706,3158,0.706,3159,0.759,3160,0.759,3161,0.706,3162,0.893,3163,1.551,3164,3.409,3165,1.658,3166,0.73,3167,0.73,3168,0.73,3169,0.73,3170,0.73,3171,0.73,3172,0.73,3173,0.73,3174,0.73,3175,0.684,3176,0.893,3177,1.551,3178,1.658,3179,0.706,3180,0.706,3181,0.706,3182,0.706,3183,0.706,3184,0.706,3185,0.706,3186,0.706,3187,0.893,3188,1.551,3189,3.862,3190,3.429,3191,0.73,3192,0.73,3193,0.73,3194,0.73,3195,0.73,3196,0.73,3197,0.73,3198,0.73,3199,0.73,3200,0.73,3201,0.73,3202,0.73,3203,0.893,3204,0.893,3205,0.893,3206,2.32,3207,5.261,3208,1.658,3209,1.658,3210,1.658,3211,0.98,3212,0.793,3213,0.793,3214,0.793,3215,0.793,3216,0.793,3217,0.793,3218,0.793,3219,0.793,3220,0.793,3221,0.793,3222,0.793,3223,0.793,3224,1.658,3225,0.893,3226,0.893,3227,0.793,3228,0.793,3229,0.793,3230,0.793,3231,0.793,3232,0.793,3233,0.793,3234,0.793,3235,0.793,3236,0.793,3237,0.793,3238,0.793,3239,0.793,3240,0.793,3241,0.793,3242,0.793,3243,0.73,3244,0.73,3245,0.73,3246,0.73,3247,0.73,3248,0.73,3249,0.73,3250,0.73,3251,0.793,3252,0.73,3253,0.73,3254,0.73,3255,0.73,3256,0.73,3257,0.73,3258,0.73,3259,0.73,3260,0.73,3261,0.73,3262,0.793,3263,0.793,3264,0.793,3265,0.793,3266,0.893,3267,3.862,3268,0.893,3269,0.893,3270,0.893,3271,0.893,3272,0.893,3273,0.893,3274,0.893,3275,0.893,3276,0.893,3277,0.893,3278,0.893,3279,0.893,3280,0.893,3281,0.893,3282,0.893,3283,1.551,3284,2.32,3285,0.793,3286,0.793,3287,0.893,3288,0.793,3289,0.793,3290,1.658,3291,0.619,3292,0.633,3293,0.633,3294,0.633,3295,0.648,3296,0.633,3297,0.665,3298,0.665,3299,0.665,3300,0.665,3301,0.684,3302,0.665,3303,0.665,3304,0.633,3305,0.606,3306,0.606,3307,0.606,3308,0.619,3309,0.606,3310,0.606,3311,0.606,3312,0.606,3313,0.619,3314,0.619,3315,0.633,3316,0.619,3317,0.633,3318,0.619,3319,0.619,3320,0.633,3321,0.633,3322,0.893,3323,0.893,3324,0.893,3325,0.633,3326,0.633,3327,0.633,3328,0.633,3329,0.633,3330,0.633,3331,0.706]],["title/modules/client/#telegramclient",[7,2.576]],["text/modules/client/#telegramclient",[4,0.597,6,2.565,7,4.07,9,2.476,10,3.996,11,3.881,12,2.723,13,2.942,14,3.586,15,5.198,21,2.078,22,1.321,24,1.841,34,2.753,36,2.916,44,1.318,45,1.96,54,2.84,58,1.96,69,2.593,99,2.722,148,3.996,213,4.191,214,2.677,219,2.677,227,3.144,229,4.807,234,2.302,260,4.08,267,2.573,305,3.144,306,3.996,322,4.123,342,5.672,348,2.476,368,2.864,378,3.346,551,4.191,640,4.924,673,4.339,684,4.807,803,3.543,1280,6.981,1281,5.198,2894,8.539,2895,6.022,2896,6.784,2897,6.784]],["title/modules/client/#telegram.client",[3332,6.812]],["text/modules/client/#telegram.client",[]],["title/modules/client/#telegram.client.Telegram",[61,1.901]],["text/modules/client/#telegram.client.Telegram",[]],["title/modules/client/#telegram.client.Telegram.__init__",[791,5.272]],["text/modules/client/#telegram.client.Telegram.__init__",[4,0.611,9,1.06,10,4.259,11,4.409,22,0.565,38,0.895,42,1.271,44,0.448,61,0.889,69,1.11,105,1.237,123,1.574,126,3.802,135,0.484,137,1.541,139,0.861,159,2.011,185,1.128,192,2.263,214,1.831,227,1.346,239,1.432,271,4.442,276,0.839,291,3.454,302,1.764,328,3.361,341,3.792,364,1.205,393,2.163,396,1.794,399,5.461,417,3.367,450,1.591,491,1.509,588,1.554,655,1.794,743,1.464,748,2.577,787,3.745,791,2.466,803,1.516,816,1.71,833,1.968,870,1.661,939,1.616,978,1.271,1021,1.968,1046,5.004,1064,1.71,1085,2.057,1149,2.163,1166,2.58,1211,1.764,1259,2.577,1268,0.719,1291,2.011,1355,1.71,1390,2.294,1440,1.516,1559,2.011,1589,1.968,1597,2.011,1613,2.108,1639,1.929,1679,1.892,1716,2.225,1807,1.968,1852,2.057,1896,1.968,1949,1.929,1952,1.857,2103,1.929,2202,1.892,2286,2.466,2303,1.968,2326,1.968,2336,2.108,2430,3.566,2462,2.163,2483,6.418,2491,2.057,2503,2.057,2510,7.46,2514,2.374,2663,2.057,2714,2.057,2750,2.057,2802,2.011,2808,2.374,2820,2.577,2824,2.011,2828,2.225,2850,2.374,2888,2.374,2898,4.638,2899,7.708,2900,7.708,2901,6.613,2902,6.613,2903,6.613,2904,6.613,2906,6.613,2907,6.613,2908,2.903,2909,4.638,2910,4.638,2911,5.419,2912,5.791,2913,5.791,2914,6.613,2915,4.638,2916,1.794,2917,2.903,2918,2.903,2919,2.374,2920,2.225,2921,2.577,2922,2.577,2923,2.466,2924,2.466,2925,2.466,2926,2.466,2927,2.466,2928,2.466,2929,2.466,2930,2.163,2931,2.294,2932,2.294,2933,2.294,2934,2.294,2935,2.163,2936,2.294,2937,2.294,2938,2.294,2939,2.294,2940,2.294,2941,2.577,2942,2.374,2943,2.374,2944,2.225,2945,2.108,2946,2.108,2947,2.108,2948,2.163,2949,2.163,2950,2.057,2951,2.057,2952,1.968,2953,2.011,2954,2.011,2955,2.011,2956,2.011,2957,2.011,2958,2.163,2959,2.108,2960,2.011,2961,2.011,2962,2.057,2963,2.163,2964,2.108,2965,1.968,2966,1.929,2967,2.011,2968,2.011,2969,1.968,2970,2.057,2971,2.163,2972,2.057,2973,2.057,2974,2.057,2975,2.057,2976,2.577,2977,2.903,2978,3.783,2979,1.432,2980,4.638,2981,2.903,2982,2.717,2983,2.903,2984,2.903,2985,2.903,2986,5.791,2987,2.294,2988,2.903,2989,4.638,2990,4.638,2991,2.294,2992,2.903,2993,2.717,2994,2.577,2995,2.225,2996,4.638,2997,2.903,2998,2.903,2999,2.903,3000,1.929,3001,2.717,3002,4.638,3003,2.717,3004,2.903,3005,2.903]],["title/modules/client/#telegram.client.Telegram.call_method",[3006,5.272]],["text/modules/client/#telegram.client.Telegram.call_method",[4,0.605,9,3.292,22,1.224,34,2.98,44,1.255,126,3.101,135,1.047,137,2.089,185,2.441,192,3.068,221,2.861,223,1.391,239,3.101,291,3.283,364,3.742,385,5.087,417,4.563,450,2.235,691,5.905,787,2.882,1002,4.309,1046,4.6,1166,2.594,1268,1.557,2916,3.883,2978,3.596,2979,3.101,3000,4.176,3006,5.34,3007,9.535,3008,8.074,3009,6.286,3010,5.581,3011,5.581,3012,5.581,3013,5.581,3014,5.581,3015,5.581,3016,5.581,3017,5.581,3018,5.581,3019,5.581,3020,5.581,3021,5.581,3022,5.581,3023,5.581,3024,5.581,3025,5.581,3026,5.581,3027,5.581,3028,5.581,3029,4.454]],["title/modules/client/#telegram.client.Telegram.create_basic_group_chat",[3030,5.808]],["text/modules/client/#telegram.client.Telegram.create_basic_group_chat",[4,0.6,22,1.448,54,3.783,135,1.238,216,5.245,223,1.645,277,2.732,279,5.029,450,2.043,787,3.202,986,5.697,1268,1.841,2430,3.668,2916,4.593,2979,3.668,3000,4.939,3029,5.268,3030,6.957,3031,10.129,3032,6.078,3033,6.078,3034,6.078,3035,6.078,3036,6.6,3037,6.6,3038,6.078,3039,6.078,3040,6.078,3041,7.435]],["title/modules/client/#telegram.client.Telegram.delete_messages",[2557,4.624]],["text/modules/client/#telegram.client.Telegram.delete_messages",[4,0.605,22,1.317,63,1.613,135,1.127,214,3.684,223,1.497,277,2.577,347,8.01,450,1.859,491,2.201,506,4.621,525,5.057,778,7.3,787,3.02,1268,1.675,2430,4.205,2498,5.184,2557,5.04,2916,4.179,2978,3.87,2979,3.337,3000,4.494,3029,4.793,3042,5.345,3043,5.345,3044,5.53,3045,5.53,3046,5.53,3047,5.53,3048,5.53,3049,5.53,3050,5.53,3051,6.005,3052,5.53,3053,5.53,3054,5.53,3055,5.53,3056,5.53,3057,5.53,3058,5.53,3059,5.53,3060,6.764]],["title/modules/client/#telegram.client.Telegram.get_chat",[523,3.772]],["text/modules/client/#telegram.client.Telegram.get_chat",[4,0.598,22,1.36,28,2.646,34,2.561,63,1.645,135,1.163,221,3.058,223,1.545,277,2.996,303,4.385,450,1.918,488,3.103,523,5.754,525,4.887,528,4.596,691,6.311,787,3.08,829,5.775,870,5.669,1002,4.154,1092,6.87,1268,1.729,2430,3.444,2916,4.313,3000,4.637,3029,4.946,3061,4.835,3062,4.835,3063,4.835,3064,5.349,3065,5.516,3066,5.201,3067,5.349,3068,5.349,3069,6.532]],["title/modules/client/#telegram.client.Telegram.get_chat_history",[3070,5.808]],["text/modules/client/#telegram.client.Telegram.get_chat_history",[4,0.607,22,1.205,43,5.459,135,1.031,223,1.981,277,2.434,291,3.233,450,1.7,525,4.892,664,5.347,787,2.853,978,3.524,1002,3.847,1268,1.533,1761,6.297,2286,5.257,2430,4.676,2893,4.611,2916,3.823,2978,3.541,2979,3.053,3000,4.111,3029,4.385,3070,5.791,3071,9.479,3072,9.479,3073,4.891,3074,5.06,3075,4.611,3076,4.611,3077,4.611,3078,4.611,3079,4.611,3080,4.611,3081,4.611,3082,4.743,3083,4.743,3084,4.743,3085,4.743,3086,5.06,3087,5.06,3088,5.06,3089,5.06,3090,5.06,3091,4.891,3092,4.891,3093,4.891,3094,4.891,3095,4.891,3096,5.257,3097,5.257,3098,4.891,3099,4.891,3100,6.189]],["title/modules/client/#telegram.client.Telegram.get_chats",[523,3.772]],["text/modules/client/#telegram.client.Telegram.get_chats",[4,0.608,22,1.215,135,1.039,214,3.194,223,2.18,239,3.077,277,2.874,450,2.612,523,3.791,525,4.177,664,5.068,787,2.868,839,5.734,939,3.471,978,3.542,1002,3.867,1268,1.545,2430,4.432,2916,3.853,3000,5.376,3029,4.419,3069,5.836,3101,8.984,3102,8.984,3103,8.093,3104,4.929,3105,4.929,3106,4.929,3107,4.929,3108,4.929,3109,4.929,3110,4.929,3111,4.929,3112,4.929,3113,4.929,3114,4.929,3115,4.929,3116,4.929,3117,4.929,3118,4.929,3119,4.929,3120,4.929,3121,4.929,3122,5.099,3123,4.929,3124,4.929,3125,4.929,3126,4.929]],["title/modules/client/#telegram.client.Telegram.get_me",[262,3.772]],["text/modules/client/#telegram.client.Telegram.get_me",[4,0.588,22,1.494,34,2.713,102,2.84,135,1.278,176,3.79,223,1.698,262,4.663,343,4.447,488,3.288,787,3.264,788,8.762,1268,1.9,2916,4.74,3000,5.097,3006,6.517,3127,9.211,3128,6.063,3129,6.063,3130,6.063,3131,6.063,3132,6.063,3133,6.063,3134,6.272,3135,6.063]],["title/modules/client/#telegram.client.Telegram.get_message",[654,3.772]],["text/modules/client/#telegram.client.Telegram.get_message",[4,0.603,22,1.209,63,1.795,135,1.033,137,2.68,223,2.177,239,3.061,276,2.331,450,2.607,525,5.203,537,4.902,588,4.317,589,3.563,654,3.771,778,7.511,787,2.858,1002,3.854,1062,4.623,1117,5.068,1268,1.537,2430,3.979,2687,6.181,2916,3.833,2979,3.061,3000,6.303,3029,4.397,3136,7.547,3137,5.073,3138,5.073,3139,4.903,3140,4.903,3141,4.903,3142,4.903,3143,4.903,3144,4.903,3145,4.903,3146,4.903,3147,4.903,3148,4.903,3149,4.903,3150,4.903,3151,4.755,3152,4.903,3153,4.903,3154,5.073,3155,4.903,3156,4.903,3157,4.903,3158,4.903,3159,5.271,3160,5.271,3161,4.903,3162,6.205]],["title/modules/client/#telegram.client.Telegram.get_supergroup_full_info",[3163,5.808]],["text/modules/client/#telegram.client.Telegram.get_supergroup_full_info",[4,0.6,22,1.457,59,4.29,135,1.246,223,1.656,450,2.055,787,3.214,1268,1.853,2430,3.69,2817,6.283,2916,4.622,2979,3.69,3000,4.97,3029,5.301,3163,7,3164,10.15,3165,9.071,3166,6.116,3167,6.116,3168,6.116,3169,6.116,3170,6.116,3171,6.116,3172,6.116,3173,6.116,3174,6.116,3175,5.733,3176,7.481]],["title/modules/client/#telegram.client.Telegram.get_user",[3177,5.808]],["text/modules/client/#telegram.client.Telegram.get_user",[4,0.601,22,1.444,102,2.782,135,1.234,176,3.711,223,1.64,276,2.607,488,3.22,787,3.196,930,6.757,1268,1.836,2430,3.656,2916,4.579,3000,4.924,3006,6.296,3008,6.059,3177,6.936,3178,9.02,3179,5.857,3180,5.857,3181,5.857,3182,5.857,3183,5.857,3184,5.857,3185,5.857,3186,5.857,3187,7.412]],["title/modules/client/#telegram.client.Telegram.get_web_page_instant_view",[3188,5.808]],["text/modules/client/#telegram.client.Telegram.get_web_page_instant_view",[4,0.598,9,2.283,22,1.218,34,2.388,44,1.251,59,3.834,87,4.775,135,1.041,172,2.937,185,2.429,192,3.052,223,2.182,239,3.085,291,4.234,338,6.151,364,2.595,450,2.227,488,2.894,491,2.638,545,5.282,787,2.872,997,6.04,1002,3.873,1032,7.78,1046,4.136,1268,1.549,1466,5.885,1909,6.592,2916,3.863,2978,4.638,2979,3.085,3000,4.154,3029,4.431,3188,5.852,3189,9.859,3190,8.968,3191,5.112,3192,5.112,3193,5.112,3194,5.112,3195,5.112,3196,5.112,3197,5.112,3198,5.112,3199,5.112,3200,5.112,3201,5.112,3202,5.112,3203,6.253,3204,6.253,3205,6.253]],["title/modules/client/#telegram.client.Telegram.idle",[738,4.624]],["text/modules/client/#telegram.client.Telegram.idle",[4,0.605,22,1.329,135,1.136,351,3.176,379,5.481,385,4.834,416,4.532,491,2.22,528,4.53,559,3.014,570,4.215,608,5.584,738,5.083,787,3.482,1166,2.175,1268,1.689,2916,4.215,2994,7.608,3206,8.569,3207,10.488,3208,6.822,3209,6.822,3210,6.822,3212,6.056,3213,6.056,3214,6.056,3215,6.056,3216,6.056,3217,6.056,3218,6.056,3219,6.056,3220,6.056,3221,6.056,3222,6.056,3223,6.056,3224,8.569,3225,6.822,3226,6.822]],["title/modules/client/#telegram.client.Telegram.login",[328,3.602]],["text/modules/client/#telegram.client.Telegram.login",[1,2.624,4,0.609,22,0.921,46,2.934,51,1.866,132,4.544,135,0.787,137,2.816,162,2.259,188,2.646,221,2.981,227,3.107,265,2.596,271,3.544,276,1.366,328,5.668,343,2.282,385,3.782,396,5.236,402,3.205,450,1.842,491,1.538,576,4.16,623,3.864,627,2.667,691,4.866,743,2.384,745,3.46,767,4.994,787,3.645,870,3.835,950,3.205,958,2.873,991,2.562,1166,2.853,1268,1.171,1514,3.274,1824,4.368,1900,6.616,2817,5.395,2911,4.423,2916,2.92,2993,4.423,3008,5.48,3227,4.196,3228,4.196,3229,4.196,3230,4.196,3231,4.196,3232,4.196,3233,4.196,3234,4.196,3235,4.196,3236,4.196,3237,4.196,3238,4.196,3239,4.196,3240,4.196,3241,4.196,3242,4.196,3243,3.864,3244,3.864,3245,3.864,3246,3.864,3247,3.864,3248,3.864,3249,3.864,3250,3.864,3251,4.196,3252,3.864,3253,3.864,3254,3.864,3255,3.864,3256,3.864,3257,3.864,3258,3.864,3259,3.864,3260,3.864,3261,3.864,3262,4.196,3263,4.196,3264,4.196,3265,4.196,3266,4.727,3267,9.294,3268,4.727,3269,4.727,3270,4.727,3271,4.727,3272,4.727,3273,4.727,3274,4.727,3275,4.727,3276,4.727,3277,4.727,3278,4.727,3279,4.727,3280,4.727,3281,4.727,3282,4.727]],["title/modules/client/#telegram.client.Telegram.remove_update_handler",[3283,5.808]],["text/modules/client/#telegram.client.Telegram.remove_update_handler",[4,0.604,22,1.413,23,4.21,114,2.752,135,1.208,214,2.863,427,5.695,430,3.297,450,2.446,454,2.911,757,7.035,787,3.155,816,4.274,971,5.733,990,5.931,993,5.931,997,5.405,1046,3.701,1089,6.399,1166,2.313,1268,1.797,1959,5.931,2336,5.267,2916,4.482,3001,6.789,3283,6.789,3284,8.903,3285,6.441,3286,6.441,3287,7.255,3288,6.441,3289,6.441]],["title/modules/client/#telegram.client.Telegram.send_message",[13,2.692]],["text/modules/client/#telegram.client.Telegram.send_message",[4,0.603,12,1.934,13,2.383,22,1.07,34,2.192,63,1.843,135,0.915,137,2.472,162,2.507,172,2.696,194,3.886,221,2.617,223,2.091,239,2.711,276,2.15,277,3.063,301,3.556,303,3.753,450,2.676,523,4.522,525,5.027,528,3.934,537,4.522,588,3.983,589,3.287,691,5.402,787,2.636,790,4.878,870,5.173,1002,3.555,1046,2.803,1268,1.361,2430,2.711,2916,3.395,2979,2.711,2982,6.963,3000,6.006,3029,3.894,3136,6.963,3290,7.441,3291,3.806,3292,3.894,3293,3.894,3294,3.894,3295,3.989,3296,3.894,3297,4.094,3298,4.094,3299,4.094,3300,4.094,3301,4.211,3302,4.094,3303,4.094,3304,3.894,3305,3.725,3306,3.725,3307,3.725,3308,3.806,3309,3.725,3310,3.725,3311,3.725,3312,3.725,3313,3.806,3314,3.806,3315,3.894,3316,3.806,3317,3.894,3318,3.806,3319,3.806,3320,3.894,3321,3.894,3322,5.495,3323,5.495,3324,5.495]],["title/modules/client/#telegram.client.Telegram.stop",[608,4.044]],["text/modules/client/#telegram.client.Telegram.stop",[4,0.596,12,2.413,22,1.514,135,1.294,291,4.059,608,6.698,787,3.643,1166,2.478,1268,1.925,2916,4.801,2994,6.899,3003,8.685,3325,5.507,3326,5.507,3327,5.507,3328,5.507,3329,5.507,3330,5.507,3331,6.141]],["title/modules/custom/",[1099,2.732,2300,3.774]],["text/modules/custom/",[0,0.443,1,0.156,3,1.632,4,0.608,6,0.284,7,0.393,8,1.399,9,1.301,12,0.416,13,1.058,14,0.211,16,0.467,18,0.118,21,1.535,22,1.124,24,1.921,25,2.07,28,1.756,29,0.35,33,0.103,34,1.16,35,0.208,36,0.48,38,0.292,40,0.998,42,0.337,43,0.137,44,1.097,45,0.115,46,0.766,49,0.626,51,1.689,52,0.847,53,1.005,54,1.922,58,1.237,61,0.536,63,1.809,65,0.289,66,1.185,68,0.213,69,0.552,73,0.774,74,1.804,80,0.179,81,0.121,83,0.679,84,3.392,86,0.13,87,0.235,89,0.941,92,0.219,94,0.594,95,0.546,98,0.513,99,0.236,102,1.624,103,0.255,105,0.984,106,0.242,107,1.62,109,1.319,114,0.719,115,0.845,116,0.311,121,0.407,123,0.11,124,1.041,126,1.852,127,0.265,129,0.401,135,1.009,137,0.426,139,1.293,146,0.27,147,0.495,151,0.423,152,1.689,158,0.137,159,0.14,161,2.727,162,1.496,163,1.746,165,0.219,167,0.114,169,0.315,170,2.107,171,1.489,172,0.343,176,0.78,178,0.242,180,1.951,181,0.297,182,1.322,184,0.265,185,1.724,186,0.793,187,0.696,188,2.004,189,1.341,190,0.527,192,1.922,193,0.111,194,0.307,195,0.578,198,0.192,200,0.558,201,0.39,202,0.132,214,1.199,217,0.78,219,0.507,221,1.561,222,0.246,223,1.784,224,1.196,225,0.246,226,0.412,227,0.945,230,3.619,231,0.724,233,0.762,234,0.871,236,0.756,239,1.898,240,0.942,241,0.114,246,0.219,251,0.242,252,0.107,253,0.906,254,0.111,255,0.323,260,0.19,261,0.118,265,0.111,267,1.351,270,0.583,271,0.211,273,0.111,274,2.219,275,0.166,276,2.054,277,1.592,279,0.327,280,1.979,283,0.188,286,0.14,287,0.804,290,2.788,291,2.583,292,2.286,293,0.687,294,1.119,296,0.338,297,0.522,298,0.39,301,3.099,304,0.774,305,0.879,306,0.119,309,1.418,312,0.638,315,0.611,316,0.123,318,0.222,319,0.498,328,0.231,329,0.231,330,3.294,331,0.447,338,2.791,339,0.639,340,0.246,342,0.265,343,1.115,346,0.54,347,0.63,348,0.639,349,0.289,351,1.283,352,1.483,355,0.534,363,0.52,364,0.903,365,0.101,367,0.123,368,1.33,369,1.234,370,0.724,373,0.826,374,0.883,376,0.18,377,0.276,378,0.712,379,0.376,384,0.418,385,0.434,387,0.364,389,0.522,390,0.222,395,0.507,398,0.208,401,0.155,405,0.326,413,0.147,417,0.147,418,0.147,419,0.464,422,0.773,427,0.493,428,0.357,429,0.558,430,0.862,435,1.376,436,0.118,437,0.107,438,1.317,440,0.534,445,0.983,446,1.108,447,1.084,448,0.376,449,0.231,450,1.854,453,0.14,454,0.927,455,0.438,456,0.336,458,0.147,460,0.423,470,0.121,471,0.447,473,0.127,474,0.18,475,0.282,477,0.326,478,0.577,482,0.472,488,0.571,490,0.533,491,1.942,492,0.512,493,0.18,494,0.45,495,1.55,496,0.774,497,0.979,498,0.426,501,0.242,502,0.27,503,2.393,504,0.3,506,1.647,507,0.551,512,0.862,518,0.489,521,2.327,523,0.468,524,0.629,525,0.903,526,0.758,528,0.407,531,0.792,532,0.289,540,0.341,542,1.155,545,0.383,548,0.287,549,1.945,553,0.464,558,0.364,559,0.773,561,0.11,563,0.135,564,0.305,567,0.493,572,0.18,576,2.905,578,0.18,581,0.305,583,0.132,585,0.121,587,0.135,588,0.213,589,0.773,591,0.512,592,0.13,595,0.877,608,0.132,618,0.654,619,1.285,623,0.166,629,0.979,631,0.326,637,0.123,649,0.155,650,0.833,654,0.242,659,0.118,666,0.336,672,0.326,673,0.13,684,0.144,695,1.105,699,1.382,701,0.242,707,0.151,709,0.357,710,0.669,711,0.768,715,0.942,717,0.52,731,1,743,1.097,745,0.105,755,2.039,758,0.45,759,0.774,772,0.696,778,0.297,782,0.87,787,3.443,798,0.574,800,2.39,801,1.459,803,0.584,806,0.974,810,0.315,814,0.314,816,0.85,817,0.282,820,0.18,822,0.18,823,1.211,824,0.289,826,0.909,830,0.172,831,0.59,832,0.983,833,0.522,836,0.883,840,0.121,841,1.626,842,0.151,843,0.606,853,0.155,854,0.305,855,0.151,856,0.155,857,0.151,862,0.522,863,0.289,867,0.889,870,0.116,877,0.806,878,0.147,881,0.116,882,0.282,883,0.617,885,0.255,886,0.534,888,1.507,890,0.559,892,0.622,894,0.118,896,0.144,897,0.276,900,0.363,901,0.484,905,0.468,908,0.376,911,0.326,918,0.59,919,0.265,920,0.407,921,0.438,922,0.315,923,0.48,924,0.338,926,0.559,927,0.792,928,1.047,929,0.18,930,0.26,931,0.16,933,0.211,934,0.18,936,0.305,938,1.301,939,0.714,941,0.265,948,0.137,951,0.45,958,0.242,963,0.121,964,0.39,978,0.952,983,0.617,984,0.25,986,0.155,991,0.417,1002,2.363,1017,0.147,1021,1.285,1028,0.242,1041,0.315,1046,2.453,1048,0.13,1057,0.793,1062,0.297,1064,0.658,1066,0.315,1072,0.144,1074,0.289,1076,0.166,1080,0.833,1086,0.598,1088,0.166,1089,0.265,1090,0.144,1093,0.326,1097,0.16,1098,0.315,1099,1.085,1100,0.774,1117,1.005,1149,0.297,1151,0.166,1152,0.166,1154,0.687,1155,0.416,1156,0.354,1157,0.166,1158,0.59,1164,0.18,1166,2.927,1175,0.166,1176,1.085,1181,0.151,1184,1.612,1185,0.48,1187,0.983,1211,0.575,1212,0.276,1214,0.166,1218,0.338,1219,0.941,1225,0.151,1229,0.137,1237,0.992,1242,0.792,1243,0.59,1247,0.297,1250,1.238,1268,1.389,1273,0.147,1281,0.45,1291,0.276,1292,0.14,1298,0.743,1299,0.63,1318,0.18,1349,0.669,1361,0.289,1365,0.326,1390,0.315,1391,1.303,1397,1.014,1438,0.166,1440,1.404,1443,0.369,1445,0.151,1452,0.476,1466,0.289,1467,0.282,1472,0.407,1480,0.18,1487,1.358,1489,0.18,1493,0.705,1514,0.407,1522,0.305,1537,2.923,1542,1.005,1548,0.18,1559,0.656,1565,0.18,1568,0.289,1569,0.983,1570,0.166,1573,0.932,1576,0.166,1577,0.166,1580,0.857,1581,1.076,1583,0.338,1589,0.758,1592,0.326,1593,0.438,1597,0.656,1601,0.289,1609,2.437,1610,1.83,1613,0.687,1616,0.338,1617,0.18,1619,0.95,1623,2.668,1635,0.338,1639,0.629,1651,0.16,1652,0.338,1653,0.654,1655,0.326,1658,0.574,1659,0.18,1660,0.172,1663,0.684,1664,1.439,1673,2.122,1679,0.728,1682,0.438,1691,0.959,1709,0.289,1711,0.18,1716,0.155,1721,0.18,1723,0.883,1724,0.354,1725,0.654,1734,0.155,1744,1.084,1749,0.166,1751,2.296,1752,0.18,1761,0.265,1767,0.166,1772,0.383,1776,0.18,1789,2.233,1793,0.914,1794,0.18,1795,0.18,1807,0.522,1821,0.883,1822,0.354,1823,0.354,1824,1.418,1828,2.631,1852,0.546,1856,0.172,1860,0.16,1884,0.315,1885,0.95,1886,1.014,1896,0.522,1909,1.108,1910,0.48,1911,0.992,1914,0.354,1915,1.285,1916,0.48,1920,0.18,1928,0.18,1934,0.354,1944,1.771,1945,0.326,1949,0.629,1952,0.715,1960,0.354,1961,0.354,1966,0.426,1979,0.654,1980,0.654,1988,0.315,2004,0.18,2008,0.166,2011,0.671,2016,0.305,2023,0.16,2024,0.166,2027,0.338,2044,0.18,2046,0.95,2048,0.354,2053,0.326,2057,0.16,2064,0.932,2086,0.172,2088,0.18,2091,0.18,2101,0.155,2103,0.265,2116,0.18,2118,0.297,2119,0.18,2120,2.264,2122,0.166,2126,0.18,2145,0.147,2153,0.172,2164,0.18,2197,0.18,2202,0.728,2212,0.354,2231,0.338,2242,0.338,2247,0.255,2255,2.608,2282,0.166,2288,0.992,2300,0.315,2303,0.758,2309,0.59,2326,0.758,2336,1.376,2346,0.305,2360,0.246,2363,0.983,2367,0.748,2382,0.338,2411,0.297,2418,0.166,2423,2.163,2426,1.945,2430,1.898,2431,0.748,2462,0.297,2470,0.155,2480,0.354,2491,0.546,2496,0.338,2498,0.155,2503,0.546,2507,0.338,2535,0.438,2537,0.166,2540,0.151,2548,0.289,2556,1.259,2557,0.151,2566,0.172,2570,0.63,2611,0.546,2618,0.166,2663,0.546,2664,0.464,2675,3.24,2687,1.453,2691,0.726,2692,0.354,2714,0.546,2741,0.18,2743,0.18,2750,0.546,2770,0.18,2783,0.166,2802,0.533,2808,0.326,2817,0.14,2824,0.656,2828,0.155,2838,0.338,2850,0.166,2857,0.354,2876,0.166,2893,0.297,2895,0.18,2919,0.166,2920,0.155,2921,0.18,2922,0.18,2923,0.338,2924,0.338,2925,0.338,2926,0.338,2927,0.338,2928,0.338,2929,0.338,2930,0.297,2931,0.315,2932,0.315,2933,0.315,2934,0.315,2935,0.297,2936,0.315,2937,0.315,2938,0.315,2939,0.315,2940,0.315,2941,0.18,2942,0.166,2943,0.166,2944,0.45,2945,0.687,2946,1.27,2947,0.687,2948,0.574,2949,0.574,2950,0.792,2951,0.792,2952,0.758,2953,0.656,2954,0.656,2955,0.656,2956,0.656,2957,0.656,2958,0.574,2959,0.687,2960,0.656,2961,0.656,2962,0.546,2963,0.574,2964,0.426,2965,0.758,2966,0.743,2967,0.656,2968,0.656,2969,0.758,2970,0.792,2971,0.833,2972,0.792,2973,0.792,2974,0.792,2975,0.792,2976,0.18,2978,2.751,2979,2.536,2987,0.609,2991,0.609,2995,0.45,3008,1.18,3032,0.166,3033,0.166,3034,0.166,3035,0.166,3036,0.18,3037,0.18,3038,0.166,3039,0.166,3040,0.166,3042,0.315,3043,0.315,3044,0.166,3045,0.166,3046,0.166,3047,0.166,3048,0.166,3049,0.166,3050,0.166,3052,0.166,3053,0.166,3054,0.166,3055,0.166,3056,0.166,3057,0.166,3058,0.166,3059,0.166,3061,0.656,3062,0.656,3063,0.656,3064,0.305,3065,0.315,3066,0.438,3067,0.45,3068,0.45,3073,0.315,3074,0.166,3075,0.297,3076,0.297,3077,0.297,3078,0.297,3079,0.297,3080,0.297,3081,0.297,3082,0.155,3083,0.155,3084,0.155,3085,0.155,3086,0.166,3087,0.166,3088,0.166,3089,0.166,3090,0.166,3091,0.315,3092,0.315,3093,0.315,3094,0.315,3095,0.315,3096,0.338,3097,0.338,3098,0.315,3099,0.315,3104,0.315,3105,0.315,3106,0.315,3107,0.315,3108,0.315,3109,0.315,3110,0.315,3111,0.315,3112,0.315,3113,0.315,3114,0.315,3115,0.315,3116,0.315,3117,0.315,3118,0.315,3119,0.315,3120,0.315,3121,0.315,3122,0.166,3123,0.315,3124,0.315,3125,0.315,3126,0.315,3128,0.315,3129,0.315,3130,0.315,3131,0.315,3132,0.315,3133,0.315,3134,0.166,3135,0.315,3137,0.166,3138,0.166,3139,0.315,3140,0.315,3141,0.315,3142,0.315,3143,0.315,3144,0.315,3145,0.315,3146,0.315,3147,0.315,3148,0.315,3149,0.315,3150,0.315,3151,0.305,3152,0.315,3153,0.315,3154,0.166,3155,0.315,3156,0.315,3157,0.315,3158,0.315,3159,0.338,3160,0.338,3161,0.315,3166,0.166,3167,0.166,3168,0.166,3169,0.166,3170,0.166,3171,0.166,3172,0.166,3173,0.166,3174,0.166,3175,0.155,3179,0.315,3180,0.315,3181,0.315,3182,0.315,3183,0.315,3184,0.315,3185,0.315,3186,0.315,3190,0.18,3191,0.166,3192,0.166,3193,0.166,3194,0.166,3195,0.166,3196,0.166,3197,0.166,3198,0.166,3199,0.166,3200,0.166,3201,0.166,3202,0.166,3243,0.166,3244,0.166,3245,0.166,3246,0.166,3247,0.166,3248,0.166,3249,0.166,3250,0.166,3252,0.166,3253,0.166,3254,0.166,3255,0.166,3256,0.166,3257,0.166,3258,0.166,3259,0.166,3260,0.166,3261,0.166,3291,0.889,3292,0.792,3293,0.792,3294,0.792,3295,0.687,3296,0.792,3297,0.833,3298,0.833,3299,0.833,3300,0.833,3301,0.726,3302,0.833,3303,0.833,3304,0.792,3305,0.758,3306,0.758,3307,0.758,3308,0.656,3309,0.758,3310,0.758,3311,0.758,3312,0.758,3313,0.656,3314,0.656,3315,0.546,3316,0.656,3317,0.546,3318,0.656,3319,0.656,3320,0.546,3321,0.546,3325,0.792,3326,0.792,3327,0.792,3328,0.792,3329,0.792,3330,0.792,3331,0.16,3333,0.203,3334,0.203,3335,0.373,3336,0.398,3337,0.398,3338,0.654,3339,0.203,3340,0.203,3341,0.203,3342,0.203,3343,0.203,3344,7.736,3345,0.203,3346,0.203,3347,0.883,3348,0.203,3349,0.203,3350,0.203,3351,0.203,3352,0.55,3353,0.203,3354,0.203,3355,0.811,3356,0.203,3357,0.203,3358,0.203,3359,0.203,3360,0.203,3361,0.203,3362,0.203,3363,0.373,3364,0.203,3365,0.203,3366,0.203,3367,0.203,3368,0.203,3369,0.373,3370,0.373,3371,0.804,3372,0.684,3373,0.654,3374,0.521,3375,0.521,3376,0.521,3377,0.203,3378,0.55,3379,0.909,3380,0.203,3381,0.338,3382,0.947,3383,1.118,3384,1.479,3385,0.77,3386,0.398,3387,0.398,3388,0.398,3389,1.24,3390,0.833,3391,0.726,3392,0.833,3393,0.203,3394,0.172,3395,0.203,3396,0.338,3397,0.203,3398,0.373,3399,0.203,3400,0.499,3401,0.354,3402,0.728,3403,0.166,3404,0.203,3405,0.137,3406,0.684,3407,2.942,3408,1.226,3409,0.721,3410,0.48,3411,1.677,3412,0.203,3413,0.338,3414,0.203,3415,0.373,3416,0.947,3417,1.283,3418,0.77,3419,0.398,3420,0.398,3421,0.203,3422,0.947,3423,0.684,3424,1.118,3425,0.687,3426,0.95,3427,0.684,3428,0.203,3429,0.684,3430,0.373,3431,0.373,3432,0.373,3433,1.42,3434,0.18,3435,2.851,3436,1.191,3437,0.203,3438,0.77,3439,1.076,3440,0.203,3441,0.203,3442,0.203,3443,0.203,3444,1.313,3445,0.203,3446,0.203,3447,0.398,3448,0.398,3449,0.203,3450,0.373,3451,0.16,3452,0.203,3453,0.373,3454,0.95,3455,0.338,3456,0.992,3457,1.774,3458,0.373,3459,0.587,3460,0.398,3461,0.947,3462,0.55,3463,1.046,3464,0.521,3465,0.203,3466,0.398,3467,0.521,3468,0.373,3469,0.373,3470,0.203,3471,0.203,3472,0.499,3473,1.413,3474,0.398,3475,0.203,3476,0.203,3477,0.203,3478,0.203,3479,0.654,3480,0.521,3481,0.338,3482,0.338,3483,1.046,3484,0.373,3485,0.373,3486,0.886,3487,0.18,3488,0.18,3489,0.18,3490,0.203,3491,0.203,3492,0.587,3493,0.398,3494,0.398,3495,0.373,3496,0.338,3497,0.587,3498,0.398,3499,0.883,3500,0.203,3501,0.203,3502,0.721,3503,0.203,3504,0.398,3505,0.203,3506,0.203,3507,0.203,3508,0.398,3509,0.521,3510,0.203,3511,0.203,3512,0.203,3513,0.203,3514,0.18,3515,0.398,3516,0.203,3517,0.18,3518,0.774,3519,0.521,3520,0.398,3521,0.203,3522,0.398,3523,0.373,3524,1.201,3525,0.55,3526,0.398,3527,0.203,3528,0.203,3529,0.203,3530,0.203,3531,0.203,3532,0.338,3533,0.373,3534,0.983,3535,0.338,3536,0.886,3537,0.203,3538,0.18,3539,0.203,3540,2.206,3541,0.18,3542,0.338,3543,0.18,3544,0.338,3545,0.774,3546,0.18,3547,0.338,3548,0.203,3549,0.18,3550,0.373,3551,0.203,3552,1.358,3553,0.203,3554,0.654,3555,0.398,3556,0.654,3557,0.77,3558,0.684,3559,0.654,3560,1.09,3561,0.947,3562,0.654,3563,0.398,3564,0.18,3565,1.351,3566,0.326,3567,0.373,3568,0.373,3569,0.373,3570,0.203,3571,1.118,3572,0.203,3573,0.203,3574,0.172,3575,0.203,3576,0.654,3577,0.398,3578,0.203,3579,0.203,3580,0.203,3581,0.203,3582,0.398,3583,0.373,3584,0.398,3585,0.172,3586,1.09,3587,0.203,3588,0.373,3589,0.203,3590,0.203,3591,0.587,3592,0.203,3593,0.203,3594,0.203,3595,0.521,3596,0.398,3597,0.203,3598,0.203,3599,0.203,3600,0.398,3601,0.203,3602,0.203,3603,0.203,3604,0.172,3605,0.203,3606,0.203,3607,0.203,3608,0.203,3609,0.398,3610,0.203,3611,0.203,3612,0.203,3613,0.18,3614,0.373,3615,0.203,3616,0.18,3617,0.398,3618,0.886,3619,0.203,3620,0.203,3621,0.203,3622,0.203,3623,0.203,3624,0.203,3625,0.203,3626,0.203,3627,0.203,3628,0.203,3629,0.203,3630,0.203,3631,0.203,3632,0.203,3633,1.351,3634,0.18,3635,0.203,3636,0.203,3637,0.203,3638,0.18,3639,0.203,3640,0.203,3641,0.203,3642,0.373,3643,0.203,3644,0.203,3645,0.203,3646,0.437,3647,0.373,3648,0.373,3649,1.444,3650,0.398,3651,0.398,3652,0.338,3653,0.398,3654,0.77,3655,0.77,3656,0.77,3657,0.77,3658,0.77,3659,0.398,3660,0.398,3661,0.398,3662,0.398,3663,0.398,3664,0.398,3665,0.203,3666,1.382,3667,0.18,3668,0.18,3669,0.18,3670,0.18,3671,0.18,3672,0.18,3673,0.18,3674,0.18,3675,0.18,3676,0.203,3677,0.203,3678,0.18,3679,0.18,3680,0.18,3681,0.18,3682,0.203,3683,0.203,3684,0.18,3685,0.18,3686,0.18,3687,0.18,3688,0.203,3689,0.203,3690,0.18,3691,0.18,3692,0.18,3693,0.18,3694,0.203,3695,0.203,3696,0.18,3697,0.18,3698,0.18,3699,0.18,3700,0.18,3701,0.18,3702,0.18,3703,0.18,3704,0.18,3705,0.203,3706,0.203,3707,0.18,3708,0.18,3709,0.18,3710,0.18,3711,0.18,3712,0.18,3713,0.18,3714,0.18,3715,0.203,3716,0.203,3717,0.18,3718,0.18,3719,0.18,3720,0.18,3721,0.18,3722,0.18,3723,0.18,3724,0.18,3725,0.18,3726,0.18,3727,0.18,3728,0.18,3729,0.18,3730,0.18,3731,0.18,3732,0.18,3733,0.18,3734,0.18,3735,0.18,3736,0.18,3737,0.18,3738,0.18,3739,0.18,3740,0.203,3741,0.203,3742,0.18,3743,0.18,3744,0.18,3745,0.18,3746,0.18,3747,0.18,3748,0.18,3749,0.18,3750,0.18,3751,0.18,3752,0.18,3753,0.18,3754,0.18,3755,0.18,3756,0.18,3757,0.18,3758,0.18,3759,0.18,3760,0.18,3761,0.18,3762,0.203,3763,0.203,3764,0.203,3765,0.203,3766,0.203,3767,0.203,3768,0.203,3769,0.203,3770,0.203,3771,0.203,3772,0.203,3773,0.203,3774,0.203,3775,0.203,3776,0.203,3777,0.203,3778,0.203,3779,0.203,3780,0.203,3781,0.203,3782,0.203,3783,0.203,3784,0.203,3785,0.203,3786,0.55,3787,0.499,3788,0.203,3789,0.77,3790,0.373,3791,0.203,3792,0.203,3793,0.203,3794,0.203,3795,0.203,3796,0.203,3797,0.203,3798,0.203,3799,0.203,3800,0.203,3801,0.203,3802,0.203,3803,0.203,3804,0.203,3805,0.203,3806,0.203,3807,0.203,3808,0.203,3809,0.203,3810,0.203,3811,0.203,3812,0.203,3813,0.203,3814,0.203,3815,0.398,3816,0.203,3817,0.203,3818,0.18,3819,0.203,3820,0.203,3821,0.203,3822,0.203,3823,0.203,3824,0.203,3825,0.203,3826,0.203,3827,0.203,3828,0.203,3829,0.203,3830,0.203,3831,0.203,3832,0.203,3833,0.203,3834,0.203,3835,0.203,3836,0.203,3837,0.203,3838,0.203,3839,0.203,3840,0.203,3841,0.203,3842,0.203,3843,0.203,3844,0.203,3845,0.203,3846,0.203,3847,0.203,3848,0.203,3849,0.203,3850,0.203,3851,0.203,3852,0.203,3853,0.721,3854,0.587,3855,0.18,3856,0.18,3857,0.18,3858,0.18,3859,0.18,3860,0.203,3861,0.203,3862,0.18,3863,0.18,3864,0.18,3865,0.18,3866,0.18,3867,0.18,3868,0.18,3869,0.18,3870,0.18,3871,0.18,3872,0.18,3873,0.18,3874,0.18,3875,0.18,3876,0.18,3877,0.18,3878,0.18,3879,0.18,3880,0.18,3881,0.18,3882,0.18,3883,0.18,3884,0.18,3885,0.18,3886,0.18,3887,0.398,3888,0.203,3889,0.203,3890,0.55,3891,0.203,3892,1.599,3893,0.587,3894,0.203,3895,0.398,3896,0.398,3897,0.398,3898,0.398,3899,0.18,3900,0.18,3901,0.18,3902,0.18,3903,0.18,3904,0.18,3905,0.18,3906,0.18,3907,0.18,3908,0.18,3909,0.18,3910,0.18,3911,0.18,3912,0.18,3913,0.18,3914,0.18,3915,0.18,3916,0.18,3917,0.18,3918,0.18,3919,0.18,3920,0.18,3921,0.18,3922,0.18,3923,0.18,3924,0.18,3925,0.18,3926,0.18,3927,0.18,3928,0.18,3929,0.18,3930,0.18,3931,0.18,3932,0.18,3933,0.18,3934,0.18,3935,0.18,3936,0.18,3937,0.18,3938,0.203,3939,0.203,3940,0.203,3941,0.203,3942,0.203,3943,0.203,3944,0.172,3945,0.18,3946,0.18,3947,0.18,3948,0.18,3949,0.18,3950,0.18,3951,0.18,3952,0.18,3953,0.18,3954,0.18,3955,0.18,3956,0.18,3957,0.18,3958,0.18,3959,0.18,3960,0.18,3961,0.18,3962,0.18,3963,0.18,3964,0.18,3965,0.18,3966,0.18,3967,0.203,3968,0.203,3969,0.18,3970,0.18,3971,0.18,3972,0.18,3973,0.947,3974,0.203,3975,0.18,3976,0.203,3977,0.203,3978,0.203,3979,0.203,3980,0.203,3981,0.203,3982,0.203,3983,0.203,3984,0.203,3985,0.203,3986,0.18,3987,0.18,3988,0.18,3989,0.18,3990,0.18,3991,0.18,3992,0.18,3993,0.18,3994,0.18,3995,0.18,3996,0.18,3997,0.18,3998,0.203,3999,0.18,4000,0.18,4001,0.18,4002,0.18,4003,0.18,4004,0.18,4005,0.18,4006,0.18,4007,0.18,4008,0.18,4009,0.18,4010,0.18,4011,0.18,4012,0.18,4013,0.18,4014,0.18,4015,0.18,4016,0.18,4017,0.18,4018,0.18,4019,0.18,4020,0.398,4021,0.203,4022,0.398,4023,0.398,4024,0.203,4025,0.203,4026,0.203,4027,0.203,4028,0.203,4029,0.203,4030,0.203,4031,0.398,4032,0.203,4033,0.203,4034,0.203,4035,0.203,4036,0.203,4037,0.203,4038,0.373,4039,0.203,4040,0.373,4041,0.373,4042,0.203,4043,0.77]],["title/modules/custom/#custom-package",[1099,2.732,2300,3.774]],["text/modules/custom/#custom-package",[3,2.573,6,2.342,12,2.027,29,3.544,34,2.297,38,2.404,44,1.534,53,3.053,54,3.264,58,2.687,61,2.388,66,2.934,81,4.664,129,2.437,190,4.339,223,1.726,233,2.573,348,2.846,351,2.889,355,4.398,368,3.927,369,3.578,436,4.525,450,2.142,507,3.846,619,4.339,1099,4.461,1214,6.374,1734,5.975,2091,6.922,2300,6.161,3333,7.797,3334,7.797]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent",[1928,5.51]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent",[4,0.605,8,2.653,28,2.112,44,1.071,102,3.246,189,3.462,222,4.288,233,2.29,276,2.503,363,3.811,417,5.038,521,2.553,542,3.124,684,4.918,800,3.357,878,5.038,890,5.038,930,4.522,938,5.182,963,4.152,1298,4.611,1664,3.715,1824,4.522,1934,7.69,3335,6.494,3336,8.662,3337,8.662,3338,5.895,3339,6.94,3340,6.94,3341,6.94,3342,6.94,3343,6.94]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action",[1824,4.044]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action",[4,0.47,800,2.785,938,5.224,3345,8.733]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about",[3346,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about",[4,0.528,28,2.601,105,3.641,491,2.781,503,3.884,1046,4.36,1623,3.884,1664,4.574,3347,6.753]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin",[3348,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin",[4,0.525,28,2.573,105,3.602,491,2.752,503,3.843,800,2.696,801,3.207,951,6.48,1623,3.843,1664,4.526,3335,7.913,3338,7.183]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights",[3349,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights",[4,0.525,28,2.573,86,5.409,105,3.602,185,3.284,491,2.752,503,3.843,800,2.696,1017,6.139,1623,3.843,1664,4.526,3350,8.456]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history",[3351,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history",[4,0.522,28,2.95,43,5.673,63,1.583,447,5.673,491,2.723,503,3.803,801,3.174,1623,3.803,1664,4.479,1744,5.673,1910,6.841,2978,4.787,3352,7.83]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites",[3353,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites",[4,0.527,28,2.592,491,2.772,503,3.87,801,3.23,817,6.034,1623,3.87,1664,4.558,1910,6.962,2978,4.872]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location",[3354,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location",[4,0.525,28,2.573,105,3.602,188,3.337,491,2.752,503,3.843,800,2.696,801,3.207,1623,3.843,1664,4.526,3355,6.139,3356,8.456]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message",[3357,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message",[4,0.526,28,2.582,63,1.849,352,5.157,491,2.762,503,3.857,801,3.218,928,5.076,1623,3.857,1664,4.542]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo",[3358,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo",[4,0.526,28,2.582,105,3.615,163,4.239,491,2.762,503,3.857,800,2.706,1623,3.857,1664,4.542,3347,6.705]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin",[3359,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin",[4,0.526,28,2.974,63,1.849,491,2.762,503,3.857,801,3.218,928,5.076,1569,6.503,1623,3.857]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions",[3360,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions",[4,0.526,28,2.582,63,1.606,352,5.157,491,2.762,503,3.857,800,2.706,801,3.218,1623,3.857,1664,4.542,3338,7.208]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures",[3361,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures",[4,0.526,28,2.582,63,1.606,491,2.762,503,3.857,801,3.218,1157,6.937,1623,3.857,1664,4.542,1910,6.937,2978,4.855]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set",[3362,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set",[4,0.525,28,2.573,105,3.602,188,3.337,491,2.752,503,3.843,800,2.696,1542,5.314,1623,3.843,1664,4.526,3347,6.682,3363,7.913]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title",[3364,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title",[4,0.527,28,2.592,105,3.628,180,4.943,491,2.772,503,3.87,1046,4.345,1623,3.87,1664,4.558,3347,6.729]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username",[3365,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username",[4,0.527,28,2.592,105,3.628,270,3.87,491,2.772,503,3.87,1046,4.345,1623,3.87,1664,4.558,3347,6.729]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date",[715,3.656]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date",[8,3.35,116,4.634,715,5.163]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message",[3366,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message",[4,0.527,63,1.853,491,2.772,503,3.87,506,4.616,801,3.23,928,5.094,1623,3.87,1664,4.558]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.id",[276,1.793]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.id",[8,3.363,276,2.542]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined",[448,3.97]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined",[102,2.664,195,3.889,270,3.926,448,5.525,503,3.926,707,6.436,3347,6.826]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite",[3367,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite",[4,0.523,28,2.956,102,2.589,195,3.78,231,4.737,448,5.371,491,2.733,503,3.816,800,2.677,801,3.185,817,5.95,1623,3.816,3338,7.132]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left",[89,4.044]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left",[89,5.69,102,2.693,503,3.969,801,3.312]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new",[28,1.889]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new",[8,3.338,28,2.658,187,4.734,1623,3.969]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old",[1664,3.322]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old",[8,3.35,187,4.751,1664,4.691]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll",[3368,6.207]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll",[4,0.528,28,2.601,63,1.617,491,2.781,503,3.884,608,5.568,699,5.794,928,5.112,1623,3.884]],["title/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id",[930,4.044]],["text/modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id",[8,3.338,102,2.693,276,2.523,498,6.339]],["title/modules/custom/#telethon.tl.custom.button.Button",[84,2.692]],["text/modules/custom/#telethon.tl.custom.button.Button",[4,0.535,8,2.448,25,4.737,34,2.425,35,3.345,44,1.533,53,2.507,54,3.808,61,1.962,63,1.721,66,3.098,84,4.409,102,1.975,107,3.743,109,2.098,114,2.429,151,3.517,162,2.774,172,2.32,227,2.968,233,2.113,261,3.717,267,2.429,301,3.424,331,3.717,338,3.83,339,3.663,348,2.337,367,3.892,368,4.055,369,2.939,370,5.132,413,4.649,450,1.759,456,3.663,877,4.024,900,3.956,983,4.172,1243,7.358,1273,4.649,1281,6.971,1609,5.015,1916,5.235,1944,5.976,2116,5.685,2120,6.133,2556,3.305,2611,4.537,3291,4.435,3304,4.537,3369,5.992,3370,5.992,3371,5.439,3372,5.685,3373,5.439,3374,5.685,3375,5.685,3376,5.685,3377,6.404,3378,5.992,3379,4.537,3380,6.404]],["title/modules/custom/#telethon.tl.custom.button.Button.auth",[3381,5.272]],["text/modules/custom/#telethon.tl.custom.button.Button.auth",[4,0.589,9,1.535,22,0.819,28,2.443,36,2.648,40,2.828,44,1.46,51,4.01,53,2.412,54,2.579,61,1.887,63,1.166,68,3.298,84,3.874,102,2.476,106,3.744,109,2.019,124,3.383,135,0.7,176,2.535,185,3.749,188,2.432,190,3.429,192,3.918,219,2.432,223,0.931,233,2.033,239,2.074,240,3.63,267,3.045,270,2.8,276,1.78,291,4.193,301,3.693,328,3.576,338,5.775,343,3.877,351,2.975,363,4.409,364,1.745,405,5.037,422,3.547,427,3.941,430,2.8,438,3.614,450,2.003,478,3.18,503,2.8,542,2.774,591,4.093,650,4.591,710,3.686,806,3.429,824,4.473,863,4.473,888,3.806,919,4.093,931,3.323,939,2.34,991,4.352,1046,3.143,1057,2.598,1117,5.045,1166,2.725,1219,2.74,1242,2.98,1268,1.041,1559,2.913,1589,2.851,1597,2.913,1609,3.218,1613,3.053,1639,2.794,1659,3.733,1679,2.74,1916,5.037,2044,3.733,2556,3.18,2965,2.851,2966,2.794,2967,2.913,2968,2.913,2969,2.851,2970,2.98,2971,3.133,2972,2.98,2973,2.98,2974,2.98,2975,2.98,2978,3.525,2979,2.074,3291,2.913,3292,2.98,3293,2.98,3294,2.98,3295,3.053,3296,2.98,3297,3.133,3298,3.133,3299,3.133,3300,3.133,3301,3.222,3302,3.133,3303,3.133,3325,2.98,3326,2.98,3327,2.98,3328,2.98,3329,2.98,3330,2.98,3379,2.98,3381,3.572,3382,8.029,3383,8.547,3384,3.053,3385,8.029,3386,6.161,3387,6.161,3388,6.161,3389,2.98,3390,3.133,3391,3.222,3392,3.133,3393,4.205,3394,3.572,3395,4.205]],["title/modules/custom/#telethon.tl.custom.button.Button.clear",[1886,4.904]],["text/modules/custom/#telethon.tl.custom.button.Button.clear",[4,0.564,22,1.499,44,1.424,63,1.746,84,4.445,135,1.282,162,3.11,223,1.703,450,2.115,1211,5.608,1268,1.906,1623,4.194,1886,7.81,1944,6.699,2120,6.876,2893,5.735,3073,6.082,3123,6.082,3124,6.082,3125,6.082,3126,6.082,3384,5.587,3389,5.454,3396,6.538,3397,7.697]],["title/modules/custom/#telethon.tl.custom.button.Button.force_reply",[3398,5.808]],["text/modules/custom/#telethon.tl.custom.button.Button.force_reply",[4,0.566,22,1.519,25,4.588,44,1.435,63,1.76,84,4.033,135,1.298,223,1.726,450,2.142,826,6.589,1211,5.652,1268,1.931,1623,4.227,1944,6.751,3075,5.809,3076,5.809,3077,5.809,3078,5.809,3079,5.809,3080,5.809,3081,5.809,3384,5.66,3389,5.525,3398,7.296,3399,7.797]],["title/modules/custom/#telethon.tl.custom.button.Button.inline",[1609,3.242]],["text/modules/custom/#telethon.tl.custom.button.Button.inline",[4,0.602,22,1.098,28,2.304,44,1.168,54,3.169,84,3.283,109,2.481,135,0.939,223,1.248,233,2.498,301,3.587,430,3.44,450,1.549,512,3.44,518,2.909,701,4.6,743,4.311,816,5.035,1002,5.244,1021,3.821,1046,4.36,1166,1.797,1176,2.811,1268,1.396,1291,5.243,1440,5.323,1522,5.801,1609,4.464,2103,5.029,2491,3.994,2503,3.994,2556,4.716,2663,3.994,2714,3.994,2750,3.994,2802,3.904,2808,6.188,2824,3.904,2828,4.319,2850,4.608,2940,4.454,2941,5.004,2942,4.608,2943,4.608,2944,4.319,2945,4.092,2946,7.124,2947,4.092,2948,4.2,2949,4.2,3384,4.092,3389,3.994,3400,6.43,3401,6.72,3402,3.673,3403,4.608,3404,5.637,3405,3.821,3406,5.004]],["title/modules/custom/#telethon.tl.custom.button.Button.request_location",[3375,5.51]],["text/modules/custom/#telethon.tl.custom.button.Button.request_location",[3,2.803,4,0.603,22,1.31,28,2.585,54,3.555,84,3.684,135,1.12,161,7.512,223,1.489,301,3.68,330,4.727,450,1.848,488,3.032,1166,2.968,1268,1.666,1537,7.32,2120,6.328,3066,5.012,3067,5.154,3068,5.154,3128,5.315,3129,5.315,3130,5.315,3131,5.315,3132,5.315,3133,5.315,3355,6.166,3375,5.971,3389,4.766,3407,8.565,3408,5.714,3409,7.948,3410,5.499,3411,6.166,3412,6.726]],["title/modules/custom/#telethon.tl.custom.button.Button.request_phone",[3376,5.51]],["text/modules/custom/#telethon.tl.custom.button.Button.request_phone",[3,2.803,4,0.603,22,1.31,28,2.585,54,3.555,84,3.684,135,1.12,161,7.512,223,1.489,271,4.49,301,3.68,330,4.727,450,1.848,488,3.032,1166,2.968,1268,1.666,1537,7.32,2120,6.328,3135,5.315,3179,5.315,3180,5.315,3181,5.315,3182,5.315,3183,5.315,3184,5.315,3185,5.315,3186,5.315,3376,5.971,3389,4.766,3407,8.565,3408,5.714,3409,7.948,3411,6.166,3413,5.714,3414,6.726]],["title/modules/custom/#telethon.tl.custom.button.Button.request_poll",[3415,5.808]],["text/modules/custom/#telethon.tl.custom.button.Button.request_poll",[3,2.459,4,0.599,22,1.073,28,2.268,53,2.918,54,4.243,84,3.232,102,3.126,135,0.917,151,4.092,161,7.045,171,5.253,223,1.219,291,4.412,301,3.406,351,2.762,450,1.513,488,2.66,503,3.387,699,6.872,826,5.28,1074,5.41,1166,2.693,1268,1.364,1349,4.458,1365,6.092,1537,6.864,1884,5.889,2120,5.552,2288,8.653,3104,4.352,3105,4.352,3106,4.352,3107,4.352,3108,4.352,3109,4.352,3110,4.352,3111,4.352,3112,4.352,3113,4.352,3114,4.352,3115,4.352,3116,4.352,3117,4.352,3118,4.352,3119,4.352,3120,4.352,3121,4.352,3389,3.902,3407,8.032,3408,4.678,3411,5.41,3415,5.154,3416,9.05,3417,9.966,3418,9.05,3419,7.452,3420,7.452,3421,5.507]],["title/modules/custom/#telethon.tl.custom.button.Button.switch_inline",[3374,5.51]],["text/modules/custom/#telethon.tl.custom.button.Button.switch_inline",[4,0.586,22,1.237,28,2.492,44,1.264,54,3.428,66,3.603,84,3.552,102,2.525,135,1.058,171,4.753,185,3.181,188,3.232,223,1.406,274,4.329,277,2.476,291,3.318,294,4.497,301,3.603,331,4.753,343,3.954,422,3.618,450,1.745,491,2.665,553,6.471,772,4.439,1064,3.742,1268,1.573,1537,5.945,1609,5.462,1610,7.03,1952,4.063,2202,4.139,2303,4.307,2326,4.307,2556,4.227,2950,4.501,2951,4.501,2952,4.307,2953,4.4,2954,4.4,2955,4.4,2956,4.4,2957,4.4,3374,5.64,3384,4.612,3389,4.501,3422,9.573,3423,5.64]],["title/modules/custom/#telethon.tl.custom.button.Button.text",[301,2.336]],["text/modules/custom/#telethon.tl.custom.button.Button.text",[4,0.592,9,1.983,22,1.058,25,3.642,28,2.247,46,3.232,54,3.091,63,1.703,84,3.903,98,3.389,102,2.775,135,0.905,161,7.399,185,2.11,223,1.202,239,2.68,301,3.737,309,4.811,364,2.255,450,2.029,478,3.811,495,3.767,518,3.811,564,5.658,595,5.899,618,6.272,892,4.109,964,4.905,1166,3.095,1268,1.345,1537,7.209,1623,4.412,1966,5.36,2120,7.718,2556,3.811,2978,5.553,2979,2.68,3061,3.763,3062,3.763,3063,3.763,3064,4.163,3305,3.683,3306,3.683,3307,3.683,3308,3.763,3309,3.683,3310,3.683,3311,3.683,3312,3.683,3313,3.763,3314,3.763,3315,3.849,3316,3.763,3317,3.849,3318,3.763,3319,3.763,3320,3.849,3321,3.849,3352,6.909,3389,3.849,3407,7.994,3408,4.615,3411,5.36,3424,9.707,3425,3.944,3426,4.615]],["title/modules/custom/#telethon.tl.custom.button.Button.url",[338,3.713]],["text/modules/custom/#telethon.tl.custom.button.Button.url",[4,0.583,22,1.36,28,2.646,44,1.341,54,3.639,84,4.298,102,2.681,107,3.577,135,1.163,223,1.545,294,4.774,301,3.837,330,5.514,338,6.427,450,1.918,650,6.477,772,4.713,1166,2.226,1268,1.729,1568,6.311,1609,4.541,1807,4.733,1852,4.946,1896,4.733,1949,4.637,2556,4.487,2959,5.068,2960,4.835,2961,4.835,2962,4.946,2963,5.201,2964,5.068,3384,5.068,3389,4.946,3427,6.197]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter",[921,4.624]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter",[4,0.457,34,2.5,198,4.097,230,4.097,277,2.566,368,3.583,523,5.157,525,4.38,1184,5.332,1187,6.503,1247,6.322,2611,6.013]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat",[277,1.876]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat",[4,0.503,34,2.312,44,1.591,58,2.88,61,2.404,102,2.42,107,4.1,162,2.644,221,2.761,223,1.737,224,3.343,276,2.268,277,3.013,482,3.314,523,4.769,525,4.051,540,4.555,800,3.178,801,2.977,927,5.561,1166,2.502,1187,6.014,1218,6.666]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id",[525,3.203]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id",[0,3.674,4,0.423,44,1.211,63,1.886,107,3.229,109,2.572,187,4.254,188,3.097,223,1.737,224,3.343,241,4.427,253,3.75,276,2.698,277,3.185,292,3.533,351,2.908,422,3.467,478,4.051,525,4.051,934,6.967,941,5.213,1391,5.02,1452,4.848,1772,5.113,2064,5.697,2242,6.666,2664,6.201,3428,7.848]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat",[1187,4.756]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat",[4,0.437,38,2.502,42,3.551,44,1.252,63,1.535,109,2.659,115,4.289,176,3.338,225,3.396,270,3.687,277,2.453,292,3.652,312,4.206,398,4.237,512,3.687,542,3.652,717,5.228,800,2.587,810,6.411,822,7.202,832,6.217,886,4.577,897,5.619]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel",[3429,5.51]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel",[63,1.646,292,3.917,491,2.832,801,3.3,1155,6.165]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group",[3430,5.808]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group",[4,0.454,63,1.594,176,3.467,223,1.865,279,4.689,292,3.793,471,4.891,491,2.742,877,5.295,886,4.754,1155,5.971,1166,2.687,2382,7.157,3431,7.885]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private",[929,5.51]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private",[4,0.454,63,1.842,176,3.467,223,1.865,292,3.793,471,4.891,491,2.742,877,5.295,886,4.754,1166,2.687,1452,5.206,2382,7.157,3431,7.885]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat",[523,3.772]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat",[4,0.601,21,1.812,22,1.152,24,2.376,34,2.303,36,2.542,44,1.437,52,2.579,58,2.875,66,2.942,74,3.36,107,3.832,114,2.243,135,0.985,152,2.875,176,2.434,221,3.276,223,1.937,236,3.696,276,2.259,277,3.008,454,2.373,523,3.594,524,3.929,525,4.034,619,4.35,787,3.693,816,3.484,823,4.35,843,3.783,1149,4.407,1158,5.99,1166,2.492,1184,5.501,1268,1.465,1390,4.674,2923,5.024,2924,5.024,2925,5.024,2926,5.024,2927,5.024,2928,5.024,2929,5.024,2930,4.407,2931,4.674,2932,4.674,2933,4.674,2934,4.674,2935,4.407,2936,4.674,2937,4.674,2938,4.674,2939,4.674,3432,5.534,3433,8.268,3434,5.251,3435,2.95,3436,4.407,3437,5.915]],["title/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat",[1184,3.9]],["text/modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat",[4,0.602,21,2.463,22,1.202,33,3.149,52,2.653,66,3.025,74,3.455,114,2.341,135,1.028,152,2.957,172,2.236,221,2.828,223,1.978,236,3.802,274,3.263,275,5.047,276,1.784,277,2.703,430,2.806,454,2.477,473,3.879,521,2.27,525,4.149,542,3.619,618,6.828,619,4.473,787,3.724,823,4.473,830,5.244,939,3.435,948,4.185,1064,3.636,1166,1.968,1184,3.879,1187,6.85,1268,1.529,1949,4.101,1952,3.948,2202,4.022,2303,4.185,2326,4.185,2950,4.374,2951,4.374,2952,4.185,2953,4.276,2954,4.276,2955,4.276,2956,4.276,2957,4.276,2958,4.599,2959,4.481,2960,4.276,2961,4.276,3432,5.776,3433,5.48,3435,4.009,3436,5.989,3438,9.47,3439,4.599]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation",[841,3.322]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation",[28,2.428,36,3.429,44,1.231,54,3.34,58,2.305,63,1.51,226,4.27,233,2.633,246,4.381,277,2.85,339,5.393,343,3.852,379,5.103,591,5.3,637,4.849,711,4.772,841,5.55,964,5.3,1298,5.3,1514,5.526,1610,5.198,2011,5.653,3440,7.978,3441,7.978,3442,7.978]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__",[3443,6.207]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__",[4,0.6,8,2.536,21,2.98,22,1.64,44,1.024,99,2.661,135,1.105,223,1.468,226,3.551,251,5.117,305,4.889,306,3.908,318,4.685,578,5.889,581,6.452,623,5.423,731,5.832,743,3.346,787,3.558,890,6.112,983,4.322,1268,1.643,1658,6.273,2011,5.966,3061,4.595,3062,4.595,3063,4.595,3309,4.497,3310,4.497,3311,4.497,3312,4.497,3313,4.595,3314,4.595,3315,4.7,3316,4.595,3317,4.7,3318,4.595,3319,4.595,3320,4.7,3321,4.7,3331,5.242,3378,7.878,3425,4.816,3435,3.309,3444,4.595,3445,6.634,3446,6.634]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.cancel",[1573,4.506]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.cancel",[4,0.576,22,1.462,24,2.466,34,2.677,135,1.25,221,3.197,343,4.388,549,6.277,743,4.584,787,3.22,841,4.865,1268,1.858,1573,7.097,1822,8.068,2011,6.44,3243,6.135,3244,6.135,3245,6.135,3246,6.135,3247,6.135,3248,6.135,3249,6.135,3250,6.135,3444,5.198,3447,9.088,3448,9.088,3449,7.504]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all",[3450,5.808]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all",[4,0.595,21,2.102,22,1.336,24,2.549,34,2.533,44,1.327,58,2.485,65,6.243,109,2.818,135,1.143,152,3.163,221,3.025,277,2.978,525,4.439,672,7.031,731,5.957,787,3.49,841,4.603,908,5.501,1268,1.699,1573,6.819,1658,6.408,2046,7.305,3252,5.609,3253,5.609,3254,5.609,3255,5.609,3256,5.609,3257,5.609,3258,5.609,3259,5.609,3260,5.609,3261,5.609,3435,4.289,3436,5.112,3444,4.752,3450,6.42,3451,5.422,3452,6.861]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit",[3453,5.808]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit",[4,0.61,22,0.968,24,2.172,44,0.767,63,1.64,83,3.021,135,0.828,171,2.885,185,1.931,223,1.772,240,4.092,253,2.375,265,2.73,276,1.437,305,2.304,351,1.842,352,4.221,355,3.918,373,3.974,435,6.619,438,3.127,446,4.811,549,3.071,559,3.068,745,2.566,758,3.81,787,3.561,978,2.176,1062,3.704,1158,3.81,1166,2.553,1250,5.892,1268,1.231,1663,7.693,1789,4.614,2064,3.609,3091,3.928,3092,3.928,3093,3.928,3094,3.928,3095,3.928,3096,4.223,3097,4.223,3098,3.928,3099,3.928,3137,4.064,3138,4.064,3139,3.928,3140,3.928,3141,3.928,3142,3.928,3143,3.928,3144,3.928,3145,3.928,3146,3.928,3147,3.928,3148,3.928,3149,3.928,3150,3.928,3151,3.81,3152,3.928,3153,3.928,3435,2.48,3444,3.443,3453,4.652,3454,5.9,3455,4.223,3456,6.166,3457,8.839,3458,4.652,3459,8.005,3460,6.946,3461,9.118,3462,4.652,3463,8.532,3464,4.413,3465,4.971,3466,6.946,3467,4.413]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply",[3468,5.808]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply",[0,4.092,4,0.604,22,1.372,25,4.312,63,1.881,83,5.312,135,1.173,223,1.559,351,3.239,758,5.396,787,3.522,920,6.054,1166,2.787,1250,5.312,1268,1.744,1744,5.926,1789,5.807,3061,4.878,3062,4.878,3063,4.878,3318,4.878,3319,4.878,3320,4.99,3321,4.99,3425,5.112,3444,4.878,3468,6.59,3469,6.59,3470,7.042,3471,7.042,3472,7.425,3473,5.247]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.get_response",[3454,5.272]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.get_response",[0,3.606,4,0.6,9,2.112,22,1.127,63,2.014,83,4.682,126,2.854,135,0.964,146,5.222,147,4.023,185,3.363,223,1.281,239,2.854,276,2.226,292,3.468,351,2.855,364,2.401,370,4.346,373,4.407,450,1.59,491,1.883,496,5.336,549,4.759,758,4.434,787,3.272,841,4.123,1166,2.944,1250,3.516,1268,1.433,1623,3.501,1744,5.222,1772,5.019,1789,6.809,1824,5.019,2309,5.903,2430,4.272,2480,6.839,2976,5.137,2979,2.854,3296,4.1,3297,4.311,3298,4.311,3299,4.311,3300,4.311,3301,4.434,3302,4.311,3303,4.311,3304,4.1,3305,3.923,3306,3.923,3307,3.923,3308,4.008,3309,3.923,3310,3.923,3311,3.923,3312,3.923,3313,4.008,3314,4.008,3315,4.1,3316,4.008,3444,4.008,3454,4.915,3469,5.414,3472,4.915,3474,7.703,3475,5.786,3476,5.786,3477,5.786,3478,5.786]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read",[3479,5.272]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read",[4,0.603,22,1.19,40,4.329,63,2.065,103,5.108,135,1.018,171,4.635,221,2.809,223,1.352,276,2.726,379,5.108,528,4.222,589,2.699,787,3.468,831,6.119,978,2.674,1166,3.008,1176,3.048,1242,4.33,1268,1.513,1391,6.033,1979,6.783,1980,6.783,2430,3.014,2556,4.121,2972,4.33,2973,4.33,2974,4.33,2975,4.33,3291,4.232,3292,4.33,3293,4.33,3294,4.33,3325,4.33,3326,4.33,3327,4.33,3328,4.33,3329,4.33,3330,4.33,3379,4.33,3390,4.552,3391,4.682,3392,4.552,3402,3.981,3435,3.048,3436,4.552,3444,4.232,3462,7.472,3479,5.19,3480,5.424,3481,5.19,3482,5.19]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.send_file",[298,4.123]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.send_file",[4,0.606,21,1.931,22,1.228,24,1.71,74,3.502,135,1.05,137,2.094,139,2.416,162,2.745,188,3.216,214,3.216,223,1.395,276,2.354,292,4.449,297,4.273,298,5.413,521,2.997,558,2.981,589,2.784,731,5.644,759,5.644,787,3.502,833,4.273,841,4.361,939,3.507,1176,3.144,1268,1.561,1581,6.071,1589,4.273,1597,4.366,1613,4.575,1639,4.187,1679,4.107,1807,4.273,2423,5.413,2675,5.413,2965,4.273,2966,4.187,2967,4.366,2968,4.366,2969,4.273,2970,4.466,2971,4.696,2979,4.019,3435,3.144,3436,4.696,3444,4.366,3480,5.595,3483,8.449,3484,5.898,3485,5.898]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.send_message",[13,2.692]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.send_message",[4,0.606,13,3.534,21,1.931,22,1.228,24,1.71,63,1.542,74,3.502,135,1.05,137,2.094,162,2.745,188,3.216,214,3.216,223,1.395,276,2.354,292,4.449,297,4.273,521,2.997,558,2.981,589,2.784,731,5.644,759,5.644,787,3.502,841,4.361,867,5.644,1176,3.144,1268,1.561,1852,4.466,1896,4.273,1949,4.187,1952,4.031,2423,5.413,2675,5.413,2953,4.366,2954,4.366,2955,4.366,2956,4.366,2957,4.366,2958,4.696,2959,4.575,2960,4.366,2961,4.366,2962,4.466,2963,4.696,2979,4.019,3435,3.144,3436,4.696,3444,4.366,3480,5.595,3483,8.449,3484,5.898,3485,5.898]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event",[3486,5.808]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event",[4,0.605,6,1.795,7,3.266,8,3.971,12,1.85,13,1.75,18,2.342,21,2.574,22,1.387,24,2.388,28,1.819,34,1.761,44,1.358,45,1.727,46,4.093,63,1.131,69,1.543,74,2.569,94,2.459,99,2.398,109,1.959,115,3.16,116,3.16,127,3.971,135,1.186,162,2.014,223,0.893,227,2.77,234,2.028,260,2.856,305,1.87,312,2.641,319,3.51,348,2.182,377,4.14,387,2.827,390,3.326,428,3.633,435,5.168,446,5.452,450,1.109,470,2.414,471,3.469,482,2.524,491,1.313,504,3.049,512,2.717,549,5.778,558,2.827,559,2.641,589,1.783,619,3.326,710,3.575,787,3.118,798,5.864,841,3.81,886,3.372,908,2.581,926,5.714,936,4.58,958,3.633,986,3.092,1099,3.42,1166,1.287,1176,2.013,1268,0.999,1570,3.299,1744,4.052,1789,5.229,1824,3.895,2046,6.686,2053,4.887,2064,2.93,3032,3.299,3033,3.299,3034,3.299,3035,3.299,3036,3.583,3037,3.583,3038,3.299,3039,3.299,3040,3.299,3052,3.299,3053,3.299,3054,3.299,3055,3.299,3056,3.299,3057,3.299,3058,3.299,3059,3.299,3166,3.299,3167,3.299,3168,3.299,3169,3.299,3170,3.299,3171,3.299,3172,3.299,3173,3.299,3174,3.299,3175,3.092,3191,3.299,3192,3.299,3193,3.299,3194,3.299,3195,3.299,3196,3.299,3197,3.299,3198,3.299,3199,3.299,3200,3.299,3201,3.299,3202,3.299,3435,2.981,3444,2.795,3454,5.077,3456,5.306,3464,3.583,3467,3.583,3486,7.365,3487,3.583,3488,3.583,3489,3.583,3490,4.036,3491,4.036,3492,7.119,3493,5.977,3494,5.977]],["title/modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read",[3495,5.808]],["text/modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read",[4,0.606,22,1.141,24,2.107,40,4.258,63,1.877,109,2.545,135,0.975,223,1.719,283,3.673,292,3.496,305,2.715,435,6.324,440,3.711,498,5.637,528,4.105,549,5.731,559,3.431,589,2.587,717,4.264,787,3.686,1166,2.778,1268,1.45,1391,4.967,1789,5.159,1824,5.06,2498,4.488,2838,6.596,3042,4.628,3043,4.628,3044,4.788,3045,4.788,3046,4.788,3047,4.788,3048,4.788,3049,4.788,3050,4.788,3155,4.628,3156,4.628,3157,4.628,3158,4.628,3159,4.975,3160,4.975,3161,4.628,3435,2.921,3444,4.057,3456,6.894,3457,9.033,3458,5.48,3464,5.199,3467,5.199,3495,5.48,3496,4.975,3497,8.712,3498,7.766]],["title/modules/custom/#telethon.tl.custom.dialog.Dialog",[274,3.281]],["text/modules/custom/#telethon.tl.custom.dialog.Dialog",[4,0.537,9,3.485,28,2.48,38,1.586,42,2.251,63,1.887,102,2.513,109,2.671,137,2.708,152,2.615,180,4.127,185,1.997,187,3.854,188,2.029,192,5.24,217,2.509,221,2.501,223,1.138,224,2.19,227,2.383,239,2.537,267,1.95,274,5.56,276,2.355,277,2.464,279,2.861,292,3.201,343,3.433,346,3.433,364,2.134,368,3.002,369,3.74,373,4.663,446,5.645,447,3.486,449,2.984,450,1.413,458,3.733,474,4.565,491,2.652,503,3.232,518,3.67,521,3.668,542,3.201,629,3.486,711,3.076,715,4.188,772,2.787,800,2.804,801,3.501,803,2.686,841,2.752,842,3.831,892,2.861,927,5.038,928,3.076,938,3.076,1046,3.627,1076,4.204,1099,2.942,1100,3.561,1155,3.643,1166,2.267,1391,3.289,1438,4.204,1487,4.368,1493,3.831,1565,4.565,1569,5.449,1673,5.31,1721,4.565,1751,5.813,2360,3.177,2430,4.021,2978,5.281,3429,4.565,3430,4.811,3439,3.831,3499,4.063,3500,5.142,3501,5.142,3502,7.626,3503,5.142,3504,7.11,3505,5.142,3506,5.142,3507,5.142]],["title/modules/custom/#telethon.tl.custom.dialog.Dialog.archive",[1751,5.074]],["text/modules/custom/#telethon.tl.custom.dialog.Dialog.archive",[4,0.601,9,2.117,21,1.777,22,1.13,24,1.574,44,1.191,53,3.021,69,2.949,126,2.861,135,1.444,185,2.253,223,1.919,224,2.471,234,1.968,239,3.806,274,5.231,364,2.407,378,2.861,385,4.353,450,2.382,488,2.07,589,3.409,787,3.072,978,2.539,1242,4.11,1268,1.436,1487,8.577,1577,4.742,1619,8.404,1751,8.837,1752,5.149,2126,5.149,2430,3.806,2979,2.861,3291,4.018,3292,4.11,3293,4.11,3294,4.11,3295,4.211,3296,4.11,3297,4.321,3298,4.321,3299,4.321,3300,4.321,3301,4.445,3302,4.321,3303,4.321,3304,4.11,3305,3.932,3306,3.932,3307,3.932,3325,4.11,3326,4.11,3327,4.11,3328,4.11,3329,4.11,3330,4.11,3379,4.11,3392,4.321,3435,2.893,3439,4.321,3502,5.428,3508,7.716,3509,5.149,3510,5.8,3511,5.8,3512,5.8]],["title/modules/custom/#telethon.tl.custom.dialog.Dialog.delete",[506,3.364]],["text/modules/custom/#telethon.tl.custom.dialog.Dialog.delete",[4,0.594,21,2.055,22,1.306,24,1.82,34,1.976,74,3.644,135,1.117,188,3.346,214,3.855,274,5.164,277,2.028,291,3.503,346,4.094,347,7.6,348,2.448,376,5.955,430,3.049,503,3.049,506,5.461,512,3.049,521,3.593,595,4.076,743,3.383,787,3.294,801,3.216,1268,1.661,1559,4.646,1589,4.547,1597,4.646,1613,4.869,1616,7.202,1617,5.955,1651,5.3,1823,7.527,2423,5.632,2535,4.998,2969,4.547,2970,4.753,2971,4.998,2972,4.753,2973,4.753,2974,4.753,2975,4.753,3390,4.998,3435,3.346,3509,5.955,3513,6.708,3514,5.955]],["title/modules/custom/#telethon.tl.custom.dialog.Dialog.send_message",[13,2.692]],["text/modules/custom/#telethon.tl.custom.dialog.Dialog.send_message",[4,0.601,13,3.869,21,2.229,22,1.417,24,1.975,63,1.688,73,6.178,135,1.212,162,3.006,223,1.611,274,4.716,787,3.418,833,4.933,939,4.05,1268,1.802,1639,4.834,1679,4.741,1821,7.048,2675,6.679,2965,4.933,2966,4.834,2967,5.04,2979,4.96,3435,3.63,3439,5.422,3509,6.46,3515,8.92]],["title/modules/custom/#telethon.tl.custom.draft.Draft",[1673,4.044]],["text/modules/custom/#telethon.tl.custom.draft.Draft",[4,0.412,9,2.792,25,3.773,38,2.358,49,3.732,61,2.343,63,1.739,105,3.258,185,2.97,192,4.81,221,2.69,223,1.693,231,4.314,239,3.773,276,2.21,290,5.08,364,3.174,368,3.882,369,3.51,450,2.101,453,5.297,503,3.476,548,3.732,629,5.185,715,5.415,803,3.994,1099,4.375,1100,5.297,1673,6.422,1909,5.297,2360,4.725,2430,3.773,2537,6.252,2978,4.375,3473,5.698,3499,6.043]],["title/modules/custom/#telethon.tl.custom.draft.Draft.entity",[521,2.283]],["text/modules/custom/#telethon.tl.custom.draft.Draft.entity",[102,2.673,274,4.583,277,2.621,521,3.189,801,3.288,927,6.143]],["title/modules/custom/#telethon.tl.custom.draft.Draft.input_entity",[3439,4.624]],["text/modules/custom/#telethon.tl.custom.draft.Draft.input_entity",[42,3.836,521,3.224,542,3.945]],["title/modules/custom/#telethon.tl.custom.draft.Draft.is_empty",[3516,6.207]],["text/modules/custom/#telethon.tl.custom.draft.Draft.is_empty",[49,4.246,186,5.375,1673,5.669,2535,6.483,2978,4.978]],["title/modules/custom/#telethon.tl.custom.draft.Draft.raw_text",[293,4.506]],["text/modules/custom/#telethon.tl.custom.draft.Draft.raw_text",[186,5.261,188,3.361,301,3.685,440,4.069,460,4.677,507,4.201,905,5.175,1673,6.381,2470,6.526]],["title/modules/custom/#telethon.tl.custom.draft.Draft.text",[301,2.336]],["text/modules/custom/#telethon.tl.custom.draft.Draft.text",[186,5.299,188,3.385,286,5.941,301,3.701,507,4.231,1673,6.407,3517,7.614]],["title/modules/custom/#telethon.tl.custom.draft.Draft.delete",[506,3.364]],["text/modules/custom/#telethon.tl.custom.draft.Draft.delete",[4,0.589,21,2.396,22,1.524,24,2.123,135,1.303,223,2.203,301,2.944,491,3.032,506,5.395,787,3.302,1080,6.942,1268,1.937,1673,6.071,3065,6.181,3066,5.828,3067,5.994,3068,5.994,3410,6.395,3518,6.395,3519,6.944]],["title/modules/custom/#telethon.tl.custom.draft.Draft.get_entity",[843,3.97]],["text/modules/custom/#telethon.tl.custom.draft.Draft.get_entity",[4,0.599,21,2.164,22,1.376,24,2.376,52,2.89,66,3.296,114,2.679,135,1.176,221,3.08,223,2.106,389,5.937,430,3.21,454,2.834,521,3.501,787,3.744,816,4.161,843,5.601,862,4.788,1268,1.749,2491,5.005,2503,5.005,2663,5.005,2714,5.005,2750,5.005,2802,4.892,2824,4.892,2945,5.127,2946,5.127,2947,5.127,2948,5.262,2949,5.262,3435,3.523,3518,5.774,3520,8.757,3521,7.063]],["title/modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity",[862,4.208]],["text/modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity",[4,0.577,21,2.321,22,1.475,34,2.232,52,3.239,66,3.694,135,1.262,221,3.453,223,2.172,233,2.5,246,4.16,348,2.765,389,6.197,418,5.499,787,3.239,862,5.136,900,4.68,1064,4.463,1268,1.876,2202,4.936,2303,5.136,2326,5.136,2817,5.247,2950,5.368,2951,5.368,2952,5.136,3439,7.314,3518,6.193]],["title/modules/custom/#telethon.tl.custom.draft.Draft.send",[162,2.091]],["text/modules/custom/#telethon.tl.custom.draft.Draft.send",[4,0.604,13,2.951,21,2.084,22,1.325,24,1.846,73,5.925,135,1.133,162,3.153,274,4.522,290,5.683,301,2.56,491,2.214,755,4.938,787,3.659,1268,1.685,1673,5.574,1821,6.759,1886,6.759,2255,6.344,2675,5.683,2687,6.555,2979,4.22,3061,4.712,3062,4.712,3063,4.712,3316,4.712,3317,4.82,3318,4.712,3319,4.712,3320,4.82,3321,4.82,3425,4.938,3435,3.393,3473,5.068,3518,5.561,3522,8.554,3523,6.366,3524,6.366]],["title/modules/custom/#telethon.tl.custom.draft.Draft.set_message",[3519,5.51]],["text/modules/custom/#telethon.tl.custom.draft.Draft.set_message",[4,0.604,21,1.314,22,0.835,24,1.696,25,3.083,28,1.902,44,0.964,61,1.914,63,1.63,87,3.681,89,5.859,105,3.452,135,0.714,188,2.467,219,1.692,223,1.632,224,2.662,276,1.806,290,6.445,293,5.353,301,3.759,429,3.681,477,5.109,491,2.034,503,2.84,521,2.712,545,4.072,548,3.05,576,3.141,629,4.999,715,2.526,755,6.739,787,3.579,806,2.386,978,3.547,1046,4.134,1080,4.656,1151,3.505,1152,3.505,1166,3.143,1242,3.038,1268,1.062,1443,3.927,1559,2.97,1589,2.907,1597,2.97,1613,3.113,1673,5.28,1885,7.638,1909,4.329,2255,5.494,2430,3.083,2743,3.807,2857,5.548,2968,2.97,2969,2.907,2970,3.038,2971,3.195,2972,3.038,2973,3.038,2974,3.038,2975,3.038,2978,4.636,3008,7.778,3291,2.97,3292,3.038,3293,3.038,3294,3.038,3295,3.113,3296,3.038,3297,3.195,3298,3.195,3299,3.195,3300,3.195,3301,3.286,3302,3.195,3303,3.195,3304,3.038,3305,2.907,3306,2.907,3307,2.907,3308,2.97,3309,2.907,3310,2.907,3311,2.907,3312,2.907,3313,2.97,3314,2.97,3325,3.038,3326,3.038,3327,3.038,3328,3.038,3329,3.038,3330,3.038,3379,3.038,3390,3.195,3391,3.286,3392,3.195,3435,3.117,3473,5.494,3518,3.505,3519,3.807,3523,4.012,3525,5.848,3526,6.25,3527,4.288,3528,4.288,3529,4.288,3530,4.288]],["title/modules/custom/#telethon.tl.custom.file.File",[139,1.84]],["text/modules/custom/#telethon.tl.custom.file.File",[3,2.677,4,0.437,49,4.646,92,4.455,163,3.519,170,4.441,189,5.04,195,3.652,230,3.917,233,2.677,267,3.077,312,3.584,343,3.917,368,3.426,387,3.837,561,4.398,938,4.853,1166,2.587,1623,3.687]],["title/modules/custom/#telethon.tl.custom.file.File.duration",[181,4.624]],["text/modules/custom/#telethon.tl.custom.file.File.duration",[147,4.561,181,6.506,182,5.307,782,5.92]],["title/modules/custom/#telethon.tl.custom.file.File.emoji",[2507,5.272]],["text/modules/custom/#telethon.tl.custom.file.File.emoji",[343,4.201,1086,4.657,1298,5.78,1542,5.468,2507,7.391]],["title/modules/custom/#telethon.tl.custom.file.File.ext",[3531,6.207]],["text/modules/custom/#telethon.tl.custom.file.File.ext",[9,3.108,44,1.314,139,2.904,450,2.691,1682,7.296,1709,7.109,1716,6.526]],["title/modules/custom/#telethon.tl.custom.file.File.height",[3532,5.272]],["text/modules/custom/#telethon.tl.custom.file.File.height",[152,3.189,163,3.76,170,3.693,182,5.269,3532,7.364,3533,8.113]],["title/modules/custom/#telethon.tl.custom.file.File.id",[276,1.793]],["text/modules/custom/#telethon.tl.custom.file.File.id",[4,0.578,44,1.235,51,3.728,52,2.641,102,2.468,109,2.623,115,4.994,129,2.502,139,2.98,234,2.716,276,2.313,329,5.482,331,4.646,870,4.58,882,5.672,1229,5.427,1298,5.318,1966,5.811,2057,6.325]],["title/modules/custom/#telethon.tl.custom.file.File.mime_type",[3534,4.756]],["text/modules/custom/#telethon.tl.custom.file.File.mime_type",[139,2.599,450,2.408,1682,6.53]],["title/modules/custom/#telethon.tl.custom.file.File.name",[9,2.266]],["text/modules/custom/#telethon.tl.custom.file.File.name",[3,2.892,9,3.199,139,2.599]],["title/modules/custom/#telethon.tl.custom.file.File.performer",[178,3.772]],["text/modules/custom/#telethon.tl.custom.file.File.performer",[178,5.346,296,7.472]],["title/modules/custom/#telethon.tl.custom.file.File.size",[184,4.123]],["text/modules/custom/#telethon.tl.custom.file.File.size",[139,2.599,184,5.822,1440,4.578]],["title/modules/custom/#telethon.tl.custom.file.File.sticker_set",[1548,5.51]],["text/modules/custom/#telethon.tl.custom.file.File.sticker_set",[139,2.58,800,2.774,927,6.165,1542,5.468,3363,8.142]],["title/modules/custom/#telethon.tl.custom.file.File.title",[180,3.602]],["text/modules/custom/#telethon.tl.custom.file.File.title",[180,5.106,296,7.472]],["title/modules/custom/#telethon.tl.custom.file.File.width",[3535,5.272]],["text/modules/custom/#telethon.tl.custom.file.File.width",[152,3.189,163,3.76,170,3.693,182,5.269,3533,8.113,3535,7.364]],["title/modules/custom/#telethon.tl.custom.forward.Forward",[888,3.834]],["text/modules/custom/#telethon.tl.custom.forward.Forward",[4,0.588,29,3.369,34,2.183,94,3.05,176,3.05,189,4.85,230,3.579,255,4.07,267,3.421,277,2.241,312,3.274,355,4.181,368,3.809,369,3.402,419,5.857,438,3.336,495,4.602,711,4.434,800,3.226,803,3.871,921,5.522,922,5.857,923,6.059,924,6.296,933,3.918,938,5.816,1099,4.24,1100,5.134,1711,6.58,3499,5.857,3536,9.468]],["title/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder",[1776,5.51]],["text/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder",[4,0.61,29,2.236,34,1.45,44,1.064,54,2.06,58,1.422,63,1.305,84,2.991,102,1.517,109,1.612,124,2.702,126,4.946,147,2.57,151,2.702,162,2.907,176,2.025,186,3.04,194,2.57,200,2.899,214,1.942,231,2.776,240,2.899,276,2.794,280,4.191,290,3.269,292,3.104,301,3.247,330,2.738,339,4.554,368,2.078,370,2.776,401,3.771,437,2.601,438,4.352,491,1.601,503,2.236,542,3.104,576,3.391,673,3.147,743,2.482,800,3.146,867,3.408,883,3.206,896,3.487,1041,5.449,1046,4.061,1086,2.634,1212,4.776,1440,2.57,1623,3.921,1794,4.368,1795,4.368,1828,4.411,1909,3.408,1945,4.023,2016,3.771,2088,4.368,2119,4.368,2153,4.18,2255,4.675,2426,4.776,2430,2.427,2611,3.487,2691,3.771,2978,3.945,3426,4.18,3537,4.921,3538,4.368,3539,4.921,3540,5.779,3541,4.368,3542,4.18,3543,4.368,3544,4.18,3545,4.023,3546,4.368,3547,4.18,3548,4.921,3549,4.368,3550,4.604,3551,4.921,3552,4.18,3553,4.921]],["title/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article",[3552,5.272]],["text/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article",[3,1.341,4,0.607,9,1.483,13,1.762,21,1.245,22,0.791,24,1.102,28,1.828,54,2.515,84,3.1,94,2.472,126,3.896,129,1.27,135,0.677,163,1.762,180,5.297,182,2.469,185,1.578,192,1.983,219,3.117,223,0.899,239,4.352,253,1.941,276,2.435,280,4.799,290,4.748,291,2.122,301,2.69,309,6.105,338,5.46,364,1.686,450,2.315,491,1.322,531,5.971,576,4.403,782,2.754,787,2.129,800,1.915,833,2.754,901,3.775,939,2.261,1021,4.073,1046,4.501,1064,2.393,1166,3.248,1268,1.006,1440,2.122,1593,4.476,1609,3.138,1623,3.589,1639,2.699,1679,2.647,1691,2.699,1807,2.754,1828,5.051,1852,2.879,1896,2.754,1915,2.754,1949,2.699,1952,2.599,2202,2.647,2255,4.846,2303,2.754,2326,2.754,2426,4.951,2462,3.027,2491,2.879,2503,2.879,2663,2.879,2687,6.994,2691,3.113,2714,2.879,2750,2.879,2802,2.814,2824,2.814,2944,3.113,2945,2.949,2946,2.949,2947,2.949,2948,3.027,2949,3.027,2950,2.879,2951,2.879,2952,2.754,2953,2.814,2954,2.814,2955,2.814,2956,2.814,2957,2.814,2958,3.027,2959,2.949,2960,2.814,2961,2.814,2962,2.879,2963,3.027,2964,2.949,2965,2.754,2966,2.699,2967,2.814,2968,2.814,2969,2.754,2970,2.879,2971,3.027,2979,2.004,2987,3.21,2991,3.21,2995,3.113,3355,2.949,3540,5.189,3545,3.322,3550,3.802,3552,7.493,3554,5.103,3555,6.007,3556,3.451,3557,7.897,3558,3.607,3559,3.451]],["title/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document",[3,2.048]],["text/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document",[3,3.051,4,0.609,9,1.135,13,1.349,21,0.953,22,0.606,24,1.644,28,1.491,36,2.105,53,1.218,54,2.05,63,0.588,84,2.628,94,2.015,114,1.18,126,2.989,135,0.518,139,2.464,162,1.65,163,2.124,170,3.54,180,4.823,182,2.977,185,1.902,186,1.921,189,3.729,192,1.518,223,0.688,239,3.918,276,2.161,280,3.682,290,4.025,291,3.59,301,3.127,309,3.191,351,1.815,364,1.291,378,1.534,419,3.87,438,2.205,440,1.486,450,2.752,454,1.248,491,1.972,492,3.254,576,4.005,782,3.321,787,2.436,901,3.078,983,2.027,1021,2.109,1046,4.051,1057,3.026,1086,1.665,1166,3.142,1176,1.551,1219,3.191,1268,0.77,1440,1.624,1493,2.317,1542,3.807,1580,5.267,1581,5.121,1609,2.558,1691,4.025,1828,3.876,1915,3.321,2008,2.543,2145,2.258,2247,1.989,2255,4.108,2363,5.729,2411,2.317,2426,4.197,2431,5.432,2691,2.383,2893,2.317,2979,1.534,2987,2.458,2991,2.458,3061,2.154,3062,2.154,3063,2.154,3064,2.383,3065,2.458,3066,2.317,3067,2.383,3068,2.383,3073,2.458,3074,2.543,3075,2.317,3076,2.317,3077,2.317,3078,2.317,3079,2.317,3080,2.317,3081,2.317,3082,2.383,3083,2.383,3084,2.383,3085,2.383,3086,2.543,3087,2.543,3088,2.543,3089,2.543,3090,2.543,3091,2.458,3092,2.458,3093,2.458,3094,2.458,3095,2.458,3096,2.642,3097,2.642,3098,2.458,3099,2.458,3104,2.458,3105,2.458,3106,2.458,3107,2.458,3108,2.458,3109,2.458,3110,2.458,3111,2.458,3112,2.458,3113,2.458,3114,2.458,3115,2.458,3116,2.458,3117,2.458,3118,2.458,3119,2.458,3120,2.458,3121,2.458,3122,2.543,3123,2.458,3124,2.458,3125,2.458,3126,2.458,3128,2.458,3129,2.458,3130,2.458,3131,2.458,3132,2.458,3133,2.458,3134,2.543,3135,2.458,3179,2.458,3180,2.458,3181,2.458,3182,2.458,3183,2.458,3184,2.458,3185,2.458,3186,2.458,3396,2.642,3410,2.543,3413,2.642,3425,2.258,3435,2.443,3455,2.642,3534,5.729,3540,4.399,3554,4.161,3556,2.642,3558,4.348,3559,2.642,3560,6.746,3561,6.874,3562,4.161,3563,4.898,3564,2.761,3565,6.432,3566,4.004,3567,2.91,3568,2.91,3569,2.91,3570,3.11]],["title/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game",[1828,3.97]],["text/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game",[4,0.609,9,3.019,13,2.294,21,1.62,22,1.03,24,1.435,28,2.206,44,1.119,54,3.035,84,3.588,135,0.881,185,2.054,192,2.581,223,1.171,239,2.609,276,2.694,280,5.027,290,5.495,291,2.763,301,3.113,342,4.816,364,2.195,450,2.445,491,1.721,576,4.102,787,2.569,1021,3.586,1046,3.699,1062,3.941,1166,3.071,1268,1.31,1440,2.763,1609,3.787,1828,6.423,2255,5.608,2426,5.729,2691,4.053,2979,2.609,2987,4.179,2991,4.179,3042,4.179,3043,4.179,3139,4.179,3140,4.179,3141,4.179,3142,4.179,3143,4.179,3144,4.179,3145,4.179,3146,4.179,3147,4.179,3148,4.179,3149,4.179,3150,4.179,3151,4.053,3152,4.179,3153,4.179,3154,4.324,3155,4.179,3156,4.179,3157,4.179,3158,4.179,3159,4.493,3160,4.493,3161,4.179,3496,4.493,3540,6.005,3556,4.493,3559,4.493,3571,9.323,3572,5.289]],["title/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo",[163,2.692]],["text/modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo",[4,0.611,9,1.568,13,1.863,21,1.316,22,0.837,24,2.003,28,1.904,54,2.619,63,0.813,84,3.202,114,1.629,126,2.119,135,0.715,139,2.754,163,3.903,170,3.672,185,1.668,192,2.096,223,0.951,239,2.119,276,2.491,280,4.486,290,4.904,291,2.244,301,2.778,364,1.783,378,2.119,438,2.817,450,2.552,454,1.723,491,2.402,492,4.157,576,3.833,787,2.874,1021,2.912,1057,3.866,1166,2.869,1176,2.142,1219,4.077,1242,3.044,1268,1.064,1440,2.244,1559,2.975,1580,4.795,1581,4.662,1589,2.912,1609,3.268,1828,4.722,2247,2.748,2255,5.004,2411,3.2,2426,5.113,2548,4.543,2691,3.292,2972,3.044,2973,3.044,2974,3.044,2975,3.044,2979,2.119,2987,3.394,2991,3.394,3291,2.975,3292,3.044,3293,3.044,3294,3.044,3295,3.118,3296,3.044,3297,3.2,3298,3.2,3299,3.2,3300,3.2,3301,3.292,3302,3.2,3303,3.2,3304,3.044,3305,2.912,3306,2.912,3307,2.912,3308,2.975,3309,2.912,3310,2.912,3311,2.912,3312,2.912,3313,2.975,3314,2.975,3315,3.044,3316,2.975,3317,3.044,3318,2.975,3319,2.975,3325,3.044,3326,3.044,3327,3.044,3328,3.044,3329,3.044,3330,3.044,3379,3.044,3390,3.2,3391,3.292,3392,3.2,3435,3.121,3540,5.359,3556,3.649,3559,3.649,3562,5.315,3565,7.589,3567,4.019,3568,4.019,3569,4.019,3573,4.295,3574,3.649,3575,4.295]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult",[3576,5.272]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult",[4,0.577,51,3.138,58,2.298,189,3.966,201,5.282,224,3.388,267,3.016,315,3.04,330,4.425,368,3.358,576,4.269,709,4.833,711,4.757,800,3,803,4.153,938,4.757,1099,4.549,1100,5.508,1537,5.773,1609,4.153,3499,6.284,3577,9.409]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description",[239,3.062]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description",[4,0.469,239,4.292,576,3.707,1166,2.774,1609,4.545]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document",[3,2.048]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document",[3,2.82,169,6.753,170,3.641,223,1.891,395,4.574,576,4.18,800,3.129,2687,6.549]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message",[63,1.174]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message",[221,3.028,253,4.113,292,3.875,330,4.79,576,3.667,800,2.745,1623,3.912,3578,8.608]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo",[163,2.692]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo",[163,3.707,169,6.753,170,3.641,223,1.891,395,4.574,576,4.18,800,3.129,1593,6.367]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title",[180,3.602]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title",[4,0.469,180,5.05,576,3.707,1166,2.774,1609,4.545]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type",[450,1.705]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type",[3,2.548,4,0.601,163,3.349,182,4.693,195,3.476,227,3.579,253,3.69,267,2.929,280,4.693,315,2.952,351,2.862,450,2.122,576,3.289,782,5.235,1623,3.509,1691,5.13,1828,4.939,1856,6.559,1915,5.235,3355,5.605,3545,6.313,3552,6.559,3558,6.855,3576,6.559,3579,7.722,3580,7.722]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url",[338,3.713]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url",[44,1.3,53,3.299,315,3.221,330,4.689,338,5.822,563,5.598,576,3.59,772,4.568,1175,6.889,1318,7.48,1609,4.401,1623,3.83,3581,8.426]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click",[330,3.454]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click",[4,0.602,9,1.554,21,1.304,22,0.829,24,1.687,25,3.067,51,3.187,63,1.957,126,3.984,129,1.943,135,0.709,162,3.022,185,3.336,188,2.454,192,2.078,223,0.942,239,2.1,276,2.334,277,1.88,291,5.14,292,3.635,330,4.087,364,1.767,378,2.1,445,4.764,450,1.17,455,4.632,491,2.023,503,4.077,521,3.668,576,3.946,619,3.46,666,3.557,710,3.719,755,6.236,787,3.178,806,2.369,862,2.886,911,5.083,928,3.719,939,2.369,1057,2.63,1089,4.13,1093,5.083,1117,3.907,1166,2.575,1242,3.017,1268,1.054,1397,6.787,1559,2.949,1589,2.886,1597,2.949,1613,3.091,1623,2.826,1639,2.828,1673,4.051,1679,2.774,1723,4.913,1793,6.602,1911,7.625,1914,5.519,1915,4.215,2430,3.067,2664,4.913,2692,5.519,2965,2.886,2966,2.828,2967,2.949,2968,2.949,2969,2.886,2970,3.017,2971,3.172,2972,3.017,2973,3.017,2974,3.017,2975,3.017,2978,5.132,2979,2.1,3291,2.949,3292,3.017,3293,3.017,3294,3.017,3295,3.091,3296,3.017,3297,3.172,3298,3.172,3299,3.172,3300,3.172,3325,3.017,3326,3.017,3327,3.017,3328,3.017,3329,3.017,3330,3.017,3379,3.017,3390,3.172,3391,3.262,3392,3.172,3435,3.663,3473,3.172,3524,8.038,3582,6.217,3583,3.984,3584,6.217,3585,3.616,3586,6.238,3587,4.257,3588,3.984,3589,4.257,3590,4.257]],["title/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media",[304,4.299]],["text/modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media",[3,3.405,4,0.601,21,2.078,22,1.321,24,1.841,73,5.914,95,4.786,135,1.13,163,4.254,170,3.638,171,4.956,223,1.501,304,5.914,576,3.638,787,3.656,1268,1.68,1623,3.881,1724,7.58,1725,7.253,1821,6.747,2675,5.672,2979,4.212,3302,5.054,3303,5.054,3304,4.807,3305,4.599,3306,4.599,3307,4.599,3308,4.699,3309,4.599,3310,4.599,3311,4.599,3312,4.599,3435,3.383,3583,6.348]],["title/modules/custom/#telethon.tl.custom.inlineresults.InlineResults",[3576,5.272]],["text/modules/custom/#telethon.tl.custom.inlineresults.InlineResults",[4,0.578,44,1.4,51,2.514,58,1.841,83,3.871,84,2.763,92,3.498,102,2.798,109,2.087,115,3.367,124,3.498,126,4.047,159,4.412,189,4.092,193,3.498,200,3.752,201,4.231,214,2.514,221,2.241,224,3.495,267,3.111,276,1.841,301,2.397,315,2.435,330,3.545,351,2.361,368,2.69,503,2.895,553,5.033,572,5.655,576,4.399,592,4.074,659,3.697,709,3.871,711,3.81,800,3.162,803,3.327,841,3.409,882,4.513,883,4.15,938,3.81,1046,3.25,1086,3.409,1090,4.513,1099,3.644,1100,4.412,1349,4.907,1452,3.935,1537,4.624,1609,3.327,1610,5.345,1623,4.124,1761,4.231,2004,5.655,2430,4.047,2535,4.746,2540,4.746,2978,3.644,3499,5.033,3576,5.411,3588,5.96,3591,9.074,3592,6.37,3593,6.37,3594,6.37,3595,5.655,3596,8.203,3597,6.37,3598,6.37,3599,6.37]],["title/modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid",[3595,5.51]],["text/modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid",[4,0.584,22,1.49,115,4.86,135,1.274,200,5.415,223,2.181,491,2.992,559,4.517,576,3.916,787,3.257,823,5.116,1021,5.185,1268,1.894,1349,5.499,2824,5.297,2944,5.861,2945,5.552,2946,5.552,2947,5.552,3595,6.789,3600,9.193,3601,7.648,3602,7.648]],["title/modules/custom/#telethon.tl.custom.message.Message",[63,1.174]],["text/modules/custom/#telethon.tl.custom.message.Message",[3,1.796,4,0.599,9,1.3,12,1.415,25,3.258,29,1.619,34,1.049,40,1.635,44,1.141,49,1.739,51,2.606,53,2.131,63,2.072,84,1.545,94,1.466,102,1.099,107,3.041,109,2.164,123,1.931,124,1.956,126,2.685,135,0.593,162,1.834,163,2.864,167,2.01,170,3.392,182,3.307,186,3.362,187,1.931,195,1.604,200,2.099,214,2.606,224,2.318,227,3.061,230,3.188,253,3.532,255,1.956,267,2.804,276,2.301,277,2.407,279,1.983,287,3.026,292,4.155,297,3.689,301,1.341,309,2.321,315,2.08,340,2.201,349,3.951,352,4.013,365,1.777,368,2.298,369,2.498,373,2.038,384,1.574,429,3.206,438,1.604,445,2.73,447,5.398,449,2.068,450,1.495,454,2.183,455,2.654,490,3.769,491,1.159,495,2.776,503,4.093,504,1.817,521,2.002,629,4.477,649,2.73,666,2.038,695,1.931,715,3.206,800,3.097,801,3.02,806,3.028,855,2.654,856,2.73,857,2.654,877,4.15,883,2.321,885,3.481,888,4.919,892,3.675,894,2.068,921,2.654,922,2.815,923,2.912,924,3.026,927,2.524,928,2.131,933,1.883,938,3.255,983,3.546,1046,2.776,1086,1.907,1097,2.815,1099,2.038,1117,3.42,1154,5.366,1156,4.831,1164,3.163,1166,2.677,1219,2.321,1361,3.951,1391,2.279,1397,2.815,1452,2.201,1466,3.951,1467,2.524,1489,3.163,1493,4.055,1542,2.239,1609,1.861,1623,3.619,1691,2.367,1793,2.912,1824,3.546,1915,2.415,1920,3.163,1944,3.951,2064,3.951,2086,3.026,2164,3.163,2231,3.026,2242,3.026,2367,4.3,2430,4.141,2496,3.026,2895,3.163,2978,5.152,3373,3.026,3463,3.334,3473,2.654,3536,3.334,3603,3.563,3604,3.026,3605,3.563,3606,3.563,3607,3.563,3608,3.563,3609,5.442,3610,3.563,3611,3.563,3612,3.563,3613,3.163,3614,3.334,3615,3.563,3616,3.163,3617,5.442,3618,3.334,3619,3.563,3620,3.563,3621,3.563,3622,3.563,3623,3.563]],["title/modules/custom/#telethon.tl.custom.message.Message.action_entities",[3624,6.207]],["text/modules/custom/#telethon.tl.custom.message.Message.action_entities",[4,0.567,214,3.685,223,1.737,254,4.31,273,4.31,355,4.427,507,3.871,512,3.567,521,3.434,576,3.343,800,3.408,1048,5.02,1072,5.561,1166,2.977,1824,6.083,3625,7.848,3626,7.848,3627,7.848,3628,7.848,3629,7.848,3630,7.848,3631,7.848]],["title/modules/custom/#telethon.tl.custom.message.Message.audio",[782,4.208]],["text/modules/custom/#telethon.tl.custom.message.Message.audio",[3,2.85,63,1.635,139,2.561,152,3.177,170,3.68,782,5.856,800,2.755]],["title/modules/custom/#telethon.tl.custom.message.Message.button_count",[3632,6.207]],["text/modules/custom/#telethon.tl.custom.message.Message.button_count",[84,4.282,223,1.912,1066,6.826,1467,6.121,1860,6.826,3633,8.083]],["title/modules/custom/#telethon.tl.custom.message.Message.buttons",[84,2.692]],["text/modules/custom/#telethon.tl.custom.message.Message.buttons",[4,0.528,171,4.96,214,3.873,223,2.172,1166,2.725,3371,7.259,3372,7.587]],["title/modules/custom/#telethon.tl.custom.message.Message.client",[12,1.613]],["text/modules/custom/#telethon.tl.custom.message.Message.client",[4,0.444,7,3.425,34,2.833,44,1.273,52,2.723,63,1.561,190,4.592,222,5.098,223,1.826,230,3.985,267,3.13,346,3.985,374,6.521,447,5.595,512,3.751,814,4.417,905,5.015,1601,5.991,1623,3.751]],["title/modules/custom/#telethon.tl.custom.message.Message.contact",[280,3.772]],["text/modules/custom/#telethon.tl.custom.message.Message.contact",[63,1.646,152,3.2,280,5.288,800,2.774,3547,7.391]],["title/modules/custom/#telethon.tl.custom.message.Message.dice",[1583,5.272]],["text/modules/custom/#telethon.tl.custom.message.Message.dice",[63,1.64,152,3.189,800,2.764,1583,7.364,3634,7.697,3635,8.67]],["title/modules/custom/#telethon.tl.custom.message.Message.document",[3,2.048]],["text/modules/custom/#telethon.tl.custom.message.Message.document",[3,2.882,63,1.652,170,3.72,800,2.785]],["title/modules/custom/#telethon.tl.custom.message.Message.file",[139,1.84]],["text/modules/custom/#telethon.tl.custom.message.Message.file",[3,2.581,4,0.555,63,1.48,139,2.319,163,3.393,170,3.332,190,4.353,223,1.731,227,4.319,230,4.499,267,2.967,315,2.99,369,3.59,422,3.456,440,3.738,450,2.149,583,5.097,591,5.196,699,5.303,711,4.679,853,5.994,1166,2.971,1749,6.395,1828,5.003,2741,6.944,3636,7.822,3637,7.822,3638,6.944,3639,7.822,3640,7.822]],["title/modules/custom/#telethon.tl.custom.message.Message.forward",[888,3.834]],["text/modules/custom/#telethon.tl.custom.message.Message.forward",[63,1.872,176,3.567,888,6.112,1660,7.364]],["title/modules/custom/#telethon.tl.custom.message.Message.game",[1828,3.97]],["text/modules/custom/#telethon.tl.custom.message.Message.game",[63,1.64,152,3.189,170,3.693,800,2.764,1828,6.328]],["title/modules/custom/#telethon.tl.custom.message.Message.geo",[3540,4.506]],["text/modules/custom/#telethon.tl.custom.message.Message.geo",[63,1.646,170,3.707,800,2.774,3355,6.316,3542,7.391]],["title/modules/custom/#telethon.tl.custom.message.Message.gif",[1915,4.208]],["text/modules/custom/#telethon.tl.custom.message.Message.gif",[3,2.695,61,2.502,63,1.546,139,3.005,152,3.004,158,5.538,170,4.072,182,4.964,221,2.873,395,4.372,440,3.903,460,4.486,800,2.605,900,5.046,1576,6.678,1793,6.678,1915,6.87,3641,8.168]],["title/modules/custom/#telethon.tl.custom.message.Message.invoice",[3642,5.808]],["text/modules/custom/#telethon.tl.custom.message.Message.invoice",[63,1.646,152,3.2,800,2.774,3642,8.142,3643,8.701]],["title/modules/custom/#telethon.tl.custom.message.Message.is_reply",[493,5.51]],["text/modules/custom/#telethon.tl.custom.message.Message.is_reply",[4,0.521,25,4.773,63,1.99,195,3.754,224,3.552,255,4.579,267,3.163,276,2.41,351,3.09,491,2.714,494,6.39,3473,6.213]],["title/modules/custom/#telethon.tl.custom.message.Message.photo",[163,2.692]],["text/modules/custom/#telethon.tl.custom.message.Message.photo",[4,0.451,63,1.834,163,4.439,170,3.565,223,1.852,545,5.452,800,3.264,1824,5.452,1909,5.796,2367,6.612,3644,8.368]],["title/modules/custom/#telethon.tl.custom.message.Message.poll",[699,4.208]],["text/modules/custom/#telethon.tl.custom.message.Message.poll",[63,1.646,152,3.2,699,5.899,800,2.774,3645,8.701]],["title/modules/custom/#telethon.tl.custom.message.Message.raw_text",[293,4.506]],["text/modules/custom/#telethon.tl.custom.message.Message.raw_text",[4,0.519,63,1.823,105,3.528,187,4.489,188,3.268,301,3.116,340,5.116,447,5.614,460,4.547,521,3.046,800,2.641,905,5.033,1166,2.641,1211,5.033,1225,6.17,2367,6.544,3525,7.749]],["title/modules/custom/#telethon.tl.custom.message.Message.sticker",[1542,3.9]],["text/modules/custom/#telethon.tl.custom.message.Message.sticker",[3,2.861,63,1.64,152,3.189,170,3.693,800,2.764,1542,5.448]],["title/modules/custom/#telethon.tl.custom.message.Message.text",[301,2.336]],["text/modules/custom/#telethon.tl.custom.message.Message.text",[4,0.457,44,1.309,63,1.606,185,3.296,301,3.194,429,4.999,460,4.66,800,2.706,1166,2.706,1443,5.332,2122,6.937,2367,6.705]],["title/modules/custom/#telethon.tl.custom.message.Message.venue",[3545,5.074]],["text/modules/custom/#telethon.tl.custom.message.Message.venue",[63,1.646,152,3.2,800,2.774,3544,7.391,3545,7.113]],["title/modules/custom/#telethon.tl.custom.message.Message.via_bot",[3647,5.808]],["text/modules/custom/#telethon.tl.custom.message.Message.via_bot",[51,3.857,63,1.606,102,2.617,252,4.486,292,3.82,521,3.121,800,2.706,1117,5.332,1166,2.706,1623,3.857,3614,7.941]],["title/modules/custom/#telethon.tl.custom.message.Message.via_input_bot",[3648,5.808]],["text/modules/custom/#telethon.tl.custom.message.Message.via_input_bot",[4,0.469,223,1.926,542,3.917,890,6.316,3647,8.142]],["title/modules/custom/#telethon.tl.custom.message.Message.video",[182,3.772]],["text/modules/custom/#telethon.tl.custom.message.Message.video",[3,2.861,63,1.64,152,3.189,170,3.693,182,5.269,800,2.764]],["title/modules/custom/#telethon.tl.custom.message.Message.video_note",[2363,4.756]],["text/modules/custom/#telethon.tl.custom.message.Message.video_note",[3,2.85,63,1.635,109,2.831,152,3.177,170,3.68,182,5.25,800,2.755]],["title/modules/custom/#telethon.tl.custom.message.Message.voice",[1691,4.123]],["text/modules/custom/#telethon.tl.custom.message.Message.voice",[3,2.85,63,1.635,109,2.831,152,3.177,170,3.68,800,2.755,1691,5.739]],["title/modules/custom/#telethon.tl.custom.message.Message.web_preview",[2027,5.272]],["text/modules/custom/#telethon.tl.custom.message.Message.web_preview",[63,1.652,170,3.72,800,2.785,3190,7.752]],["title/modules/custom/#telethon.tl.custom.message.Message.click",[330,3.454]],["text/modules/custom/#telethon.tl.custom.message.Message.click",[1,1.615,4,0.607,9,0.917,21,0.769,22,0.489,24,2.651,63,1.759,69,2.006,84,4.478,107,1.697,109,1.351,114,0.953,135,0.418,162,1.39,172,0.91,185,0.975,188,1.628,194,2.154,217,3.519,221,1.451,223,2.03,230,1.213,234,2.447,239,1.239,240,3.578,267,0.953,276,0.726,294,2.265,301,3.676,330,5.799,364,1.042,378,1.239,384,1.822,427,2.638,430,1.874,450,0.69,454,1.008,475,2.922,488,1.472,491,1.342,497,5.164,532,2.994,588,2.207,589,1.822,631,3.371,743,3.383,787,3.143,806,1.398,816,1.48,831,3.16,883,2.687,918,3.16,978,2.936,984,2.591,1002,4.314,1028,2.506,1046,2.104,1066,1.985,1166,3.033,1184,1.578,1185,2.053,1237,6.401,1250,2.506,1268,0.622,1299,4.965,1440,2.154,1472,1.74,1960,3.661,1961,3.661,1988,3.259,2048,3.661,2101,1.925,2118,3.073,2282,2.053,2309,3.16,2336,6.307,2346,3.16,2430,3.309,2979,1.239,3371,3.503,3372,3.661,3400,2.133,3435,2.057,3436,1.871,3633,7.128,3649,7.617,3650,4.124,3651,4.124,3652,3.503,3653,4.124,3654,6.074,3655,6.074,3656,6.074,3657,6.074,3658,6.074,3659,4.124,3660,4.124,3661,4.124,3662,4.124,3663,4.124,3664,4.124,3665,2.512,3666,1.703,3667,2.23,3668,2.23,3669,2.23,3670,2.23,3671,2.23,3672,2.23,3673,2.23,3674,2.23,3675,2.23,3676,2.512,3677,2.512,3678,2.23,3679,2.23,3680,2.23,3681,2.23,3682,2.512,3683,2.512,3684,2.23,3685,2.23,3686,2.23,3687,2.23,3688,2.512,3689,2.512,3690,2.23,3691,2.23,3692,2.23,3693,2.23,3694,2.512,3695,2.512,3696,2.23,3697,2.23,3698,2.23,3699,2.23,3700,2.23,3701,2.23,3702,2.23,3703,2.23,3704,2.23,3705,2.512,3706,2.512,3707,2.23,3708,2.23,3709,2.23,3710,2.23,3711,2.23,3712,2.23,3713,2.23,3714,2.23,3715,2.512,3716,2.512,3717,2.23,3718,2.23,3719,2.23,3720,2.23,3721,2.23,3722,2.23,3723,2.23,3724,2.23,3725,2.23,3726,2.23,3727,2.23,3728,2.23,3729,2.23,3730,2.23,3731,2.23,3732,2.23,3733,2.23,3734,2.23,3735,2.23,3736,2.23,3737,2.23,3738,2.23,3739,2.23,3740,2.512,3741,2.512,3742,2.23,3743,2.23,3744,2.23,3745,2.23,3746,2.23,3747,2.23,3748,2.23,3749,2.23,3750,2.23,3751,2.23,3752,2.23,3753,2.23,3754,2.23,3755,2.23,3756,2.23,3757,2.23,3758,2.23,3759,2.23,3760,2.23,3761,2.23,3762,2.512,3763,2.512,3764,2.512,3765,2.512,3766,2.512,3767,2.512,3768,2.512,3769,2.512,3770,2.512,3771,2.512,3772,2.512,3773,2.512,3774,2.512,3775,2.512,3776,2.512,3777,2.512,3778,2.512,3779,2.512,3780,2.512,3781,2.512,3782,2.512,3783,2.512,3784,2.512,3785,2.512,3786,2.35,3787,2.133,3788,2.512,3789,6.074,3790,2.35]],["title/modules/custom/#telethon.tl.custom.message.Message.delete",[506,3.364]],["text/modules/custom/#telethon.tl.custom.message.Message.delete",[4,0.596,21,1.872,22,1.19,24,2.167,34,2.352,44,1.455,58,2.307,63,1.785,74,3.432,98,3.665,135,1.018,171,4.635,172,2.893,188,3.152,223,1.352,233,2.635,276,1.766,294,4.385,348,2.915,351,2.959,369,3.665,374,6.31,454,3.204,482,3.372,502,3.665,503,3.629,506,5.544,521,2.937,549,4.933,778,5.949,787,3.468,951,6.119,1184,3.84,1268,1.513,1480,5.424,1592,6.528,2423,5.305,2557,4.552,2675,5.305,2979,3.939,3435,3.983,3666,4.142,3791,6.11,3792,6.11,3793,6.11,3794,6.11,3795,6.11,3796,6.11,3797,6.11,3798,6.11,3799,6.11,3800,6.11,3801,6.11,3802,6.11,3803,6.11,3804,6.11,3805,6.11,3806,6.11]],["title/modules/custom/#telethon.tl.custom.message.Message.download_media",[304,4.299]],["text/modules/custom/#telethon.tl.custom.message.Message.download_media",[4,0.6,21,2.203,22,1.4,24,1.951,63,1.895,74,3.806,95,4.321,135,1.197,170,3.772,188,3.495,223,1.591,304,6.133,507,4.368,787,3.548,1268,1.781,1725,7.521,2423,5.882,2675,5.882,2979,4.368,3435,4.416,3666,4.874,3807,7.19,3808,7.19,3809,7.19,3810,7.19,3811,7.19,3812,7.19,3813,7.19,3814,7.19]],["title/modules/custom/#telethon.tl.custom.message.Message.edit",[352,3.772]],["text/modules/custom/#telethon.tl.custom.message.Message.edit",[4,0.602,21,1.474,22,0.937,24,1.842,49,3.313,53,2.658,63,1.982,74,2.918,84,3.705,109,2.225,129,2.121,135,0.801,152,2.497,171,3.94,185,2.636,188,3.372,223,1.891,231,4.819,234,2.304,276,1.391,277,1.455,290,4.51,319,3.027,346,2.323,351,2.516,352,5.838,384,2.126,422,2.999,456,3.884,490,4.702,491,2.209,521,2.497,540,2.793,650,5.058,695,3.68,787,3.535,826,4.81,840,2.878,918,5.202,1166,2.508,1184,3.024,1268,1.192,1514,4.702,1601,3.493,1652,5.766,1653,7.257,1723,5.364,1744,4.602,1909,5.917,2027,4.088,2064,4.928,2212,6.027,2231,4.088,2418,3.934,2423,4.51,2675,6.21,2978,2.753,2979,3.349,3373,4.088,3435,3.386,3666,3.262,3815,6.789,3816,4.812,3817,4.812,3818,4.272,3819,4.812,3820,4.812,3821,4.812,3822,4.812,3823,4.812,3824,4.812,3825,4.812,3826,4.812,3827,4.812,3828,4.812,3829,4.812,3830,4.812,3831,4.812,3832,4.812,3833,4.812,3834,4.812,3835,4.812,3836,4.812,3837,4.812,3838,4.812,3839,4.812,3840,4.812,3841,4.812,3842,4.812,3843,4.812,3844,4.812,3845,4.812,3846,4.812,3847,4.812,3848,4.812,3849,4.812,3850,4.812,3851,4.812,3852,4.812]],["title/modules/custom/#telethon.tl.custom.message.Message.forward_to",[3853,5.808]],["text/modules/custom/#telethon.tl.custom.message.Message.forward_to",[4,0.601,21,1.916,22,1.218,24,2.2,34,2.388,44,1.468,58,2.343,63,1.946,74,3.484,98,3.72,135,1.041,188,3.2,223,1.384,233,2.675,276,1.807,294,4.452,348,2.959,351,3.004,369,3.72,374,6.406,695,4.394,787,3.494,888,5.879,1184,3.93,1268,1.549,1655,6.627,2423,5.385,2675,6.322,2979,3.999,3435,4.043,3666,4.24,3853,8.417,3854,8.995,3855,5.552,3856,5.552,3857,5.552,3858,5.552,3859,5.552,3860,6.253,3861,6.253,3862,5.552,3863,5.552,3864,5.552,3865,5.552,3866,5.552,3867,5.552,3868,5.552,3869,5.552]],["title/modules/custom/#telethon.tl.custom.message.Message.get_buttons",[1185,5.074]],["text/modules/custom/#telethon.tl.custom.message.Message.get_buttons",[4,0.604,21,2.01,22,1.278,24,2.269,44,1.012,51,3.632,58,2.416,84,3.991,114,2.488,135,1.093,165,4.591,223,2.144,230,4.037,277,2.782,454,2.632,787,3.766,816,3.865,1098,6.606,1184,4.123,1185,5.364,1268,1.625,2995,5.028,3373,5.573,3648,6.139,3666,4.448,3790,6.139,3870,5.825,3871,5.825,3872,5.825,3873,5.825,3874,5.825,3875,5.825,3876,5.825,3877,5.825,3878,5.825,3879,5.825,3880,5.825,3881,5.825,3882,5.825,3883,5.825,3884,5.825,3885,5.825,3886,5.825,3887,8.361,3888,6.561,3889,6.561]],["title/modules/custom/#telethon.tl.custom.message.Message.get_entities_text",[3890,5.808]],["text/modules/custom/#telethon.tl.custom.message.Message.get_entities_text",[4,0.605,6,1.92,9,1.614,14,3.379,16,4.302,22,0.861,63,1.65,69,2.443,80,2.877,121,5.198,124,4.991,135,1.452,185,1.717,214,2.962,223,2.011,226,3.421,227,2.962,234,2.79,239,2.181,287,6.983,301,3.679,364,1.835,385,3.605,450,2.396,501,3.884,521,3.697,567,5.258,587,2.938,759,4.427,787,2.659,800,1.41,854,4.897,1046,3.26,1057,2.732,1166,2.038,1176,2.206,1219,4.164,1268,1.095,1292,3.063,1298,4.246,1761,2.938,1944,6.598,2197,3.926,2496,3.756,2570,6.721,2770,3.926,2979,2.181,3411,6.331,3618,7.693,3666,2.998,3890,5.98,3891,4.422,3892,9.777,3893,7.505,3894,4.422,3895,6.391,3896,6.391,3897,6.391,3898,6.391,3899,3.926,3900,3.926,3901,3.926,3902,3.926,3903,3.926,3904,3.926,3905,3.926,3906,3.926,3907,3.926,3908,3.926,3909,3.926,3910,3.926,3911,3.926,3912,3.926,3913,3.926,3914,3.926,3915,3.926,3916,3.926,3917,3.926,3918,3.926,3919,3.926,3920,3.926,3921,3.926,3922,3.926,3923,3.926,3924,3.926,3925,3.926,3926,3.926,3927,3.926,3928,3.926,3929,3.926,3930,3.926,3931,3.926,3932,3.926,3933,3.926,3934,3.926,3935,3.926,3936,3.926,3937,3.926,3938,4.422,3939,4.422,3940,4.422,3941,4.422,3942,4.422,3943,4.422,3944,3.756,3945,3.926]],["title/modules/custom/#telethon.tl.custom.message.Message.get_reply_message",[494,4.756]],["text/modules/custom/#telethon.tl.custom.message.Message.get_reply_message",[4,0.606,21,1.707,22,1.085,24,2.305,25,4.191,44,1.159,51,2.964,63,1.85,135,0.928,147,2.91,195,2.508,217,3.665,223,1.662,267,3.222,276,2.743,294,3.06,343,2.69,450,1.531,494,4.269,506,3.02,512,2.532,576,3.2,619,3.1,654,4.564,787,3.827,823,4.18,881,3.187,1166,3.118,1184,3.501,1268,1.38,2016,4.269,3429,6.667,3435,4.238,3436,4.151,3473,5.596,3666,3.777,3946,4.946,3947,4.946,3948,4.946,3949,4.946,3950,4.946,3951,4.946,3952,4.946,3953,4.946,3954,4.946,3955,4.946,3956,4.946,3957,4.946,3958,4.946,3959,4.946,3960,4.946,3961,4.946,3962,4.946,3963,4.946,3964,4.946,3965,4.946,3966,4.946,3967,5.571,3968,5.571,3969,4.946,3970,4.946,3971,4.946,3972,4.946,3973,9.493,3974,5.571,3975,4.946]],["title/modules/custom/#telethon.tl.custom.message.Message.mark_read",[3479,5.272]],["text/modules/custom/#telethon.tl.custom.message.Message.mark_read",[4,0.594,21,2.189,22,1.392,24,2.394,40,4.048,63,1.891,74,3.792,135,1.19,188,3.482,276,2.065,521,3.244,695,4.782,787,3.637,1184,4.491,1268,1.77,1391,5.642,1979,7.493,1980,7.493,2423,5.86,3435,4.4,3479,6.071,3481,6.071,3482,6.071,3666,4.845,3976,7.147,3977,7.147,3978,7.147,3979,7.147,3980,7.147,3981,7.147,3982,7.147,3983,7.147,3984,7.147,3985,7.147]],["title/modules/custom/#telethon.tl.custom.message.Message.pin",[1569,4.756]],["text/modules/custom/#telethon.tl.custom.message.Message.pin",[4,0.6,12,1.71,21,2.015,22,1.281,24,2.273,52,2.171,63,1.895,66,2.476,74,3.6,135,1.096,188,3.636,221,2.314,223,1.456,253,3.144,276,1.901,291,3.436,294,3.613,316,3.998,384,2.906,387,3.111,445,7.06,502,3.019,521,3.08,695,4.54,787,3.549,905,3.998,1088,5.379,1184,4.134,1268,1.629,1569,7.06,1635,7.114,1767,5.379,2423,5.564,2566,5.588,2876,5.379,2995,5.041,3435,4.177,3666,4.46,3986,5.841,3987,5.841,3988,5.841,3989,5.841,3990,5.841,3991,5.841,3992,5.841,3993,5.841,3994,5.841,3995,5.841,3996,5.841,3997,5.841,3998,6.579,3999,5.841]],["title/modules/custom/#telethon.tl.custom.message.Message.reply",[25,3.062]],["text/modules/custom/#telethon.tl.custom.message.Message.reply",[4,0.603,13,2.984,21,2.108,22,1.34,24,2.338,25,5.008,63,1.63,74,3.703,135,1.146,188,3.4,223,1.523,276,1.988,521,3.169,695,4.67,755,6.828,787,3.597,867,5.968,1184,4.324,1268,1.704,2423,5.723,2675,6.248,2979,4.25,3435,4.297,3666,4.665,4000,6.108,4001,6.108,4002,6.108,4003,6.108,4004,6.108,4005,6.108,4006,6.108,4007,6.108,4008,6.108,4009,6.108]],["title/modules/custom/#telethon.tl.custom.message.Message.respond",[496,4.299]],["text/modules/custom/#telethon.tl.custom.message.Message.respond",[4,0.601,13,3.1,21,2.189,22,1.392,24,2.394,25,4.352,63,1.669,74,3.792,135,1.19,188,3.482,223,1.582,496,6.628,521,3.244,787,3.54,867,6.11,1184,4.491,1268,1.77,2423,5.86,2675,5.86,2979,4.352,3435,4.4,3666,4.845,4010,6.345,4011,6.345,4012,6.345,4013,6.345,4014,6.345,4015,6.345,4016,6.345,4017,6.345,4018,6.345]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton",[3371,5.272]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton",[4,0.577,25,3.725,35,3.944,53,2.956,58,2.182,63,1.726,84,4.416,107,3.107,109,2.475,162,2.545,189,3.767,201,5.017,224,3.217,267,2.864,315,2.887,330,4.202,368,3.189,369,3.466,370,4.26,450,2.075,478,3.898,709,4.589,711,4.517,800,2.909,803,3.944,877,4.745,938,4.517,1099,4.32,1100,5.231,1944,5.482,1945,6.174,3369,7.066,3370,7.066,3426,7.749,3499,5.967]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client",[12,1.613]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client",[54,3.642,223,1.926,369,4.55,374,6.876]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data",[1002,2.966]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data",[224,3.707,800,2.774,1002,4.158,1440,4.545,3406,7.724]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query",[4019,5.51]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query",[224,3.707,800,2.774,1046,4.439,1610,5.669,3423,7.724]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text",[301,2.336]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text",[84,3.801,301,3.298,1086,4.691]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url",[338,3.713]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url",[224,3.707,338,5.205,800,2.774,1046,4.439,3427,7.724]],["title/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click",[330,3.454]],["text/modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click",[4,0.608,13,1.702,21,1.202,22,0.764,24,2.106,51,1.549,63,1.707,84,4.425,114,2.22,135,0.653,137,1.945,152,3.411,223,2.258,292,3.494,301,3.125,330,4.621,338,4.188,378,3.454,395,3.133,430,2.66,450,2.282,454,2.348,491,2.279,576,2.494,772,2.127,787,3.737,800,2.777,806,3.896,814,3.133,833,2.66,928,3.501,939,2.183,1002,3.709,1064,2.311,1080,4.361,1166,2.233,1176,4.142,1268,0.972,1472,4.054,1609,4.054,1610,2.556,1679,2.556,1723,4.625,1807,2.66,1828,2.51,1852,2.78,1896,2.66,1949,2.606,1952,2.51,2202,2.556,2255,2.66,2303,2.66,2326,2.66,2462,2.923,2491,2.78,2503,2.78,2663,2.78,2714,2.78,2750,2.78,2802,2.718,2824,2.718,2945,2.848,2946,2.848,2947,2.848,2948,2.923,2949,2.923,2950,2.78,2951,2.78,2952,2.66,2953,2.718,2954,2.718,2955,2.718,2956,2.718,2957,2.718,2958,2.923,2959,2.848,2960,2.718,2961,2.718,2962,2.78,2963,2.923,2964,2.848,2965,2.66,2966,2.606,3402,5.058,3406,5.196,3423,5.196,3426,4.972,3427,5.196,3433,6.891,3435,3.872,3586,6.594,3786,5.477,3787,4.972,4020,5.853,4021,3.923,4022,5.853,4023,5.853,4024,3.923,4025,3.923,4026,3.923,4027,3.923,4028,3.923,4029,3.923,4030,3.923,4031,5.853,4032,3.923,4033,3.923,4034,3.923,4035,3.923]],["title/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter",[923,5.074]],["text/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter",[4,0.457,34,2.5,198,4.097,230,4.097,368,3.583,495,4.329,524,5.637,526,5.753,832,6.503,836,6.705,1247,6.322,2611,6.013]],["title/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender",[832,4.756]],["text/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender",[4,0.433,38,2.477,42,3.515,44,1.239,63,1.791,109,2.632,115,4.246,225,3.362,236,3.798,270,3.65,277,2.428,292,3.616,312,3.548,398,4.195,512,3.65,542,4.261,585,4.804,717,4.411,800,2.561,801,3.046,810,6.347,820,7.13,897,5.563,1154,5.83,1187,6.155,4036,8.032]],["title/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender",[495,3.166]],["text/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender",[4,0.427,34,2.335,44,1.597,58,2.892,61,2.428,102,2.444,107,4.117,162,2.671,221,2.788,223,1.754,224,3.376,276,2.29,277,2.396,292,3.568,482,3.347,495,4.043,524,5.265,526,5.373,540,4.6,800,2.994,801,3.006,832,6.073,1166,2.527,1218,6.732]],["title/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id",[526,4.208]],["text/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id",[4,0.451,44,1.291,107,3.443,188,3.303,223,1.852,224,3.565,253,3.998,276,2.418,495,5.222,526,5.673,941,5.559,1391,5.352,1623,3.803,4037,8.368]],["title/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender",[836,4.904]],["text/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender",[4,0.591,21,2.196,22,1.396,24,1.945,52,2.916,66,3.326,74,3.799,135,1.194,152,3.25,221,3.109,223,2.12,236,4.179,495,4.509,542,3.978,619,4.918,787,3.707,823,4.918,832,7.342,836,5.664,1064,4.223,1166,2.286,1268,1.775,1952,4.585,2202,4.671,2303,4.86,2326,4.86,2950,5.079,2951,5.079,2952,4.86,3435,3.575,4038,6.708,4039,7.168,4040,6.708,4041,6.708]],["title/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender",[524,4.123]],["text/modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender",[4,0.6,9,1.988,21,1.668,22,1.061,24,2.279,34,2.474,44,1.453,52,2.44,53,2.132,58,2.807,66,2.783,74,3.179,102,2.28,107,3.875,114,2.065,135,0.907,152,3.088,176,3.043,188,2.149,202,3.548,221,3.313,223,1.858,225,2.279,230,2.629,236,3.497,270,2.475,276,2.137,312,2.405,315,2.081,454,2.185,495,4.956,512,2.475,524,3.617,526,5.013,595,3.309,619,4.115,695,2.952,787,3.632,816,3.208,823,4.673,826,3.858,836,6.635,843,3.483,920,3.771,1149,4.057,1158,4.173,1166,1.736,1181,4.057,1268,1.348,1390,4.303,1445,4.057,1493,4.057,1623,2.475,2023,4.303,2024,4.451,2618,4.451,2783,4.451,2919,4.451,2920,4.173,2921,4.834,2922,4.834,2923,4.625,2924,4.625,2925,4.625,2926,4.625,2927,4.625,2928,4.625,2929,4.625,2930,4.057,2931,4.303,2932,4.303,2933,4.303,2934,4.303,2935,4.057,2936,4.303,2937,4.303,2938,4.303,2939,4.303,2940,4.303,3435,2.716,4038,5.095,4040,5.095,4041,5.095,4042,5.445,4043,9.008]],["title/modules/errors/",[52,1.576,172,1.73]],["text/modules/errors/",[4,0.604,8,1.293,22,0.659,28,1.591,34,1.883,36,2.247,40,2.4,44,1.11,46,1.48,51,2.064,52,2.109,54,2.189,55,2.163,58,0.977,59,1.599,61,1.036,63,0.989,68,1.81,84,2.268,94,1.391,102,2.218,114,1.283,116,4.682,123,3.465,133,2.765,135,1.065,139,1.55,150,1.567,151,1.857,158,2.293,165,1.857,166,3.824,172,3.476,194,1.766,198,2.525,214,2.523,221,2.249,223,1.415,224,3.064,233,1.116,234,2.441,237,1.935,242,2.765,252,1.788,254,1.857,267,1.283,269,2.125,271,1.788,277,1.022,301,1.273,310,2.991,312,1.494,315,1.293,319,2.85,322,1.633,326,1.882,327,2.871,330,2.91,343,1.633,364,1.403,368,1.428,369,1.552,378,1.668,390,1.882,396,2.089,422,1.494,428,3.885,429,1.992,438,2.354,445,2.592,449,1.963,450,0.929,454,3.792,478,1.746,488,3.374,492,3.473,501,2.055,504,1.725,507,3.548,528,1.788,542,1.522,548,1.65,551,2.089,556,2.055,558,2.473,576,3.773,589,1.494,627,1.908,659,3.035,706,3.002,717,1.857,722,3.545,743,3.923,745,2.699,772,1.833,787,2.756,814,2.799,816,1.992,829,2.247,841,1.81,870,1.935,945,2.342,946,2.455,947,2.765,948,4.334,956,4.444,963,2.023,977,4.132,978,1.48,985,2.765,988,3.002,989,3.002,991,3.465,992,3.002,994,3.002,995,3.002,996,3.002,997,2.52,1002,3.054,1039,2.52,1074,2.455,1081,2.765,1096,2.247,1157,2.765,1166,1.078,1176,2.608,1268,0.838,1289,3.705,1362,2.52,1403,3.002,1437,2.342,1447,2.765,1573,2.455,1609,2.731,1610,3.407,1630,2.873,1633,2.125,1772,4.687,1790,5.387,2010,3.002,2034,2.455,2145,2.455,2147,3.002,2150,2.873,2190,3.002,2247,3.344,2263,5.43,2328,3.002,2398,2.52,2487,2.672,2535,2.52,2556,2.699,2578,3.002,2612,2.873,2637,3.002,2674,3.002,2693,3.002,3061,2.342,3062,2.342,3063,2.342,3305,2.293,3306,2.293,3307,2.293,3308,2.342,3309,2.293,3310,2.293,3311,2.293,3312,2.293,3313,2.342,3314,2.342,3315,2.396,3316,2.342,3317,2.396,3318,2.342,3319,2.342,3320,2.396,3321,2.396,3384,2.455,3405,4.876,3411,4.641,3425,2.455,3554,2.873,3586,5.43,3787,2.873,3945,3.002,4044,3.382,4045,3.382,4046,3.382,4047,3.382,4048,3.382,4049,3.382,4050,5.229,4051,5.982,4052,3.382,4053,3.382,4054,5.229,4055,3.382,4056,3.382,4057,3.382,4058,3.382,4059,3.382,4060,4.893,4061,3.382,4062,3.382,4063,3.382,4064,3.382,4065,3.382,4066,3.382,4067,3.382]],["title/modules/errors/#api-errors",[52,1.576,172,1.73]],["text/modules/errors/#api-errors",[34,2.431,36,3.547,52,2.723,172,3.687,198,3.985,233,2.723,237,4.721,242,6.747,252,4.363,254,4.532,322,3.985,326,4.592,558,3.903,743,4.85,945,5.716,2535,6.149,3554,7.01]],["title/modules/errors/#telethon.errors.common",[4068,6.812]],["text/modules/errors/#telethon.errors.common",[52,2.871,61,2.665,172,3.152,478,4.491,1289,6.165]],["title/modules/errors/#telethon.errors.common.AlreadyInConversationError",[4044,6.207]],["text/modules/errors/#telethon.errors.common.AlreadyInConversationError",[116,4.567,277,2.612,438,3.889,504,4.407,772,4.683,841,4.624,2010,7.669]],["title/modules/errors/#telethon.errors.common.BadMessageError",[4045,6.207]],["text/modules/errors/#telethon.errors.common.BadMessageError",[116,4.634,558,4.145,4046,8.765]],["title/modules/errors/#telethon.errors.common.CdnFileTamperedError",[2693,5.51]],["text/modules/errors/#telethon.errors.common.CdnFileTamperedError",[116,4.518,133,6.987,139,2.534,327,5.389,556,5.194,1772,5.568,2145,6.204,2612,7.259,4047,8.546]],["title/modules/errors/#telethon.errors.common.InvalidBufferError",[4048,6.207]],["text/modules/errors/#telethon.errors.common.InvalidBufferError",[55,5.409,94,3.479,116,4.47,135,1.408,166,5.058,172,3.064,369,3.881,507,4.171,745,4.364,991,4.584,997,6.3,2674,7.507,4049,8.456]],["title/modules/errors/#telethon.errors.common.InvalidChecksumError",[2637,5.51]],["text/modules/errors/#telethon.errors.common.InvalidChecksumError",[44,1.309,59,4.013,116,4.486,429,4.999,501,5.157,528,4.486,717,4.66,1403,7.533,1772,5.529,2147,7.533,4050,9.773]],["title/modules/errors/#telethon.errors.common.MultiError",[1081,5.074]],["text/modules/errors/#telethon.errors.common.MultiError",[454,3.491,507,4.292,627,4.909,1074,6.316,2263,7.391]],["title/modules/errors/#telethon.errors.common.MultiError.__new__",[4051,5.808]],["text/modules/errors/#telethon.errors.common.MultiError.__new__",[4,0.609,22,1.083,28,1.692,36,2.389,54,2.327,58,1.606,135,0.926,172,2.014,214,3.349,223,1.878,224,3.615,454,4.13,488,3.489,492,4.981,551,3.434,576,4.041,589,2.456,743,4.28,787,3.361,816,3.274,956,5.612,978,2.433,1157,4.544,1166,1.772,1176,3.74,1268,1.377,1772,4.886,2247,4.796,2263,6.37,2487,4.392,3061,3.85,3062,3.85,3063,3.85,3305,3.768,3306,3.768,3307,3.768,3308,3.85,3309,3.768,3310,3.768,3311,3.768,3312,3.768,3313,3.85,3314,3.85,3315,3.939,3316,3.85,3317,3.939,3318,3.85,3319,3.85,3320,3.939,3321,3.939,3405,6.159,3411,5.444,3425,4.035,3586,7.208,3945,4.935,4051,7.017,4052,5.559,4053,5.559,4054,7.499]],["title/modules/errors/#telethon.errors.common.ReadCancelledError",[4055,6.207]],["text/modules/errors/#telethon.errors.common.ReadCancelledError",[40,4.008,116,4.617,269,5.488,1573,6.339]],["title/modules/errors/#telethon.errors.common.SecurityError",[4056,6.207]],["text/modules/errors/#telethon.errors.common.SecurityError",[28,2.62,44,1.328,172,3.118,319,4.394,1630,7.311,2150,7.311,4057,8.608]],["title/modules/errors/#telethon.errors.common.TypeNotFoundError",[4058,6.207]],["text/modules/errors/#telethon.errors.common.TypeNotFoundError",[40,3.922,114,3.241,116,4.518,135,1.423,166,5.112,234,2.9,450,2.348,829,5.677,1039,6.367,1437,5.92]],["title/modules/errors/#telethon.errors.rpcbaseerrors",[4069,6.812]],["text/modules/errors/#telethon.errors.rpcbaseerrors",[]],["title/modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError",[4059,6.207]],["text/modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError",[150,3.975,165,4.71,166,5.13,172,3.107,745,4.427,963,5.13,991,4.649,1289,6.077,2328,7.614]],["title/modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError",[988,5.51]],["text/modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError",[8,3.165,44,1.278,46,3.625,54,3.466,102,2.971,172,3,319,3.693,445,6.346,488,2.956,507,4.753,977,6.544,1002,4.604,1447,6.77,1610,6.278,2034,6.011]],["title/modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout",[3787,5.272]],["text/modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout",[51,3.349,84,3.68,221,2.985,310,4.855,330,4.722,428,5.157,576,3.615,659,4.925,722,5.753,948,5.753,1609,4.432,4060,7.941]],["title/modules/errors/#telethon.errors.rpcbaseerrors.FloodError",[4061,6.207]],["text/modules/errors/#telethon.errors.rpcbaseerrors.FloodError",[34,2.414,63,1.551,123,5.501,151,4.501,158,5.557,234,2.781,271,4.333,301,3.085,364,3.401,438,3.69,488,2.926,542,3.69,814,4.387,1790,6.634,2190,7.276,2556,4.944,4062,8.196,4063,8.196]],["title/modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError",[992,5.51]],["text/modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError",[63,1.617,68,4.574,102,2.635,234,2.9,343,4.127,449,4.96,994,7.587,995,7.587,1790,5.92,4064,8.546]],["title/modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError",[985,5.074]],["text/modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError",[422,3.83,488,3.095,706,7.697,977,6.851,1002,4.143,1362,6.459]],["title/modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError",[996,5.51]],["text/modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError",[34,2.545,224,3.68,315,3.302,390,4.807,814,4.624,1790,5.983,2398,6.436]],["title/modules/errors/#telethon.errors.rpcbaseerrors.RPCError",[948,4.208]],["text/modules/errors/#telethon.errors.rpcbaseerrors.RPCError",[172,3.141,198,4.186,221,3.05,368,3.661,946,6.294,947,7.088]],["title/modules/errors/#telethon.errors.rpcbaseerrors.ServerError",[2578,5.51]],["text/modules/errors/#telethon.errors.rpcbaseerrors.ServerError",[116,4.47,139,2.507,172,3.064,194,4.417,234,2.87,267,3.207,396,5.224,488,3.018,548,4.127,870,4.838,1096,5.617,1633,5.314,4065,8.456]],["title/modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError",[4066,6.207]],["text/modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError",[51,3.349,84,3.68,221,2.985,310,4.855,330,4.722,428,5.157,576,3.615,659,4.925,722,5.753,948,5.753,1609,4.432,4060,7.941]],["title/modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError",[989,5.51]],["text/modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError",[44,1.333,102,2.664,312,3.816,378,4.261,991,4.683,1790,5.983,4067,8.638]],["title/modules/helpers/",[2611,4.398]],["text/modules/helpers/",[1,1.562,4,0.611,12,0.627,16,2.924,22,1.377,24,0.655,45,0.697,46,1.747,52,0.796,61,0.739,63,0.755,103,1.543,123,1.308,124,1.325,126,1.968,135,1.178,158,1.636,171,2.316,187,2.163,214,2.014,223,1.796,230,1.165,234,1.354,277,0.73,301,3.746,302,1.467,307,4.298,312,1.763,319,3.153,343,1.165,344,2.6,351,1.479,353,3.459,384,1.763,390,2.221,478,1.246,491,2.436,501,1.467,512,1.097,521,3.337,529,1.849,557,4.032,576,2.797,586,1.603,589,4.246,654,1.467,655,3.152,659,2.316,664,1.361,745,3.059,803,2.084,833,1.636,839,1.71,840,2.387,895,2.764,939,1.343,941,4.698,956,5.167,967,1.907,978,2.873,1002,1.907,1021,1.636,1064,1.422,1069,1.798,1072,2.827,1085,2.827,1090,2.827,1103,2.973,1146,3.262,1147,2.142,1149,1.798,1166,1.627,1250,2.425,1268,1.751,1289,1.71,1292,6.184,1298,1.603,1299,6.119,1360,2.827,1427,1.973,1440,2.084,1467,1.71,1639,1.603,1679,1.572,1699,3.153,1744,1.636,1761,3.389,1769,4.416,1787,1.798,1790,4.106,1807,1.636,1860,5.188,1891,6.119,1893,3.39,1896,1.636,1949,1.603,1952,1.543,1957,3.39,2062,5.828,2103,3.389,2124,3.262,2202,1.572,2236,3.39,2303,1.636,2326,1.636,2346,3.058,2428,3.542,2430,1.19,2462,1.798,2476,3.39,2491,1.71,2503,1.71,2540,1.798,2556,3.059,2611,2.827,2663,1.71,2714,1.71,2750,1.71,2769,3.39,2802,1.671,2824,1.671,2825,2.142,2828,1.849,2888,1.973,2920,1.849,2930,1.798,2931,1.907,2932,1.907,2933,1.907,2934,1.907,2935,1.798,2936,1.907,2937,1.907,2938,1.907,2939,1.907,2940,1.907,2942,1.973,2943,1.973,2944,1.849,2945,1.752,2946,1.752,2947,1.752,2948,1.798,2949,1.798,2950,1.71,2951,1.71,2952,1.636,2953,1.671,2954,1.671,2955,1.671,2956,1.671,2957,1.671,2958,1.798,2959,1.752,2960,1.671,2961,1.671,2962,1.71,2964,1.752,2965,1.636,2966,1.603,2967,1.671,2968,1.671,2969,1.636,3075,1.798,3076,1.798,3077,1.798,3078,1.798,3079,1.798,3080,1.798,3081,1.798,3082,1.849,3083,1.849,3084,1.849,3085,1.849,3401,3.542,3405,4.794,3549,4.529,3652,4.334,4070,2.413,4071,2.413,4072,3.734,4073,5.102,4074,5.588,4075,2.413,4076,2.142,4077,2.413,4078,2.413,4079,2.413,4080,2.413,4081,3.734,4082,7.072,4083,8.117,4084,3.99,4085,3.99,4086,5.102,4087,5.102,4088,3.99,4089,3.99,4090,3.734,4091,2.413,4092,2.413,4093,2.413,4094,2.413,4095,2.413,4096,5.928,4097,3.542,4098,3.734,4099,3.99,4100,3.99,4101,3.99,4102,3.99,4103,2.05,4104,2.413,4105,3.734,4106,3.99,4107,3.99]],["title/modules/helpers/#helpers-telethonhelpers",[2611,3.384,4070,4.776]],["text/modules/helpers/#helpers-telethonhelpers",[52,2.861,61,2.656,478,4.475,1289,6.143,2611,6.143,2825,7.697]],["title/modules/helpers/#telethon.helpers.TotalList",[4071,6.207]],["text/modules/helpers/#telethon.helpers.TotalList",[4,0.605,12,1.768,16,4.843,24,1.846,45,1.966,63,1.619,103,4.351,123,3.688,124,3.736,158,4.612,214,3.693,223,1.893,230,3.285,234,2.903,277,2.057,301,2.56,312,3.779,501,4.134,512,3.092,576,4.31,654,4.134,655,5.781,664,3.838,839,4.82,978,2.978,1069,5.068,1072,6.061,1250,5.199,1298,4.519,1427,5.561,1467,4.82,1860,7.994,2540,5.068,3405,5.799]],["title/modules/helpers/#telethon.helpers.ensure_parent_dir_exists",[4072,5.808]],["text/modules/helpers/#telethon.helpers.ensure_parent_dir_exists",[4,0.597,22,1.49,135,1.274,302,4.648,390,5.116,491,2.489,557,7.264,967,6.043,1085,6.514,1268,1.894,1360,6.514,2062,9.287,2888,6.252,4072,7.156,4073,9.193,4074,6.043,4075,7.648,4076,6.789,4077,7.648,4078,7.648,4079,7.648,4080,7.648]],["title/modules/helpers/#telethon.helpers.generate_key_data_from_nonce",[4081,5.808]],["text/modules/helpers/#telethon.helpers.generate_key_data_from_nonce",[4,0.609,22,1.193,135,1.02,223,1.356,307,4.392,319,3.567,353,5.423,491,2.603,586,4.069,745,4.873,1002,3.822,1146,6.539,1147,5.438,1268,1.517,1699,6.32,2236,6.794,2556,4.128,2920,4.694,3075,4.564,3076,4.564,3077,4.564,3078,4.564,3079,4.564,3080,4.564,3081,4.564,3082,4.694,3083,4.694,3084,4.694,3085,4.694,3549,7.906,4074,4.841,4081,5.732,4082,9.795,4083,10.378,4084,7.998,4085,7.998,4086,8.906,4087,8.906,4088,7.998,4089,7.998,4090,5.732]],["title/modules/helpers/#telethon.helpers.generate_random_long",[2769,5.272]],["text/modules/helpers/#telethon.helpers.generate_random_long",[4,0.594,22,1.466,126,4.492,135,1.254,223,1.666,307,5.72,319,4.06,353,5.104,491,2.45,557,5.949,659,5.285,941,6.049,1090,6.452,1268,1.864,1440,4.756,2103,6.503,2430,3.714,2769,6.394,4074,5.949,4090,7.044,4091,7.528,4092,7.528,4093,7.528,4094,7.528,4095,7.528]],["title/modules/helpers/#telethon.helpers.retry_range",[1893,5.272]],["text/modules/helpers/#telethon.helpers.retry_range",[1,3.41,4,0.589,22,1.364,135,1.166,171,5.055,187,4.721,319,3.884,344,5.675,589,4.66,833,4.746,895,6.032,939,3.896,941,6.59,978,3.064,1268,1.734,1639,4.651,1679,4.562,1790,6.871,1807,4.746,1891,8.503,1893,5.947,2124,7.12,2346,6.674,2964,5.082,2965,4.746,2966,4.651,2967,4.849,2968,4.849,2969,4.746,4074,5.532,4096,9.919,4097,7.732]],["title/modules/helpers/#telethon.helpers.strip_text",[4098,5.808]],["text/modules/helpers/#telethon.helpers.strip_text",[4,0.608,22,0.968,135,0.828,223,1.918,301,4.006,351,2.574,384,3.068,521,3.847,529,3.81,589,4.497,803,3.628,840,4.155,956,6.289,978,3.504,1021,3.37,1064,2.929,1268,1.231,1292,6.961,1761,5.318,1769,6.457,1787,3.704,1896,3.37,1949,3.303,1952,3.18,1957,5.9,2202,3.239,2303,3.37,2326,3.37,2462,3.704,2476,5.9,2491,3.523,2503,3.523,2556,3.585,2663,3.523,2714,3.523,2750,3.523,2802,3.443,2824,3.443,2828,3.81,2942,4.064,2943,4.064,2944,3.81,2945,3.609,2946,3.609,2947,3.609,2948,3.704,2949,3.704,2950,3.523,2951,3.523,2952,3.37,2953,3.443,2954,3.443,2955,3.443,2956,3.443,2957,3.443,2958,3.704,2959,3.609,2960,3.443,2961,3.443,2962,3.523,3401,6.166,3405,4.709,3652,5.9,4074,3.928,4098,4.652,4099,6.946,4100,6.946,4101,6.946,4102,6.946,4103,4.223,4104,4.971]],["title/modules/helpers/#telethon.helpers.within_surrogate",[4105,5.808]],["text/modules/helpers/#telethon.helpers.within_surrogate",[4,0.609,22,1.292,46,3.685,135,1.105,223,1.468,301,3.779,343,3.203,491,2.74,589,3.719,1103,6.273,1149,4.942,1166,2.685,1268,1.643,1292,6.406,1299,8.388,1744,4.497,2428,7.474,2930,4.942,2931,5.242,2932,5.242,2933,5.242,2934,5.242,2935,4.942,2936,5.242,2937,5.242,2938,5.242,2939,5.242,2940,5.242,3405,5.708,3652,5.635,4074,5.242,4105,6.207,4106,8.419,4107,8.419]],["title/modules/utils/",[1057,3.834]],["text/modules/utils/",[0,1.46,1,0.244,3,1.722,4,0.611,6,0.506,9,0.7,12,0.236,22,1.137,24,0.32,26,0.441,28,0.277,29,0.145,33,1.405,34,0.919,36,0.267,37,0.431,42,1.365,44,0.557,50,0.677,51,0.757,52,0.475,53,0.125,61,0.784,63,1.12,69,0.122,74,0.267,79,0.205,83,0.194,89,0.405,94,0.486,95,0.444,98,0.286,102,1.546,105,0.136,107,0.79,109,1.022,113,0.208,114,1.483,118,0.261,121,0.431,126,0.158,129,0.527,135,0.959,137,0.106,139,2.376,143,0.57,147,0.325,152,0.434,158,0.217,159,1.167,162,0.568,163,3.193,166,1.758,167,0.351,169,0.253,170,3.206,171,0.528,172,0.225,176,0.592,178,0.194,180,0.978,181,1.906,182,0.552,183,0.194,184,3.112,185,0.654,186,0.384,187,1.161,188,0.126,189,2.743,192,0.576,194,0.475,195,0.144,200,0.696,201,0.413,214,1.231,217,0.156,219,0.126,220,0.384,221,0.32,223,2.124,224,0.718,225,0.705,227,0.148,230,0.3,231,2.362,233,0.106,234,0.211,239,0.307,252,1.014,253,0.564,267,1.115,269,1.206,270,1.963,271,1.353,273,0.342,274,1.456,276,2.175,277,1.547,279,0.657,283,0.151,286,0.63,291,2.321,292,0.532,294,0.176,298,0.413,301,1.359,302,0.552,315,0.55,316,0.718,319,1.05,323,0.325,327,2.635,337,0.221,338,0.372,339,0.183,344,0.592,345,0.677,350,0.221,351,0.231,352,0.194,353,0.217,363,0.176,364,0.796,368,0.499,369,0.417,371,0.477,373,0.183,384,0.275,390,0.178,395,0.333,398,2.321,415,0.384,416,1.829,417,0.452,418,0.452,427,0.398,429,2.218,430,0.974,437,0.624,438,0.28,440,0.297,450,2.679,454,1.569,456,0.356,460,0.925,471,0.528,473,0.201,478,0.165,491,1.597,492,1.119,501,1.673,502,0.66,503,0.283,505,0.227,507,0.448,512,1.251,518,0.321,520,0.571,521,3.31,525,1.106,529,0.245,531,0.227,537,1.024,542,1.481,554,0.477,556,0.194,557,0.253,558,0.151,561,0.64,576,1.328,585,0.372,586,1.7,587,2.185,588,2.093,589,1.663,592,1.637,600,0.212,613,0.221,616,0.208,619,0.178,620,0.391,627,0.666,641,0.161,655,0.561,659,0.361,670,0.284,673,0.205,677,0.284,695,0.337,711,0.191,715,0.367,717,0.176,722,0.217,743,1.291,745,0.321,759,3.163,767,0.464,772,0.337,778,0.464,782,0.616,800,0.937,801,1.732,803,0.475,804,0.644,806,3.64,813,3.386,816,0.535,817,0.644,823,0.178,833,0.217,839,0.441,840,0.706,841,0.486,846,0.245,855,0.88,856,0.696,857,0.677,868,0.261,877,0.391,878,0.66,881,0.676,882,0.441,883,0.592,884,1.43,885,0.398,886,0.351,895,1.329,896,1.02,897,0.431,901,0.201,905,0.194,908,1.078,909,0.509,910,0.696,920,0.431,930,1.25,931,0.718,938,1.008,939,1.192,941,0.212,956,0.729,967,0.253,971,0.253,976,0.284,978,2.556,981,0.367,986,0.245,987,0.66,990,0.261,991,0.337,993,0.261,1002,1.572,1028,0.378,1046,0.979,1051,1.331,1057,0.729,1058,2.701,1062,0.238,1063,0.188,1064,0.188,1086,1.261,1087,1.206,1090,0.441,1117,0.391,1144,0.284,1148,1.819,1153,1.048,1154,0.452,1155,0.837,1158,1.961,1166,2.066,1176,3.965,1211,0.718,1212,0.431,1216,0.261,1219,0.405,1225,0.88,1229,0.422,1242,0.227,1245,0.452,1250,1.431,1268,1.426,1273,0.452,1286,0.677,1287,1.805,1291,0.431,1292,0.63,1293,0.284,1298,0.413,1349,1.865,1357,3.309,1360,0.227,1361,0.232,1363,0.284,1369,0.284,1371,0.284,1389,0.441,1391,1.37,1418,0.644,1433,2.331,1437,0.221,1440,1.804,1443,1.96,1445,0.238,1452,0.384,1472,0.818,1493,0.464,1522,0.245,1545,0.552,1551,0.284,1559,0.221,1568,0.232,1589,0.217,1593,0.677,1597,0.221,1608,0.552,1609,0.325,1623,0.537,1639,0.212,1650,0.284,1664,0.171,1679,0.208,1682,1.255,1691,1.564,1699,0.492,1709,1.999,1713,0.245,1716,0.245,1738,0.552,1749,1.377,1756,1.137,1760,0.272,1761,0.413,1769,2.323,1780,0.529,1782,0.272,1787,0.677,1791,0.253,1803,0.965,1807,0.217,1819,0.509,1828,0.398,1832,0.272,1852,0.227,1887,0.552,1889,1.003,1896,0.217,1902,2.173,1903,0.743,1915,0.616,1919,0.743,1949,0.212,1952,0.205,1953,1.377,1959,0.261,1988,0.492,2008,0.743,2009,0.807,2023,0.253,2024,0.261,2034,0.66,2056,0.552,2057,2.323,2061,0.284,2101,1.47,2103,1.275,2118,0.464,2122,0.261,2134,1.278,2136,0.284,2202,0.208,2247,1.88,2282,0.261,2309,0.477,2336,0.857,2346,0.477,2360,1.816,2363,1.641,2398,0.238,2402,0.743,2411,1.072,2419,1.278,2430,1.358,2431,1.516,2447,0.552,2448,0.552,2470,0.477,2471,0.743,2487,0.492,2493,0.284,2495,1.048,2498,0.245,2513,0.284,2540,0.88,2542,0.284,2548,1.71,2556,2.929,2570,0.509,2595,2.4,2605,0.272,2608,0.529,2610,0.772,2682,1.431,2683,1.431,2726,1.003,2727,1.431,2817,0.997,2860,0.552,2876,0.509,2893,0.238,2919,1.569,2920,0.245,2930,0.238,2935,0.238,2952,0.217,2953,0.221,2954,0.221,2955,0.221,2956,0.221,2957,0.221,2960,0.221,2961,0.221,2962,0.227,2963,0.238,2964,0.232,2965,0.217,2966,0.413,2967,0.221,2968,0.221,2969,0.217,2970,0.227,2972,0.227,2973,0.227,2974,0.227,2975,0.227,2978,0.183,2979,0.158,2995,0.477,3010,0.284,3011,0.284,3012,0.284,3013,0.284,3014,0.284,3015,0.284,3016,0.284,3017,0.284,3018,0.284,3019,0.284,3020,0.284,3021,0.284,3022,0.284,3023,0.284,3024,0.284,3025,0.284,3026,0.284,3027,0.284,3028,0.284,3032,0.261,3033,0.261,3034,0.261,3035,0.261,3038,0.261,3039,0.261,3040,0.261,3042,0.253,3043,0.253,3044,0.261,3045,0.261,3046,0.261,3047,0.261,3048,0.261,3049,0.261,3050,0.261,3051,0.284,3052,0.261,3053,0.261,3054,0.261,3055,0.261,3056,0.261,3057,0.261,3058,0.261,3059,0.261,3061,0.221,3062,0.221,3063,0.221,3064,0.477,3065,0.253,3066,0.464,3067,0.245,3068,0.245,3073,0.253,3074,0.261,3075,0.238,3076,0.238,3077,0.238,3078,0.238,3079,0.238,3080,0.238,3081,0.238,3082,0.245,3083,0.245,3084,0.245,3085,0.245,3086,0.261,3087,0.261,3088,0.261,3089,0.261,3090,0.261,3091,0.253,3092,0.253,3093,0.253,3094,0.253,3095,0.253,3098,0.253,3099,0.253,3104,0.253,3105,0.253,3106,0.253,3107,0.253,3108,0.253,3109,0.253,3110,0.253,3111,0.253,3112,0.253,3113,0.253,3114,0.253,3115,0.253,3116,0.253,3117,0.253,3118,0.253,3119,0.253,3120,0.253,3121,0.253,3122,0.261,3123,0.253,3124,0.253,3125,0.253,3126,0.253,3128,0.253,3129,0.253,3130,0.253,3131,0.253,3132,0.253,3133,0.253,3134,0.261,3135,0.253,3137,0.261,3138,0.261,3139,0.253,3140,0.253,3141,0.253,3142,0.253,3143,0.253,3144,0.253,3145,0.253,3146,0.253,3147,0.253,3148,0.253,3149,0.253,3150,0.253,3151,0.477,3152,0.253,3153,0.253,3154,0.261,3155,0.253,3156,0.253,3157,0.253,3158,0.253,3161,0.253,3166,0.261,3167,0.261,3168,0.261,3169,0.261,3170,0.261,3171,0.261,3172,0.261,3173,0.261,3174,0.261,3175,0.245,3179,0.253,3180,0.253,3181,0.253,3182,0.253,3183,0.253,3184,0.253,3185,0.253,3186,0.253,3191,0.261,3192,0.261,3193,0.261,3194,0.261,3195,0.261,3196,0.261,3197,0.261,3198,0.261,3199,0.261,3200,0.261,3201,0.261,3202,0.261,3212,0.284,3213,0.284,3214,0.284,3215,0.284,3216,0.284,3217,0.284,3218,0.284,3219,0.284,3220,0.284,3221,0.284,3222,0.284,3223,0.284,3227,0.284,3228,0.284,3229,0.284,3230,0.284,3231,0.284,3232,0.284,3233,0.284,3234,0.284,3235,0.284,3236,0.284,3237,0.284,3238,0.284,3239,0.284,3240,0.284,3241,0.284,3242,0.284,3243,0.261,3244,0.261,3245,0.261,3246,0.261,3247,0.261,3248,0.261,3249,0.261,3250,0.261,3251,0.284,3252,0.261,3253,0.261,3254,0.261,3255,0.261,3256,0.261,3257,0.261,3258,0.261,3259,0.261,3260,0.261,3261,0.261,3262,0.284,3263,0.284,3264,0.284,3265,0.284,3285,0.284,3286,0.284,3288,0.284,3289,0.284,3291,0.221,3292,0.227,3293,0.227,3294,0.227,3295,0.232,3296,0.227,3304,0.227,3305,0.217,3306,0.217,3307,0.217,3308,0.221,3309,0.217,3310,0.217,3311,0.217,3312,0.217,3313,0.221,3314,0.221,3315,0.227,3316,0.221,3317,0.227,3318,0.221,3319,0.221,3320,0.227,3321,0.227,3325,0.227,3326,0.227,3327,0.227,3328,0.227,3329,0.227,3330,0.227,3331,0.718,3355,1.555,3379,0.441,3384,0.232,3390,0.238,3391,0.245,3392,0.238,3394,0.772,3396,0.272,3400,0.772,3402,3.335,3403,0.743,3405,1.597,3410,0.261,3411,0.232,3413,0.272,3425,0.232,3434,0.284,3439,0.464,3451,0.492,3455,0.272,3472,0.529,3487,0.284,3488,0.284,3489,0.284,3496,0.272,3517,0.284,3532,0.529,3534,2.39,3535,0.529,3540,2.941,3541,0.807,3542,0.272,3543,0.284,3544,0.272,3546,0.284,3547,0.272,3560,1.819,3562,0.772,3564,0.284,3566,1.377,3574,1.003,3585,0.529,3604,0.529,3613,1.496,3616,0.284,3634,0.284,3638,0.284,3667,0.284,3668,0.284,3669,0.284,3670,0.284,3671,0.284,3672,0.284,3673,0.284,3674,0.284,3675,0.284,3678,0.284,3679,0.284,3680,0.284,3681,0.284,3684,0.284,3685,0.284,3686,0.284,3687,0.284,3690,0.284,3691,0.284,3692,0.284,3693,0.284,3696,0.284,3697,0.284,3698,0.284,3699,0.284,3700,0.284,3701,0.284,3702,0.284,3703,0.284,3704,0.284,3707,0.284,3708,0.284,3709,0.284,3710,0.284,3711,0.284,3712,0.284,3713,0.284,3714,0.284,3717,0.284,3718,0.284,3719,0.284,3720,0.284,3721,0.284,3722,0.284,3723,0.284,3724,0.284,3725,0.284,3726,0.284,3727,0.284,3728,0.284,3729,0.284,3730,0.284,3731,0.284,3732,0.284,3733,0.284,3734,0.284,3735,0.284,3736,0.284,3737,0.284,3738,0.284,3739,0.284,3742,0.284,3743,0.284,3744,0.284,3745,0.284,3746,0.284,3747,0.284,3748,0.284,3749,0.284,3750,0.284,3751,0.284,3752,0.284,3753,0.284,3754,0.284,3755,0.284,3756,0.284,3757,0.284,3758,0.284,3759,0.284,3760,0.284,3761,0.284,3818,0.284,3855,0.284,3856,0.284,3857,0.284,3858,0.284,3859,0.284,3862,0.284,3863,0.284,3864,0.284,3865,0.284,3866,0.284,3867,0.284,3868,0.284,3870,0.284,3871,0.284,3872,0.284,3873,0.284,3874,0.284,3875,0.284,3876,0.284,3877,0.284,3878,0.284,3879,0.284,3880,0.284,3881,0.284,3882,0.284,3883,0.284,3884,0.284,3885,0.284,3886,0.284,3899,0.284,3900,0.284,3901,0.284,3902,0.284,3903,0.284,3904,0.284,3905,0.284,3906,0.284,3907,0.284,3908,0.284,3909,0.284,3910,0.284,3911,0.284,3912,0.284,3913,0.284,3914,0.284,3915,0.284,3916,0.284,3917,0.284,3918,0.284,3919,0.284,3920,0.284,3921,0.284,3922,0.284,3923,0.284,3924,0.284,3925,0.284,3926,0.284,3927,0.284,3928,0.284,3929,0.284,3930,0.284,3931,0.284,3932,0.284,3933,0.284,3934,0.284,3935,0.284,3936,0.284,3937,0.284,3944,0.529,3946,0.284,3947,0.284,3948,0.284,3949,0.284,3950,0.284,3951,0.284,3952,0.284,3953,0.284,3954,0.284,3955,0.284,3956,0.284,3957,0.284,3958,0.284,3959,0.284,3960,0.284,3961,0.284,3962,0.284,3963,0.284,3964,0.284,3965,0.284,3966,0.284,3969,0.284,3970,0.284,3971,0.284,3972,0.284,3975,0.284,3986,0.284,3987,0.284,3988,0.284,3989,0.284,3990,0.284,3991,0.284,3992,0.284,3993,0.284,3994,0.284,3995,0.284,3996,0.284,3997,0.284,4000,0.284,4001,0.284,4002,0.284,4003,0.284,4004,0.284,4005,0.284,4006,0.284,4007,0.284,4008,0.284,4009,0.284,4010,0.284,4011,0.284,4012,0.284,4013,0.284,4014,0.284,4015,0.284,4016,0.284,4017,0.284,4018,0.284,4076,0.284,4097,0.284,4103,0.772,4108,0.32,4109,0.32,4110,2.81,4111,0.622,4112,0.622,4113,0.32,4114,1.048,4115,3.918,4116,1.105,4117,1.496,4118,0.32,4119,0.32,4120,0.32,4121,0.32,4122,0.32,4123,0.32,4124,0.32,4125,0.32,4126,0.32,4127,0.32,4128,0.32,4129,0.32,4130,0.32,4131,0.32,4132,0.32,4133,0.32,4134,0.32,4135,0.32,4136,0.32,4137,0.32,4138,0.32,4139,0.32,4140,0.32,4141,0.622,4142,1.685,4143,2.918,4144,1.577,4145,0.85,4146,1.63,4147,0.85,4148,0.622,4149,1.685,4150,0.622,4151,0.622,4152,2.173,4153,0.909,4154,0.622,4155,0.32,4156,0.32,4157,0.32,4158,0.32,4159,0.32,4160,0.32,4161,0.32,4162,0.32,4163,0.32,4164,0.32,4165,0.32,4166,0.32,4167,0.32,4168,0.32,4169,0.32,4170,0.32,4171,0.32,4172,0.32,4173,0.32,4174,0.32,4175,0.32,4176,0.32,4177,0.32,4178,0.32,4179,0.32,4180,0.32,4181,0.32,4182,0.32,4183,0.32,4184,0.32,4185,0.32,4186,0.32,4187,0.32,4188,0.32,4189,0.32,4190,0.32,4191,0.32,4192,0.32,4193,0.32,4194,0.622,4195,0.622,4196,0.622,4197,0.622,4198,0.32,4199,0.32,4200,0.622,4201,0.909,4202,0.909,4203,0.582,4204,1.439,4205,0.32,4206,0.32,4207,0.32,4208,0.32,4209,0.32,4210,0.32,4211,0.32,4212,0.32,4213,0.32,4214,0.32,4215,0.32,4216,0.32,4217,0.32,4218,0.32,4219,0.32,4220,0.32,4221,0.32,4222,0.32,4223,0.807,4224,0.32,4225,0.32,4226,0.32,4227,0.32,4228,0.32,4229,0.32,4230,0.582,4231,0.32,4232,0.32,4233,0.807,4234,2.142,4235,0.622,4236,0.807,4237,0.622,4238,0.807,4239,1.278,4240,1.048,4241,1.048,4242,0.582,4243,0.32,4244,0.32,4245,0.582,4246,0.582,4247,0.32,4248,0.582,4249,1.347,4250,0.582,4251,0.582,4252,1.003,4253,0.32,4254,0.32,4255,0.622,4256,0.622,4257,0.32,4258,1.347,4259,0.32,4260,1.048,4261,1.907,4262,0.32,4263,0.582,4264,0.32,4265,0.32,4266,1.829,4267,2.991,4268,1.048,4269,2.271,4270,0.582,4271,0.582,4272,0.582,4273,0.32,4274,0.32,4275,0.32,4276,0.32,4277,0.32,4278,0.32,4279,0.32,4280,0.32,4281,0.32,4282,0.32,4283,0.32,4284,0.32,4285,0.32,4286,0.32,4287,0.32,4288,0.32,4289,0.32,4290,0.85,4291,0.32,4292,0.582,4293,0.32,4294,0.32,4295,0.582,4296,0.582,4297,1.181,4298,0.32,4299,0.32,4300,0.32,4301,0.32,4302,0.582,4303,0.582,4304,0.582,4305,0.32,4306,1.496,4307,0.32,4308,0.32,4309,0.32,4310,0.32,4311,0.32,4312,0.32,4313,0.32,4314,0.32,4315,0.32,4316,0.32,4317,0.32,4318,0.32,4319,0.32,4320,0.32,4321,0.32,4322,0.32,4323,0.32,4324,0.32,4325,0.32,4326,0.622,4327,0.32,4328,0.32,4329,0.582,4330,0.582,4331,0.32,4332,0.32,4333,1.919,4334,0.622,4335,0.32,4336,0.32,4337,0.32,4338,0.32,4339,0.32,4340,0.32,4341,0.32,4342,0.32,4343,0.32,4344,0.32,4345,0.32,4346,0.32,4347,0.32,4348,0.32,4349,0.32,4350,0.32,4351,0.32,4352,0.32,4353,0.32,4354,0.32,4355,0.32,4356,0.32,4357,0.32,4358,0.32,4359,0.32,4360,0.32,4361,0.32,4362,0.32,4363,0.32,4364,0.32,4365,0.32,4366,0.32,4367,0.32,4368,0.32,4369,0.32,4370,0.32,4371,0.32,4372,0.32,4373,0.32,4374,0.32,4375,0.32,4376,0.32,4377,0.32,4378,0.32,4379,0.32,4380,0.32,4381,0.32,4382,0.32,4383,0.32,4384,0.32,4385,0.582,4386,0.582,4387,0.909,4388,0.909,4389,0.85,4390,0.807,4391,1.181,4392,0.582,4393,0.32,4394,0.622,4395,0.32,4396,0.32,4397,0.32,4398,0.32,4399,0.32,4400,0.32,4401,0.622,4402,0.622,4403,0.32,4404,0.32,4405,0.32,4406,0.32,4407,0.32,4408,0.582,4409,0.32,4410,0.582,4411,0.32,4412,0.32,4413,0.32,4414,0.32,4415,0.32,4416,0.32,4417,0.32,4418,0.32,4419,0.32,4420,0.32,4421,0.32,4422,0.32,4423,0.32,4424,0.622,4425,0.32,4426,0.32,4427,0.85,4428,0.32,4429,1.181,4430,2.142,4431,0.622,4432,0.622,4433,0.32,4434,0.32,4435,0.32,4436,0.32,4437,0.582,4438,0.582,4439,0.582,4440,0.909,4441,0.582,4442,0.582,4443,0.582,4444,0.582,4445,0.32,4446,0.32,4447,0.32,4448,0.32,4449,0.32,4450,0.32,4451,0.32,4452,0.32,4453,0.32,4454,0.32,4455,0.32,4456,0.32,4457,0.32,4458,0.32,4459,0.32,4460,0.32,4461,0.32,4462,0.32,4463,0.32,4464,0.32,4465,0.32,4466,0.32,4467,0.32,4468,0.32,4469,0.32,4470,0.32,4471,0.32,4472,0.32,4473,0.32,4474,0.32,4475,0.32,4476,0.32,4477,0.32,4478,0.32,4479,0.32,4480,0.32,4481,0.32,4482,0.32,4483,0.32,4484,0.32,4485,0.32,4486,0.32,4487,0.32,4488,0.32,4489,0.622,4490,0.622,4491,0.622,4492,0.622,4493,0.32,4494,0.32,4495,0.32,4496,0.32,4497,0.32,4498,0.32,4499,0.32,4500,0.32,4501,0.32,4502,0.32,4503,0.32,4504,0.32,4505,0.32,4506,0.32,4507,0.32,4508,0.32,4509,0.32,4510,0.32,4511,0.32,4512,0.32,4513,0.32,4514,0.32,4515,0.32,4516,0.32,4517,0.32,4518,0.32,4519,0.32,4520,0.32,4521,0.32,4522,0.32,4523,0.32,4524,0.32,4525,0.32,4526,0.32,4527,0.32,4528,0.32,4529,0.32,4530,0.32,4531,0.32,4532,0.32,4533,0.32,4534,0.32,4535,1.278,4536,0.32,4537,0.622,4538,0.622,4539,0.32,4540,0.32,4541,0.32,4542,0.909,4543,0.32,4544,0.32,4545,0.32,4546,0.32,4547,0.32,4548,0.32,4549,1.003,4550,0.582,4551,0.582,4552,0.582,4553,0.582,4554,0.32,4555,1.222,4556,0.582,4557,0.622,4558,0.622,4559,0.622,4560,0.32,4561,0.582,4562,0.32,4563,0.32,4564,0.32,4565,0.32,4566,0.32,4567,0.32,4568,0.32,4569,0.32,4570,0.32,4571,0.32,4572,0.32,4573,0.32,4574,0.32,4575,0.32,4576,0.32,4577,0.32,4578,0.32,4579,0.32,4580,0.32,4581,0.32,4582,0.32,4583,0.32,4584,0.32,4585,0.32,4586,0.32,4587,0.32,4588,0.32,4589,0.32,4590,0.32,4591,0.32,4592,0.32,4593,0.32,4594,0.32,4595,0.32,4596,0.32,4597,0.32,4598,0.32,4599,0.32,4600,0.32,4601,0.32,4602,0.32,4603,0.32,4604,0.32,4605,0.32,4606,0.32,4607,0.32,4608,0.32,4609,0.32,4610,3.791,4611,0.85,4612,0.582,4613,0.582,4614,0.622,4615,0.622,4616,0.582,4617,0.32,4618,0.32,4619,1.347,4620,1.347,4621,0.582,4622,0.32,4623,0.32,4624,0.622,4625,0.622,4626,0.622,4627,0.32,4628,0.32,4629,0.622,4630,0.32,4631,0.32,4632,0.622,4633,0.32,4634,0.32,4635,0.32,4636,0.32,4637,0.32,4638,0.32,4639,0.32,4640,0.32,4641,0.32,4642,0.32,4643,0.32,4644,0.32,4645,0.32,4646,0.32,4647,0.32,4648,0.32,4649,0.32,4650,0.32,4651,0.32,4652,0.32,4653,0.32,4654,0.32,4655,0.32,4656,0.32,4657,0.32,4658,0.32,4659,0.32,4660,0.32,4661,0.32,4662,0.32,4663,0.32,4664,0.32,4665,0.32,4666,0.32,4667,0.32,4668,0.32,4669,0.32,4670,0.32,4671,0.32,4672,0.32,4673,0.32,4674,0.32,4675,0.32,4676,0.32,4677,0.32,4678,0.32,4679,0.32,4680,0.32,4681,0.32,4682,0.32,4683,0.32,4684,0.32,4685,0.32,4686,0.32,4687,0.32,4688,0.32,4689,0.32,4690,0.32,4691,0.32,4692,0.32,4693,0.32,4694,0.32,4695,0.32,4696,0.32,4697,0.32,4698,0.32,4699,0.32,4700,0.32,4701,0.32,4702,0.32,4703,0.32,4704,0.32,4705,0.32,4706,0.32,4707,0.32,4708,0.32,4709,0.32,4710,0.32,4711,0.32,4712,0.32,4713,0.32,4714,0.32,4715,0.32,4716,0.32,4717,0.32,4718,0.32,4719,0.32,4720,0.32,4721,0.32,4722,0.32,4723,0.32,4724,0.32,4725,0.32,4726,0.32,4727,0.32,4728,0.32,4729,0.32,4730,0.32,4731,0.32,4732,0.32,4733,0.32,4734,0.32,4735,0.32,4736,0.32,4737,0.32,4738,0.807,4739,1.919,4740,0.32,4741,0.32,4742,0.32,4743,0.32,4744,0.32,4745,0.32,4746,0.32,4747,0.32,4748,0.622,4749,0.32,4750,1.685,4751,0.32,4752,0.32,4753,0.32,4754,0.32,4755,0.32,4756,0.32,4757,0.32,4758,0.32,4759,0.32,4760,0.32,4761,0.32,4762,0.32,4763,0.32,4764,0.32,4765,0.622,4766,0.32,4767,0.32,4768,0.32,4769,0.582,4770,0.909,4771,0.32,4772,0.32,4773,0.32,4774,0.32,4775,0.32,4776,0.32,4777,0.32,4778,0.32,4779,0.32,4780,0.32,4781,0.32,4782,0.32,4783,0.32,4784,0.32,4785,0.32,4786,0.32,4787,0.32,4788,0.32,4789,0.32,4790,0.32,4791,0.32,4792,1.181,4793,0.32,4794,0.582,4795,0.622,4796,0.622,4797,0.32,4798,0.32,4799,0.32,4800,0.32,4801,0.32,4802,0.32,4803,0.32,4804,0.32,4805,0.32,4806,0.32,4807,0.32,4808,0.32,4809,0.32,4810,0.32,4811,0.32,4812,0.32,4813,0.32,4814,0.32,4815,0.32,4816,0.32,4817,0.32,4818,0.32,4819,0.32,4820,0.32,4821,0.32,4822,0.32,4823,0.32,4824,0.32,4825,0.32,4826,0.32,4827,1.439,4828,0.622,4829,0.32,4830,0.32,4831,0.32,4832,0.32,4833,0.32,4834,0.32,4835,0.32,4836,0.582,4837,0.32,4838,0.32,4839,0.32,4840,0.909,4841,0.32,4842,0.32,4843,0.32,4844,0.582,4845,1.181,4846,0.622,4847,0.32,4848,0.32,4849,0.32,4850,0.32,4851,0.32,4852,0.32,4853,0.32,4854,0.32,4855,0.32,4856,0.32,4857,0.32,4858,0.32,4859,0.32,4860,0.32,4861,0.32,4862,0.32,4863,0.32,4864,0.32,4865,0.32,4866,0.622,4867,0.32,4868,0.32,4869,0.32,4870,0.32,4871,0.32,4872,0.32,4873,0.32,4874,0.32,4875,0.32,4876,0.32,4877,0.32,4878,0.32,4879,0.622,4880,0.32,4881,0.32,4882,0.32,4883,0.32,4884,0.32,4885,0.32,4886,0.32,4887,0.32,4888,0.32,4889,0.32,4890,0.32,4891,0.622,4892,0.32,4893,0.32,4894,0.32,4895,0.32,4896,0.32,4897,0.32,4898,0.32,4899,0.32,4900,0.32,4901,0.32,4902,0.32,4903,0.32]],["title/modules/utils/#utilities-telethonutils",[1057,2.95,4108,4.776]],["text/modules/utils/#utilities-telethonutils",[34,2.465,42,3.662,52,2.761,61,2.563,102,2.58,129,2.615,227,3.878,277,2.53,315,3.199,478,4.319,521,3.077,542,3.767,556,5.085,896,5.929,1057,5.169,4109,8.368]],["title/modules/utils/#telethon.utils.chunks",[2540,4.624]],["text/modules/utils/#telethon.utils.chunks",[4,0.599,22,1.376,44,1.351,61,2.683,135,1.176,184,6.795,185,3.401,427,5.601,589,3.12,592,6.543,804,6.205,881,5.01,939,5.297,1064,4.161,1216,5.774,1268,1.749,1952,4.518,2202,4.602,2540,7.091,2556,4.52,2952,4.788,2953,4.892,2954,4.892,2955,4.892,2956,4.892,2957,4.892,4097,6.27,4110,3.447,4111,8.757,4112,8.757,4113,7.063]],["title/modules/utils/#telethon.utils.decode_waveform",[4114,5.51]],["text/modules/utils/#telethon.utils.decode_waveform",[4,0.611,22,1.053,135,0.901,187,5.094,223,1.629,269,4.626,576,3.827,587,4.89,588,3.94,589,3.968,978,3.663,1268,1.339,1287,5.641,1433,5.216,1440,2.825,2101,4.144,2103,5.559,3403,4.421,3405,4.99,4103,4.594,4110,2.639,4114,4.801,4115,9.071,4116,6.888,4117,6.535,4118,5.408,4119,5.408,4120,5.408,4121,5.408,4122,5.408,4123,5.408,4124,5.408,4125,5.408,4126,5.408,4127,5.408,4128,5.408,4129,5.408,4130,5.408,4131,5.408,4132,5.408,4133,5.408,4134,5.408,4135,5.408,4136,5.408,4137,5.408,4138,5.408,4139,5.408,4140,5.408,4141,7.361,4142,9.694,4143,9.446,4144,8.405,4145,6.888,4146,6.253,4147,6.888]],["title/modules/utils/#telethon.utils.encode_waveform",[4117,5.51]],["text/modules/utils/#telethon.utils.encode_waveform",[4,0.611,12,1.52,22,0.763,24,2.105,36,2.513,44,0.902,69,1.497,135,0.652,139,2.581,162,2.614,181,4.356,187,3.169,189,2.916,223,0.867,234,1.984,269,3.674,277,2.345,298,3.884,316,4.714,450,1.606,491,1.903,542,2.632,576,3.304,586,3.884,587,6.159,588,3.744,589,1.73,978,1.715,1057,3.612,1086,3.129,1148,7.875,1268,0.97,1286,2.918,1287,3.002,1291,4.049,1433,4.142,1440,4.711,1691,5.153,1787,4.356,2103,3.884,2448,5.19,2919,7.373,3403,3.202,3405,3.963,4103,4.966,4110,1.912,4114,5.19,4115,9.279,4117,6.209,4143,7.765,4144,5.471,4145,3.665,4146,4.966,4147,3.665,4148,5.846,4149,8.704,4150,5.846,4151,5.846,4152,4.966,4153,6.995,4154,5.846,4155,3.917,4156,3.917,4157,3.917,4158,3.917,4159,3.917,4160,3.917,4161,3.917,4162,3.917,4163,3.917,4164,3.917,4165,3.917,4166,3.917,4167,3.917,4168,3.917,4169,3.917,4170,3.917,4171,3.917,4172,3.917,4173,3.917,4174,3.917,4175,3.917,4176,3.917,4177,3.917,4178,3.917,4179,3.917,4180,3.917,4181,3.917,4182,3.917,4183,3.917,4184,3.917,4185,3.917,4186,3.917,4187,3.917,4188,3.917,4189,3.917,4190,3.917,4191,3.917,4192,3.917,4193,3.917,4194,5.846,4195,5.846,4196,5.846,4197,5.846,4198,3.917,4199,3.917,4200,5.846,4201,6.995,4202,6.995]],["title/modules/utils/#telethon.utils.get_appropriated_part_size",[4203,5.808]],["text/modules/utils/#telethon.utils.get_appropriated_part_size",[0,4.048,4,0.594,22,1.348,95,4.22,135,1.153,139,3.015,158,4.692,184,6.755,223,2.087,273,4.748,743,3.491,767,6.442,816,4.077,909,7.069,981,5.094,1268,1.714,1369,6.144,2556,4.463,2608,5.878,3151,5.303,3379,4.904,4110,3.377,4203,6.476,4204,9.879,4205,6.92,4206,6.92,4207,6.92,4208,6.92,4209,6.92,4210,6.92,4211,6.92,4212,6.92,4213,6.92,4214,6.92,4215,6.92,4216,6.92,4217,6.92,4218,6.92,4219,6.92,4220,6.92,4221,6.92,4222,6.92]],["title/modules/utils/#telethon.utils.get_attributes",[4223,5.51]],["text/modules/utils/#telethon.utils.get_attributes",[4,0.612,9,2.612,22,0.652,44,0.517,102,1.033,109,1.097,129,1.047,135,0.558,139,2.746,147,2.71,178,2.035,180,3.687,181,6.102,187,1.815,189,4.52,214,2.824,219,1.322,223,0.741,291,3.737,302,2.035,368,1.414,369,1.537,416,3.447,417,2.431,450,2.722,491,1.689,507,1.652,557,2.646,589,2.292,711,2.003,759,6.924,803,1.749,883,2.182,978,3.739,991,2.813,1002,1.6,1046,1.708,1166,2.611,1176,1.67,1268,0.829,1293,2.973,1360,2.373,1682,4.733,1691,4.22,1756,5.02,1760,2.845,1902,6.576,1903,2.738,2309,3.976,2363,4.868,2430,2.56,2431,4.1,2471,5.194,2542,2.973,2556,2.678,3411,2.431,3434,2.973,3532,4.408,3534,6.765,3535,4.408,3560,5.396,3638,2.973,3899,2.973,3900,2.973,3901,2.973,3902,2.973,3903,2.973,3904,2.973,3905,2.973,3906,2.973,3907,2.973,3908,2.973,3909,2.973,3910,2.973,3911,2.973,3912,2.973,3913,2.973,3914,2.973,3915,2.973,3916,2.973,3917,2.973,3918,2.973,3919,2.973,3920,2.973,3921,2.973,3922,2.973,3923,2.973,3924,2.973,3925,2.973,3926,2.973,3927,2.973,3928,2.973,3929,2.973,3930,2.973,3931,2.973,3932,2.973,3933,2.973,3934,2.973,3935,2.973,3936,2.973,3937,2.973,3946,2.973,3947,2.973,3948,2.973,3949,2.973,3950,2.973,3951,2.973,3952,2.973,3953,2.973,3954,2.973,3955,2.973,3956,2.973,3957,2.973,3958,2.973,3959,2.973,3960,2.973,3961,2.973,3962,2.973,3963,2.973,3964,2.973,3965,2.973,3966,2.973,4110,1.634,4146,2.845,4152,6.957,4223,2.973,4224,3.349,4225,3.349,4226,3.349,4227,3.349,4228,3.349,4229,3.349,4230,3.134,4231,3.349,4232,3.349,4233,2.973,4234,8.828,4235,5.189,4236,2.973,4237,5.189,4238,2.973,4239,5.64,4240,4.607,4241,2.973,4242,3.134,4243,3.349,4244,3.349,4245,3.134]],["title/modules/utils/#telethon.utils.get_display_name",[4246,5.808]],["text/modules/utils/#telethon.utils.get_display_name",[0,3.701,4,0.607,9,2.886,22,1.172,102,2.438,135,1.002,171,4.589,180,3.493,186,4.884,223,2.288,277,2.39,450,2.426,460,3.305,521,3.937,800,2.815,801,2.999,833,4.08,939,3.349,1086,4.232,1176,3.943,1268,1.49,1493,5.891,1639,3.998,1679,3.921,1807,4.08,1852,4.264,1896,4.08,1949,3.998,2023,4.756,2024,4.92,2556,4.081,2682,7.965,2683,7.965,2960,4.169,2961,4.169,2962,4.264,2963,4.484,2964,4.369,2965,4.08,2966,3.998,2967,4.169,2968,4.169,2969,4.08,2970,4.264,3402,5.753,4110,2.937,4246,5.632,4247,6.018]],["title/modules/utils/#telethon.utils.get_extension",[4248,5.808]],["text/modules/utils/#telethon.utils.get_extension",[0,3.624,3,2.868,4,0.606,22,1.135,50,4.342,61,2.662,114,2.211,135,0.971,163,3.357,169,4.606,170,4.508,185,2.264,223,2.133,253,2.785,450,2.778,454,2.338,512,2.649,542,2.624,558,2.756,585,3.486,1176,4.335,1242,4.13,1268,1.443,1440,3.044,1559,4.037,1589,3.951,1597,4.037,1682,4.342,1699,6.117,1709,6.309,1756,6.117,2247,3.728,2548,4.231,2605,4.951,2972,4.13,2973,4.13,2974,4.13,2975,4.13,3291,4.037,3292,4.13,3293,4.13,3294,4.13,3295,4.231,3296,4.13,3325,4.13,3326,4.13,3327,4.13,3328,4.13,3329,4.13,3330,4.13,3379,4.13,3390,4.342,3391,4.466,3392,4.342,3534,5.932,4110,2.844,4242,5.454,4245,5.454,4248,5.454,4249,8.133,4250,5.454,4251,5.454,4252,4.951,4253,5.828,4254,5.828]],["title/modules/utils/#telethon.utils.get_inner_text",[3944,5.272]],["text/modules/utils/#telethon.utils.get_inner_text",[0,3.538,1,2.959,4,0.601,9,2.053,22,1.095,26,5.355,135,0.937,185,2.184,192,3.688,214,3.603,223,1.889,239,3.728,301,4.033,344,4.924,364,2.334,369,3.469,450,2.077,501,4.593,521,3.942,576,4.057,588,4.045,592,4.834,881,4.324,938,4.521,956,5.639,1028,4.593,1046,3.856,1268,1.393,1292,3.895,1761,5.021,2495,8.103,2556,3.901,2570,6.179,2979,2.774,3472,6.42,3742,4.992,3743,4.992,3744,4.992,3745,4.992,3746,4.992,3747,4.992,3748,4.992,3749,4.992,3750,4.992,3751,4.992,3752,4.992,3753,4.992,3754,4.992,3755,4.992,3756,4.992,3757,4.992,3758,4.992,3759,4.992,3760,4.992,3761,4.992,3944,4.777,4110,2.744,4255,7.558,4256,7.558,4257,5.624,4258,5.262,4259,5.624]],["title/modules/utils/#telethon.utils.get_input_channel",[4260,5.51]],["text/modules/utils/#telethon.utils.get_input_channel",[4,0.609,6,2.158,22,1.017,34,2.116,44,1.109,107,2.956,114,1.98,135,0.869,166,4.298,200,4.232,223,1.959,267,2.725,276,1.508,319,3.204,327,3.945,398,3.753,450,2.7,454,2.094,521,3.921,627,2.945,800,1.665,801,2.725,806,2.905,813,4.11,884,5.353,978,2.285,1058,5.378,1062,3.889,1176,4.097,1225,5.353,1268,1.293,1349,4.298,1472,3.616,1803,5.874,2360,3.225,2595,3.468,2726,4.434,2727,7.883,3098,4.125,3099,4.125,3137,4.268,3138,4.268,3139,4.125,3140,4.125,3141,4.125,3142,4.125,3143,4.125,3144,4.125,3145,4.125,3146,4.125,3147,4.125,3148,4.125,3149,4.125,3150,4.125,3151,4,3152,4.125,3153,4.125,3154,4.268,3155,4.125,3156,4.125,3157,4.125,3158,4.125,3455,4.434,4110,2.547,4260,6.378,4261,3.616,4262,5.22,4263,4.885,4264,5.22,4265,5.22,4266,3.468,4267,4.976,4268,4.634,4269,6.378,4270,4.885,4271,4.885]],["title/modules/utils/#telethon.utils.get_input_chat_photo",[4272,5.808]],["text/modules/utils/#telethon.utils.get_input_chat_photo",[4,0.607,22,1.218,114,2.372,135,1.041,163,4.713,223,2.106,277,2.451,398,4.234,450,2.709,454,2.509,971,4.941,990,5.112,993,5.112,1058,3.8,1176,4.043,1268,1.549,2009,7.985,2360,3.863,2548,4.54,2595,5.385,3285,5.552,3286,5.552,3402,5.282,3574,5.312,4110,3.052,4261,4.331,4266,4.154,4267,5.615,4272,5.852,4273,6.253,4274,6.253,4275,6.253,4276,6.253,4277,6.253,4278,6.253,4279,6.253,4280,6.253,4281,6.253,4282,6.253,4283,6.253,4284,6.253,4285,6.253,4286,6.253,4287,6.253,4288,6.253,4289,6.253,4290,5.852,4291,6.253]],["title/modules/utils/#telethon.utils.get_input_dialog",[4292,5.808]],["text/modules/utils/#telethon.utils.get_input_dialog",[4,0.605,22,1.299,114,3.204,135,1.111,223,2.052,274,5.678,398,4.413,430,3.032,450,2.321,454,3.39,1058,5.135,1268,1.652,2247,4.267,2360,4.121,2595,5.613,3038,5.453,3039,5.453,3040,5.453,3191,5.453,3192,5.453,3193,5.453,3194,5.453,3195,5.453,3196,5.453,3197,5.453,3198,5.453,3199,5.453,3200,5.453,3201,5.453,3202,5.453,3489,5.922,4110,3.255,4261,4.62,4266,4.431,4267,5.852,4292,6.242,4293,6.67,4294,6.67,4295,6.242,4296,6.242,4297,9.748]],["title/modules/utils/#telethon.utils.get_input_document",[3566,5.074]],["text/modules/utils/#telethon.utils.get_input_document",[3,3.607,4,0.609,22,1.138,63,1.105,114,2.216,135,0.973,170,2.489,223,2.135,276,2.24,398,4.049,450,2.724,454,2.344,813,4.435,1058,3.551,1176,4.623,1268,1.447,1953,6.338,2008,7.114,2360,3.609,2595,3.881,3010,5.187,3011,5.187,3012,5.187,3013,5.187,3014,5.187,3015,5.187,3016,5.187,3017,5.187,3018,5.187,3019,5.187,3020,5.187,3021,5.187,3022,5.187,3023,5.187,3024,5.187,3025,5.187,3026,5.187,3027,5.187,3028,5.187,3566,7.114,4110,2.851,4252,4.963,4261,4.047,4266,3.881,4267,5.37,4298,5.843,4299,5.843,4300,5.843,4301,5.843,4302,5.467,4303,5.467,4304,5.467,4305,5.843]],["title/modules/utils/#telethon.utils.get_input_geo",[4306,5.51]],["text/modules/utils/#telethon.utils.get_input_geo",[4,0.608,22,1.155,63,1.122,114,2.249,135,0.987,170,2.526,223,2.145,398,4.089,450,2.735,454,2.379,659,4.544,976,5.264,1058,3.603,1176,4.65,1212,5.423,1268,1.468,2360,3.663,2493,5.264,2595,3.939,3288,5.264,3289,5.264,3540,7.898,3541,7.781,3542,5.036,4110,2.893,4261,4.107,4266,3.939,4267,5.423,4306,7.781,4307,5.929,4308,5.929,4309,5.929,4310,5.929,4311,5.929,4312,5.929,4313,5.929,4314,5.929,4315,5.929,4316,5.929,4317,5.929,4318,5.929,4319,5.929,4320,5.929,4321,5.929,4322,5.929,4323,5.929,4324,5.929,4325,5.929,4326,7.829,4327,5.929,4328,5.929,4329,5.548]],["title/modules/utils/#telethon.utils.get_input_location",[4330,5.808]],["text/modules/utils/#telethon.utils.get_input_location",[4,0.591,22,1.405,63,1.678,109,2.907,135,1.201,194,4.633,223,2.126,252,4.689,398,4.633,416,5.893,542,3.993,1058,4.383,1268,1.786,1357,8.132,1623,4.032,2360,4.455,2817,6.654,3355,7.47,3818,6.402,3862,6.402,3863,6.402,3864,6.402,3865,6.402,3866,6.402,3867,6.402,3868,6.402,4110,3.519,4261,4.995,4330,6.748,4331,7.211,4332,7.211]],["title/modules/utils/#telethon.utils.get_input_media",[2610,5.272]],["text/modules/utils/#telethon.utils.get_input_media",[3,1.437,4,0.612,22,0.523,63,0.508,114,1.019,135,0.447,139,1.292,163,2.742,170,4.593,180,2.528,189,3.153,223,2.115,252,2.303,276,2.265,291,3.629,364,1.808,398,2.275,450,2.907,454,1.078,491,1.418,800,1.389,803,2.275,813,2.492,883,2.838,1058,1.632,1144,2.384,1166,0.856,1176,4.51,1268,0.665,1363,2.384,1608,3.867,1682,3.245,1828,2.786,1889,5.37,1902,4.668,2118,3.245,2360,1.659,2363,4.211,2431,4.342,2447,3.867,2548,3.162,2595,3.65,2608,2.281,2610,3.7,2682,3.7,2683,3.7,2860,3.867,3212,2.384,3213,2.384,3214,2.384,3215,2.384,3216,2.384,3217,2.384,3218,2.384,3219,2.384,3220,2.384,3221,2.384,3222,2.384,3223,2.384,3227,2.384,3228,2.384,3229,2.384,3230,2.384,3231,2.384,3232,2.384,3233,2.384,3234,2.384,3235,2.384,3236,2.384,3237,2.384,3238,2.384,3239,2.384,3240,2.384,3241,2.384,3242,2.384,3243,2.196,3244,2.196,3245,2.196,3246,2.196,3247,2.196,3248,2.196,3249,2.196,3250,2.196,3251,2.384,3252,2.196,3253,2.196,3254,2.196,3255,2.196,3256,2.196,3257,2.196,3258,2.196,3259,2.196,3260,2.196,3261,2.196,3262,2.384,3263,2.384,3264,2.384,3265,2.384,3402,2.838,3534,2.058,3540,3.162,3543,2.384,3544,2.281,3546,2.384,3547,2.281,3560,4.668,3566,3.561,3616,2.384,3634,2.384,4110,1.311,4223,2.384,4230,2.513,4250,2.513,4251,2.513,4252,2.281,4261,1.86,4266,1.784,4267,3.017,4302,2.513,4303,2.513,4304,2.513,4306,3.867,4329,2.513,4333,7.441,4334,4.356,4335,2.686,4336,2.686,4337,2.686,4338,2.686,4339,2.686,4340,2.686,4341,2.686,4342,2.686,4343,2.686,4344,2.686,4345,2.686,4346,2.686,4347,2.686,4348,2.686,4349,2.686,4350,2.686,4351,2.686,4352,2.686,4353,2.686,4354,2.686,4355,2.686,4356,2.686,4357,2.686,4358,2.686,4359,2.686,4360,2.686,4361,2.686,4362,2.686,4363,2.686,4364,2.686,4365,2.686,4366,2.686,4367,2.686,4368,2.686,4369,2.686,4370,2.686,4371,2.686,4372,2.686,4373,2.686,4374,2.686,4375,2.686,4376,2.686,4377,2.686,4378,2.686,4379,2.686,4380,2.686,4381,2.686,4382,2.686,4383,2.686,4384,2.686,4385,2.513,4386,2.513,4387,5.495,4388,5.495,4389,4.076,4390,2.384,4391,6.322,4392,2.513,4393,2.686,4394,4.356,4395,2.686,4396,2.686,4397,2.686,4398,2.686,4399,2.686,4400,2.686,4401,4.356,4402,4.356,4403,2.686,4404,2.686,4405,2.686,4406,2.686,4407,2.686,4408,2.513,4409,2.686]],["title/modules/utils/#telethon.utils.get_input_message",[4410,5.808]],["text/modules/utils/#telethon.utils.get_input_message",[4,0.604,22,1.299,63,2.032,114,2.53,135,1.111,223,2.052,276,1.928,398,4.413,430,3.032,450,2.321,454,2.676,512,3.032,542,3.803,641,3.364,673,4.267,1058,4.054,1176,3.327,1268,1.652,2360,4.121,2430,3.291,2595,5.613,3402,5.505,4110,3.255,4261,4.62,4266,4.431,4267,4.62,4389,6.242,4410,6.242,4411,6.67,4412,6.67,4413,6.67,4414,6.67,4415,6.67,4416,6.67,4417,6.67,4418,6.67,4419,6.67,4420,6.67,4421,6.67,4422,6.67,4423,6.67,4424,8.449,4425,6.67,4426,6.67,4427,6.242,4428,6.67]],["title/modules/utils/#telethon.utils.get_input_peer",[1058,3.772]],["text/modules/utils/#telethon.utils.get_input_peer",[0,3.119,4,0.61,6,1.226,22,0.483,28,0.755,34,1.776,44,0.803,74,1.755,79,1.587,94,1.021,95,1.21,102,2.336,109,1.705,114,0.941,118,2.028,126,1.224,129,1.276,135,0.413,139,0.735,162,0.836,166,2.442,167,1.399,176,2.14,183,1.507,192,1.992,220,1.724,223,2.139,233,0.818,267,2.286,269,1.559,276,1.925,277,1.573,319,2.319,323,2.132,327,4.853,351,0.919,352,1.507,430,2.74,437,2.158,440,1.95,450,2.822,454,0.995,471,2.369,491,1.962,505,1.758,507,2.014,512,3.029,521,3.982,525,1.28,542,3.226,561,2.213,585,1.484,613,1.718,620,2.565,677,2.202,722,1.682,743,3.04,745,2.107,801,2.527,806,3.988,813,5.055,823,1.38,840,3.111,841,1.328,856,1.901,877,2.565,878,2.963,884,3.875,897,2.827,901,1.559,905,1.507,908,1.587,910,1.901,920,2.827,930,2.66,978,1.787,1051,1.96,1058,3.161,1063,1.461,1158,6.47,1166,1.922,1176,4.488,1211,2.481,1245,2.963,1268,0.614,1349,2.442,1361,1.801,1445,1.848,1472,2.827,1522,1.901,1650,2.202,1713,1.901,1782,2.107,1919,2.028,2122,2.028,2247,3.856,2398,1.848,2411,3.041,2470,3.128,2513,2.202,2556,3.111,2595,1.648,2726,4.418,2727,2.107,2817,2.827,2893,1.848,2966,1.648,3061,1.718,3062,1.718,3063,1.718,3064,1.901,3065,1.96,3066,1.848,3067,1.901,3068,1.901,3073,1.96,3074,2.028,3075,1.848,3076,1.848,3077,1.848,3078,1.848,3079,1.848,3080,1.848,3081,1.848,3082,1.901,3083,1.901,3084,1.901,3085,1.901,3086,2.028,3087,2.028,3088,2.028,3089,2.028,3090,2.028,3091,1.96,3092,1.96,3093,1.96,3094,1.96,3095,1.96,3104,1.96,3105,1.96,3106,1.96,3107,1.96,3108,1.96,3109,1.96,3110,1.96,3111,1.96,3112,1.96,3113,1.96,3114,1.96,3115,1.96,3116,1.96,3117,1.96,3118,1.96,3119,1.96,3120,1.96,3121,1.96,3122,2.028,3123,1.96,3124,1.96,3125,1.96,3126,1.96,3128,1.96,3129,1.96,3130,1.96,3131,1.96,3132,1.96,3133,1.96,3134,2.028,3135,1.96,3179,1.96,3180,1.96,3181,1.96,3182,1.96,3183,1.96,3184,1.96,3185,1.96,3186,1.96,3304,1.758,3305,1.682,3306,1.682,3307,1.682,3308,1.718,3309,1.682,3310,1.682,3311,1.682,3312,1.682,3313,1.718,3314,1.718,3315,1.758,3316,1.718,3317,1.758,3318,1.718,3319,1.718,3320,1.758,3321,1.758,3331,3.226,3394,2.107,3396,2.107,3402,2.66,3410,2.028,3413,2.107,3425,1.801,3439,3.041,3564,2.202,4110,1.21,4266,1.648,4267,2.827,4268,3.624,4269,3.624,4270,2.321,4271,2.321,4295,2.321,4296,2.321,4429,5.201,4430,7.576,4431,4.082,4432,4.082,4433,2.48,4434,2.48,4435,2.48,4436,2.48,4437,2.321,4438,2.321,4439,2.321,4440,5.201,4441,2.321,4442,2.321,4443,2.321,4444,2.321]],["title/modules/utils/#telethon.utils.get_input_photo",[2548,4.506]],["text/modules/utils/#telethon.utils.get_input_photo",[4,0.611,22,0.893,63,1.241,102,1.413,114,1.738,135,0.763,163,4.777,170,1.952,223,2.096,276,1.895,277,1.385,398,3.425,450,2.92,454,1.839,801,1.738,813,3.751,910,3.512,1058,2.785,1176,4.919,1268,1.135,1919,3.746,1953,5.36,2360,2.831,2548,6.067,2595,3.044,3402,4.272,3574,6.504,3870,4.068,3871,4.068,3872,4.068,3873,4.068,3874,4.068,3875,4.068,3876,4.068,3877,4.068,3878,4.068,3879,4.068,3880,4.068,3881,4.068,3882,4.068,3883,4.068,3884,4.068,3885,4.068,3886,4.068,4110,2.236,4261,3.174,4266,3.044,4267,4.542,4268,4.068,4290,6.135,4385,4.288,4386,4.288,4390,4.068,4392,4.288,4438,4.288,4439,4.288,4444,4.288,4445,4.582,4446,4.582,4447,4.582,4448,4.582,4449,4.582,4450,4.582,4451,4.582,4452,4.582,4453,4.582,4454,4.582,4455,4.582,4456,4.582,4457,4.582,4458,4.582,4459,4.582,4460,4.582,4461,4.582,4462,4.582,4463,4.582,4464,4.582,4465,4.582,4466,4.582,4467,4.582]],["title/modules/utils/#telethon.utils.get_input_user",[931,4.904]],["text/modules/utils/#telethon.utils.get_input_user",[4,0.61,6,1.972,22,0.894,34,1.934,44,1.013,102,2.025,107,2.701,114,1.741,135,0.765,166,3.927,200,3.868,223,2.145,267,2.49,276,1.327,319,2.928,327,3.606,398,3.429,450,2.836,454,1.842,521,3.94,627,2.59,800,1.464,801,1.741,806,2.555,813,3.756,878,3.333,884,4.892,910,3.518,930,4.278,931,5.188,978,2.01,986,3.518,1051,6.993,1058,5.083,1176,4.591,1225,4.892,1268,1.137,1349,3.927,1472,3.18,1803,5.368,1919,3.753,2360,2.836,2411,3.421,2498,3.518,2595,3.05,3032,3.753,3033,3.753,3034,3.753,3035,3.753,3042,3.628,3043,3.628,3044,3.753,3045,3.753,3046,3.753,3047,3.753,3048,3.753,3049,3.753,3050,3.753,3051,4.076,3052,3.753,3053,3.753,3054,3.753,3055,3.753,3056,3.753,3057,3.753,3058,3.753,3059,3.753,3161,3.628,3166,3.753,3167,3.753,3168,3.753,3169,3.753,3170,3.753,3171,3.753,3172,3.753,3173,3.753,3174,3.753,3175,3.518,3394,5.577,3487,4.076,3488,4.076,3496,3.9,4110,2.241,4260,4.076,4261,3.18,4263,4.296,4266,3.05,4267,4.548,4437,4.296,4441,4.296,4442,4.296,4443,4.296,4468,4.591,4469,4.591,4470,4.591,4471,4.591]],["title/modules/utils/#telethon.utils.get_message_id",[3585,5.272]],["text/modules/utils/#telethon.utils.get_message_id",[4,0.601,22,1.325,63,2.038,114,2.58,135,1.133,166,4.069,223,2.071,276,2.704,398,4.468,430,3.092,450,2.35,454,2.729,460,3.736,743,3.431,1058,4.134,1166,2.728,1176,3.393,1268,1.685,2247,4.351,2360,4.203,2430,3.356,2595,4.519,3585,5.778,4110,3.32,4261,4.712,4266,4.519,4427,8.005,4472,6.803,4473,6.803,4474,6.803,4475,6.803,4476,6.803,4477,6.803,4478,6.803,4479,6.803,4480,6.803,4481,6.803,4482,6.803,4483,6.803,4484,6.803,4485,6.803,4486,6.803,4487,6.803,4488,6.803]],["title/modules/utils/#telethon.utils.get_peer_id",[3451,4.904]],["text/modules/utils/#telethon.utils.get_peer_id",[4,0.607,12,0.971,22,0.727,44,0.87,50,4.202,51,2.226,52,1.861,53,1.462,89,3.675,102,2.507,114,2.139,129,1.167,135,0.622,143,3.657,152,1.373,185,2.191,195,1.681,217,1.822,221,1.984,223,2.022,225,2.361,276,2.869,277,1.705,351,1.384,363,2.051,368,2.382,437,2.982,450,2.439,454,2.263,460,3.097,491,1.215,502,2.589,512,2.564,525,4.581,537,2.269,554,4.322,600,2.481,619,2.078,655,2.307,743,1.884,801,2.578,806,5.994,816,2.2,855,2.782,856,2.862,882,3.997,896,3.997,908,2.389,930,4.428,938,3.374,939,3.782,941,2.481,978,3.559,1166,1.191,1176,3.777,1268,0.925,1273,4.095,1389,2.646,1391,5.2,1437,2.587,1738,5.007,1832,3.172,2134,6.723,2136,3.315,2247,3.608,2346,4.322,2360,2.307,2411,4.202,2430,3.353,2556,2.911,3402,2.433,3451,2.951,3986,3.315,3987,3.315,3988,3.315,3989,3.315,3990,3.315,3991,3.315,3992,3.315,3993,3.315,3994,3.315,3995,3.315,3996,3.315,3997,3.315,4110,1.822,4267,3.907,4269,7.59,4489,5.64,4490,5.64,4491,5.64,4492,5.64,4493,3.734,4494,3.734,4495,3.734,4496,3.734,4497,3.734,4498,3.734,4499,3.734,4500,3.734,4501,3.734,4502,3.734,4503,3.734,4504,3.734,4505,3.734,4506,3.734,4507,3.734,4508,3.734,4509,3.734,4510,3.734,4511,3.734,4512,3.734,4513,3.734,4514,3.734,4515,3.734,4516,3.734,4517,3.734,4518,3.734,4519,3.734,4520,3.734,4521,3.734,4522,3.734,4523,3.734,4524,3.734,4525,3.734,4526,3.734,4527,3.734,4528,3.734,4529,3.734,4530,3.734,4531,3.734,4532,3.734,4533,3.734,4534,3.734,4535,6.034,4536,3.734,4537,5.64,4538,5.64,4539,3.734,4540,3.734,4541,3.734,4542,6.797,4543,3.734,4544,3.734,4545,3.734,4546,3.734,4547,3.734,4548,3.734]],["title/modules/utils/#telethon.utils.is_audio",[4236,5.51]],["text/modules/utils/#telethon.utils.is_audio",[4,0.6,22,1.457,33,4.628,135,1.246,139,3.2,223,2.161,491,2.952,782,6.619,978,3.274,1268,1.853,1709,6.585,1903,6.116,3684,6.641,3685,6.641,3686,6.641,3687,6.641,4110,3.651,4233,6.641,4236,6.641,4549,6.355,4550,7]],["title/modules/utils/#telethon.utils.is_gif",[4551,5.808]],["text/modules/utils/#telethon.utils.is_gif",[4,0.592,22,1.471,33,4.654,61,2.795,135,1.258,139,3.141,223,2.17,491,2.969,492,5.017,501,4.589,1087,5.733,1268,1.87,1709,6.623,1915,6.646,2282,6.174,3678,6.704,3679,6.704,3680,6.704,3681,6.704,4110,3.685,4549,6.415,4551,7.066,4552,7.066]],["title/modules/utils/#telethon.utils.is_image",[4553,5.808]],["text/modules/utils/#telethon.utils.is_image",[4,0.601,22,1.38,33,4.476,61,2.688,135,1.18,139,3.135,159,6.077,163,3.072,223,2.204,450,1.946,491,3.102,492,4.706,501,5.792,1087,5.513,1176,3.533,1268,1.754,1709,6.369,3667,6.289,3668,6.289,3669,6.289,3670,6.289,3671,6.289,3672,6.289,3673,6.289,3674,6.289,3675,6.289,4110,3.457,4549,6.017,4552,6.629,4553,6.629,4554,7.084,4555,6.017]],["title/modules/utils/#telethon.utils.is_list_like",[4556,5.808]],["text/modules/utils/#telethon.utils.is_list_like",[4,0.587,22,1.329,33,4.372,135,1.136,188,2.693,201,5.693,214,3.996,223,2.074,224,4.187,225,4.114,252,4.53,416,4.532,417,4.952,491,2.789,502,3.933,518,4.423,561,4.645,592,5.481,772,4.645,885,5.481,886,4.834,1176,3.403,1211,5.208,1268,1.689,2556,4.423,3562,7.279,3696,6.056,3697,6.056,3698,6.056,3699,6.056,3700,6.056,3701,6.056,3702,6.056,3703,6.056,3704,6.056,4110,3.329,4556,6.384,4557,8.569,4558,8.569,4559,8.569,4560,6.822]],["title/modules/utils/#telethon.utils.is_video",[4238,5.51]],["text/modules/utils/#telethon.utils.is_video",[4,0.6,22,1.457,33,4.628,135,1.246,139,3.2,182,5.933,223,2.161,491,2.952,978,3.274,1268,1.853,1709,6.585,1903,6.116,3690,6.641,3691,6.641,3692,6.641,3693,6.641,4110,3.651,4233,6.641,4238,6.641,4549,6.355,4550,7]],["title/modules/utils/#telethon.utils.pack_bot_file_id",[4561,5.808]],["text/modules/utils/#telethon.utils.pack_bot_file_id",[3,2.37,4,0.61,22,0.798,34,1.781,83,2.49,135,0.682,139,3.087,163,3.115,166,3.616,184,6.08,189,4.685,223,2.079,269,3.799,276,1.747,345,3.053,364,3.291,371,4.632,450,2.68,473,2.575,529,3.14,537,2.49,586,2.722,587,2.722,588,3.845,655,2.531,800,1.928,813,3.458,978,2.646,1086,3.236,1166,2.696,1176,4.783,1250,4.365,1268,1.015,1286,4.504,1292,4.187,1357,4.777,1433,4.283,1664,2.193,1691,2.722,1787,3.053,1819,3.35,1988,4.777,2057,4.777,2103,2.722,2556,3.12,3355,2.975,3402,5.51,3604,3.481,4110,2,4116,5.657,4152,3.481,4239,3.638,4240,3.638,4252,3.481,4390,3.638,4555,5.135,4561,3.834,4562,4.098,4563,4.098,4564,4.098,4565,4.098,4566,4.098,4567,4.098,4568,4.098,4569,4.098,4570,4.098,4571,4.098,4572,4.098,4573,4.098,4574,4.098,4575,4.098,4576,4.098,4577,4.098,4578,4.098,4579,4.098,4580,4.098,4581,4.098,4582,4.098,4583,4.098,4584,4.098,4585,4.098,4586,4.098,4587,4.098,4588,4.098,4589,4.098,4590,4.098,4591,4.098,4592,4.098,4593,4.098,4594,4.098,4595,4.098,4596,4.098,4597,4.098,4598,4.098,4599,4.098,4600,4.098,4601,4.098,4602,4.098,4603,4.098,4604,4.098,4605,4.098,4606,4.098,4607,4.098,4608,4.098,4609,4.098,4610,8.28,4611,3.834,4612,3.834,4613,3.834,4614,6.045,4615,6.045,4616,3.834,4617,4.098,4618,4.098,4619,3.834,4620,3.834]],["title/modules/utils/#telethon.utils.parse_phone",[4621,5.808]],["text/modules/utils/#telethon.utils.parse_phone",[4,0.601,22,1.396,135,1.194,152,3.25,166,5.286,223,2.214,271,5.705,492,4.762,627,4.044,1046,4.509,1087,4.505,1166,2.818,1176,3.575,1268,1.775,1443,5.553,2430,3.536,2556,4.561,3707,6.364,3708,6.364,3709,6.364,3710,6.364,3711,6.364,3712,6.364,3713,6.364,3714,6.364,4110,3.498,4621,6.708,4622,7.168,4623,7.168]],["title/modules/utils/#telethon.utils.parse_username",[2402,5.074]],["text/modules/utils/#telethon.utils.parse_username",[4,0.604,22,1.083,135,0.926,223,2.211,231,4.23,267,2.844,270,4.969,279,3.093,291,4.745,327,4.989,338,4.486,344,3.622,416,4.981,418,5.444,491,1.809,501,5.157,503,3.408,512,3.408,589,2.456,695,4.065,759,6.292,801,2.844,1086,4.014,1166,2.706,1268,1.377,1349,4.486,1443,4.712,1769,6.323,1780,4.722,2402,4.544,2556,4.689,2978,3.18,3717,4.935,3718,4.935,3719,4.935,3720,4.935,3721,4.935,3722,4.935,3723,4.935,3724,4.935,3725,4.935,3726,4.935,3727,4.935,3728,4.935,3729,4.935,3730,4.935,3731,4.935,3732,4.935,3733,4.935,3734,4.935,3735,4.935,3736,4.935,3737,4.935,3738,4.935,3739,4.935,4110,2.713,4624,7.499,4625,7.499,4626,7.499,4627,5.559,4628,5.559,4629,7.499,4630,5.559,4631,5.559]],["title/modules/utils/#telethon.utils.resolve_bot_file_id",[4555,5.272]],["text/modules/utils/#telethon.utils.resolve_bot_file_id",[3,1.377,4,0.611,22,0.496,34,1.23,42,3.82,51,2.092,52,1.377,94,1.717,102,0.786,107,1.717,109,1.368,135,0.424,139,1.817,152,0.937,159,2.891,162,0.859,163,2.299,167,1.438,170,1.778,171,1.479,176,1.717,181,3.11,184,4.823,189,3.823,220,1.076,221,0.897,223,1.886,253,2.533,276,2.098,283,1.205,302,2.537,315,1.596,327,2.292,337,1.765,345,3.11,350,1.765,373,1.458,384,1.844,390,1.418,450,2.341,471,1.479,502,1.17,520,1.602,531,1.806,537,2.537,586,4.823,587,3.521,588,3.619,589,2.707,616,1.661,627,1.438,655,1.575,715,2.459,717,1.4,813,4.738,839,2.958,840,1.525,846,1.953,895,4.245,967,2.014,978,3.625,987,1.85,1002,4.332,1166,2.717,1219,2.72,1229,2.83,1250,2.537,1268,0.631,1287,4.696,1298,2.773,1349,4.044,1357,6.897,1371,2.263,1433,4.342,1440,2.769,1551,2.263,1568,1.85,1593,3.95,1623,1.897,1691,1.693,1749,5.936,1791,2.014,1819,2.084,1953,3.413,2034,1.85,2057,6.544,2101,3.199,2103,1.693,2556,2.154,2876,3.413,2930,1.899,2935,1.899,2995,3.199,3355,1.85,3402,4.995,3405,4.154,3534,1.953,3604,2.165,3975,2.263,4076,2.263,4110,1.244,4146,3.546,4152,2.165,4239,2.263,4240,2.263,4241,3.706,4258,5.734,4408,2.385,4555,2.165,4610,8.483,4611,3.906,4612,2.385,4613,2.385,4616,2.385,4619,5.734,4620,5.734,4632,4.174,4633,2.549,4634,2.549,4635,2.549,4636,2.549,4637,2.549,4638,2.549,4639,2.549,4640,2.549,4641,2.549,4642,2.549,4643,2.549,4644,2.549,4645,2.549,4646,2.549,4647,2.549,4648,2.549,4649,2.549,4650,2.549,4651,2.549,4652,2.549,4653,2.549,4654,2.549,4655,2.549,4656,2.549,4657,2.549,4658,2.549,4659,2.549,4660,2.549,4661,2.549,4662,2.549,4663,2.549,4664,2.549,4665,2.549,4666,2.549,4667,2.549,4668,2.549,4669,2.549,4670,2.549,4671,2.549,4672,2.549,4673,2.549,4674,2.549,4675,2.549,4676,2.549,4677,2.549,4678,2.549,4679,2.549,4680,2.549,4681,2.549,4682,2.549,4683,2.549,4684,2.549,4685,2.549,4686,2.549,4687,2.549,4688,2.549,4689,2.549,4690,2.549,4691,2.549,4692,2.549,4693,2.549,4694,2.549,4695,2.549,4696,2.549,4697,2.549,4698,2.549,4699,2.549,4700,2.549,4701,2.549,4702,2.549,4703,2.549,4704,2.549,4705,2.549,4706,2.549,4707,2.549,4708,2.549,4709,2.549,4710,2.549,4711,2.549,4712,2.549,4713,2.549,4714,2.549,4715,2.549,4716,2.549,4717,2.549,4718,2.549,4719,2.549,4720,2.549,4721,2.549,4722,2.549,4723,2.549,4724,2.549,4725,2.549,4726,2.549,4727,2.549,4728,2.549,4729,2.549,4730,2.549,4731,2.549,4732,2.549,4733,2.549,4734,2.549,4735,2.549,4736,2.549,4737,2.549,4738,2.263,4739,7.666,4740,2.549,4741,2.549,4742,2.549,4743,2.549,4744,2.549,4745,2.549,4746,2.549,4747,2.549,4748,4.174,4749,2.549]],["title/modules/utils/#telethon.utils.resolve_id",[4535,5.51]],["text/modules/utils/#telethon.utils.resolve_id",[4,0.602,22,1.237,33,3.241,42,2.781,94,2.614,113,4.139,135,1.058,194,3.318,223,2.193,276,2.863,277,1.921,279,3.535,339,3.634,450,2.722,492,4.22,501,3.861,589,2.806,759,6.277,800,2.026,801,2.409,804,4.501,806,3.535,855,4.733,856,4.868,857,4.733,868,5.194,895,4.4,938,4.899,978,2.781,1046,3.241,1087,3.992,1268,1.573,1389,4.501,1391,5.797,2061,5.64,2430,3.134,2556,4.227,3517,5.64,4110,3.1,4535,5.64,4750,9.908,4751,6.353,4752,6.353,4753,6.353,4754,6.353,4755,6.353,4756,6.353,4757,6.353,4758,6.353,4759,6.353,4760,6.353,4761,6.353,4762,6.353,4763,6.353,4764,6.353,4765,8.189,4766,6.353,4767,6.353,4768,6.353]],["title/modules/utils/#telethon.utils.resolve_inline_message_id",[4769,5.808]],["text/modules/utils/#telethon.utils.resolve_inline_message_id",[4,0.601,22,1.093,44,1.164,51,2.978,63,1.926,102,2.327,114,2.128,135,0.934,172,2.033,223,2.018,267,2.862,276,2.832,277,2.281,279,4.199,292,4.105,327,4.144,416,5.013,450,2.073,454,2.251,520,4.742,778,5.622,800,2.406,801,2.862,806,5.454,813,5.217,841,4.039,855,5.622,857,5.622,908,4.827,978,2.456,987,5.478,1117,4.742,1166,2.908,1268,1.389,1287,4.299,1357,5.963,1433,5.347,1452,4.662,1545,6.699,1609,3.941,2247,3.589,4110,2.738,4738,4.981,4769,5.25,4770,7.546,4771,5.61,4772,5.61,4773,5.61,4774,5.61,4775,5.61,4776,5.61,4777,5.61,4778,5.61,4779,5.61,4780,5.61,4781,5.61,4782,5.61,4783,5.61,4784,5.61,4785,5.61,4786,5.61,4787,5.61,4788,5.61,4789,5.61,4790,5.61,4791,5.61,4792,9.119,4793,5.61]],["title/modules/utils/#telethon.utils.resolve_invite_link",[4794,5.808]],["text/modules/utils/#telethon.utils.resolve_invite_link",[4,0.599,22,0.945,28,2.078,37,4.729,98,3.133,102,2.786,107,1.996,109,2.81,114,1.84,129,1.516,135,0.808,172,1.757,223,1.897,231,6.013,252,2.565,276,2.987,277,3.062,294,2.664,315,2.61,319,3.044,327,2.664,353,3.289,395,3.654,416,4.535,430,2.205,438,3.073,454,1.946,492,3.223,501,2.948,670,4.306,801,3.252,817,5.598,895,4.729,908,4.367,1086,2.596,1087,3.048,1090,4.837,1153,7.611,1154,4.956,1155,6.075,1166,2.519,1268,1.201,1287,3.717,1433,4.837,1440,3.566,1887,6.061,2034,4.956,2056,6.061,2247,3.103,2402,3.966,2430,3.368,2487,5.395,2556,3.524,2920,3.717,3400,6.71,4110,2.367,4738,4.306,4794,4.539,4795,6.827,4796,6.827,4797,4.851,4798,4.851,4799,4.851,4800,4.851,4801,4.851,4802,4.851,4803,4.851,4804,4.851,4805,4.851,4806,4.851,4807,4.851,4808,4.851,4809,4.851,4810,4.851,4811,4.851,4812,4.851,4813,4.851,4814,4.851,4815,4.851,4816,4.851,4817,4.851,4818,4.851,4819,4.851,4820,4.851,4821,4.851,4822,4.851,4823,4.851,4824,4.851,4825,4.851,4826,4.851,4827,9.036,4828,6.827,4829,4.851,4830,4.851,4831,4.851,4832,4.851,4833,4.851,4834,4.851,4835,4.851]],["title/modules/utils/#telethon.utils.sanitize_parse_mode",[4836,5.808]],["text/modules/utils/#telethon.utils.sanitize_parse_mode",[4,0.608,22,1.416,114,2.015,135,0.885,166,3.178,223,1.973,224,3.098,230,3.511,286,5.743,301,1.999,368,2.243,429,6.324,450,1.46,454,2.131,460,3.993,521,1.954,743,4.182,816,3.129,896,5.153,1046,2.71,1166,1.694,1176,2.65,1250,5.418,1268,1.316,1418,5.875,1443,6.407,1716,4.071,1780,4.513,1959,4.343,2247,3.398,2336,6.472,2419,8.29,2556,3.753,3331,4.198,3384,3.857,3402,4.738,3855,4.716,3856,4.716,3857,4.716,3858,4.716,3859,4.716,3969,4.716,3970,4.716,3971,4.716,3972,4.716,4000,4.716,4001,4.716,4002,4.716,4003,4.716,4004,4.716,4005,4.716,4006,4.716,4007,4.716,4008,4.716,4009,4.716,4010,4.716,4011,4.716,4012,4.716,4013,4.716,4014,4.716,4015,4.716,4016,4.716,4017,4.716,4018,4.716,4110,2.593,4836,4.971,4837,5.313,4838,5.313,4839,5.313,4840,8.291,4841,5.313,4842,5.313,4843,5.313]],["title/modules/utils/#telethon.utils.stripped_photo_to_jpg",[4844,5.808]],["text/modules/utils/#telethon.utils.stripped_photo_to_jpg",[4,0.606,22,1.058,29,2.469,105,2.314,109,1.78,121,5.114,135,0.905,137,1.805,159,5.114,223,1.634,415,4.561,456,4.224,492,3.609,537,4.487,586,3.609,588,4.489,589,3.705,978,2.378,1268,1.345,1440,2.838,1769,7.633,2101,6.896,3064,4.163,3066,4.048,3403,4.441,3405,3.683,3613,8.618,4110,2.651,4241,4.823,4249,6.909,4844,5.084,4845,8.999,4846,7.384,4847,5.433,4848,5.433,4849,5.433,4850,5.433,4851,5.433,4852,5.433,4853,5.433,4854,5.433,4855,5.433,4856,5.433,4857,5.433,4858,5.433,4859,5.433,4860,5.433,4861,5.433,4862,5.433,4863,5.433,4864,5.433,4865,5.433,4866,7.384,4867,5.433,4868,5.433,4869,5.433,4870,5.433,4871,5.433,4872,5.433,4873,5.433,4874,5.433,4875,5.433,4876,5.433,4877,5.433,4878,5.433,4879,7.384,4880,5.433,4881,5.433,4882,5.433,4883,5.433,4884,5.433,4885,5.433,4886,5.433,4887,5.433,4888,5.433,4889,5.433,4890,5.433,4891,7.384,4892,5.433,4893,5.433,4894,5.433,4895,5.433,4896,5.433,4897,5.433,4898,5.433,4899,5.433,4900,5.433,4901,5.433,4902,5.433,4903,5.433]],["title/quick-references/client-reference/",[12,1.241,35,2.494]],["text/quick-references/client-reference/",[1,1.983,4,0.602,6,1.522,7,2.102,12,1.829,13,2.197,17,3.678,27,2.94,34,2.382,35,2.646,44,1.086,45,2.034,51,1.999,58,2.034,63,0.959,80,2.28,81,3.03,84,2.197,87,4.145,95,2.472,102,1.562,137,1.683,150,2.348,198,2.446,229,4.986,230,3.398,231,2.858,234,1.719,236,2.396,237,2.898,239,2.499,240,2.984,262,3.079,274,2.678,275,4.142,277,1.532,298,3.365,300,3.678,304,3.509,305,2.348,308,3.183,312,2.238,322,2.446,329,2.94,420,3.59,429,2.984,507,2.499,628,4.026,654,3.079,794,3.59,841,2.712,842,3.774,843,3.24,862,3.434,901,3.183,937,4.142,954,4.142,981,2.984,1029,4.142,1121,4.497,1443,3.183,1532,4.497,1824,3.301,2036,4.497,2216,4.497,2255,3.434,2418,4.142,2429,4.303,2450,4.497,2465,4.003,2537,4.142,2557,3.774,2632,4.497,2680,4.142,2785,4.142,2789,4.497,3381,4.303,3451,4.003,3481,4.303,3514,4.497,3869,4.497,3999,4.497,4019,4.497,4904,7.509,4905,5.066,4906,6.97,4907,6.97,4908,5.066,4909,7.469,4910,5.066,4911,5.066,4912,5.066,4913,5.066,4914,5.066,4915,5.066,4916,5.066,4917,5.066,4918,5.066,4919,5.066,4920,5.066,4921,5.066,4922,5.066,4923,5.066,4924,5.066,4925,5.066,4926,5.066,4927,5.066,4928,5.066,4929,5.066,4930,5.066,4931,5.066,4932,5.066,4933,5.066,4934,5.066,4935,5.066,4936,5.066,4937,5.066]],["title/quick-references/client-reference/#client-reference",[12,1.241,35,2.494]],["text/quick-references/client-reference/#client-reference",[6,2.421,34,2.794,44,1.463,45,2.329,58,2.74,80,3.628,81,4.82,87,5.586,229,5.71,230,3.891,231,4.546,234,2.735,237,4.61,239,3.975,240,4.747,308,5.064,312,3.56,420,5.71,507,3.975,901,5.064,1029,6.588,1121,7.154,2789,7.154]],["title/quick-references/client-reference/#telegramclient",[7,2.576]],["text/quick-references/client-reference/#telegramclient",[4,0.464,12,2.237,34,2.536,45,2.487,229,6.099,230,4.156,236,4.071,322,4.156]],["title/quick-references/client-reference/#auth",[3381,5.272]],["text/quick-references/client-reference/#auth",[1,3.322,4,0.526,2429,7.208,2450,7.533,2465,6.705,2680,6.937,4904,6.705,4905,8.486,4906,5.637,4907,5.637,4908,8.486]],["title/quick-references/client-reference/#base",[198,2.997]],["text/quick-references/client-reference/#base",[4,0.527,150,3.947,305,3.947,628,5.602,2216,7.56,2632,7.56,4906,5.657,4907,5.657,4909,6.526]],["title/quick-references/client-reference/#messages",[63,1.174]],["text/quick-references/client-reference/#messages",[4,0.524,13,3.655,300,6.117,654,5.121,2418,6.889,2557,6.278,3481,7.157,3869,7.48,3999,7.48,4906,5.598,4907,5.598,4909,6.457,4910,8.426]],["title/quick-references/client-reference/#uploads",[981,3.656]],["text/quick-references/client-reference/#uploads",[4,0.531,298,5.718,1532,7.641,4906,5.718,4907,5.718,4909,6.596,4911,8.608]],["title/quick-references/client-reference/#downloads",[95,3.029]],["text/quick-references/client-reference/#downloads",[4,0.528,17,6.204,304,5.92,4904,6.753,4906,5.677,4907,5.677,4912,8.546,4913,8.546,4914,8.546]],["title/quick-references/client-reference/#dialogs",[274,3.281]],["text/quick-references/client-reference/#dialogs",[4,0.525,275,6.913,841,4.526,842,6.3,2537,6.913,3514,7.507,4906,5.617,4907,5.617,4909,6.48,4915,8.456,4916,8.456,4917,8.456]],["title/quick-references/client-reference/#users",[102,1.914]],["text/quick-references/client-reference/#users",[4,0.526,262,5.157,843,5.428,862,5.753,2785,6.937,3451,6.705,4906,5.637,4907,5.637,4909,6.503,4918,8.486,4919,8.486]],["title/quick-references/client-reference/#chats",[277,1.876]],["text/quick-references/client-reference/#chats",[4,0.522,937,6.841,1824,5.452,2036,7.428,4904,6.612,4906,5.559,4907,5.559,4920,8.368,4921,8.368,4922,8.368,4923,8.368,4924,8.368,4925,8.368,4926,8.368,4927,8.368]],["title/quick-references/client-reference/#parse-mode",[429,2.813,1443,3.001]],["text/quick-references/client-reference/#parse-mode",[4,0.532,2255,5.856,4906,5.739,4907,5.739,4909,6.62,4928,8.638]],["title/quick-references/client-reference/#updates",[137,2.062]],["text/quick-references/client-reference/#updates",[4,0.527,27,4.943,794,6.034,4906,5.657,4907,5.657,4909,6.526,4929,8.516,4930,8.516,4931,8.516,4932,8.516]],["title/quick-references/client-reference/#bots",[51,2.45]],["text/quick-references/client-reference/#bots",[4,0.532,4019,7.669,4904,6.826,4906,5.739,4907,5.739,4933,8.638]],["title/quick-references/client-reference/#buttons",[84,2.692]],["text/quick-references/client-reference/#buttons",[4,0.532,4904,6.826,4906,5.739,4907,5.739,4934,8.638,4935,8.638]],["title/quick-references/client-reference/#account",[329,3.602]],["text/quick-references/client-reference/#account",[4,0.531,954,7.037,4904,6.802,4906,5.718,4907,5.718,4936,8.608,4937,8.608]],["title/quick-references/faq/",[688,5.074]],["text/quick-references/faq/",[0,1.102,1,0.922,3,0.777,4,0.606,5,2.753,6,2.491,7,2.08,8,2.476,9,0.859,12,2.014,13,1.021,16,3.652,21,1.198,22,0.761,23,1.849,24,2.009,28,0.716,29,1.07,34,1.152,35,1.229,36,1.68,38,2.48,39,1.347,44,1.538,45,1.449,46,1.03,52,1.29,53,0.922,58,1.449,61,2.268,63,1.521,64,2.269,66,0.886,68,2.092,69,2.231,71,1.564,80,1.06,81,1.408,90,1.63,93,2.547,94,2.402,97,1.804,99,2.598,105,1.665,107,0.969,109,0.771,113,1.534,114,0.893,115,1.244,116,1.244,123,2.119,124,3.557,125,1.709,129,2.024,130,2.371,135,0.835,139,1.92,140,1.387,143,1.137,147,2.042,148,1.387,150,2.324,152,0.866,155,2.338,162,1.689,163,3.211,165,1.293,167,2.205,172,3.004,176,2.665,184,4.641,189,1.95,191,1.506,195,2.257,198,3.574,199,1.534,200,1.387,214,2.304,216,2.269,217,1.908,220,1.651,221,1.375,224,1.003,225,2.444,228,1.479,230,1.888,233,2.305,234,1.327,236,1.113,243,1.668,245,1.293,246,1.293,249,1.596,251,1.431,253,1.125,260,1.125,261,1.366,262,2.376,263,1.668,265,1.293,267,2.214,268,3.47,269,2.456,270,2.278,271,2.067,273,1.293,276,0.68,277,1.182,303,1.187,305,1.091,307,2.147,315,2.231,317,2.324,318,2.175,322,1.888,323,2.618,329,3.388,339,3.705,340,1.454,346,1.888,351,1.449,359,2.338,363,4.672,365,3.865,368,1.651,369,1.08,370,1.328,373,2.236,377,1.63,378,1.161,384,1.727,387,1.113,391,2.376,395,1.26,396,3.097,407,2.597,419,1.86,421,1.564,422,2.215,438,3.332,440,1.125,450,1.377,453,2.708,454,2.011,458,1.709,459,2.09,460,1.293,461,2.09,462,2.09,463,2.09,464,2.09,465,2.09,466,5.127,467,2.597,470,1.408,478,1.215,482,1.651,486,1.387,488,1.395,495,1.201,501,1.431,502,1.794,504,1.201,512,1.07,518,2.018,519,1.804,523,1.431,524,1.564,525,2.018,527,2.913,540,1.366,545,1.534,558,1.113,559,1.04,573,3.33,576,2.136,581,1.804,584,1.709,589,1.04,595,1.431,600,1.564,613,2.708,619,1.31,620,1.479,628,1.347,641,1.972,646,3.47,647,3.089,664,3.293,680,2.09,681,1.276,688,3.196,701,1.431,710,1.408,717,2.147,804,1.668,869,1.804,870,2.236,871,1.924,885,2.5,921,5.205,922,3.961,925,2.996,928,1.408,930,1.534,939,1.31,956,2.415,958,1.431,959,1.924,963,1.408,975,2.913,978,2.194,1016,3.196,1017,3.639,1025,1.709,1026,2.09,1027,2.09,1075,2.913,1094,1.86,1096,1.564,1140,2.838,1166,0.751,1181,1.754,1219,1.534,1245,1.709,1252,1.924,1265,1.924,1273,1.709,1281,1.804,1350,3.196,1405,1.804,1422,2,1452,1.454,1467,1.668,1468,2.09,1512,1.924,1536,2.09,1633,1.479,1669,1.86,1761,1.564,1791,1.86,2016,1.804,2041,2.09,2195,2.09,2464,2.09,2470,1.804,2546,2.09,2629,2.09,2708,2,2724,2.09,2817,1.63,3175,1.804,3482,2,3538,2.09,4266,1.564,4938,2.354,4939,2.354,4940,2.354,4941,2.354,4942,2.354,4943,2.354,4944,2.354,4945,2.354,4946,2.354,4947,2.354,4948,4.45,4949,2.354,4950,2.354,4951,2.354,4952,2.354,4953,3.658,4954,4.45,4955,2.354,4956,2.354,4957,2.354,4958,2.354,4959,2.354,4960,2.354,4961,2.354,4962,2.354,4963,2.354,4964,2.354,4965,2.354,4966,2.354,4967,2.354,4968,3.909,4969,2.354,4970,2.354,4971,2.354]],["title/quick-references/faq/#faq",[688,5.074]],["text/quick-references/faq/#faq",[1,3.287,35,4.386,44,1.296,93,5.471,129,2.624,225,3.515,228,5.276,245,4.611,246,4.611,249,5.693,387,3.971,710,5.023,1422,7.132,2464,7.454,2708,7.132]],["title/quick-references/faq/#code-without-errors-doesnt-work",[129,0.882,135,0.47,172,1.023,440,1.349,717,1.55]],["text/quick-references/faq/#code-without-errors-doesnt-work",[3,2.069,4,0.602,6,1.883,36,2.695,38,1.933,61,1.921,63,1.536,69,2.397,80,2.822,97,4.805,105,2.671,124,5.419,125,4.551,130,2.965,135,1.044,139,1.859,148,3.693,150,2.906,167,3.537,172,3.451,176,3.706,233,2.679,260,2.996,265,3.443,315,3.104,318,3.489,323,4.241,346,3.027,363,5.879,422,2.77,438,2.822,453,5.624,458,4.551,459,5.566,460,3.443,461,5.566,462,5.566,463,5.566,464,5.566,465,5.566,466,7.127,467,5.394,540,3.639,558,2.965,628,3.587,701,3.81,885,4.01,1094,4.954,1140,5.895,1265,5.126,1633,3.94,2817,4.343,4938,6.27,4939,6.27]],["title/quick-references/faq/#how-can-i-except-floodwaiterror",[454,1.916,975,3.558]],["text/quick-references/faq/#how-can-i-except-floodwaiterror",[4,0.597,6,2.756,12,1.982,13,3.307,16,3.761,24,2.069,44,1.176,45,2.203,46,3.337,52,2.516,66,2.869,114,2.891,147,4.792,172,3.566,277,2.305,315,2.914,391,4.633,454,3.681,470,4.56,488,2.721,518,3.935,956,5.668,958,4.633,975,5.68,1025,5.534,4940,7.624]],["title/quick-references/faq/#my-account-was-deletedlimited-when-using-the-library",[38,1.008,44,0.504,329,1.897,4941,3.269]],["text/quick-references/faq/#my-account-was-deletedlimited-when-using-the-library",[0,3.038,4,0.447,28,1.975,36,2.79,38,2.823,39,3.713,44,1.539,52,2.142,53,2.541,61,2.956,63,1.571,64,3.767,90,4.495,94,2.67,113,4.229,123,4.501,140,3.823,143,3.134,150,3.848,155,3.882,162,2.798,165,3.564,167,3.661,172,2.351,195,4.121,221,2.283,225,2.717,233,2.74,271,4.389,273,3.564,307,3.564,315,2.481,323,3.39,329,5.314,351,2.405,369,2.979,391,3.944,407,4.311,478,3.35,482,2.741,488,2.317,502,2.979,512,2.95,518,3.35,527,6.186,600,4.311,641,3.274,664,5.165,681,3.518,959,5.306,1016,6.788,1017,6.646,1026,5.762,1027,5.762,1075,4.835,1245,4.711,1252,5.306,1405,4.973,1452,4.009,1669,5.128,2016,4.973,2546,5.762,2629,5.762,3175,4.973,4942,6.49,4943,6.49,4944,6.49,4945,6.49,4946,6.49,4947,6.49,4948,5.762,4949,6.49,4950,6.49]],["title/quick-references/faq/#how-can-i-use-a-proxy",[44,0.737,407,3.173]],["text/quick-references/faq/#how-can-i-use-a-proxy",[4,0.465,217,4.216,225,3.616,307,4.744,322,4.171,351,3.201,419,6.826]],["title/quick-references/faq/#how-do-i-access-a-field",[267,1.811,340,2.95]],["text/quick-references/faq/#how-do-i-access-a-field",[4,0.612,12,2.048,16,4.617,24,2.138,44,1.216,69,2.289,129,1.871,163,4.414,184,6.632,189,2.987,214,3.694,216,4.574,217,2.922,262,3.639,263,4.243,267,2.989,268,6.996,269,4.952,270,3.582,373,3.426,378,2.954,450,2.42,501,3.639,576,3.752,589,2.645,664,3.378,930,3.902,939,3.332,978,3.855,1273,4.347,1761,3.978,3482,5.087,4951,5.988,4952,5.988]],["title/quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id",[189,1.408,224,1.203,276,0.816,377,1.955,4266,1.875]],["text/quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id",[4,0.599,5,4.411,6,2.843,8,3.07,12,2.088,16,3.962,21,2.46,22,1.564,23,3.798,24,2.568,109,2.632,262,4.881,270,3.65,573,5.335,2195,7.13]],["title/quick-references/faq/#sqlite3operationalerror-database-is-locked",[870,2.22,4953,3.632,4954,3.445]],["text/quick-references/faq/#sqlite3operationalerror-database-is-locked",[4,0.463,9,2.504,12,2.56,44,1.62,58,1.983,68,3.672,71,4.558,93,4.47,99,3.769,115,3.627,116,3.627,139,2.785,172,2.486,199,4.47,233,2.264,236,3.245,322,3.313,339,5.803,359,5.144,365,5.296,373,3.925,384,3.031,396,5.803,422,3.799,438,4.659,482,2.897,519,5.258,559,3.031,595,4.17,641,3.461,869,5.258,1096,4.558,1350,7.031,1467,4.862,1468,6.091,1512,5.609,1536,6.091,2724,6.091,4948,6.091,4954,6.091,4955,6.861,4956,6.861,4957,6.861,4958,6.861]],["title/quick-references/faq/#eventchat-or-eventsender-is-none",[1166,1.238,4959,3.881,4960,3.881]],["text/quick-references/faq/#eventchat-or-eventsender-is-none",[4,0.585,8,3.794,21,2.381,22,1.514,23,3.675,24,2.519,38,2.397,58,2.682,61,2.381,81,4.649,129,2.429,162,2.619,176,3.819,253,3.713,261,4.511,277,2.35,303,3.92,346,3.752,495,3.965,523,4.723,524,5.163,619,4.325,717,4.268,871,6.354,1181,5.79,4961,7.772]],["title/quick-references/faq/#what-does-bases-chatgetter-mean",[94,1.597,198,1.874,921,2.892]],["text/quick-references/faq/#what-does-bases-chatgetter-mean",[4,0.569,6,2.115,16,3.474,29,3.201,34,2.575,38,2.172,44,1.349,61,2.157,63,1.934,69,2.692,94,3.596,130,3.33,152,2.59,198,4.799,220,2.974,221,2.477,225,2.948,230,4.221,234,2.39,243,4.99,251,4.28,267,2.671,318,3.919,368,3.691,370,3.973,504,3.593,525,4.512,581,5.396,688,5.757,804,4.99,921,7.615,922,7.511,925,6.698,928,4.212,1075,5.247,1219,4.588,1791,5.565,2470,5.396,3538,6.252,4948,6.252,4962,7.042,4963,7.042,4964,7.042,4965,7.042]],["title/quick-references/faq/#can-i-use-flask-with-the-library",[38,1.197,44,0.599,647,3.067]],["text/quick-references/faq/#can-i-use-flask-with-the-library",[4,0.51,44,1.239,64,4.662,107,3.305,129,2.51,130,3.798,198,4.57,200,4.731,220,3.391,234,2.726,317,4.387,384,3.548,421,5.335,486,4.731,502,3.686,545,5.233,613,5.563,620,5.047,646,8.402,647,6.347,680,7.13,885,5.137,1281,6.155,4966,8.032]],["title/quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library",[38,1.197,44,0.599,4967,3.881]],["text/quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library",[4,0.588,5,4.972,6,3.046,7,4.046,8,2.851,44,1.397,45,2.616,68,3.992,69,2.851,99,3.633,105,3.177,135,1.242,139,2.211,155,4.461,191,4.77,233,2.461,305,3.457,317,3.457,395,3.992,573,6.015,584,5.414,613,5.166,870,4.267,963,4.461,2041,6.621,4953,6.979,4954,6.621,4968,9.054,4969,7.458,4970,7.458,4971,7.458]]],"fields":["title","text"],"invertedIndex":[["",{"_index":4,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"basic/next-steps/":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/asyncio/#why-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#mautrix-telegram":{},"examples/projects-using-telethon/#telegram-export":{},"examples/projects-using-telethon/#telegramtui":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/projects-using-telethon/#tgcloud":{},"examples/projects-using-telethon/#tgmount":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{},"examples/users/#updating-your-profile-photo":{},"examples/users/#updating-your-username":{},"examples/users/#users":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#current-winner":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.message.Message.via_input_bot":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/client-reference/":{},"quick-references/client-reference/#account":{},"quick-references/client-reference/#auth":{},"quick-references/client-reference/#base":{},"quick-references/client-reference/#bots":{},"quick-references/client-reference/#buttons":{},"quick-references/client-reference/#chats":{},"quick-references/client-reference/#dialogs":{},"quick-references/client-reference/#downloads":{},"quick-references/client-reference/#messages":{},"quick-references/client-reference/#parse-mode":{},"quick-references/client-reference/#telegramclient":{},"quick-references/client-reference/#updates":{},"quick-references/client-reference/#uploads":{},"quick-references/client-reference/#users":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["0",{"_index":978,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["0.1",{"_index":3226,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["0.12.0",{"_index":2905,"text":{"modules/client/":{}},"title":{}}],["0.16.2",{"_index":904,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{}},"title":{}}],["0.19.1.6",{"_index":1987,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["0.2",{"_index":571,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-asyncio-basics":{}},"title":{}}],["00000000000000000000000000000000",{"_index":432,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["00xyz",{"_index":4766,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["0123456789abcdef0123456789abcdef",{"_index":258,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{}},"title":{}}],["04",{"_index":2527,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["0<da<77<{x]id",{"_index":4869,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["0b00011111",{"_index":4147,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["0x40f202fd",{"_index":4264,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["0x430d225",{"_index":4324,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["0x54b6bcc5",{"_index":4425,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["0x790009e3",{"_index":4427,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["0x7fffffff",{"_index":4538,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["0x846363e0",{"_index":4385,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["0xa21c9795",{"_index":4293,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["0xc91c90b6",{"_index":4295,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["0xd4eb2d74",{"_index":4285,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["0xe669bf46",{"_index":4469,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["0xe7655f1f",{"_index":4287,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["0xf33fdb68",{"_index":4302,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["0xfaf846f4",{"_index":4383,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["1",{"_index":589,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#scheduled-messages-v110":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["1.0",{"_index":2165,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["1.7.1",{"_index":1820,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["10",{"_index":655,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#scheduled-messages-v110":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["100",{"_index":939,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["100([^0]\\d",{"_index":4768,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["100,000",{"_index":2384,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["1000",{"_index":2286,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.get_chat_history":{}},"title":{}}],["10000xyz",{"_index":4765,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["100123456",{"_index":278,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["100channel_id",{"_index":4492,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["100mb",{"_index":4218,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["101",{"_index":2965,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["102",{"_index":2966,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["1025",{"_index":4633,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1026",{"_index":4634,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1027",{"_index":4635,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1028",{"_index":4636,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1029",{"_index":4637,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["103",{"_index":1679,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["1030",{"_index":4638,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1031",{"_index":4639,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1032",{"_index":4640,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1033",{"_index":4641,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1034",{"_index":4642,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1035",{"_index":4643,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1036",{"_index":4644,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1037",{"_index":4645,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1038",{"_index":4646,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1039",{"_index":4647,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["104",{"_index":2967,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["1040",{"_index":4648,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1041",{"_index":4649,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1042",{"_index":4650,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1043",{"_index":4651,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1044",{"_index":4652,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1045",{"_index":4653,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1046",{"_index":4654,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1047",{"_index":4655,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1048",{"_index":4656,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["104857600",{"_index":4217,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1049",{"_index":4657,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["105",{"_index":1639,"text":{"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["1050",{"_index":4658,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1051",{"_index":4659,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1052",{"_index":4660,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1053",{"_index":4661,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1054",{"_index":4662,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1055",{"_index":4663,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1056",{"_index":4664,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1057",{"_index":4665,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1058",{"_index":4666,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1059",{"_index":4667,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["106",{"_index":2968,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["1060",{"_index":4668,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1061",{"_index":4669,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1062",{"_index":4670,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1063",{"_index":4671,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1064",{"_index":4672,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1065",{"_index":4673,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1066",{"_index":4674,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1066197625",{"_index":1143,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["1067",{"_index":4675,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1068",{"_index":4676,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1069",{"_index":4677,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["107",{"_index":2969,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["1070",{"_index":4678,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1071",{"_index":4679,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1072",{"_index":4680,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1073",{"_index":4681,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1074",{"_index":4682,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1075",{"_index":4683,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1076",{"_index":4684,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1077",{"_index":4685,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1078",{"_index":4686,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1079",{"_index":4687,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["108",{"_index":2970,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["1080",{"_index":4688,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1081",{"_index":4689,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1082",{"_index":4690,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1083",{"_index":4691,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1084",{"_index":4692,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1085",{"_index":4693,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1086",{"_index":4694,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1087",{"_index":4695,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1088",{"_index":4696,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1089",{"_index":4697,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["109",{"_index":2971,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["1090",{"_index":4698,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1091",{"_index":4699,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1092",{"_index":4700,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1093",{"_index":4701,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1094",{"_index":4702,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1095",{"_index":4703,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1096",{"_index":4704,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1097",{"_index":4705,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1098",{"_index":4706,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1099",{"_index":4707,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["10mb",{"_index":2456,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["110",{"_index":1613,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["1100",{"_index":4708,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1101",{"_index":4709,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1102",{"_index":4710,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1103",{"_index":4711,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1104",{"_index":4712,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1105",{"_index":4713,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1106",{"_index":4714,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1107",{"_index":4715,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1108",{"_index":4716,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1109",{"_index":4717,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["111",{"_index":1597,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v112":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1110",{"_index":4718,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1111",{"_index":4719,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["11111",{"_index":741,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["1112",{"_index":4720,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1113",{"_index":4721,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1114",{"_index":4722,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1115",{"_index":4723,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1116",{"_index":4724,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1117",{"_index":4725,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1118",{"_index":4726,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1119",{"_index":4727,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["112",{"_index":1589,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v113":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1120",{"_index":4728,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1121",{"_index":4729,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1122",{"_index":4730,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1123",{"_index":4731,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1124",{"_index":4732,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1125",{"_index":4733,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1126",{"_index":4734,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1127",{"_index":4735,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["1128",{"_index":4736,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["113",{"_index":1559,"text":{"misc/changelog/":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1131",{"_index":4562,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1132",{"_index":4563,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1133",{"_index":4564,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1134",{"_index":4565,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1135",{"_index":4566,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1136",{"_index":4567,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1137",{"_index":4568,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1138",{"_index":4569,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1139",{"_index":4570,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["114",{"_index":2972,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1140",{"_index":4571,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1141",{"_index":4572,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1142",{"_index":4573,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1143",{"_index":4574,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1144",{"_index":4575,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1145",{"_index":4576,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1146",{"_index":4577,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1147",{"_index":4578,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1148",{"_index":4579,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1149",{"_index":4580,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["115",{"_index":2973,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1150",{"_index":4581,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1151",{"_index":4582,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1152",{"_index":4583,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1153",{"_index":4584,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1154",{"_index":4585,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1155",{"_index":4586,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1156",{"_index":4587,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1157",{"_index":4588,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1158",{"_index":4589,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1159",{"_index":4590,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["116",{"_index":2974,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1160",{"_index":4591,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1161",{"_index":4592,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1162",{"_index":4593,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1163",{"_index":4594,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1164",{"_index":4595,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1165",{"_index":4596,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1166",{"_index":4597,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1167",{"_index":4598,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1168",{"_index":4599,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1169",{"_index":4600,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["117",{"_index":2975,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1170",{"_index":4601,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1171",{"_index":4602,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1172",{"_index":4603,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1173",{"_index":4604,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1174",{"_index":4605,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1175",{"_index":4606,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1176",{"_index":4607,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["1179",{"_index":4797,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["118",{"_index":3390,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1180",{"_index":4798,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1181",{"_index":4799,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1182",{"_index":4800,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1183",{"_index":4801,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1184",{"_index":4802,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1185",{"_index":4803,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1186",{"_index":4804,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1187",{"_index":4805,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1188",{"_index":4806,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1189",{"_index":4807,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["119",{"_index":3391,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1190",{"_index":4808,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1191",{"_index":4809,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1192",{"_index":4810,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1193",{"_index":4811,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1194",{"_index":4812,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1195",{"_index":4813,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1196",{"_index":4814,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1197",{"_index":4815,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1198",{"_index":4816,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1199",{"_index":4817,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["12",{"_index":1146,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["120",{"_index":1242,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1200",{"_index":4818,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1201",{"_index":4819,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1202",{"_index":4820,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1203",{"_index":4821,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1204",{"_index":4822,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1205",{"_index":4823,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1206",{"_index":4824,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1207",{"_index":4825,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["1208",{"_index":4826,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["121",{"_index":3392,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1211",{"_index":4771,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1212",{"_index":4772,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1213",{"_index":4773,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1214",{"_index":4774,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1215",{"_index":4775,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1216",{"_index":4776,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1217",{"_index":4777,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1218",{"_index":4778,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1219",{"_index":4779,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["122",{"_index":3325,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1220",{"_index":4780,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1221",{"_index":4781,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1222",{"_index":4782,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1223",{"_index":4783,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1224",{"_index":4784,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1225",{"_index":4785,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1226",{"_index":4786,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1227",{"_index":4787,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1228",{"_index":4788,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["1229",{"_index":4789,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["123",{"_index":3326,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1232",{"_index":4205,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1233",{"_index":4206,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1234",{"_index":1369,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["12345",{"_index":257,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{}},"title":{}}],["123456",{"_index":940,"text":{"concepts/entities/":{},"concepts/entities/#summary":{}},"title":{}}],["12345:0123456789abcdef0123456789abcdef",{"_index":400,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{}},"title":{}}],["1235",{"_index":4207,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1236",{"_index":4208,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1237",{"_index":4209,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1238",{"_index":4210,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1239",{"_index":4211,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["124",{"_index":3327,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1240",{"_index":4212,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1241",{"_index":4213,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1242",{"_index":4214,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1243",{"_index":4215,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1244",{"_index":4216,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["1247",{"_index":4155,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1248",{"_index":4156,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1249",{"_index":4157,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["125",{"_index":3328,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1250",{"_index":4158,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1251",{"_index":4159,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1252",{"_index":4160,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1253",{"_index":4161,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1254",{"_index":4162,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1255",{"_index":4163,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1256",{"_index":4164,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1257",{"_index":4165,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1258",{"_index":4166,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1259",{"_index":4167,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["126",{"_index":3329,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1260",{"_index":4168,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1261",{"_index":4169,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1262",{"_index":4170,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1263",{"_index":4171,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1264",{"_index":4172,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1265",{"_index":4173,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1266",{"_index":4174,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1267",{"_index":4175,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1268",{"_index":4176,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1269",{"_index":4177,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["127",{"_index":3330,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["127.0.0.1",{"_index":411,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{}},"title":{}}],["1270",{"_index":4178,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1271",{"_index":4179,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1272",{"_index":4180,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1273",{"_index":4181,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1274",{"_index":4182,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1275",{"_index":4183,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1276",{"_index":4184,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1277",{"_index":4185,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1278",{"_index":4186,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1279",{"_index":4187,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["128",{"_index":3379,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1280",{"_index":4188,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1281",{"_index":4189,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1282",{"_index":4190,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1283",{"_index":4191,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1284",{"_index":4192,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1285",{"_index":4193,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["1288",{"_index":4118,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1289",{"_index":4119,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["129",{"_index":3291,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1290",{"_index":4120,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1291",{"_index":4121,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1292",{"_index":4122,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1293",{"_index":4123,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1294",{"_index":4124,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1295",{"_index":4125,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1296",{"_index":4126,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1297",{"_index":4127,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1298",{"_index":4128,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1299",{"_index":4129,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["13",{"_index":4611,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["130",{"_index":3292,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1300",{"_index":4130,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1301",{"_index":4131,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1302",{"_index":4132,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1303",{"_index":4133,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1304",{"_index":4134,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1305",{"_index":4135,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1306",{"_index":4136,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1307",{"_index":4137,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1308",{"_index":4138,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["1309",{"_index":4139,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["131",{"_index":3293,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1310",{"_index":4140,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["132",{"_index":3294,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1329",{"_index":4847,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["133",{"_index":3295,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1330",{"_index":4848,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1331",{"_index":4849,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1332",{"_index":4850,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1333",{"_index":4851,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1334",{"_index":4852,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1335",{"_index":4853,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1336",{"_index":4854,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1337",{"_index":4855,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1338",{"_index":4856,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1339",{"_index":4857,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["134",{"_index":3296,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["1340",{"_index":4858,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1341",{"_index":4859,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1342",{"_index":4860,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1343",{"_index":4861,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["135",{"_index":3297,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["136",{"_index":3298,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["137",{"_index":3299,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["138",{"_index":3300,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["139",{"_index":3301,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["140",{"_index":3302,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{}},"title":{}}],["141",{"_index":3303,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{}},"title":{}}],["142",{"_index":3304,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["143",{"_index":3305,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["144",{"_index":3306,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["145",{"_index":3307,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["146",{"_index":3308,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["147",{"_index":3309,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["148",{"_index":3310,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["149",{"_index":3311,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["149.154.167.40",{"_index":1358,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["15",{"_index":1148,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/client/":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["150",{"_index":3312,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["1500mb",{"_index":4222,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["151",{"_index":3313,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["152",{"_index":3314,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["153",{"_index":3315,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["154",{"_index":3316,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["155",{"_index":3317,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["156",{"_index":3318,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["157",{"_index":3319,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["1572864000",{"_index":4221,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["158",{"_index":3320,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["159",{"_index":3321,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["16",{"_index":1147,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["160",{"_index":3425,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["161",{"_index":3061,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["162",{"_index":3062,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["163",{"_index":3063,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["164",{"_index":3064,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["165",{"_index":3065,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["166",{"_index":3066,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["167",{"_index":3067,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["168",{"_index":3068,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["169",{"_index":3410,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["170",{"_index":3128,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["171",{"_index":3129,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["172",{"_index":3130,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["173",{"_index":3131,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["174",{"_index":3132,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["175",{"_index":3133,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["176",{"_index":3134,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["177",{"_index":3135,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["178",{"_index":3413,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["179",{"_index":3179,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["18",{"_index":4091,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{}}],["180",{"_index":3180,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["181",{"_index":3181,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["182",{"_index":3182,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["183",{"_index":3183,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["184",{"_index":3184,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["185",{"_index":3185,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["186",{"_index":3186,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["187",{"_index":3564,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["188",{"_index":3104,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["189",{"_index":3105,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["19",{"_index":4092,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{}}],["190",{"_index":3106,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["191",{"_index":3107,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["192",{"_index":3108,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["193",{"_index":3109,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["194",{"_index":3110,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["195",{"_index":3111,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["196",{"_index":3112,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["197",{"_index":3113,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["198",{"_index":3114,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["199",{"_index":3115,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["1a",{"_index":4876,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["1aank8ex",{"_index":1134,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["1mb",{"_index":2141,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["1st",{"_index":3660,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["2",{"_index":588,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["2**5",{"_index":4154,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["2.0",{"_index":2459,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["20",{"_index":4090,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{}}],["200",{"_index":3116,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["2002",{"_index":434,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["2004",{"_index":2889,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["201",{"_index":3117,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["2016",{"_index":1145,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["2016/09/06",{"_index":2849,"text":{"misc/changelog/":{},"misc/changelog/#first-working-alpha-version-v01":{}},"title":{}}],["2016/09/10",{"_index":2844,"text":{"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["2016/09/11",{"_index":2842,"text":{"misc/changelog/":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}},"title":{}}],["2016/09/12",{"_index":2836,"text":{"misc/changelog/":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["2016/09/18",{"_index":2830,"text":{"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["2016/11/13",{"_index":2827,"text":{"misc/changelog/":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{}}],["2017",{"_index":1339,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{}},"title":{}}],["2017/01/31",{"_index":2823,"text":{"misc/changelog/":{},"misc/changelog/#two-factor-authentication-v07":{}},"title":{}}],["2017/02/19",{"_index":2819,"text":{"misc/changelog/":{},"misc/changelog/#long-run-bug-fix-v071":{}},"title":{}}],["2017/04/14",{"_index":2814,"text":{"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{}},"title":{}}],["2017/05/19",{"_index":2805,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["2017/05/23",{"_index":2797,"text":{"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["2017/06/03",{"_index":2790,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["2017/06/07",{"_index":2778,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["2017/06/16",{"_index":2760,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["2017/06/24",{"_index":2756,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["2017/07/04",{"_index":2749,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/07/05",{"_index":2747,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/07/10",{"_index":2736,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/07/11",{"_index":2734,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/08/22",{"_index":2713,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/08/24",{"_index":2703,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/08/28",{"_index":2686,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/09/04",{"_index":2666,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/09/08",{"_index":2654,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/09/14",{"_index":2643,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/09/18",{"_index":2631,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["2017/09/23",{"_index":2614,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{}}],["2017/09/27",{"_index":2606,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["2017/09/28",{"_index":2600,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/09/29",{"_index":2589,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/10/01",{"_index":2562,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/10/05",{"_index":2552,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/10/14",{"_index":2532,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/10/20",{"_index":2519,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/11/04",{"_index":2502,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/11/16",{"_index":2490,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2017/12/28",{"_index":2467,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/01/11",{"_index":2461,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/01/19",{"_index":2451,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/02/03",{"_index":2436,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/02/09",{"_index":2433,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/02/15",{"_index":2422,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/02/18",{"_index":2413,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/02/24",{"_index":2400,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/03/04",{"_index":2374,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/03/17",{"_index":2355,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/03/27",{"_index":2345,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/04/15",{"_index":2320,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/05/07",{"_index":2302,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/06/03",{"_index":2268,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/06/24",{"_index":2201,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/06/27",{"_index":2159,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["2018/06/28",{"_index":2157,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v102":{}},"title":{}}],["2018/07/04",{"_index":2149,"text":{"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["2018/07/09",{"_index":2130,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["2018/07/21",{"_index":2085,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["2018/07/23",{"_index":2072,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["2018/08/14",{"_index":2043,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["2018/09/22",{"_index":2014,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["2018/11/03",{"_index":1984,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["2018/11/24",{"_index":1974,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["2018/12/04",{"_index":1965,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["2018/12/25",{"_index":1948,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["2019",{"_index":3606,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["2019/01/03",{"_index":1933,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/01/05",{"_index":1926,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/01/14",{"_index":1895,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/02/27",{"_index":1851,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/04/22",{"_index":1806,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/04/24",{"_index":1801,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/05/30",{"_index":1728,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/07/06",{"_index":1678,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["2019/09/08",{"_index":1638,"text":{"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["202",{"_index":3118,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["2020/02/20",{"_index":1612,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v111":{}},"title":{}}],["2020/04/20",{"_index":1596,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v112":{}},"title":{}}],["2020/04/25",{"_index":1588,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v113":{}},"title":{}}],["2020/05/26",{"_index":1557,"text":{"misc/changelog/":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{}},"title":{}}],["203",{"_index":3119,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["204",{"_index":3120,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["205",{"_index":3121,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["206",{"_index":3122,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["207",{"_index":3123,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["208",{"_index":3124,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["209",{"_index":3125,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["210",{"_index":3126,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["211",{"_index":3396,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["212",{"_index":3073,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["213",{"_index":2893,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#current-winner":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["214",{"_index":3074,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["215",{"_index":3075,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["216",{"_index":3076,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["217",{"_index":3077,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["218",{"_index":3078,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["219",{"_index":3079,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["22",{"_index":3211,"text":{"modules/client/":{}},"title":{}}],["220",{"_index":3080,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["221",{"_index":3081,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["222",{"_index":3082,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["22222",{"_index":1372,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["223",{"_index":3083,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["224",{"_index":3084,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["225",{"_index":3085,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["226",{"_index":3086,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["227",{"_index":3087,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["228",{"_index":3088,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["229",{"_index":3089,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["23",{"_index":4075,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["230",{"_index":3090,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["231",{"_index":3091,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["232",{"_index":3092,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["233",{"_index":3093,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["234",{"_index":3094,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["235",{"_index":3095,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["236",{"_index":3096,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{}},"title":{}}],["237",{"_index":3097,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{}},"title":{}}],["238",{"_index":3098,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["239",{"_index":3099,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["24",{"_index":967,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#rpc-errors":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["240",{"_index":3455,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["241",{"_index":3137,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["242",{"_index":3138,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["243",{"_index":3139,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["244",{"_index":3140,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["245",{"_index":3141,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["246",{"_index":3142,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["247",{"_index":3143,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["248",{"_index":3144,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["249",{"_index":3145,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["25",{"_index":4076,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["250",{"_index":1062,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["251",{"_index":3146,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["252",{"_index":3147,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["253",{"_index":3148,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["254",{"_index":3149,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["255",{"_index":3150,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["256",{"_index":3151,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["257",{"_index":3152,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["258",{"_index":3153,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["259",{"_index":3154,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["26",{"_index":4077,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["260",{"_index":3155,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["261",{"_index":3156,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["262",{"_index":3157,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["263",{"_index":3158,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["264",{"_index":3159,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{}},"title":{}}],["265",{"_index":3160,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{}},"title":{}}],["266",{"_index":3161,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["267",{"_index":3496,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["268",{"_index":3042,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["269",{"_index":3043,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["27",{"_index":2888,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["270",{"_index":2498,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["271",{"_index":3044,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["272",{"_index":3045,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["273",{"_index":3046,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["274",{"_index":3047,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["275",{"_index":3048,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["276",{"_index":3049,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["277",{"_index":3050,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["278",{"_index":3051,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["279",{"_index":3052,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["28",{"_index":2917,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["280",{"_index":3053,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["281",{"_index":3054,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["282",{"_index":3055,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["283",{"_index":3056,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["284",{"_index":3057,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["285",{"_index":3058,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["286",{"_index":3059,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["287",{"_index":3487,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["288",{"_index":3166,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["289",{"_index":3167,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["29",{"_index":2918,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["290",{"_index":3168,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["291",{"_index":3169,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["292",{"_index":3170,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["293",{"_index":3171,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["294",{"_index":3172,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["295",{"_index":3173,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["296",{"_index":3174,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["297",{"_index":3175,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["298",{"_index":3488,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["299",{"_index":3032,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["2fa",{"_index":1922,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["2nd",{"_index":3659,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["3",{"_index":537,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#whats-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["3'",{"_index":535,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{}},"title":{}}],["3,000",{"_index":2265,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["3.4",{"_index":539,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["3.5",{"_index":538,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["3.5.2",{"_index":2077,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["3.5.2'",{"_index":2194,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["3.6",{"_index":2515,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["3.7",{"_index":1796,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["3.x",{"_index":2604,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["30",{"_index":2820,"text":{"misc/changelog/":{},"misc/changelog/#long-run-bug-fix-v071":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["300",{"_index":3033,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["301",{"_index":3034,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["302",{"_index":3035,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["303",{"_index":986,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["304",{"_index":3036,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["305",{"_index":3037,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["306",{"_index":3038,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["307",{"_index":3039,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["308",{"_index":3040,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["309",{"_index":3489,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["31",{"_index":2919,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["310",{"_index":3191,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["311",{"_index":3192,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["312",{"_index":3193,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["313",{"_index":3194,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["314",{"_index":3195,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["315",{"_index":3196,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["316",{"_index":3197,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["317",{"_index":3198,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["318",{"_index":3199,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["319",{"_index":3200,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["32",{"_index":2920,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["320",{"_index":3201,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["321",{"_index":3202,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["322",{"_index":3203,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}},"title":{}}],["323",{"_index":3204,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}},"title":{}}],["324",{"_index":4298,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["325",{"_index":3010,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["326",{"_index":3011,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["327",{"_index":3012,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["328",{"_index":3013,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["329",{"_index":3014,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["33",{"_index":2921,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["330",{"_index":3015,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["331",{"_index":3016,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["332",{"_index":3017,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["333",{"_index":3018,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["334",{"_index":3019,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["335",{"_index":3020,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["336",{"_index":3021,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["337",{"_index":3022,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["338",{"_index":3023,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["339",{"_index":3024,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["34",{"_index":2922,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["340",{"_index":3025,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["341",{"_index":3026,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["342",{"_index":3027,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["343",{"_index":3028,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["344",{"_index":4299,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["345",{"_index":4300,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["346",{"_index":4301,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["34600123123",{"_index":281,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["349",{"_index":4445,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["34xxxxxxxxx",{"_index":850,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["35",{"_index":2923,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["350",{"_index":4446,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["351",{"_index":4447,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["352",{"_index":4448,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["353",{"_index":4449,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["354",{"_index":4450,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["355",{"_index":4451,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["356",{"_index":4452,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["357",{"_index":4453,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["358",{"_index":4454,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["359",{"_index":4455,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["36",{"_index":2924,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["360",{"_index":4456,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["361",{"_index":4457,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["362",{"_index":4458,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["363",{"_index":3870,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["364",{"_index":3871,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["365",{"_index":3872,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["366",{"_index":3873,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["367",{"_index":3874,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["368",{"_index":3875,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["369",{"_index":3876,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["37",{"_index":2925,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["370",{"_index":3877,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["371",{"_index":3878,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["372",{"_index":3879,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["373",{"_index":3880,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["374",{"_index":3881,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["375",{"_index":3882,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["376",{"_index":3883,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["377",{"_index":3884,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["378",{"_index":3885,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["379",{"_index":3886,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["38",{"_index":2926,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["380",{"_index":4459,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["381",{"_index":4460,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["382",{"_index":4461,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["383",{"_index":4462,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["384",{"_index":4463,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["387",{"_index":4273,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["388",{"_index":4274,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["389",{"_index":4275,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["39",{"_index":2927,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["390",{"_index":4276,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["391",{"_index":4277,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["392",{"_index":4278,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["393",{"_index":4279,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["394",{"_index":4280,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["395",{"_index":4281,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["396",{"_index":4282,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["397",{"_index":4283,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["398",{"_index":4284,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["399",{"_index":3285,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["3br",{"_index":4885,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["3r",{"_index":4895,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["3rd",{"_index":3653,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["4",{"_index":586,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["40",{"_index":2928,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["400",{"_index":971,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["401",{"_index":990,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["402",{"_index":3286,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["403",{"_index":993,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["404",{"_index":997,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{}},"title":{}}],["405",{"_index":3287,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{}},"title":{}}],["406",{"_index":3288,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["407",{"_index":3289,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["408",{"_index":4307,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["409",{"_index":4308,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["41",{"_index":2929,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["410",{"_index":4309,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["411",{"_index":4310,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["412",{"_index":4311,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["413",{"_index":4312,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["414",{"_index":4313,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["415",{"_index":4314,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["416",{"_index":4315,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["417",{"_index":4316,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["418",{"_index":4317,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["419",{"_index":4318,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["42",{"_index":1390,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["420",{"_index":976,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["421",{"_index":4319,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["422",{"_index":4320,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["423",{"_index":4321,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["424",{"_index":4322,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["425",{"_index":2493,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["426",{"_index":4323,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["429",{"_index":4335,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["43",{"_index":1149,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["430",{"_index":4336,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["431",{"_index":4337,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["432",{"_index":4338,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["433",{"_index":4339,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["434",{"_index":4340,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["435",{"_index":4341,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["436",{"_index":4342,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["437",{"_index":4343,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["438",{"_index":4344,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["439",{"_index":4345,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["44",{"_index":2930,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["440",{"_index":4346,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["441",{"_index":4347,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["442",{"_index":4348,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["443",{"_index":1363,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["444",{"_index":3212,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["4444",{"_index":412,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{}},"title":{}}],["445",{"_index":3213,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["446",{"_index":3214,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["447",{"_index":3215,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["448",{"_index":3216,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["449",{"_index":3217,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["45",{"_index":2931,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["450",{"_index":3218,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["451",{"_index":3219,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["452",{"_index":3220,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["453",{"_index":3221,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["454",{"_index":3222,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["455",{"_index":3223,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["456",{"_index":4349,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["456789:cdefghijstuvwxyzcdefghijstuvwxyz",{"_index":4887,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["457",{"_index":4350,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["458",{"_index":4351,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["459",{"_index":4352,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["46",{"_index":2932,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["460",{"_index":4353,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["461",{"_index":4354,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["462",{"_index":4355,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["463",{"_index":4356,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["464",{"_index":4357,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["465",{"_index":4358,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["466",{"_index":3227,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["467",{"_index":3228,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["468",{"_index":3229,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["469",{"_index":3230,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["47",{"_index":2933,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["470",{"_index":3231,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["471",{"_index":3232,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["472",{"_index":3233,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["473",{"_index":3234,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["474",{"_index":3235,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["475",{"_index":3236,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["476",{"_index":3237,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["477",{"_index":3238,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["478",{"_index":3239,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["479",{"_index":3240,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["48",{"_index":2934,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["480",{"_index":3241,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["481",{"_index":3242,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["482",{"_index":3243,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["483",{"_index":3244,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["484",{"_index":3245,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["485",{"_index":3246,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["486",{"_index":3247,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["487",{"_index":3248,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["488",{"_index":3249,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["489",{"_index":3250,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["49",{"_index":2935,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["490",{"_index":3251,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["491",{"_index":3252,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["492",{"_index":3253,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["493",{"_index":3254,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["494",{"_index":3255,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["495",{"_index":3256,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["496",{"_index":3257,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["497",{"_index":3258,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["498",{"_index":3259,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["499",{"_index":3260,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["4k",{"_index":1232,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["5",{"_index":587,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["50",{"_index":2936,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["500",{"_index":3261,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["5000",{"_index":1333,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{}},"title":{}}],["501",{"_index":3262,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["502",{"_index":3263,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["503",{"_index":3264,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["504",{"_index":3265,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["505",{"_index":4359,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["506",{"_index":4360,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["507",{"_index":4361,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["508",{"_index":4362,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["509",{"_index":4363,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["51",{"_index":2937,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["510",{"_index":4364,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["511",{"_index":4365,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["512",{"_index":2608,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["513",{"_index":4366,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["514",{"_index":4367,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["515",{"_index":4368,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["516",{"_index":4369,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["517",{"_index":4370,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["518",{"_index":4371,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["519",{"_index":4372,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["52",{"_index":2938,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["520",{"_index":4373,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["521",{"_index":4374,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["522",{"_index":4375,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["523",{"_index":4376,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["524",{"_index":4377,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["525",{"_index":4378,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["526",{"_index":4379,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["527",{"_index":4380,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["528",{"_index":4381,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["53",{"_index":2939,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["531",{"_index":4411,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["532",{"_index":4412,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["533",{"_index":4413,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["534",{"_index":4414,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["535",{"_index":4415,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["536",{"_index":4416,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["537",{"_index":4417,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["538",{"_index":4418,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["539",{"_index":4419,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["54",{"_index":2940,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["540",{"_index":4420,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["541",{"_index":4421,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["542",{"_index":4422,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["543",{"_index":4423,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["55",{"_index":2850,"text":{"misc/changelog/":{},"misc/changelog/#first-working-alpha-version-v01":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{}},"title":{}}],["56",{"_index":2941,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{}},"title":{}}],["564",{"_index":4472,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["565",{"_index":4473,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["566",{"_index":4474,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["567",{"_index":4475,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["56789:cdefghijstuvwxyzcdefghijstuvwxyz",{"_index":4901,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["568",{"_index":4476,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["569",{"_index":4477,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["57",{"_index":2828,"text":{"misc/changelog/":{},"misc/changelog/#updated-pip-version-v06":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["570",{"_index":4478,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["571",{"_index":4479,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["572",{"_index":4480,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["573",{"_index":4481,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["574",{"_index":4482,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["575",{"_index":4483,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["576",{"_index":4484,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["577",{"_index":4485,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["578",{"_index":4486,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["579",{"_index":4487,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["58",{"_index":2942,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["59",{"_index":2943,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["595",{"_index":4224,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["596",{"_index":4225,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["597",{"_index":4226,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["598",{"_index":4227,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["599",{"_index":4228,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["5<vaav",{"_index":4872,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["5s",{"_index":462,"text":{"basic/updates/":{},"basic/updates/#updates":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["6",{"_index":2770,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["60",{"_index":1021,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["600",{"_index":3899,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["601",{"_index":3900,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["602",{"_index":3901,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["603",{"_index":3902,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["604",{"_index":3903,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["605",{"_index":3904,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["606",{"_index":3905,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["607",{"_index":3906,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["608",{"_index":3907,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["609",{"_index":3908,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["61",{"_index":2944,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["610",{"_index":3909,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["611",{"_index":3910,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["612",{"_index":3911,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["613",{"_index":3912,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["614",{"_index":3913,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["615",{"_index":3914,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["616",{"_index":3915,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["617",{"_index":3916,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["618",{"_index":3917,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["619",{"_index":3918,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["62",{"_index":2824,"text":{"misc/changelog/":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["620",{"_index":3919,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["621",{"_index":3920,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["622",{"_index":3921,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["623",{"_index":3922,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["624",{"_index":3923,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["625",{"_index":3924,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["626",{"_index":3925,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["627",{"_index":3926,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["628",{"_index":3927,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["629",{"_index":3928,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["63",{"_index":2945,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["630",{"_index":3929,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["6309373984955162244",{"_index":1163,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["631",{"_index":3930,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["632",{"_index":3931,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["633",{"_index":3932,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["634",{"_index":3933,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["635",{"_index":3934,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["636",{"_index":3935,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["637",{"_index":3936,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["638",{"_index":3937,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["639",{"_index":4229,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["64",{"_index":2946,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["640",{"_index":3946,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["641",{"_index":3947,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["642",{"_index":3948,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["643",{"_index":3949,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["644",{"_index":3950,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["645",{"_index":3951,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["646",{"_index":3952,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["647",{"_index":3953,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["648",{"_index":3954,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["649",{"_index":3955,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["65",{"_index":2947,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["650",{"_index":3956,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["651",{"_index":3957,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["652",{"_index":3958,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["653",{"_index":3959,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["654",{"_index":3960,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["655",{"_index":3961,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["656",{"_index":3962,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["657",{"_index":3963,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["658",{"_index":3964,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["659",{"_index":3965,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["66",{"_index":2802,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["660",{"_index":3966,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["661",{"_index":3967,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{}}],["662",{"_index":3968,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{}}],["663",{"_index":3969,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["664",{"_index":3970,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["665",{"_index":3971,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["666",{"_index":3972,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["667",{"_index":4837,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["668",{"_index":4010,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["669",{"_index":4011,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["67",{"_index":2948,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["670",{"_index":4012,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["671",{"_index":4013,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["672",{"_index":4014,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["673",{"_index":4015,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["674",{"_index":4016,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["675",{"_index":4017,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["676",{"_index":4018,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["677",{"_index":4838,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["678",{"_index":4000,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["679",{"_index":4001,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["68",{"_index":2750,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["680",{"_index":4002,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["681",{"_index":4003,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["682",{"_index":4004,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["683",{"_index":4005,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["684",{"_index":4006,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["685",{"_index":4007,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["686",{"_index":4008,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["687",{"_index":4009,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["688",{"_index":4839,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["689",{"_index":3855,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["69",{"_index":2949,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["690",{"_index":3856,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["691",{"_index":3857,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["692",{"_index":3858,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["693",{"_index":3859,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["694",{"_index":3860,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{}}],["695",{"_index":3861,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{}}],["696",{"_index":3862,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["697",{"_index":3863,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["698",{"_index":3864,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["699",{"_index":3865,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["7",{"_index":4153,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["70",{"_index":2714,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["700",{"_index":3866,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["701",{"_index":3867,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["702",{"_index":3868,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["703",{"_index":4331,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["704",{"_index":3818,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["705",{"_index":3819,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["706",{"_index":3820,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["707",{"_index":3821,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["708",{"_index":3822,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["709",{"_index":3823,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["71",{"_index":2663,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["710",{"_index":3824,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["711",{"_index":3825,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["712",{"_index":3826,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["713",{"_index":3827,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["714",{"_index":3828,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["715",{"_index":3829,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["716",{"_index":3830,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["717",{"_index":3831,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["718",{"_index":3832,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["719",{"_index":3833,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["72",{"_index":2503,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["720",{"_index":3834,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["721",{"_index":3835,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["722",{"_index":3836,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["723",{"_index":3837,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["724",{"_index":3838,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["725",{"_index":3839,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["726",{"_index":3840,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["727",{"_index":3841,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["728",{"_index":3842,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["729",{"_index":3843,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["73",{"_index":2491,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["730",{"_index":3844,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["731",{"_index":3845,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["732",{"_index":3846,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["733",{"_index":3847,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["734",{"_index":3848,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["735",{"_index":3849,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["736",{"_index":3850,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["737",{"_index":3851,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["739",{"_index":3791,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["74",{"_index":2462,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["740",{"_index":3792,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["741",{"_index":3793,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["742",{"_index":3794,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["743",{"_index":3795,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["744",{"_index":1480,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["745",{"_index":3796,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["746",{"_index":3797,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["747",{"_index":3798,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["748",{"_index":3799,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["749",{"_index":3800,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["75",{"_index":2326,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["750",{"_index":3801,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["750mb",{"_index":4220,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["751",{"_index":3802,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["752",{"_index":3803,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["753",{"_index":3804,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["754",{"_index":3805,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["755",{"_index":3806,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["757",{"_index":3807,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["758",{"_index":3808,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["759",{"_index":3809,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["76",{"_index":2303,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["760",{"_index":3810,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["761",{"_index":3811,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["762",{"_index":3812,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["763",{"_index":3813,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["764",{"_index":3814,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["766",{"_index":3667,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["767",{"_index":3668,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["768",{"_index":3669,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["769",{"_index":3670,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["77",{"_index":2950,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["770",{"_index":3671,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["771",{"_index":3672,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["772",{"_index":3673,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["773",{"_index":3674,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["774",{"_index":3675,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["775",{"_index":3676,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["776",{"_index":3677,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["777",{"_index":3678,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{}}],["778",{"_index":2282,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{}}],["779",{"_index":3679,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{}}],["78",{"_index":2951,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["780",{"_index":3680,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{}}],["781",{"_index":3681,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{}}],["782",{"_index":3682,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["783",{"_index":3683,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["784",{"_index":3684,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{}},"title":{}}],["785",{"_index":3685,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{}},"title":{}}],["786",{"_index":3686,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{}},"title":{}}],["786432000",{"_index":4219,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["787",{"_index":3687,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{}},"title":{}}],["788",{"_index":3688,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["789",{"_index":3689,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["79",{"_index":2952,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["790",{"_index":3690,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["791",{"_index":3691,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["792",{"_index":3692,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["793",{"_index":3693,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["794",{"_index":3694,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["795",{"_index":3695,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["796",{"_index":3696,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["797",{"_index":3697,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["798",{"_index":3698,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["799",{"_index":3699,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["8",{"_index":2103,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#general-improvements-v09":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["80",{"_index":1064,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["800",{"_index":3700,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["801",{"_index":3701,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["802",{"_index":3702,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["803",{"_index":3703,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["804",{"_index":3704,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["805",{"_index":3705,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["806",{"_index":3706,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["807",{"_index":3707,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["808",{"_index":3708,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["809",{"_index":3709,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["81",{"_index":2202,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["810",{"_index":3710,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["811",{"_index":3711,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["812",{"_index":3712,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["813",{"_index":3713,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["814",{"_index":3714,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["815",{"_index":3715,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["816",{"_index":3716,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["817",{"_index":3717,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["818",{"_index":3718,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["819",{"_index":3719,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["82",{"_index":1952,"text":{"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["820",{"_index":3720,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["821",{"_index":3721,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["822",{"_index":3722,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["823",{"_index":3723,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["824",{"_index":3724,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["825",{"_index":3725,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["826",{"_index":3726,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["827",{"_index":3727,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["828",{"_index":3728,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["829",{"_index":3729,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["83",{"_index":2953,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["830",{"_index":3730,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["831",{"_index":3731,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["832",{"_index":3732,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["833",{"_index":3733,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["834",{"_index":3734,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["835",{"_index":3735,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["836",{"_index":3736,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["837",{"_index":3737,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["838",{"_index":3738,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["839",{"_index":3739,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["84",{"_index":2954,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["840",{"_index":3740,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["841",{"_index":3741,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["842",{"_index":3742,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["843",{"_index":3743,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["844",{"_index":3744,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["845",{"_index":3745,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["846",{"_index":3746,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["847",{"_index":3747,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["848",{"_index":3748,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["849",{"_index":3749,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["85",{"_index":2955,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["850",{"_index":3750,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["851",{"_index":3751,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["852",{"_index":3752,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["853",{"_index":3753,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["854",{"_index":3754,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["855",{"_index":3755,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["856",{"_index":3756,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["857",{"_index":3757,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["858",{"_index":3758,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["859",{"_index":3759,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["86",{"_index":2956,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["860",{"_index":3760,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["861",{"_index":3761,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["862",{"_index":3762,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["863",{"_index":3763,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["864",{"_index":3764,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["865",{"_index":3765,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["866",{"_index":3766,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["867",{"_index":3767,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["868",{"_index":3768,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["869",{"_index":3769,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["87",{"_index":2957,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["870",{"_index":3770,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["871",{"_index":3771,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["872",{"_index":3772,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["873",{"_index":3773,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["874",{"_index":3774,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["875",{"_index":3775,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["876",{"_index":3776,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["877",{"_index":3777,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["878",{"_index":3778,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["879",{"_index":3779,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["88",{"_index":2958,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["880",{"_index":3780,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["881",{"_index":3781,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["883",{"_index":3976,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["884",{"_index":3977,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["885",{"_index":3978,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["886",{"_index":3979,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["887",{"_index":3980,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["888",{"_index":3981,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["889",{"_index":3982,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["89",{"_index":2959,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["890",{"_index":3983,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["891",{"_index":3984,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["892",{"_index":3985,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["894",{"_index":3986,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["895",{"_index":3987,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["896",{"_index":3988,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["897",{"_index":3989,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["898",{"_index":3990,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["899",{"_index":3991,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["9",{"_index":3604,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["90",{"_index":2960,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["90,000",{"_index":2383,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["900",{"_index":3992,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["901",{"_index":3993,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["902",{"_index":3994,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["903",{"_index":3995,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["904",{"_index":3996,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["905",{"_index":3997,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["906",{"_index":4494,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["907",{"_index":4495,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["908",{"_index":4496,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["909",{"_index":4497,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["91",{"_index":1949,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["910",{"_index":4498,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["911",{"_index":4499,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["912",{"_index":4500,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["913",{"_index":4501,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["914",{"_index":4502,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["915",{"_index":4503,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["916",{"_index":4504,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["917",{"_index":4505,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["918",{"_index":4506,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["919",{"_index":4507,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["92",{"_index":2961,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["920",{"_index":4508,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["921",{"_index":4509,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["922",{"_index":4510,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["923",{"_index":4511,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["924",{"_index":4512,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["925",{"_index":4513,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["926",{"_index":4514,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["927",{"_index":4515,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["928",{"_index":4516,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["929",{"_index":4517,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["93",{"_index":1896,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["930",{"_index":4518,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["931",{"_index":4519,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["932",{"_index":4520,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["933",{"_index":4521,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["934",{"_index":4522,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["935",{"_index":4523,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["936",{"_index":4524,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["937",{"_index":4525,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["938",{"_index":4526,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["939",{"_index":4527,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["94",{"_index":2962,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["940",{"_index":4528,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["941",{"_index":4529,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["942",{"_index":4530,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["943",{"_index":4531,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["944",{"_index":4532,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["945",{"_index":4533,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["948",{"_index":4751,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["949",{"_index":4752,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["95",{"_index":1852,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["950",{"_index":4753,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["951",{"_index":4754,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["952",{"_index":4755,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["953",{"_index":4756,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["954",{"_index":4757,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["955",{"_index":4758,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["956",{"_index":4759,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["957",{"_index":4760,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["958",{"_index":4761,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["959",{"_index":4762,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["96",{"_index":2963,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["960",{"_index":4763,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["961",{"_index":4764,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["97",{"_index":2964,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["98",{"_index":1807,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["99",{"_index":833,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["9996621234",{"_index":1370,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["99966xyyyi",{"_index":1367,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["_",{"_index":1219,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["__",{"_index":2243,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["_____________________",{"_index":2864,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["__aenter__",{"_index":3446,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}},"title":{}}],["__all__",{"_index":2250,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["__bytes__",{"_index":2529,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["__call__",{"_index":2550,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["__enter__",{"_index":3443,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}}}],["__eq__",{"_index":2437,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["__init__",{"_index":791,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{"modules/client/#telegram.client.Telegram.__init__":{}}}],["__init__.pi",{"_index":1272,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["__italics__",{"_index":288,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["__iter__",{"_index":4558,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["__main__",{"_index":740,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["__name__",{"_index":739,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["__ne__",{"_index":2438,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["__new__",{"_index":4051,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{"modules/errors/#telethon.errors.common.MultiError.__new__":{}}}],["__str__",{"_index":2359,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{}}],["__text__",{"_index":1703,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["_author",{"_index":2993,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_bot",{"_index":4032,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["_button",{"_index":3790,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{}}],["_buttons_flat",{"_index":3789,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["_cancel_al",{"_index":3449,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{}},"title":{}}],["_chat",{"_index":3433,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["_checks_cancel",{"_index":3480,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{}},"title":{}}],["_client",{"_index":3435,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["_complete_author",{"_index":3280,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_convers",{"_index":3452,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{}},"title":{}}],["_custom",{"_index":3494,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["_custom_count",{"_index":3493,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["_database_encryption_key",{"_index":2985,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["_decode_telegram_base64",{"_index":4738,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["_edit_d",{"_index":3460,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{}}],["_encode_telegram_base64",{"_index":4614,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["_entiti",{"_index":3520,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{}},"title":{}}],["_file_to_media",{"_index":3567,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["_get_extens",{"_index":4549,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["_get_file_info",{"_index":4332,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{}}],["_get_messag",{"_index":3469,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["_get_message_id",{"_index":3458,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["_get_metadata",{"_index":4237,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["_get_response_messag",{"_index":3590,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["_get_result",{"_index":3467,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["_incom",{"_index":3462,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{}},"title":{}}],["_input_chat",{"_index":3436,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{}}],["_input_ent",{"_index":3521,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{}},"title":{}}],["_input_send",{"_index":4041,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["_is_en",{"_index":2994,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.stop":{}},"title":{}}],["_last_outgo",{"_index":3485,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{}},"title":{}}],["_last_read",{"_index":3497,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["_messag",{"_index":3559,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["_msg_id",{"_index":4031,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["_needed_markup_bot",{"_index":3887,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{}}],["_outgo",{"_index":3484,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{}},"title":{}}],["_parse_message_text",{"_index":3527,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["_peer",{"_index":3523,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["_pending_edit",{"_index":3466,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{}}],["_pending_read",{"_index":3498,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["_pending_repli",{"_index":3471,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{}},"title":{}}],["_pending_respons",{"_index":3478,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["_photo_size_byte_count",{"_index":4862,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["_query_id",{"_index":3589,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["_queue_put_timeout",{"_index":2984,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["_raise_cast_fail",{"_index":4267,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["_raw_text",{"_index":3529,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["_refetch_chat",{"_index":3437,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{}},"title":{}}],["_refetch_send",{"_index":4040,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["_reload_messag",{"_index":3888,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{}}],["_reply_indic",{"_index":3470,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{}},"title":{}}],["_reply_messag",{"_index":3973,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{}}],["_response_indic",{"_index":3477,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["_result",{"_index":2999,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["_rle_decod",{"_index":4737,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["_rle_encod",{"_index":4615,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["_run",{"_index":3005,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["_send_add_proxi",{"_index":3266,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_send_data",{"_index":3029,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["_send_encryption_key",{"_index":3272,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_send_password",{"_index":3278,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_send_phone_number_or_bot_token",{"_index":3274,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_send_telegram_cod",{"_index":3276,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_sender",{"_index":4043,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["_sender_id",{"_index":4039,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{}},"title":{}}],["_set_button",{"_index":3889,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{}}],["_set_client",{"_index":2238,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["_set_initial_param",{"_index":3270,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["_signal_handl",{"_index":3225,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["_sync_ent",{"_index":3445,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}},"title":{}}],["_tdjson",{"_index":3003,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.stop":{}},"title":{}}],["_text",{"_index":3526,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["_total",{"_index":1858,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["_update_handl",{"_index":3001,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{}},"title":{}}],["_valid_until",{"_index":3602,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{}},"title":{}}],["_workers_queu",{"_index":2996,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["_x",{"_index":1004,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["a1b2c3d4",{"_index":742,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["aaaaaehbekejzxujaucfyg",{"_index":1457,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{}},"title":{}}],["aaaaaffszqpypez7wgxltd",{"_index":1455,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{}},"title":{}}],["abc",{"_index":1279,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["abov",{"_index":439,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["absolut",{"_index":366,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["abspath",{"_index":2543,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["abstract",{"_index":1100,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["abus",{"_index":2546,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["accept",{"_index":1988,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["access",{"_index":267,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"concepts/entities/#accessing-entities":{},"quick-references/faq/#how-do-i-access-a-field":{}}}],["access_hash",{"_index":813,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["access_hash=non",{"_index":2509,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["accident",{"_index":1731,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["accordingli",{"_index":2222,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["account",{"_index":329,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"quick-references/client-reference/":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"basic/signing-in/#signing-in-as-a-bot-account":{},"quick-references/client-reference/#account":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}}}],["account.updateusernam",{"_index":1526,"text":{"examples/users/":{},"examples/users/#updating-your-username":{}},"title":{}}],["accur",{"_index":2487,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["achiev",{"_index":660,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["acknowledg",{"_index":2771,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["acquir",{"_index":2453,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["act",{"_index":926,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["action",{"_index":1824,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action":{}}}],["action_ent",{"_index":3624,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}}}],["activ",{"_index":1686,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["actual",{"_index":900,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{}},"title":{}}],["ad",{"_index":747,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}}}],["add",{"_index":456,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["add_event_handl",{"_index":794,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/client-reference/":{},"quick-references/client-reference/#updates":{}},"title":{}}],["add_handl",{"_index":736,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["add_mark",{"_index":2134,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["add_surrog",{"_index":4257,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["add_update_handl",{"_index":2414,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["addchatuserrequest",{"_index":1458,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["addit",{"_index":193,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{"misc/changelog/#additions":{},"misc/changelog/#additions_1":{}}}],["addition",{"_index":1417,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["additon",{"_index":872,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["address",{"_index":2447,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["adher",{"_index":1737,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["admin",{"_index":3335,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{}},"title":{}}],["admin_right",{"_index":1165,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["adminlogev",{"_index":1928,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}}}],["advantag",{"_index":698,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}}}],["advertis",{"_index":1482,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{}},"title":{}}],["advic",{"_index":4944,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["advis",{"_index":452,"text":{"basic/updates/":{},"basic/updates/#updates":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["affect",{"_index":2463,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["afraid",{"_index":1267,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["again",{"_index":391,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#stability-improvements-v091":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["aggreg",{"_index":2895,"text":{"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["aggressive=tru",{"_index":2038,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["agnost",{"_index":1328,"text":{"developing/telegram-api-in-other-languages/":{}},"title":{"developing/telegram-api-in-other-languages/#language-agnostic":{}}}],["ahead",{"_index":2583,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["aiocron",{"_index":648,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["aiogram",{"_index":724,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}}}],["aiohttp",{"_index":168,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{}},"title":{}}],["album",{"_index":297,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#enhancements_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["alchemysessioncontain",{"_index":2379,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ali",{"_index":1315,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["alia",{"_index":1565,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["aliv",{"_index":1030,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["all_tlobjects.lay",{"_index":2641,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["allow",{"_index":151,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{}},"title":{}}],["allow_cach",{"_index":3568,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["allow_self",{"_index":4429,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["alon",{"_index":1803,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["along",{"_index":838,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{}},"title":{}}],["alpha",{"_index":2847,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#first-working-alpha-version-v01":{}}}],["alphabet",{"_index":2789,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["alreadi",{"_index":74,"text":{"":{},"#what-is-this":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["alreadyinconversationerror",{"_index":4044,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.AlreadyInConversationError":{}}}],["alt",{"_index":4744,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["alter",{"_index":2692,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["altern",{"_index":421,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["although",{"_index":919,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["alway",{"_index":253,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["amount",{"_index":1069,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{}},"title":{}}],["anaconda",{"_index":325,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["anaconda/spyder/ipython",{"_index":4967,"text":{"quick-references/faq/":{}},"title":{"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}}}],["and/or",{"_index":1521,"text":{"examples/users/":{}},"title":{"examples/users/#updating-your-name-andor-bio":{}}}],["andr",{"_index":2526,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["android",{"_index":1325,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{}},"title":{}}],["anim",{"_index":1576,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{}},"title":{"misc/changelog/#animated-stickers-v19":{}}}],["annot",{"_index":1421,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["annoy",{"_index":1767,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{}},"title":{}}],["anon",{"_index":259,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{}},"title":{}}],["anon.sess",{"_index":1084,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{}},"title":{}}],["anoth",{"_index":504,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["answer",{"_index":1884,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#current-winner":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["answercallbackqueri",{"_index":4060,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{}},"title":{}}],["anyhow",{"_index":1471,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["anymor",{"_index":2225,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["anyon",{"_index":1129,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["anyth",{"_index":375,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["anyway",{"_index":1859,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["anywher",{"_index":350,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["api",{"_index":52,"text":{"":{},"#getting-started":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/users/":{},"examples/users/#users":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.common":{},"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#utilities-telethonutils":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"modules/errors/":{},"modules/errors/#api-errors":{}}}],["api_hash",{"_index":11,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegramclient":{}},"title":{}}],["api_hash).start(bot_token=token",{"_index":2191,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["api_id",{"_index":10,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegramclient":{}},"title":{}}],["api_token",{"_index":766,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["app",{"_index":341,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#entities":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["appear",{"_index":334,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{}},"title":{}}],["append",{"_index":4258,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["appli",{"_index":936,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["applic",{"_index":64,"text":{"":{},"#what-is-this":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["application/octet",{"_index":4245,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["application/x",{"_index":1680,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["application_vers",{"_index":2904,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["appreci",{"_index":1263,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["approach",{"_index":485,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["appropri",{"_index":909,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["apt",{"_index":197,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["aq",{"_index":4891,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["arbitrari",{"_index":1760,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["archiv",{"_index":1751,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}}}],["aren't",{"_index":891,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["arg",{"_index":2979,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["argument",{"_index":240,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["argument_name:argument_typ",{"_index":1435,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["around",{"_index":1821,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{}},"title":{}}],["arriv",{"_index":446,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["articl",{"_index":3552,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{}},"title":{"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{}}}],["artist",{"_index":179,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["as_imag",{"_index":3573,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["ascend",{"_index":4150,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["ascii",{"_index":2775,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["asctime)",{"_index":463,"text":{"basic/updates/":{},"basic/updates/#updates":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["ask",{"_index":935,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["asker",{"_index":2875,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["aspect",{"_index":3377,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{}},"title":{}}],["assert",{"_index":1389,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["assign",{"_index":594,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["associ",{"_index":1093,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["assum",{"_index":840,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/users/":{},"examples/users/#users":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["assumpt",{"_index":2625,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["async",{"_index":21,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{}}}],["asynchron",{"_index":314,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_1":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["asyncio",{"_index":317,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/asyncio/#why-asyncio":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#tests":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{"concepts/asyncio/":{},"concepts/asyncio/#mastering-asyncio":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/updates/#understanding-asyncio":{}}}],["asyncio'",{"_index":579,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{}},"title":{}}],["asyncio.cancellederror",{"_index":3448,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{}},"title":{}}],["asyncio.futur",{"_index":2261,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["asyncio.get_event_loop",{"_index":624,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{}},"title":{}}],["asyncio.get_event_loop().run_until_complete(main",{"_index":2171,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["asyncio.loop.run_forev",{"_index":633,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{}},"title":{}}],["asyncio.loop.run_until_complet",{"_index":635,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{}},"title":{}}],["asyncio.open_connect",{"_index":1986,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["asyncio.sleep(2",{"_index":1826,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["asyncresult",{"_index":3000,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["attach",{"_index":477,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["attempt",{"_index":1790,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{}},"title":{"misc/changelog/#attempts-at-more-stability-v0135":{}}}],["attr",{"_index":4394,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["attr_dict",{"_index":4234,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["attribut",{"_index":189,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"concepts/errors/#attributes":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}}}],["attributeerror",{"_index":4266,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"quick-references/faq/":{}},"title":{"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}}}],["attributes=[types.documentattributeaudio",{"_index":4195,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["audio",{"_index":782,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.duration":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.audio":{}}}],["august",{"_index":3605,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["auth",{"_index":3381,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"quick-references/client-reference/":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.auth":{},"quick-references/client-reference/#auth":{}}}],["auth_key",{"_index":2409,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["auth_key_dupl",{"_index":2328,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{}},"title":{}}],["authent",{"_index":1426,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#two-factor-authentication-v07":{}},"title":{"misc/changelog/#two-factor-authentication-v07":{}}}],["authkey",{"_index":4057,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.SecurityError":{}},"title":{}}],["authkeyerror",{"_index":4059,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{}}}],["authmethod",{"_index":2896,"text":{"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["author",{"_index":991,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["authorization_st",{"_index":3267,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authorizationstatereadi",{"_index":3279,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authorizationstatewaitcod",{"_index":3275,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authorizationstatewaitencryptionkey",{"_index":3271,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authorizationstatewaitpassword",{"_index":3277,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authorizationstatewaitphonenumb",{"_index":3273,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authorizationstatewaittdlibparamet",{"_index":3269,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["authrestarterror",{"_index":2248,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["auto",{"_index":1022,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"developing/project-structure/":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{"developing/project-structure/#auto-generated-code":{}}}],["autocast",{"_index":2455,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["autom",{"_index":468,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{}},"title":{}}],["automat",{"_index":160,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["automt",{"_index":2728,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["autosummari",{"_index":4906,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#account":{},"quick-references/client-reference/#auth":{},"quick-references/client-reference/#base":{},"quick-references/client-reference/#bots":{},"quick-references/client-reference/#buttons":{},"quick-references/client-reference/#chats":{},"quick-references/client-reference/#dialogs":{},"quick-references/client-reference/#downloads":{},"quick-references/client-reference/#messages":{},"quick-references/client-reference/#parse-mode":{},"quick-references/client-reference/#updates":{},"quick-references/client-reference/#uploads":{},"quick-references/client-reference/#users":{}},"title":{}}],["avail",{"_index":312,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["avoid",{"_index":437,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{"concepts/errors/#avoiding-limits":{}}}],["await",{"_index":24,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{},"examples/users/#updating-your-profile-photo":{},"examples/users/#updating-your-username":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#scheduled-messages-v110":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"concepts/asyncio/#what-are-async-await-and-coroutines":{}}}],["awar",{"_index":392,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["away",{"_index":749,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["awesom",{"_index":1304,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["b",{"_index":2101,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["b'byte",{"_index":2406,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["back",{"_index":554,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["backend",{"_index":692,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{}},"title":{}}],["background",{"_index":658,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["bad",{"_index":527,"text":{"basic/updates/":{},"basic/updates/#entities":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegramtui":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["bad_message_notif",{"_index":4046,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.BadMessageError":{}},"title":{}}],["badmessageerror",{"_index":4045,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.BadMessageError":{}}}],["badouali",{"_index":1326,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{}},"title":{}}],["badrequesterror",{"_index":988,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{}}}],["badsalt",{"_index":1290,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["ban",{"_index":1017,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["bandwidth",{"_index":4961,"text":{"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["banned_right",{"_index":1167,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["bar",{"_index":2806,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["bare",{"_index":2794,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["base",{"_index":198,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/strings/":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#tgcloud":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{},"quick-references/client-reference/":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"concepts/errors/#base-errors":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"quick-references/client-reference/#base":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}}}],["base64",{"_index":4831,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["baseexcept",{"_index":4054,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["basenam",{"_index":2542,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["basework",{"_index":2977,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["basi",{"_index":961,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["basic",{"_index":216,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"concepts/asyncio/#what-are-asyncio-basics":{}}}],["basic_group_id",{"_index":3031,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{}},"title":{}}],["basicconfig",{"_index":459,"text":{"basic/updates/":{},"basic/updates/#updates":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["batch_siz",{"_index":1855,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["bb010g",{"_index":211,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["be",{"_index":194,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["becom",{"_index":868,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["befor",{"_index":46,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["beg",{"_index":2655,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["begin",{"_index":679,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["behav",{"_index":532,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["behavior",{"_index":2030,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["behaviour",{"_index":1723,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["behind",{"_index":406,"text":{"basic/signing-in/":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{}},"title":{"basic/signing-in/#signing-in-behind-a-proxy":{}}}],["believ",{"_index":4742,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["belong",{"_index":927,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{},"modules/custom/#telethon.tl.custom.file.File.sticker_set":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["below",{"_index":640,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#tests":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["benefit",{"_index":2623,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["besid",{"_index":2694,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["best",{"_index":959,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["beta",{"_index":1327,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["better",{"_index":637,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{}},"title":{}}],["between",{"_index":556,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{},"modules/utils/":{},"modules/utils/#utilities-telethonutils":{}},"title":{}}],["beyond",{"_index":1605,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_2":{}},"title":{}}],["big",{"_index":1141,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["bigger",{"_index":1901,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["biggest",{"_index":2054,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bill",{"_index":2886,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["binari",{"_index":4244,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["binarywrit",{"_index":2598,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["bing",{"_index":1914,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["bio",{"_index":912,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{}},"title":{"examples/users/#updating-your-name-andor-bio":{}}}],["biographi",{"_index":1518,"text":{"examples/users/":{},"examples/users/#retrieving-full-information":{}},"title":{}}],["bit",{"_index":316,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["bit_count",{"_index":4141,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["bit_shift",{"_index":4144,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["bitbucket",{"_index":1310,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{}},"title":{}}],["bite",{"_index":1269,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["bits_count",{"_index":4200,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["blacklist",{"_index":4064,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{}},"title":{}}],["blacklist_chat",{"_index":1842,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["block",{"_index":385,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#why-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{"concepts/asyncio/#clientrun_until_disconnected-blocks":{}}}],["blog",{"_index":676,"text":{"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{}},"title":{}}],["blow",{"_index":4537,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["blueprint",{"_index":1199,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["boat",{"_index":2858,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["bodi",{"_index":1293,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["boilerpl",{"_index":581,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["bold",{"_index":287,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["bool",{"_index":2978,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.is_empty":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["boost",{"_index":2725,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["bot",{"_index":51,"text":{"":{},"#getting-started":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"quick-references/client-reference/":{}},"title":{"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"quick-references/client-reference/#bots":{}}}],["bot'",{"_index":2059,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bot.build_reply_markup",{"_index":2106,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bot.build_reply_markup(button.inline('click",{"_index":2096,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bot.on(events.callbackqueri",{"_index":2099,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bot.reply_to(messag",{"_index":761,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["bot.send_message(chat",{"_index":2094,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bot.send_photo(message.chat.id",{"_index":781,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["bot_token",{"_index":399,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["botcallbackansw",{"_index":4021,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["botfath",{"_index":405,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["both",{"_index":695,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#ready-pip-go-v05":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["bother",{"_index":382,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["botinlinemessag",{"_index":3578,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{}},"title":{}}],["botinlineresult",{"_index":3577,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{}},"title":{}}],["botresult",{"_index":3591,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["bottimeout",{"_index":3787,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{}}}],["bottom",{"_index":85,"text":{"":{},"#how-should-i-use-the-documentation":{}},"title":{}}],["bound",{"_index":3652,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["br",{"_index":4897,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["brace",{"_index":2449,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["branch",{"_index":1413,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["brand",{"_index":2254,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["break",{"_index":473,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["breakag",{"_index":1398,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["bridg",{"_index":1499,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{}},"title":{}}],["brief",{"_index":1381,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#tests":{}},"title":{"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{}}}],["bring",{"_index":1950,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["broadcast",{"_index":1154,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["broke",{"_index":2081,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["broken",{"_index":1829,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["brokenauthkeyerror",{"_index":2516,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["brokenpipeerror",{"_index":2620,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["browsabl",{"_index":1420,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["browser",{"_index":1318,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{}},"title":{}}],["buffer",{"_index":2674,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{}},"title":{}}],["buffererror",{"_index":2636,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["bug",{"_index":110,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#long-run-bug-fix-v071":{}}}],["build",{"_index":686,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["build_reply_markup",{"_index":4935,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#buttons":{}},"title":{}}],["built",{"_index":536,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bump",{"_index":1590,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v113":{}},"title":{}}],["busi",{"_index":601,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["button",{"_index":84,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.button_count":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"quick-references/client-reference/":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"quick-references/client-reference/#buttons":{}}}],["button.auth",{"_index":1646,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{}},"title":{}}],["button.click",{"_index":1960,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["button.inlin",{"_index":2116,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{}},"title":{}}],["button.inline('0",{"_index":2117,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('1",{"_index":2107,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('2",{"_index":2108,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('3",{"_index":2109,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('4",{"_index":2110,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('5",{"_index":2111,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('6",{"_index":2112,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('7",{"_index":2113,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('8",{"_index":2114,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button.inline('9",{"_index":2115,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["button1",{"_index":3654,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["button2",{"_index":3655,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["button3",{"_index":3656,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["button4",{"_index":3657,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["button5",{"_index":3658,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["button_count",{"_index":3632,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.button_count":{}}}],["buttons=button.inline('click",{"_index":2095,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["buttons=markup",{"_index":2097,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["bypass",{"_index":2385,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["byte",{"_index":1440,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.file.File.size":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["byte_index",{"_index":4143,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["bytearray",{"_index":3403,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["byteord",{"_index":4095,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{}}],["bytes(tlobject",{"_index":2530,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["bytes_count",{"_index":4201,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["bytesio",{"_index":2766,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["c",{"_index":121,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/installation/#verification":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{"developing/telegram-api-in-other-languages/#c":{},"developing/telegram-api-in-other-languages/#c_1":{}}}],["cach",{"_index":823,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["cache_tim",{"_index":3594,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["call",{"_index":221,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["call_method",{"_index":3006,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_user":{}},"title":{"modules/client/#telegram.client.Telegram.call_method":{}}}],["callabl",{"_index":2336,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["callback",{"_index":481,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["callback(ev",{"_index":2092,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["callback_query.edit",{"_index":1834,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["callbackqueri",{"_index":1656,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["callbackquery(func",{"_index":1836,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["can't",{"_index":585,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["cancel",{"_index":1573,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.ReadCancelledError":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{}}}],["cancel_al",{"_index":3450,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{}}}],["caption",{"_index":776,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["caption=non",{"_index":1958,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["care",{"_index":621,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["carefulli",{"_index":2210,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["carri",{"_index":1001,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["case",{"_index":512,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.parse_username":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["cast",{"_index":1055,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["cat",{"_index":771,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["cat[s]?$|puss",{"_index":770,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["catch",{"_index":1406,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["catch_up",{"_index":4932,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#updates":{}},"title":{}}],["caught",{"_index":1416,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["caus",{"_index":963,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["cdn",{"_index":2612,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{}},"title":{}}],["cdn'",{"_index":2704,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["cdnfiletamperederror",{"_index":2693,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.CdnFileTamperedError":{}}}],["center",{"_index":1362,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{}},"title":{}}],["certain",{"_index":710,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#general-improvements-v09":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{}}],["chain",{"_index":1216,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["chanc",{"_index":3975,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["chang",{"_index":105,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["changed_about",{"_index":3346,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{}}}],["changed_admin",{"_index":3348,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{}}}],["changed_default_banned_right",{"_index":3349,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{}}}],["changed_hide_histori",{"_index":3351,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{}}}],["changed_invit",{"_index":3353,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{}}}],["changed_loc",{"_index":3354,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{}}}],["changed_messag",{"_index":3357,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{}}}],["changed_photo",{"_index":3358,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{}}}],["changed_pin",{"_index":3359,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{}}}],["changed_restrict",{"_index":3360,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{}}}],["changed_signatur",{"_index":3361,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{}}}],["changed_sticker_set",{"_index":3362,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{}}}],["changed_titl",{"_index":3364,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{}}}],["changed_usernam",{"_index":3365,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{}}}],["changelog",{"_index":41,"text":{"":{},"#getting-started":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{}},"title":{"misc/changelog/":{},"misc/changelog/#changelog-version-history":{}}}],["channel",{"_index":801,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/chats-and-channels/#working-with-chats-and-channels":{}}}],["channel'",{"_index":3347,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{}},"title":{}}],["channel_id",{"_index":4269,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["channel_year",{"_index":1173,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["channeladminlogev",{"_index":3336,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["channeladminlogeventact",{"_index":3345,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action":{}},"title":{}}],["channelforbidden",{"_index":4268,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["channelful",{"_index":4465,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["channelloc",{"_index":3356,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{}},"title":{}}],["channelparticip",{"_index":3338,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{}},"title":{}}],["channelprivateerror",{"_index":2558,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["char",{"_index":566,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-asyncio-basics":{}},"title":{}}],["charact",{"_index":1243,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{}},"title":{}}],["chat",{"_index":277,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#scheduled-messages-v110":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#utilities-telethonutils":{},"quick-references/client-reference/":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"quick-references/client-reference/#chats":{}}}],["chat.id",{"_index":3428,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{}},"title":{}}],["chat_action_event.input_us",{"_index":1978,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["chat_id",{"_index":525,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{}}}],["chat_photo",{"_index":4466,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["chatadminrequirederror",{"_index":982,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{}},"title":{}}],["chatbannedright",{"_index":3350,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{}},"title":{}}],["chatempti",{"_index":4438,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["chatforbidden",{"_index":4439,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["chatful",{"_index":4444,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["chatgett",{"_index":921,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}}}],["chatphoto",{"_index":4251,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["chatphotoempti",{"_index":1144,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["cheaper",{"_index":562,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["check",{"_index":502,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"examples/chats-and-channels/#checking-a-link-without-joining":{}}}],["check_hash",{"_index":4430,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["checkchatinviterequest",{"_index":1464,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{}},"title":{}}],["checksum",{"_index":4050,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{}},"title":{}}],["cherri",{"_index":2039,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["china",{"_index":4946,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["choic",{"_index":3420,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["choos",{"_index":1365,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["chronolog",{"_index":1552,"text":{"misc/changelog/":{},"misc/changelog/#changelog-version-history":{}},"title":{}}],["chunk",{"_index":2540,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{"modules/utils/#telethon.utils.chunks":{}}}],["circumst",{"_index":1704,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["cl",{"_index":3411,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["clang",{"_index":203,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["clarifi",{"_index":1981,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["clariti",{"_index":2745,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["class",{"_index":368,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["classmethod",{"_index":3408,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["clean",{"_index":1266,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["cleaner",{"_index":2074,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["clear",{"_index":1886,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.clear":{}}}],["clear_draft",{"_index":3524,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["clearer",{"_index":442,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["cli",{"_index":1309,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"misc/changelog/":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["click",{"_index":330,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{}},"title":{"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}}}],["client",{"_index":12,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telegramtui":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{},"examples/users/#updating-your-profile-photo":{},"examples/users/#updating-your-username":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#scheduled-messages-v110":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/client-reference/":{},"quick-references/client-reference/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"concepts/updates/#events-without-the-client":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}}}],["client'",{"_index":2122,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["client([request",{"_index":2025,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["client([sendmessagerequest(chat",{"_index":2295,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client(somerequest",{"_index":2751,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["client.act",{"_index":1563,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["client.action(chat",{"_index":1825,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.add_event_handl",{"_index":1200,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.add_event_handler(handlers.welcome.handl",{"_index":2021,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["client.add_update_handl",{"_index":2178,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["client.catch_up",{"_index":2067,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["client.connect",{"_index":2220,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.convers",{"_index":1570,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["client.conversation('botfath",{"_index":2045,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["client.delete_dialog",{"_index":1615,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["client.delete_messag",{"_index":1591,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{}},"title":{}}],["client.disconnect",{"_index":1222,"text":{"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["client.download_media",{"_index":1724,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{}},"title":{}}],["client.download_media(contact",{"_index":1845,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.download_profile_photo(await",{"_index":1810,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.download_profile_photo(event.input_send",{"_index":1812,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.download_profile_photo(event.sender_id",{"_index":1814,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.edit_2fa",{"_index":2348,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.edit_admin",{"_index":1628,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["client.edit_fold",{"_index":1754,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.edit_messag",{"_index":1652,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["client.edit_permiss",{"_index":1584,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#enhancements":{}},"title":{}}],["client.forward_messag",{"_index":1654,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["client.get_dialog",{"_index":808,"text":{"concepts/entities/":{},"concepts/entities/#entities":{}},"title":{}}],["client.get_draft",{"_index":1671,"text":{"misc/changelog/":{},"misc/changelog/#enhancements_2":{}},"title":{}}],["client.get_ent",{"_index":827,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["client.get_entity('m",{"_index":2003,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["client.get_input_ent",{"_index":824,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["client.get_input_entity(p",{"_index":2138,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["client.get_me(input_peer=tru",{"_index":2390,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.get_messag",{"_index":1179,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["client.get_message_histori",{"_index":2181,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.get_messages(chat",{"_index":2278,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.get_particip",{"_index":2362,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.get_participants(group",{"_index":811,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["client.get_peer_id",{"_index":2136,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["client.get_peer_id('m",{"_index":1880,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.idl",{"_index":2177,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["client.inline_queri",{"_index":1912,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["client.invok",{"_index":2184,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.invoke(somerequest",{"_index":2752,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["client.is_bot",{"_index":1954,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["client.is_connect",{"_index":1940,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.is_user_author",{"_index":1994,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["client.iter_",{"_index":1857,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.iter_admin_log",{"_index":1938,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.iter_dialog",{"_index":1694,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.iter_download",{"_index":1757,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.iter_messag",{"_index":1719,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["client.iter_messages(chat",{"_index":1861,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.iter_particip",{"_index":2361,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.iter_participants(search",{"_index":1785,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.iter_profile_photo",{"_index":1765,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.kick_particip",{"_index":1626,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["client.list_event_handl",{"_index":1207,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.list_update_handl",{"_index":2180,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.log_out",{"_index":1996,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["client.loop",{"_index":580,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{}},"title":{}}],["client.on(events.newmessag",{"_index":1808,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.pin_messag",{"_index":1634,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_1":{}},"title":{}}],["client.remove_event_handl",{"_index":1205,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.remove_update_handl",{"_index":2179,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.run_until_disconnect",{"_index":625,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{"concepts/asyncio/#clientrun_until_disconnected-blocks":{}}}],["client.send_fil",{"_index":1580,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["client.send_file(chat",{"_index":4194,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["client.send_messag",{"_index":1041,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["client.send_message('m",{"_index":2020,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["client.send_message('usernam",{"_index":866,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["client.send_message(chat",{"_index":1827,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.send_message(dialog.input_ent",{"_index":3515,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{}},"title":{}}],["client.send_read_acknowledg",{"_index":1979,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["client.send_voice_not",{"_index":2182,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.session.entities.clear_cache(entity=non",{"_index":2555,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.session.entities.en",{"_index":2554,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.session.flood_sleep_threshold",{"_index":2536,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.session.report_error",{"_index":2701,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["client.session.save_ent",{"_index":1095,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.session.server_address",{"_index":2559,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["client.sign_up",{"_index":1870,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.start",{"_index":671,"text":{"concepts/asyncio/":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{"concepts/asyncio/#why-does-clientstart-work-outside-async":{}}}],["client.takeout",{"_index":1927,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["client.upload_fil",{"_index":1675,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_2":{}},"title":{}}],["clipboard",{"_index":1043,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["clock",{"_index":630,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["clone",{"_index":1301,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{}},"title":{}}],["close",{"_index":1256,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["closer",{"_index":2795,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["cloud",{"_index":1505,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgcloud":{}},"title":{}}],["clutter",{"_index":2628,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["code",{"_index":135,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"basic/signing-in/#editing-the-code":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/#auto-generated-code":{},"quick-references/faq/#code-without-errors-doesnt-work":{}}}],["code_callback",{"_index":1374,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["code_length",{"_index":1006,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["coexist",{"_index":2172,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["collis",{"_index":2327,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["colour",{"_index":2213,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["column",{"_index":1237,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["combin",{"_index":665,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["come",{"_index":50,"text":{"":{},"#getting-started":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["comfort",{"_index":1282,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["comma",{"_index":2079,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["command",{"_index":106,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/installation/#verification":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["commandhandl",{"_index":729,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["comment",{"_index":441,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["commerci",{"_index":1332,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{}},"title":{}}],["commit",{"_index":1240,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["common",{"_index":673,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/errors/":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{"concepts/errors/#common-errors":{}}}],["commonli",{"_index":201,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["commontyp",{"_index":1436,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["commun",{"_index":662,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["compact",{"_index":703,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["compar",{"_index":2439,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["compat",{"_index":48,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{}},"title":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{}}}],["compil",{"_index":1259,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["complain",{"_index":2162,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["complaint",{"_index":2167,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["complet",{"_index":380,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["complex",{"_index":1444,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["compon",{"_index":1395,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["compress",{"_index":2605,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}}}],["comput",{"_index":2592,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["concat",{"_index":4541,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["concept",{"_index":243,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["concern",{"_index":2264,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{}},"title":{}}],["concis",{"_index":1432,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["concurr",{"_index":598,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["condit",{"_index":1220,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["configur",{"_index":1916,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["confus",{"_index":1670,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_2":{}},"title":{}}],["connect",{"_index":150,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"quick-references/client-reference/":{},"quick-references/client-reference/#base":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["connection=connectionhttp",{"_index":2133,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["connection_app_version_empti",{"_index":2758,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["connectionerror",{"_index":1841,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["connectionhttp",{"_index":2132,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["connectionmod",{"_index":2275,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["connectionreseterror",{"_index":2753,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["connectionst",{"_index":2258,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["connectiontcpmtproxyabridg",{"_index":424,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["connectiontcpmtproxyintermedi",{"_index":425,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["connectiontcpmtproxyrandomizedintermedi",{"_index":426,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["connectiontcpobfusc",{"_index":1878,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["consid",{"_index":200,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["consider",{"_index":141,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["consist",{"_index":418,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["consol",{"_index":1308,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{}},"title":{}}],["constant",{"_index":1856,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{}},"title":{}}],["constantli",{"_index":2566,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{}},"title":{}}],["construct",{"_index":1049,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["constructor",{"_index":1039,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{}},"title":{}}],["consult",{"_index":687,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{}},"title":{}}],["consum",{"_index":2575,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["contact",{"_index":280,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message.contact":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.contact":{}}}],["contain",{"_index":507,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.common.MultiError":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["content",{"_index":2687,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{}},"title":{}}],["content_rel",{"_index":2262,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["context",{"_index":731,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{}},"title":{}}],["continu",{"_index":529,"text":{"basic/updates/":{},"basic/updates/#entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["contribut",{"_index":1262,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["control",{"_index":682,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["conv",{"_index":2046,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["conv.get_edit",{"_index":2049,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["conv.get_respons",{"_index":1773,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["conv.send_message('/mybot",{"_index":2047,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["conv.send_message('hi",{"_index":3491,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["conv.wait_event(events.newmessage(incoming=tru",{"_index":3490,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["conveni",{"_index":49,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.is_empty":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"misc/compatibility-and-convenience/#convenience":{}}}],["convers",{"_index":841,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{}}}],["conversation.cancel",{"_index":1722,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["conversation.cancel_al",{"_index":1684,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["conversation.get_respons",{"_index":1877,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["conversation.wait_ev",{"_index":1991,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["convert",{"_index":896,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#utilities-telethonutils":{}},"title":{}}],["convieni",{"_index":1382,"text":{"developing/testing/":{},"developing/testing/#tests":{}},"title":{}}],["convinc",{"_index":712,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["cool",{"_index":295,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{"misc/changelog/#made-interactivetelegramclient-cool-v04":{}}}],["copi",{"_index":1033,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#enhancements":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["core",{"_index":2199,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["coroutin",{"_index":377,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"quick-references/faq/":{}},"title":{"concepts/asyncio/#what-are-async-await-and-coroutines":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}}}],["correct",{"_index":2034,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["correctli",{"_index":119,"text":{"basic/installation/":{},"basic/installation/#verification":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["correspond",{"_index":1699,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["corrupt",{"_index":2508,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["couldn't",{"_index":1804,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["count",{"_index":1467,"text":{"examples/chats-and-channels/":{},"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.button_count":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}}}],["counter",{"_index":3492,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["counterpart",{"_index":2357,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["countri",{"_index":1027,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["cours",{"_index":285,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["cov",{"_index":1378,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#tests":{}},"title":{"developing/testing/#brief-introduction-to-pytest-cov":{}}}],["cover",{"_index":519,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["coverag",{"_index":1379,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#tests":{}},"title":{}}],["cpu",{"_index":1792,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["craft",{"_index":2485,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["crash",{"_index":2063,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["crc32(b'inputchannel",{"_index":4265,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["crc32(b'inputchatphoto",{"_index":4286,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["crc32(b'inputdialogp",{"_index":4294,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["crc32(b'inputdocu",{"_index":4303,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["crc32(b'inputfil",{"_index":4288,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["crc32(b'inputgeopoint",{"_index":4325,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["crc32(b'inputmedia",{"_index":4384,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["crc32(b'inputmessag",{"_index":4426,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["crc32(b'inputp",{"_index":4296,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["crc32(b'inputphoto",{"_index":4386,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["crc32(b'inputus",{"_index":4470,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["crc32(b'messag",{"_index":4428,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["creat",{"_index":54,"text":{"":{},"#getting-started":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#updated-pip-version-v06":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{}},"title":{"concepts/sessions/#creating-your-own-storage":{}}}],["create_basic_group_chat",{"_index":3030,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{}},"title":{"modules/client/#telegram.client.Telegram.create_basic_group_chat":{}}}],["create_futur",{"_index":3464,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["create_new_connect",{"_index":2563,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["create_task",{"_index":605,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["createbasicgroupchat",{"_index":3041,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{}},"title":{}}],["creation",{"_index":474,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["creativ",{"_index":663,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["creator",{"_index":1153,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["credenti",{"_index":1124,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["critic",{"_index":1265,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["cross",{"_index":2579,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["cryptg",{"_index":128,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["csv",{"_index":1963,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{"misc/changelog/#error-descriptions-in-csv-files-v143":{}}}],["ctrl+c",{"_index":607,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["current",{"_index":343,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#current-winner":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.file.File.emoji":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{"misc/wall-of-shame/#current-winner":{}}}],["currentmodul",{"_index":4904,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#account":{},"quick-references/client-reference/#auth":{},"quick-references/client-reference/#bots":{},"quick-references/client-reference/#buttons":{},"quick-references/client-reference/#chats":{},"quick-references/client-reference/#downloads":{}},"title":{}}],["cursor",{"_index":2193,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["custom",{"_index":1099,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{"modules/custom/":{},"modules/custom/#custom-package":{}}}],["custom.button",{"_index":2119,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["custom.dialog",{"_index":4436,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["custom.messag",{"_index":1178,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["customiz",{"_index":2534,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["custommod",{"_index":4840,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["cut",{"_index":3378,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}},"title":{}}],["cycl",{"_index":1710,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["cyclic",{"_index":2513,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["d",{"_index":3438,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{}},"title":{}}],["daemon",{"_index":2809,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["daili",{"_index":639,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["damn",{"_index":2881,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["dangl",{"_index":2539,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["daniil",{"_index":2698,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["danog",{"_index":1336,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{}},"title":{}}],["dark",{"_index":2284,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["dash",{"_index":2572,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["data",{"_index":1002,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data":{}}}],["data/cats.jpg",{"_index":773,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["databas",{"_index":870,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}}}],["database_encryption_key",{"_index":2898,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["datacent",{"_index":2983,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["datainvaliderror",{"_index":3663,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["date",{"_index":715,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date":{}}}],["datetim",{"_index":629,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#scheduled-messages-v110":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["day",{"_index":1430,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["day'",{"_index":1501,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegramtui":{}},"title":{}}],["db",{"_index":3290,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["dc",{"_index":987,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["dc_id",{"_index":1357,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["de)seri",{"_index":1661,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["deactiv",{"_index":1617,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_3":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["dead",{"_index":2798,"text":{"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["deal",{"_index":136,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["debug",{"_index":1140,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}}}],["decent",{"_index":1260,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["decid",{"_index":604,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["decis",{"_index":2852,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["declar",{"_index":593,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{}},"title":{}}],["decode_waveform",{"_index":4114,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{"modules/utils/#telethon.utils.decode_waveform":{}}}],["decor",{"_index":476,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/updates/":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{"concepts/updates/#events-without-decorators":{}}}],["decrypt",{"_index":133,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{}},"title":{}}],["dedic",{"_index":2121,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["def",{"_index":22,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["default",{"_index":185,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["default_banned_right",{"_index":1168,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["default_workers_queue_s",{"_index":2909,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["defaultdict",{"_index":3002,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["defin",{"_index":370,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["definit",{"_index":479,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["del",{"_index":4102,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["del_surrog",{"_index":4259,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["delay",{"_index":599,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["delet",{"_index":506,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}}}],["delete_dialog",{"_index":3514,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["delete_messag",{"_index":2557,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{"modules/client/#telegram.client.Telegram.delete_messages":{}}}],["deleted/limit",{"_index":4941,"text":{"quick-references/faq/":{}},"title":{"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}}}],["deleted_messag",{"_index":3366,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{}}}],["deletemessag",{"_index":3060,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{}},"title":{}}],["delivr",{"_index":1341,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["demand",{"_index":2564,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["denot",{"_index":2670,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["depend",{"_index":127,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{"basic/installation/#optional-dependencies":{}}}],["deprec",{"_index":2415,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["dept",{"_index":1177,"text":{"concepts/updates/":{}},"title":{"concepts/updates/":{},"concepts/updates/#updates-in-dept":{}}}],["depth",{"_index":242,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/errors/":{},"modules/errors/#api-errors":{}},"title":{}}],["deriv",{"_index":4432,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["describ",{"_index":419,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-use-a-proxy":{}},"title":{}}],["descript",{"_index":239,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description":{}}}],["descriptor",{"_index":1636,"text":{"misc/changelog/":{},"misc/changelog/#enhancements_1":{}},"title":{}}],["deserv",{"_index":1599,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["design",{"_index":2022,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["desir",{"_index":650,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["desktop",{"_index":1690,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["despit",{"_index":1717,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["destroy",{"_index":1823,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["destruct",{"_index":2196,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["detail",{"_index":336,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["detect",{"_index":1568,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["determin",{"_index":2535,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.is_empty":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/errors/":{},"modules/errors/#api-errors":{}},"title":{}}],["determinist",{"_index":1795,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["dev",{"_index":207,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["develop",{"_index":79,"text":{"":{},"#what-is-this":{},"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{"basic/installation/#installing-development-versions":{}}}],["devic",{"_index":2792,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["device_model",{"_index":2903,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["dh",{"_index":2757,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["dialog",{"_index":274,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{},"quick-references/client-reference/":{}},"title":{"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"quick-references/client-reference/#dialogs":{}}}],["dialog.arch",{"_index":1752,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["dialog.archive(0",{"_index":3510,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["dialog.delet",{"_index":1763,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["dialog.is_group",{"_index":1998,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["dialog/draft",{"_index":2349,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["dialogs/convers",{"_index":272,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["dialogs/messag",{"_index":2477,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["dice",{"_index":1583,"text":{"misc/changelog/":{},"misc/changelog/#enhancements":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.dice":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.dice":{}}}],["dict",{"_index":417,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["dictionari",{"_index":1934,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["didn",{"_index":3816,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["didn't",{"_index":540,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["die",{"_index":1224,"text":{"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{}},"title":{}}],["diff",{"_index":1239,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["differ",{"_index":422,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"concepts/sessions/#different-session-storage":{}}}],["digest",{"_index":3549,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["dimens",{"_index":4632,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["dir",{"_index":999,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{}},"title":{}}],["direct",{"_index":706,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{}},"title":{}}],["directli",{"_index":294,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["directori",{"_index":1085,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["directory_nam",{"_index":2990,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["dirnam",{"_index":4078,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["disabl",{"_index":1094,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["disconnect",{"_index":628,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"quick-references/client-reference/":{},"quick-references/client-reference/#base":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["discourag",{"_index":2252,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["discov",{"_index":1383,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["discuss",{"_index":2629,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["disk",{"_index":1107,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}},"title":{}}],["dislik",{"_index":4958,"text":{"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["dispatch",{"_index":735,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["display",{"_index":1493,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["disrupt",{"_index":4065,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{}},"title":{}}],["distinct",{"_index":1040,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["distinguish",{"_index":2313,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["distribut",{"_index":2688,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["dive",{"_index":1248,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["divmod",{"_index":4145,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["do",{"_index":620,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["do_someth",{"_index":320,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["doc",{"_index":2471,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["docstr",{"_index":2417,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["document",{"_index":3,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#php":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#tests":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.file.File.name":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/custom/#telethon.tl.custom.message.Message.document":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{},"modules/custom/#telethon.tl.custom.message.Message.video":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"#how-should-i-use-the-documentation":{},"#telethons-documentation":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.message.Message.document":{}}}],["document.attribut",{"_index":3640,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["documentattributeanim",{"_index":4613,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["documentattributeaudio",{"_index":4152,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["documentattributefilenam",{"_index":4235,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["documentattributestick",{"_index":4612,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["documentattributevideo",{"_index":4239,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["documentempti",{"_index":4304,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["doesn't",{"_index":717,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"quick-references/faq/#code-without-errors-doesnt-work":{}}}],["dog",{"_index":1643,"text":{"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["domain",{"_index":3385,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["don't",{"_index":348,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{}}],["done",{"_index":75,"text":{"":{},"#what-is-this":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["dot",{"_index":268,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["doubl",{"_index":1666,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["down",{"_index":212,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["downgrad",{"_index":1781,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["download",{"_index":95,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/client-reference/":{}},"title":{"quick-references/client-reference/#downloads":{}}}],["download_contact",{"_index":2722,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["download_docu",{"_index":2721,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["download_fil",{"_index":4913,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#downloads":{}},"title":{}}],["download_media",{"_index":304,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"quick-references/client-reference/":{},"quick-references/client-reference/#downloads":{}},"title":{"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}}}],["download_msg_media",{"_index":2718,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["download_path",{"_index":652,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["download_photo",{"_index":2720,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["download_profile_photo",{"_index":17,"text":{"":{},"#getting-started":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/client-reference/":{},"quick-references/client-reference/#downloads":{}},"title":{}}],["downloading/upload",{"_index":138,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["dp",{"_index":734,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["draft",{"_index":1673,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_2":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.is_empty":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft":{}}}],["draft.send",{"_index":2364,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["draft.set_messag",{"_index":3506,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["drop",{"_index":2154,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["due",{"_index":1706,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["dumbot",{"_index":725,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}}}],["dump",{"_index":2602,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["duplic",{"_index":1848,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["durat",{"_index":181,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.duration":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.duration":{}}}],["duration=7",{"_index":4196,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["dure",{"_index":1631,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["e",{"_index":956,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["e.g",{"_index":877,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["e.is_priv",{"_index":2026,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["e.second",{"_index":4940,"text":{"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["each",{"_index":551,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["earli",{"_index":1832,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["earlier",{"_index":1771,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["earliest_edit",{"_index":3461,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{}}],["eas",{"_index":2086,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["easi",{"_index":67,"text":{"":{},"#what-is-this":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["easier",{"_index":436,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{}}],["easiest",{"_index":1120,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{}},"title":{}}],["easili",{"_index":711,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["echo",{"_index":733,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["echo_al",{"_index":760,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["echobot",{"_index":750,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["echobot2.pi",{"_index":726,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["ed",{"_index":2066,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["edit",{"_index":352,"text":{"basic/signing-in/":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#scheduled-messages-v110":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{"basic/signing-in/#editing-the-code":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}}}],["edit_2fa",{"_index":4908,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{}},"title":{}}],["edit_admin",{"_index":4926,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["edit_d",{"_index":3463,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["edit_fold",{"_index":4916,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["edit_hid",{"_index":3620,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["edit_messag",{"_index":2418,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{}}],["edit_permiss",{"_index":4927,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["editor",{"_index":357,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{}},"title":{}}],["editpeerfoldersrequest",{"_index":3511,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["effect",{"_index":2233,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["effici",{"_index":1082,"text":{"concepts/sessions/":{},"concepts/sessions/#session-files":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["effort",{"_index":960,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["element",{"_index":3593,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["elif",{"_index":3402,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["ellipsi",{"_index":3380,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{}},"title":{}}],["email",{"_index":1921,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["email_unconfirmed_x",{"_index":1003,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["emailunconfirmederror",{"_index":1005,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["emb",{"_index":1123,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["embed_link",{"_index":1586,"text":{"misc/changelog/":{},"misc/changelog/#enhancements":{}},"title":{}}],["emoji",{"_index":2507,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.emoji":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.emoji":{}}}],["emoticon",{"_index":4405,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["empti",{"_index":186,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.is_empty":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["emul",{"_index":4020,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["en",{"_index":2908,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["enabl",{"_index":453,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["encapsul",{"_index":3499,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["encod",{"_index":1291,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["encode_waveform",{"_index":4117,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{"modules/utils/#telethon.utils.encode_waveform":{}}}],["encount",{"_index":807,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["encourag",{"_index":1967,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["encrypt",{"_index":132,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["end",{"_index":344,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-asyncio-basics":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["end_takeout",{"_index":4937,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#account":{}},"title":{}}],["endpoint",{"_index":689,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{}},"title":{}}],["enhanc",{"_index":1574,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{}},"title":{"misc/changelog/#enhancements":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{}}}],["enough",{"_index":886,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["enqueu",{"_index":2257,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ensur",{"_index":1360,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["ensure_parent_dir_exist",{"_index":4072,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}}}],["ent",{"_index":3892,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["enter",{"_index":337,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["entir",{"_index":595,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["entiti",{"_index":521,"text":{"basic/updates/":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#utilities-telethonutils":{}},"title":{"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{}}}],["entities[original.user_id",{"_index":3342,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["entity'",{"_index":4431,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["entity/messag",{"_index":3501,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["entitydatabas",{"_index":2541,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["entitydatabase.__delitem__",{"_index":2544,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["entri",{"_index":1897,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["enumerate(it",{"_index":1862,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["environ",{"_index":1377,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["eol",{"_index":2855,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["ephemer",{"_index":1138,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["equal",{"_index":3401,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["equival",{"_index":831,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["eras",{"_index":3525,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{}},"title":{}}],["error",{"_index":172,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.common":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.common.SecurityError":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/errors/":{},"modules/errors/#api-errors":{},"quick-references/faq/#code-without-errors-doesnt-work":{}}}],["errors.rpcmcgetfailerror",{"_index":1890,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["etc",{"_index":227,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#utilities-telethonutils":{}},"title":{}}],["even",{"_index":283,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["event",{"_index":8,"text":{"":{},"#getting-started":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.id":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/#event-templates-v13":{}}}],["event.answer('phon",{"_index":2104,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["event.chat",{"_index":4959,"text":{"quick-references/faq/":{}},"title":{"quick-references/faq/#eventchat-or-eventsender-is-none":{}}}],["event.cli",{"_index":2018,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["event.data",{"_index":2100,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["event.data.decode('utf",{"_index":2102,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["event.delete_messag",{"_index":2366,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["event.edit('thank",{"_index":2093,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["event.forward_to",{"_index":2388,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["event.get_input_chat",{"_index":1183,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{}},"title":{}}],["event.get_input_send",{"_index":1811,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["event.input_chat",{"_index":819,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{}},"title":{}}],["event.repli",{"_index":762,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["event.respond('hi",{"_index":2019,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["event.send",{"_index":4960,"text":{"quick-references/faq/":{}},"title":{"quick-references/faq/#eventchat-or-eventsender-is-none":{}}}],["event_loop",{"_index":1392,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["events.album",{"_index":1624,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["events.callbackqueri",{"_index":2002,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["events.chatact",{"_index":1603,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["events.inlinequeri",{"_index":2087,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["events.messagechang",{"_index":2380,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["events.messagedelet",{"_index":2382,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{}},"title":{}}],["events.messageedit",{"_index":2381,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["events.newmessag",{"_index":2234,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["events.raw",{"_index":1209,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["events.regist",{"_index":1192,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["events.register(events.newmessage('(?i)hello",{"_index":2017,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["events.reply(file='/path/to/photo.jpg",{"_index":2387,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["events.stoppropag",{"_index":746,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["eventu",{"_index":602,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["everyon",{"_index":1231,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["everyth",{"_index":533,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["everywher",{"_index":2160,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["exact",{"_index":805,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["exactli",{"_index":3551,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["exampl",{"_index":234,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/users/":{},"examples/users/#users":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"basic/updates/#more-examples":{}}}],["exce",{"_index":1241,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["exceed",{"_index":4062,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{}},"title":{}}],["except",{"_index":454,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#ready-pip-go-v05":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{"quick-references/faq/#how-can-i-except-floodwaiterror":{}}}],["excerpt",{"_index":4434,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["excit",{"_index":2055,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["exclus",{"_index":2010,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{}},"title":{}}],["execut",{"_index":1401,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["executor",{"_index":765,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["exercis",{"_index":1414,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["exhaust",{"_index":714,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["exist",{"_index":390,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["exist_ok",{"_index":4080,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["exit",{"_index":3441,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{}},"title":{}}],["expand",{"_index":232,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["expect",{"_index":1772,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["expectocode'",{"_index":1492,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{}},"title":{}}],["expens",{"_index":552,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["experi",{"_index":2585,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["expir",{"_index":3600,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{}},"title":{}}],["explain",{"_index":3538,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["explan",{"_index":3554,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#api-errors":{}},"title":{}}],["explanatori",{"_index":1244,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["explicit",{"_index":401,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["explicitli",{"_index":920,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["export",{"_index":1127,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{"examples/projects-using-telethon/#telegram-export":{}}}],["expos",{"_index":708,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["express",{"_index":1649,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{}},"title":{}}],["ext",{"_index":3531,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.ext":{}}}],["extens",{"_index":1709,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["extensions.markdown",{"_index":2497,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["extern",{"_index":546,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["extra",{"_index":839,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["extract",{"_index":174,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["extrem",{"_index":1125,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["exzhawk",{"_index":2815,"text":{"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{}},"title":{}}],["f",{"_index":2514,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["f\\d",{"_index":4833,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["fa",{"_index":4832,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["fact",{"_index":670,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["factor",{"_index":1020,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#two-factor-authentication-v07":{}},"title":{"misc/changelog/#two-factor-authentication-v07":{}}}],["fail",{"_index":165,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["fairli",{"_index":1338,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["fals",{"_index":291,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["fanci",{"_index":1353,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{}},"title":{}}],["faq",{"_index":688,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"quick-references/faq/":{},"quick-references/faq/#faq":{}}}],["far",{"_index":516,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{}},"title":{}}],["farewel",{"_index":2597,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["fashion",{"_index":2505,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["fast",{"_index":2053,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["faster",{"_index":131,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["favour",{"_index":898,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{}},"title":{}}],["fd",{"_index":2244,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["featur",{"_index":709,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["feed",{"_index":2478,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["feedback",{"_index":2656,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["feel",{"_index":1479,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["fetch",{"_index":1181,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["few",{"_index":932,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["fh",{"_index":3565,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["field",{"_index":340,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"quick-references/faq/":{}},"title":{"quick-references/faq/#how-do-i-access-a-field":{}}}],["figur",{"_index":2876,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["file",{"_index":139,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#stability-improvements-v091":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.file.File.mime_type":{},"modules/custom/#telethon.tl.custom.file.File.name":{},"modules/custom/#telethon.tl.custom.file.File.size":{},"modules/custom/#telethon.tl.custom.file.File.sticker_set":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"concepts/sessions/":{},"concepts/sessions/#session-files":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}}}],["file.ext",{"_index":1714,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["file.id",{"_index":3637,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["file.nam",{"_index":3638,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["file=byt",{"_index":1946,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["file_id",{"_index":2057,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["file_id`'",{"_index":4741,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["file_path",{"_index":4073,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["file_refer",{"_index":1953,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["file_s",{"_index":4204,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["file_typ",{"_index":4610,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["filelocationtobedeprec",{"_index":4408,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["filemigrateerror",{"_index":1007,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["filenam",{"_index":2218,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["filepartmissingerror",{"_index":980,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#common-errors":{}},"title":{}}],["files_directori",{"_index":2900,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["filesystem",{"_index":1139,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["fill",{"_index":335,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}},"title":{}}],["filter",{"_index":497,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["final",{"_index":362,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["find",{"_index":236,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/projects-using-telethon/#telethonsnippets":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"quick-references/client-reference/":{},"quick-references/client-reference/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["find_user_or_chat",{"_index":2776,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["fine",{"_index":1582,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["finish",{"_index":596,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{}},"title":{}}],["finit",{"_index":1513,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{}},"title":{}}],["first",{"_index":217,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"misc/changelog/#first-working-alpha-version-v01":{}}}],["first_nam",{"_index":2682,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["fit",{"_index":3442,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{}},"title":{}}],["five",{"_index":1371,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["fix",{"_index":1560,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#quick-fix-up-v0136":{}}}],["fixtur",{"_index":1385,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["flag",{"_index":1445,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["flask",{"_index":647,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{"quick-references/faq/#can-i-use-flask-with-the-library":{}}}],["flask'",{"_index":1198,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["flexibl",{"_index":1759,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["float",{"_index":2480,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["flood",{"_index":1025,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["flood_sleep_threshold",{"_index":1024,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["flooderror",{"_index":4061,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{}}}],["floodtestphonewaiterror",{"_index":1009,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["floodwaiterror",{"_index":975,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{"quick-references/faq/#how-can-i-except-floodwaiterror":{}}}],["floor",{"_index":4547,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["flow",{"_index":2206,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["flush",{"_index":569,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-asyncio-basics":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["focu",{"_index":78,"text":{"":{},"#what-is-this":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["focus",{"_index":1951,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["folder",{"_index":1487,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["folder=0",{"_index":3508,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["folder_id",{"_index":3502,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["follow",{"_index":80,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/installation/#verification":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#updates":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["footer",{"_index":4845,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["forbidden",{"_index":2351,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["forbiddenerror",{"_index":992,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{}}}],["forc",{"_index":826,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["force_docu",{"_index":2431,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["force_document=tru",{"_index":2350,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["force_ful",{"_index":3189,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}},"title":{}}],["force_quiz",{"_index":3416,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["force_repli",{"_index":3398,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.force_reply":{}}}],["forcibl",{"_index":1847,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["forev",{"_index":606,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["forget",{"_index":668,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["forgot",{"_index":2195,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}},"title":{}}],["forgotten",{"_index":2645,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["forgotten/broken",{"_index":4049,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{}},"title":{}}],["form",{"_index":1447,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{}},"title":{}}],["format",{"_index":460,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["format(percentag",{"_index":1867,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["format(phon",{"_index":2105,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["formattedtext",{"_index":3324,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["former",{"_index":1031,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["forth",{"_index":555,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{}},"title":{}}],["forward",{"_index":888,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#scheduled-messages-v110":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.forward":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message.forward":{}}}],["forward_messag",{"_index":3869,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{}}],["forward_to",{"_index":3853,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}}}],["forwardmessagesrequest",{"_index":2644,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["found",{"_index":829,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#first-working-alpha-version-v01":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{}},"title":{}}],["free",{"_index":1249,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["friend",{"_index":282,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["friend_id",{"_index":851,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["friendli",{"_index":222,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.message.Message.client":{}},"title":{}}],["from_byt",{"_index":4093,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{}}],["from_id",{"_index":3612,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["from_message_id",{"_index":3071,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{}},"title":{}}],["from_peer",{"_index":3854,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{}}],["from_schedul",{"_index":3608,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["from_us",{"_index":2290,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["fromhex",{"_index":4834,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["frustrat",{"_index":2873,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["fsm",{"_index":1516,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{}},"title":{}}],["full",{"_index":59,"text":{"":{},"#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#tests":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#users":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{}},"title":{"concepts/entities/#full-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/users/#retrieving-full-information":{}}}],["full_chat",{"_index":4464,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["fulli",{"_index":1733,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["fun",{"_index":489,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["func",{"_index":757,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#event-templates-v13":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{}},"title":{}}],["func=lambda",{"_index":763,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["function",{"_index":378,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["functions.messages.sendmessagerequest",{"_index":1045,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["functools.parti",{"_index":2080,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["further",{"_index":901,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["furthermor",{"_index":2454,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["fuser",{"_index":4955,"text":{"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["futur",{"_index":435,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["fwd_from",{"_index":2231,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["fwd_from_ent",{"_index":2228,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["fwd_limit",{"_index":1462,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["fwd_text",{"_index":3383,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["galleri",{"_index":3596,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["game",{"_index":1828,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.game":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.message.Message.game":{}}}],["garnet",{"_index":1509,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{}},"title":{"examples/projects-using-telethon/#garnet":{}}}],["gasymov",{"_index":1316,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["gather",{"_index":653,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["gen",{"_index":1303,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["gen_tl",{"_index":2457,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["gener",{"_index":319,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.SecurityError":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{"developing/project-structure/#auto-generated-code":{},"misc/changelog/#general-improvements-v09":{}}}],["generalproxyerror",{"_index":2560,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["generate_key_data_from_nonc",{"_index":4081,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}}}],["generate_random_long",{"_index":2769,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{"modules/helpers/#telethon.helpers.generate_random_long":{}}}],["generatortyp",{"_index":4560,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["geo",{"_index":3540,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.geo":{}}}],["geo_point",{"_index":4401,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["geopoint",{"_index":3542,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.geo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["geopointempti",{"_index":4327,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["get",{"_index":0,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"":{},"#getting-started":{},"basic/updates/#getting-started":{},"concepts/entities/#getting-entities":{}}}],["get[_input]_ent",{"_index":2353,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_",{"_index":1182,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_admin_log",{"_index":4923,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["get_appropriated_part_s",{"_index":4203,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{"modules/utils/#telethon.utils.get_appropriated_part_size":{}}}],["get_attribut",{"_index":4223,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/utils/#telethon.utils.get_attributes":{}}}],["get_authorization_st",{"_index":3268,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["get_button",{"_index":1185,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}}}],["get_chat",{"_index":523,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{}}}],["get_chat_histori",{"_index":3070,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{}},"title":{"modules/client/#telegram.client.Telegram.get_chat_history":{}}}],["get_dialog",{"_index":842,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["get_dialogs(count",{"_index":2811,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["get_dialogs(limit",{"_index":2812,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["get_dialogs(limit=non",{"_index":2545,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_display_nam",{"_index":4246,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{"modules/utils/#telethon.utils.get_display_name":{}}}],["get_draft",{"_index":2537,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["get_edit",{"_index":3453,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}}}],["get_ent",{"_index":843,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"quick-references/client-reference/":{},"quick-references/client-reference/#users":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{}}}],["get_entities_text",{"_index":3890,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}}}],["get_event_loop",{"_index":565,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["get_extens",{"_index":4248,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{"modules/utils/#telethon.utils.get_extension":{}}}],["get_fwd_send",{"_index":2229,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_histori",{"_index":2517,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_inner_text",{"_index":3944,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{"modules/utils/#telethon.utils.get_inner_text":{}}}],["get_input_",{"_index":2676,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["get_input_channel",{"_index":4260,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{"modules/utils/#telethon.utils.get_input_channel":{}}}],["get_input_channel(get_input_peer(channel",{"_index":4263,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["get_input_chat",{"_index":1184,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{}}}],["get_input_chat_photo",{"_index":4272,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{"modules/utils/#telethon.utils.get_input_chat_photo":{}}}],["get_input_dialog",{"_index":4292,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{"modules/utils/#telethon.utils.get_input_dialog":{}}}],["get_input_docu",{"_index":3566,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/utils/#telethon.utils.get_input_document":{}}}],["get_input_ent",{"_index":862,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"quick-references/client-reference/":{},"quick-references/client-reference/#users":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{}}}],["get_input_geo",{"_index":4306,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/utils/#telethon.utils.get_input_geo":{}}}],["get_input_loc",{"_index":4330,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{}},"title":{"modules/utils/#telethon.utils.get_input_location":{}}}],["get_input_media",{"_index":2610,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/utils/#telethon.utils.get_input_media":{}}}],["get_input_messag",{"_index":4410,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{"modules/utils/#telethon.utils.get_input_message":{}}}],["get_input_p",{"_index":1058,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{"modules/utils/#telethon.utils.get_input_peer":{}}}],["get_input_photo",{"_index":2548,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{"modules/utils/#telethon.utils.get_input_photo":{}}}],["get_input_send",{"_index":836,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{}}}],["get_input_us",{"_index":931,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{"modules/utils/#telethon.utils.get_input_user":{}}}],["get_m",{"_index":262,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"quick-references/client-reference/":{},"quick-references/client-reference/#users":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"modules/client/#telegram.client.Telegram.get_me":{}}}],["get_me(input_peer=tru",{"_index":2410,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_messag",{"_index":654,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{"modules/client/#telegram.client.Telegram.get_message":{}}}],["get_message_histori",{"_index":2441,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["get_message_id",{"_index":3585,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{"modules/utils/#telethon.utils.get_message_id":{}}}],["get_new_msg_id",{"_index":2729,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["get_particip",{"_index":937,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["get_peer",{"_index":4536,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["get_peer_id",{"_index":3451,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/client-reference/":{},"quick-references/client-reference/#users":{}},"title":{"modules/utils/#telethon.utils.get_peer_id":{}}}],["get_profile_photo",{"_index":4925,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["get_repli",{"_index":3468,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{}}}],["get_reply_messag",{"_index":494,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}}}],["get_respons",{"_index":3454,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}}}],["get_send",{"_index":524,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}}}],["get_supergroup_full_info",{"_index":3163,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{}},"title":{"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{}}}],["get_us",{"_index":3177,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{}},"title":{"modules/client/#telegram.client.Telegram.get_user":{}}}],["get_web_page_instant_view",{"_index":3188,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}},"title":{"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}}}],["getallstickersrequest",{"_index":1547,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{}},"title":{}}],["getattr",{"_index":3434,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["getauthorizationst",{"_index":3282,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["getbotcallbackanswerrequest",{"_index":3786,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["getchat",{"_index":3069,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chats":{}},"title":{}}],["getchathistori",{"_index":3100,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{}},"title":{}}],["getconfigrequest",{"_index":2639,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["getcontactsrequest",{"_index":874,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["getfullchannel",{"_index":917,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{}},"title":{}}],["getfullchat",{"_index":916,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{}},"title":{}}],["getfullus",{"_index":915,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"examples/users/":{},"examples/users/#retrieving-full-information":{}},"title":{}}],["getfulluserrequest",{"_index":1520,"text":{"examples/users/":{},"examples/users/#retrieving-full-information":{}},"title":{}}],["getm",{"_index":788,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{}},"title":{}}],["getmessag",{"_index":3162,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{}},"title":{}}],["getmessagesviewsrequest",{"_index":1469,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["getstaterequest",{"_index":2427,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["getstickersetrequest",{"_index":1549,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{}},"title":{}}],["getsupergroupfullinfo",{"_index":3176,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{}},"title":{}}],["getus",{"_index":3187,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{}},"title":{}}],["getuserphotosrequest",{"_index":4952,"text":{"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["getusersrequest",{"_index":802,"text":{"concepts/entities/":{},"concepts/entities/#entities":{}},"title":{}}],["getwebpageinstantview",{"_index":3205,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}},"title":{}}],["gg",{"_index":849,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["ghost",{"_index":2029,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["gif",{"_index":1915,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.gif":{}}}],["git",{"_index":1238,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["github",{"_index":764,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telegram-export":{},"examples/projects-using-telethon/#telegramtui":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"examples/projects-using-telethon/#tgmount":{}},"title":{}}],["give",{"_index":2016,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["given",{"_index":2556,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["global",{"_index":2056,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["go",{"_index":241,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{}},"title":{"misc/changelog/#ready-pip-go-v05":{}}}],["god",{"_index":1277,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["gone",{"_index":2188,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["good",{"_index":522,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/testing/":{},"developing/testing/#tests":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["goodi",{"_index":1553,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#changelog-version-history":{}},"title":{}}],["gotten",{"_index":218,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{}},"title":{}}],["gracefulli",{"_index":1618,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["gramj",{"_index":1322,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["grammer",{"_index":1348,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{}},"title":{}}],["great",{"_index":2732,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["greater",{"_index":4100,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["greatli",{"_index":4743,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["grid",{"_index":3597,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["ground",{"_index":1340,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["group",{"_index":279,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#summary":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["grouped_id",{"_index":3622,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["grow",{"_index":2205,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["guarante",{"_index":1076,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["guess",{"_index":944,"text":{"concepts/entities/":{},"concepts/entities/#summary":{}},"title":{}}],["guess_extens",{"_index":4254,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["guess_typ",{"_index":4233,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["gui",{"_index":1489,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["guid",{"_index":1423,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{}},"title":{}}],["guy",{"_index":657,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["gzip",{"_index":1683,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["gzippack",{"_index":2325,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["h",{"_index":4146,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["hachoir",{"_index":173,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["hack",{"_index":321,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["hacki",{"_index":2076,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["hadn't",{"_index":2667,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["hand",{"_index":1425,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["handcraft",{"_index":2677,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["handi",{"_index":4109,"text":{"modules/utils/":{},"modules/utils/#utilities-telethonutils":{}},"title":{}}],["handl",{"_index":558,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.common.BadMessageError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}}}],["handler",{"_index":23,"text":{"":{},"#getting-started":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["handler(ev",{"_index":1809,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["handler_typ",{"_index":3284,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{}},"title":{}}],["handlers.welcom",{"_index":1203,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["handlers/welcome.pi",{"_index":1194,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["happen",{"_index":616,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["happi",{"_index":636,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{}},"title":{}}],["hard",{"_index":1439,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["hardcod",{"_index":1373,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["harder",{"_index":1732,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["hardli",{"_index":1253,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["has_geo",{"_index":1161,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["has_link",{"_index":1160,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["has_stick",{"_index":4749,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["hasattr",{"_index":3331,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["hasattr(obj",{"_index":4557,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["hash",{"_index":327,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["hash1",{"_index":4085,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["hash2",{"_index":4087,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["hash3",{"_index":4088,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["hasher",{"_index":2986,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["hashlib",{"_index":2987,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["hasn't",{"_index":942,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["hassl",{"_index":865,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["have",{"_index":583,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["haven't",{"_index":97,"text":{"basic/installation/":{},"basic/installation/#installation":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"misc/changelog/":{},"misc/changelog/#first-working-alpha-version-v01":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["head",{"_index":4111,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["headach",{"_index":680,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["header",{"_index":3613,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["heavi",{"_index":76,"text":{"":{},"#what-is-this":{}},"title":{}}],["heck",{"_index":508,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["height",{"_index":3532,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.height":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.height":{}}}],["hello",{"_index":14,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["hello.pi",{"_index":356,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{}},"title":{}}],["help",{"_index":318,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["help(request",{"_index":1042,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["help(typ",{"_index":4052,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["helper",{"_index":2611,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{}},"title":{"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{}}}],["henc",{"_index":3517,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["here",{"_index":29,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/projects-using-telethon/#telethonsnippets":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["here'",{"_index":2615,"text":{"misc/changelog/":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{}}],["heroku",{"_index":1137,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["hex",{"_index":4830,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["hex(crc32(b'messag",{"_index":4488,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["hexadecim",{"_index":1794,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["hexdigest",{"_index":2991,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["hey",{"_index":26,"text":{"":{},"#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["hi",{"_index":470,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["hidden",{"_index":455,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["hide",{"_index":3352,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["hide_via",{"_index":1911,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["higher",{"_index":1415,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["highli",{"_index":2731,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["hint",{"_index":1734,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{}}],["hints.entitylik",{"_index":3388,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["histori",{"_index":43,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{}},"title":{"misc/changelog/":{},"misc/changelog/#changelog-version-history":{}}}],["hold",{"_index":1544,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{}},"title":{}}],["home/me/pictures/holidays.jpg",{"_index":299,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["honor",{"_index":1572,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes":{}},"title":{}}],["hood",{"_index":1331,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{}},"title":{}}],["hook",{"_index":700,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["hope",{"_index":2708,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{}}],["hopefulli",{"_index":1669,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#ready-pip-go-v05":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["host",{"_index":431,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["hot",{"_index":1899,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["hourli",{"_index":638,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["howdi",{"_index":756,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["href=\"tg://user?id=123",{"_index":2007,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["htm",{"_index":4843,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["html",{"_index":1418,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["http",{"_index":55,"text":{"":{},"#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{}},"title":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{}}}],["http(",{"_index":2128,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["http://tl.telethon.dev",{"_index":1174,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["https://core.telegram.org/api/min",{"_index":4435,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["https://core.telegram.org/bots/api",{"_index":3563,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{}},"title":{}}],["https://core.telegram.org/bots/api#format",{"_index":2425,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_me.html",{"_index":3127,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{}},"title":{}}],["https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_user.html",{"_index":3178,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{}},"title":{}}],["https://core.telegram.org/widgets/login",{"_index":3387,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["https://ddg.gg/python%20inherit",{"_index":4962,"text":{"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["https://docs.python.org/3/library/abc.html>`__",{"_index":2378,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://docs.python.org/3/library/logging.html>`__",{"_index":2475,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://docs.python.org/3/library/queue.html>`__",{"_index":2484,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://docs.python.org/3/library/sqlite3.html>`__",{"_index":2468,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://github.com/danog>`__",{"_index":2699,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/archive/master.zip",{"_index":108,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/blob/v0.13/telethon/network/connection.py>`__",{"_index":2671,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/0119a006585acd1a1a9a8901a21bb2f193142cfe>`__",{"_index":2744,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/16cf94c9add5e94d70c4eee2ac142d8e76af48b9>`__",{"_index":2525,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/1f7ac7118750ed84e2165dce9c6aca2e6ea0c6a4>`__",{"_index":2742,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/62ea77cbeac7c42bfac85aa8766a1b5b35e3a76c",{"_index":2584,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/8fd0d7eadd944ff42e18aaf06228adc7aba794b5>`__",{"_index":2740,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/ed77ba6f8ff115ac624f02f691c9991e5b37be60>`__",{"_index":2524,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/commit/ee01724cdb7027c1e38625d31446ba1ea7bade92>`__",{"_index":2522,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/issues/425>`_",{"_index":2494,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/tree/master/telethon_exampl",{"_index":1924,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["https://github.com/lonamiwebs/telethon/wiki/usag",{"_index":2658,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://github.com/telegramdesktop/tdesktop/blob/bec39d89e19670eb436dc794a8f20b657cb87c71/telegram/sourcefiles/ui/image/image.cpp#l225",{"_index":4846,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["https://my.telegram.org",{"_index":1359,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["https://my.telegram.org/app",{"_index":2980,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["https://pwrtelegram.xyz/>`__",{"_index":2697,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://pypi.org/project/cryptg",{"_index":2420,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://pypi.python.org/pypi?name=telethon",{"_index":2831,"text":{"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["https://readthedocs.org/>`__",{"_index":2472,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["https://regexone.com",{"_index":515,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["https://semver.org>`_",{"_index":1740,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["https://t.me/botfath",{"_index":2044,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["https://t.me/botfather>`_",{"_index":3393,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["https://t.me/joinchat",{"_index":1454,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{}},"title":{}}],["https://t.me/joinchat/aaaaaffszqpypez7wgxltd",{"_index":1453,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{}},"title":{}}],["https://telegram.dog/usernam",{"_index":845,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["https://telegram.org/blog/sil",{"_index":3607,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["https://tl.telethon.dev",{"_index":60,"text":{"":{},"#getting-started":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["https://tl.telethon.dev/types/input_channel.html>`__",{"_index":2738,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://tl.telethon.dev/types/input_peer.html>`__",{"_index":2737,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://tl.telethon.dev/types/input_user.html>`__",{"_index":2739,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["https://www.python.org/download",{"_index":96,"text":{"basic/installation/":{},"basic/installation/#installation":{}},"title":{}}],["huge",{"_index":1142,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["hundr",{"_index":144,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["hybrid",{"_index":1497,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["hyperlink",{"_index":3619,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["i'd",{"_index":2473,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["i'm",{"_index":768,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["i'th",{"_index":3650,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["i'v",{"_index":2607,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["i).*heck",{"_index":510,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["i).*hello",{"_index":20,"text":{"":{},"#getting-started":{}},"title":{}}],["i)hello",{"_index":1195,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["i)hi|hello",{"_index":2862,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["i.",{"_index":983,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["i/o",{"_index":1396,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["id",{"_index":276,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.id":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.id":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}}}],["id/hash",{"_index":1546,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{}},"title":{}}],["idea",{"_index":1380,"text":{"developing/testing/":{},"developing/testing/#tests":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["ideal",{"_index":1815,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["ident",{"_index":4796,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["identifi",{"_index":882,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["idl",{"_index":738,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{"modules/client/#telegram.client.Telegram.idle":{}}}],["ids=123",{"_index":2279,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ids=[777",{"_index":2281,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["iff",{"_index":3815,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["ignor",{"_index":1211,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["ignore_migr",{"_index":2235,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ignore_pin",{"_index":1693,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["ignorecas",{"_index":4552,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["iiiq",{"_index":4793,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["iiqq",{"_index":4740,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["iiqqb",{"_index":4616,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["iiqqqqi",{"_index":4746,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["iiqqqqi5",{"_index":4747,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["iiqqqqib",{"_index":4618,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["illeg",{"_index":3998,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{}},"title":{}}],["imag",{"_index":159,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["immedi",{"_index":1053,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["implement",{"_index":933,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#php":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["impli",{"_index":2838,"text":{"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["implicit",{"_index":797,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["implicitli",{"_index":4969,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["import",{"_index":6,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#verification":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#session-files":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{},"examples/users/#updating-your-profile-photo":{},"examples/users/#updating-your-username":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["importchatinviterequest",{"_index":1456,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{}},"title":{}}],["importerror",{"_index":361,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{}},"title":{}}],["imposs",{"_index":834,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{}},"title":{}}],["improv",{"_index":1347,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#two-factor-authentication-v07":{}},"title":{"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#stability-improvements-v091":{}}}],["includ",{"_index":183,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/entities/":{},"concepts/entities/#entities":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["incom",{"_index":2064,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["incoming=fals",{"_index":2293,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["incompat",{"_index":1408,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{}},"title":{}}],["incorrect",{"_index":1566,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["incorrectli",{"_index":949,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{}},"title":{}}],["increas",{"_index":1465,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#stability-improvements-v091":{}},"title":{"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}}}],["incred",{"_index":1705,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["increment",{"_index":1473,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["increment=tru",{"_index":1470,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["inde",{"_index":1254,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["index",{"_index":1299,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["indexerror",{"_index":3651,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["indic",{"_index":883,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inevit",{"_index":2853,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["infam",{"_index":645,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["infer",{"_index":1594,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["infinit",{"_index":2124,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#stability-improvements-v091":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{}},"title":{}}],["info",{"_index":2817,"text":{"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["inform",{"_index":176,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.forward":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"examples/users/#retrieving-full-information":{}}}],["ing",{"_index":1047,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{}},"title":{}}],["inherit",{"_index":925,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["init",{"_index":786,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["initi",{"_index":767,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["initial_queri",{"_index":2640,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["inlin",{"_index":1609,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.inline":{}}}],["inline_msg_id",{"_index":4770,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["inline_queri",{"_index":4019,"text":{"modules/custom/":{},"quick-references/client-reference/":{},"quick-references/client-reference/#bots":{}},"title":{"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query":{}}}],["inline_query.answ",{"_index":2005,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["inlinebot",{"_index":2089,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["inlinebotswitchpm",{"_index":3599,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["inlinebuild",{"_index":1776,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}}}],["inlinequeri",{"_index":3537,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["inlineresult",{"_index":3576,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}}}],["inlineresult.articl",{"_index":3579,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{}},"title":{}}],["inlineresult.video_gif",{"_index":3580,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{}},"title":{}}],["inner",{"_index":2570,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["inner_text",{"_index":3896,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["input",{"_index":542,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.input_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.via_input_bot":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#utilities-telethonutils":{}},"title":{"concepts/entities/#entities-vs-input-entities":{}}}],["input_",{"_index":1816,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["input_channel",{"_index":1451,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{}},"title":{}}],["input_chat",{"_index":1187,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{}}}],["input_ent",{"_index":3439,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft.input_entity":{}}}],["input_message_cont",{"_index":3322,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["input_send",{"_index":832,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{}},"title":{"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{}}}],["input_us",{"_index":3343,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["inputbotinlineresult",{"_index":3550,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{}},"title":{}}],["inputbotinlineresultdocu",{"_index":3570,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{}},"title":{}}],["inputbotinlineresultgam",{"_index":3572,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{}},"title":{}}],["inputbotinlineresultphoto",{"_index":3575,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["inputchannel",{"_index":2727,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["inputchannelfrommessag",{"_index":4271,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["inputchat",{"_index":879,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["inputchatphoto",{"_index":2009,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["inputchatphotoempti",{"_index":4291,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["inputchatuploadedphoto",{"_index":4289,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{}},"title":{}}],["inputdialogp",{"_index":4297,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{}},"title":{}}],["inputdocu",{"_index":2008,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["inputdocumentempti",{"_index":4305,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{}},"title":{}}],["inputfil",{"_index":1608,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_2":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputfilebig",{"_index":4393,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputfolderp",{"_index":3512,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["inputgameid",{"_index":4398,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputgeopoint",{"_index":3541,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["inputgeopointempti",{"_index":4328,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["inputkeyboardbuttonurlauth",{"_index":1659,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["inputmedia",{"_index":4389,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["inputmediacontact",{"_index":3546,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediadic",{"_index":4404,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediadocu",{"_index":4388,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediaempti",{"_index":4409,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediagam",{"_index":4397,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediageopoint",{"_index":4400,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediaphoto",{"_index":4387,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediauploadeddocu",{"_index":4395,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediauploadedphoto",{"_index":4334,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmediavenu",{"_index":3543,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["inputmessageid",{"_index":4424,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{}},"title":{}}],["inputmessagereplyto",{"_index":3974,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{}}],["inputmessagetext",{"_index":3323,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["inputp",{"_index":897,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["inputpeerchannel",{"_index":2726,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["inputpeerchannelfrommessag",{"_index":4270,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["inputpeerchat",{"_index":4440,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["inputpeerempti",{"_index":4443,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputpeerself",{"_index":2411,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["inputpeerus",{"_index":878,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputpeeruserfrommessag",{"_index":4442,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputphoto",{"_index":3574,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["inputphotoempti",{"_index":4290,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["inputstickerset",{"_index":3363,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.file.File.sticker_set":{}},"title":{}}],["inputstickersetempti",{"_index":4745,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["inputstickersetid",{"_index":1550,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{}},"title":{}}],["inputus",{"_index":1051,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputuserempti",{"_index":4471,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputuserfrommessag",{"_index":4441,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputuserself",{"_index":3394,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["inputwebdocu",{"_index":3555,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{}},"title":{}}],["insensit",{"_index":513,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["insid",{"_index":226,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["inspect",{"_index":2741,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["instal",{"_index":32,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"basic/installation/#verification":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{}}}],["instanc",{"_index":369,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["instant",{"_index":1032,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{}},"title":{}}],["instantli",{"_index":2846,"text":{"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["instead",{"_index":107,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["int",{"_index":2430,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["integ",{"_index":941,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["integr",{"_index":644,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#tests":{}},"title":{}}],["intend",{"_index":1535,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["intent",{"_index":1252,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["inter",{"_index":661,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["interact",{"_index":71,"text":{"":{},"#what-is-this":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["interactivetelegramcli",{"_index":2763,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{"misc/changelog/#made-interactivetelegramclient-cool-v04":{}}}],["interdccallerrorerror",{"_index":1010,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["interdccallricherrorerror",{"_index":1011,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["interest",{"_index":1477,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{}},"title":{}}],["interfac",{"_index":684,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{"developing/project-structure/#main-interface":{}}}],["interfer",{"_index":4970,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["intern",{"_index":1633,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["interpret",{"_index":4968,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["interrupt",{"_index":2123,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["introduc",{"_index":1247,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{}},"title":{}}],["introduct",{"_index":354,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"developing/testing/":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{}}}],["invalid",{"_index":166,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#general-improvements-v09":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["invalidbuffererror",{"_index":4048,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.InvalidBufferError":{}}}],["invalidchecksumerror",{"_index":2637,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.InvalidChecksumError":{}}}],["invaliddcerror",{"_index":985,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{}}}],["invers",{"_index":4116,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["invit",{"_index":817,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["inviter_id",{"_index":3340,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["invitetochannelrequest",{"_index":1459,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["invoic",{"_index":3642,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.invoice":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.invoice":{}}}],["invok",{"_index":814,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{}},"title":{}}],["invokewithlayer(initconnection(x",{"_index":2488,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["io",{"_index":544,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{}},"title":{}}],["iobas",{"_index":4231,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["ioerror",{"_index":1840,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["ip",{"_index":414,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ipv6",{"_index":2446,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ipython",{"_index":324,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["iran",{"_index":4942,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["is_audio",{"_index":4236,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.is_audio":{}},"title":{"modules/utils/#telethon.utils.is_audio":{}}}],["is_bot",{"_index":4919,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#users":{}},"title":{}}],["is_channel",{"_index":3429,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel":{}}}],["is_connect",{"_index":2632,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"quick-references/client-reference/":{},"quick-references/client-reference/#base":{}},"title":{}}],["is_empti",{"_index":3516,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft.is_empty":{}}}],["is_gif",{"_index":4551,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{}},"title":{"modules/utils/#telethon.utils.is_gif":{}}}],["is_group",{"_index":3430,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{}}}],["is_imag",{"_index":4553,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{"modules/utils/#telethon.utils.is_image":{}}}],["is_invit",{"_index":4629,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["is_link",{"_index":4828,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["is_list_lik",{"_index":4556,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{"modules/utils/#telethon.utils.is_list_like":{}}}],["is_photo",{"_index":4333,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["is_priv",{"_index":929,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{}}}],["is_repli",{"_index":493,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.is_reply":{}}}],["is_run",{"_index":578,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}},"title":{}}],["is_self",{"_index":4437,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["is_us",{"_index":3507,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["is_user_author",{"_index":2785,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/client-reference/":{},"quick-references/client-reference/#users":{}},"title":{}}],["is_video",{"_index":4238,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.is_video":{}},"title":{"modules/utils/#telethon.utils.is_video":{}}}],["is_voice=tru",{"_index":2183,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["isdigit",{"_index":4623,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["isinst",{"_index":1176,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["isinstance(p",{"_index":4539,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["islic",{"_index":4113,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["isn't",{"_index":471,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["isspac",{"_index":4101,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["issu",{"_index":323,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#current-winner":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["it'",{"_index":152,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File.height":{},"modules/custom/#telethon.tl.custom.file.File.width":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/custom/#telethon.tl.custom.message.Message.contact":{},"modules/custom/#telethon.tl.custom.message.Message.dice":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.game":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.invoice":{},"modules/custom/#telethon.tl.custom.message.Message.poll":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{},"modules/custom/#telethon.tl.custom.message.Message.venue":{},"modules/custom/#telethon.tl.custom.message.Message.video":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["it'd",{"_index":1344,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{}},"title":{}}],["it.tot",{"_index":1865,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["ital",{"_index":3618,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["item",{"_index":1072,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{}},"title":{}}],["iter",{"_index":592,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{"misc/changelog/#iterate-messages-in-reverse-v103":{}}}],["iter_",{"_index":2356,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["iter_admin_log",{"_index":4922,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["iter_dialog",{"_index":275,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["iter_download",{"_index":4914,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#downloads":{}},"title":{}}],["iter_draft",{"_index":4917,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["iter_messag",{"_index":300,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{}}],["iter_particip",{"_index":2036,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["iter_profile_photo",{"_index":4924,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["itertool",{"_index":4112,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["itself",{"_index":478,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/errors/":{},"modules/errors/#telethon.errors.common":{},"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{},"modules/utils/":{},"modules/utils/#utilities-telethonutils":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["iv",{"_index":4089,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["j",{"_index":3649,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["java",{"_index":1257,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["javascript",{"_index":1314,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{"developing/telegram-api-in-other-languages/#javascript":{}}}],["jfif",{"_index":4864,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["job",{"_index":77,"text":{"":{},"#what-is-this":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["join",{"_index":448,"text":{"basic/updates/":{},"basic/updates/#updates":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{}},"title":{"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{}}}],["joinchannelrequest",{"_index":1448,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{}},"title":{}}],["joinchat",{"_index":4625,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["joined_invit",{"_index":3367,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{}}}],["josxa",{"_index":2538,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["jpeg",{"_index":205,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["jpg",{"_index":4249,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["json",{"_index":705,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["jsonsess",{"_index":2684,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["juanpotato",{"_index":1352,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{}},"title":{}}],["juli",{"_index":2887,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["jump",{"_index":30,"text":{"":{},"#getting-started":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["kazakhstan",{"_index":4945,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["keen",{"_index":685,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{}},"title":{}}],["keep",{"_index":246,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{}}],["kept",{"_index":1539,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{}},"title":{}}],["key",{"_index":745,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["keyboard",{"_index":2120,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["keyboardbutton",{"_index":3426,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["keyboardbuttoncallback",{"_index":3406,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data":{}},"title":{}}],["keyboardbuttongam",{"_index":4035,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["keyboardbuttonrequestgeoloc",{"_index":3412,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{}},"title":{}}],["keyboardbuttonrequestphon",{"_index":3414,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{}},"title":{}}],["keyboardbuttonrequestpol",{"_index":3421,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["keyboardbuttonswitchinlin",{"_index":3423,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query":{}},"title":{}}],["keyboardbuttonurl",{"_index":3427,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url":{}},"title":{}}],["keyboardinterrupt",{"_index":612,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{}},"title":{}}],["keyerror",{"_index":1959,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["keyword",{"_index":590,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["kick",{"_index":1651,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["kick_particip",{"_index":4921,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["kicked_bi",{"_index":3339,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["kilobyt",{"_index":145,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["kind",{"_index":846,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["kinda",{"_index":1345,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{}},"title":{}}],["king",{"_index":2872,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["know",{"_index":220,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["knowledg",{"_index":4951,"text":{"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["known",{"_index":252,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["kotlin",{"_index":1323,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{}},"title":{"developing/telegram-api-in-other-languages/#kotlin":{}}}],["kotlogram",{"_index":1324,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{}},"title":{}}],["kw",{"_index":792,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["kwarg",{"_index":2675,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{}},"title":{}}],["label",{"_index":2869,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["lack",{"_index":962,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["lambda",{"_index":758,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["languag",{"_index":560,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}}}],["larg",{"_index":158,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_2":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{}},"title":{}}],["larger",{"_index":2370,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["last",{"_index":373,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["last_nam",{"_index":2683,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["lat",{"_index":4326,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["late",{"_index":723,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{}},"title":{}}],["later",{"_index":313,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["latest",{"_index":103,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{}},"title":{"misc/changelog/#polls-with-the-latest-layer-v15":{}}}],["latter",{"_index":899,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{}},"title":{}}],["layer",{"_index":1063,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{"misc/changelog/#polls-with-the-latest-layer-v15":{}}}],["layout",{"_index":2098,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["lead",{"_index":1956,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["leading/trail",{"_index":1977,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["leak",{"_index":1130,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["learn",{"_index":237,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"modules/errors/":{},"modules/errors/#api-errors":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{"misc/compatibility-and-convenience/#learning":{}}}],["leav",{"_index":1067,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["leavechannelrequest",{"_index":1450,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{}},"title":{}}],["left",{"_index":89,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#first-working-alpha-version-v01":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left":{}}}],["legaci",{"_index":3609,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["legit",{"_index":1018,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{}},"title":{}}],["legitim",{"_index":2397,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["len",{"_index":3405,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["length",{"_index":1292,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["length=5",{"_index":3942,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["lengthi",{"_index":248,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{}},"title":{}}],["less",{"_index":701,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["let",{"_index":591,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["let'",{"_index":249,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{}}],["level",{"_index":466,"text":{"basic/updates/":{},"basic/updates/#updates":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["levelnam",{"_index":461,"text":{"basic/updates/":{},"basic/updates/#updates":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["lib",{"_index":204,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["libnotifi",{"_index":2837,"text":{"misc/changelog/":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["librari",{"_index":38,"text":{"":{},"#getting-started":{},"#how-should-i-use-the-documentation":{},"#what-is-this":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"basic/installation/#verification":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}}}],["library_path",{"_index":2899,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["libssl",{"_index":1264,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["libtdjson",{"_index":2981,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["life",{"_index":1555,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{"misc/changelog/#minor-quality-of-life-improvements-v114":{}}}],["lightweight",{"_index":2765,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["limit",{"_index":664,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"concepts/errors/#avoiding-limits":{}}}],["limit=non",{"_index":2568,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["line",{"_index":367,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{}},"title":{}}],["link",{"_index":231,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{"examples/chats-and-channels/#checking-a-link-without-joining":{}}}],["link_hash",{"_index":4827,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["link_preview",{"_index":290,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["linux",{"_index":2724,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["list",{"_index":214,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.is_list_like":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["list[:tl",{"_index":3617,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["list_event_handl",{"_index":4931,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#updates":{}},"title":{}}],["list_sess",{"_index":2762,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["listen",{"_index":2164,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["liter",{"_index":2871,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["littl",{"_index":353,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["live",{"_index":2343,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["llq",{"_index":4835,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["load",{"_index":1132,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["local",{"_index":1778,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["local_id",{"_index":4620,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["locat",{"_index":3355,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message.geo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["lock",{"_index":4954,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}}}],["log",{"_index":363,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["log10",{"_index":4548,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["log=debug",{"_index":2816,"text":{"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{}},"title":{}}],["log_out",{"_index":2450,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{}},"title":{}}],["logger",{"_index":1900,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["logging_",{"_index":4939,"text":{"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["logic",{"_index":2033,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["login",{"_index":328,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{"misc/changelog/#bot-login-and-proxy-support-v08":{},"modules/client/#telegram.client.Telegram.login":{}}}],["logo",{"_index":2209,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["logout",{"_index":2784,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["lonami'",{"_index":1485,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{}},"title":{}}],["long",{"_index":659,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{"misc/changelog/#long-run-bug-fix-v071":{}}}],["longer",{"_index":250,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["look",{"_index":33,"text":{"":{},"#getting-started":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["loop",{"_index":305,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"quick-references/client-reference/":{},"quick-references/client-reference/#base":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["loop.run_forev",{"_index":632,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{}},"title":{}}],["loop.run_until_complet",{"_index":634,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["loop.run_until_complete(asyncio.sleep(3",{"_index":610,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["lost",{"_index":2324,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["lot",{"_index":130,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/testing/":{},"developing/testing/#tests":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["love",{"_index":2015,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#two-factor-authentication-v07":{}},"title":{}}],["low",{"_index":1288,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["low/high",{"_index":2649,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["lower",{"_index":1780,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["lowercas",{"_index":4624,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["lowercase'd",{"_index":4626,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["lowest",{"_index":2040,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["lru_cach",{"_index":2553,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["lstrip",{"_index":4104,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["luck",{"_index":1431,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{}},"title":{}}],["m",{"_index":759,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["m.get_entities_text(messageentitycod",{"_index":3897,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["machin",{"_index":1515,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["maco",{"_index":1602,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes_2":{}},"title":{}}],["made",{"_index":134,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#ready-pip-go-v05":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{"misc/changelog/#made-interactivetelegramclient-cool-v04":{}}}],["madelin",{"_index":4545,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["madelineproto",{"_index":1337,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{}},"title":{}}],["magic",{"_index":584,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["main",{"_index":260,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"developing/project-structure/#main-interface":{}}}],["main.pi",{"_index":1202,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["maintain",{"_index":1115,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["mainten",{"_index":1274,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["major",{"_index":1540,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{}}],["make",{"_index":66,"text":{"":{},"#what-is-this":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["makedir",{"_index":4079,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["malform",{"_index":1943,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["manag",{"_index":1658,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{}},"title":{}}],["mani",{"_index":518,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["manual",{"_index":190,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["map",{"_index":3337,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["mark",{"_index":1391,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#first-working-alpha-version-v01":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["mark_read",{"_index":3479,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}}}],["markdown",{"_index":286,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["markdown'",{"_index":2392,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["markdown/html",{"_index":1976,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["marked_id",{"_index":4750,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["markup",{"_index":1944,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["master",{"_index":383,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{"concepts/asyncio/":{},"concepts/asyncio/#mastering-asyncio":{}}}],["match",{"_index":501,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["match.start",{"_index":2330,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["math",{"_index":4542,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["matrix",{"_index":1496,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{}},"title":{}}],["matter",{"_index":718,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["maunium'",{"_index":1495,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{}},"title":{}}],["mautrix",{"_index":1494,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{}},"title":{"examples/projects-using-telethon/#mautrix-telegram":{}}}],["max_id",{"_index":3482,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["maximum",{"_index":2190,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{}},"title":{}}],["maxsiz",{"_index":2997,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["mayb",{"_index":1088,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{}},"title":{}}],["md",{"_index":4842,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["md5",{"_index":2988,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["me/self",{"_index":2352,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["mean",{"_index":94,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"quick-references/faq/#what-does-bases-chatgetter-mean":{}}}],["meant",{"_index":65,"text":{"":{},"#what-is-this":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{}},"title":{}}],["measur",{"_index":1412,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["media",{"_index":170,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.file.File.height":{},"modules/custom/#telethon.tl.custom.file.File.width":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/custom/#telethon.tl.custom.message.Message.document":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.game":{},"modules/custom/#telethon.tl.custom.message.Message.geo":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{},"modules/custom/#telethon.tl.custom.message.Message.video":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/custom/#telethon.tl.custom.message.Message.web_preview":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}}}],["media_id",{"_index":4739,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["media_unread",{"_index":3603,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["medium",{"_index":4938,"text":{"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["megabyt",{"_index":149,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["megagroup",{"_index":1155,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["member",{"_index":447,"text":{"basic/updates/":{},"basic/updates/#updates":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{}},"title":{}}],["memori",{"_index":1104,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["memory.memorysess",{"_index":1102,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{}},"title":{}}],["memoryerror",{"_index":1607,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["memorysess",{"_index":1101,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["memoryview",{"_index":3404,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{}},"title":{}}],["mention",{"_index":892,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["menu",{"_index":88,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{}},"title":{}}],["merg",{"_index":1073,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{}},"title":{}}],["messag",{"_index":63,"text":{"":{},"#what-is-this":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.contact":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.dice":{},"modules/custom/#telethon.tl.custom.message.Message.document":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.forward":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.game":{},"modules/custom/#telethon.tl.custom.message.Message.geo":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.invoice":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.poll":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.message.Message.venue":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.message.Message.video":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/custom/#telethon.tl.custom.message.Message.web_preview":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"quick-references/client-reference/":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#scheduled-messages-v110":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.message.Message":{},"quick-references/client-reference/#messages":{}}}],["message'",{"_index":2065,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["message)",{"_index":465,"text":{"basic/updates/":{},"basic/updates/#updates":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["message.button",{"_index":3369,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["message.button_count",{"_index":2151,"text":{"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["message.buttons[0][1].click",{"_index":3661,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["message.click",{"_index":2239,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["message.click(0",{"_index":2048,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["message.click(2",{"_index":3782,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["message.click(data=b'payload",{"_index":3785,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["message.click(row",{"_index":3783,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["message.click(text=':thumbsup",{"_index":3784,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["message.dic",{"_index":1561,"text":{"misc/changelog/":{},"misc/changelog/#additions":{}},"title":{}}],["message.docu",{"_index":1667,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["message.edit",{"_index":1907,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message.fil",{"_index":1745,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message.file.id",{"_index":1748,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message.forward",{"_index":2175,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["message.forward.original_fwd.original_fwd.original_fwd.original_fwd.original_fwd.original_fwd",{"_index":1712,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message.get_entities_text",{"_index":2197,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["message.get_entities_text(types.messageentitycod",{"_index":2050,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["message.get_fwd_send",{"_index":2174,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["message.get_reply_messag",{"_index":1970,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["message.get_send",{"_index":1190,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{}},"title":{}}],["message.input_send",{"_index":821,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{}},"title":{}}],["message.mark_read",{"_index":1696,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message.media",{"_index":2719,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["message.pin",{"_index":1578,"text":{"misc/changelog/":{},"misc/changelog/#enhancements":{}},"title":{}}],["message.pin(notify=tru",{"_index":1768,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message.send",{"_index":1188,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{}},"title":{}}],["message.text",{"_index":1868,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["message][telethon.tl.custom.message.messag",{"_index":3474,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["message_handl",{"_index":753,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["message_id",{"_index":778,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["message_list",{"_index":2280,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["message_poll_clos",{"_index":972,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{}},"title":{}}],["message``'",{"_index":2443,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["messageact",{"_index":3611,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["messageactionchannelmigratefrom",{"_index":3631,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["messageactionchataddus",{"_index":3626,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["messageactionchatdeleteus",{"_index":3628,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["messageactionchateditphoto",{"_index":3644,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{}},"title":{}}],["messageactionchatjoinedbylink",{"_index":3629,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["messageactionchatmigrateto",{"_index":3630,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["messageboard",{"_index":2884,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["messagebutton",{"_index":3371,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}}}],["messagecontain",{"_index":2140,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["messageedit",{"_index":2365,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["messageent",{"_index":2496,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["messageentitybold",{"_index":3894,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["messageentitybold(2",{"_index":4255,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["messageentitybold(offset=6",{"_index":3941,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["messageentitycod",{"_index":3895,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["messagefwdhead",{"_index":3536,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["messagehandl",{"_index":730,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["messagemedia",{"_index":3615,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["messagemedia``'",{"_index":2444,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["messagemediacontact",{"_index":3547,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.contact":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemediadic",{"_index":3634,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.dice":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemediadocu",{"_index":4252,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["messagemediaempti",{"_index":3616,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemediagam",{"_index":4396,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemediageo",{"_index":4329,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemediainvoic",{"_index":3643,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.invoice":{}},"title":{}}],["messagemediaphoto",{"_index":4390,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["messagemediapol",{"_index":3645,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.poll":{}},"title":{}}],["messagemediaunsupport",{"_index":4406,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemediavenu",{"_index":3544,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.venue":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["messagemethod",{"_index":2897,"text":{"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["messageread",{"_index":1843,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["messages.chatful",{"_index":913,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{}},"title":{}}],["messages.search",{"_index":1071,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["messages.sendmessag",{"_index":965,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{}},"title":{}}],["messageservic",{"_index":2367,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.text":{}},"title":{}}],["messi",{"_index":1972,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["metadata",{"_index":175,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["meth",{"_index":2360,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["meth:`client.download_media",{"_index":2369,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["meth:`client.get_dialog",{"_index":2372,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["meth:`client.get_input_ent",{"_index":2368,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["meth:`get_input_p",{"_index":4261,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["meth:`resolve_id(marked_id",{"_index":4534,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["method",{"_index":34,"text":{"":{},"#getting-started":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#utilities-telethonutils":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/client-reference/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"concepts/updates/#properties-vs-methods":{}}}],["method_nam",{"_index":3007,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{}},"title":{}}],["metric",{"_index":1411,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["micro",{"_index":1797,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["migrat",{"_index":716,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}}}],["mime",{"_index":1682,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/custom/#telethon.tl.custom.file.File.mime_type":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["mime_typ",{"_index":3534,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.mime_type":{}}}],["mimetyp",{"_index":1903,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["mimic",{"_index":1428,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{}},"title":{}}],["min",{"_index":1158,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["min_id/max_id",{"_index":2291,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["mind",{"_index":2464,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{}}],["minim",{"_index":2618,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["minimum",{"_index":880,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{}},"title":{}}],["minor",{"_index":1538,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{"misc/changelog/#minor-quality-of-life-improvements-v114":{}}}],["minut",{"_index":1644,"text":{"misc/changelog/":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["mismatch",{"_index":4047,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{}},"title":{}}],["miss",{"_index":202,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["mistak",{"_index":2851,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{}},"title":{}}],["mitig",{"_index":2521,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["mix",{"_index":1273,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["mixin",{"_index":1280,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["mode",{"_index":429,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/client-reference/":{}},"title":{"quick-references/client-reference/#parse-mode":{}}}],["model",{"_index":2793,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["modes>`__",{"_index":2659,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["modifi",{"_index":2476,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["modul",{"_index":191,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["modular",{"_index":1384,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["moment",{"_index":572,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["mongodb",{"_index":1119,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{}},"title":{}}],["monitor",{"_index":1235,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["monster",{"_index":2859,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["month",{"_index":1334,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{}},"title":{}}],["more",{"_index":233,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#base-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"basic/updates/#more-examples":{},"concepts/asyncio/#where-can-i-read-more":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}}}],["mostli",{"_index":2150,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.SecurityError":{}},"title":{}}],["mount",{"_index":1508,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{}},"title":{}}],["move",{"_index":393,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["mp3",{"_index":1846,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["mp4",{"_index":3641,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{}},"title":{}}],["mpeg4_gif",{"_index":3558,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{}},"title":{}}],["ms",{"_index":3483,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{}},"title":{}}],["msg",{"_index":2270,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["msg.edit('hello",{"_index":2271,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["msg.reply('good",{"_index":2272,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["msg_id",{"_index":1472,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["msgsack",{"_index":2547,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["mtproto",{"_index":57,"text":{"":{},"#getting-started":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{"basic/signing-in/#using-mtproto-proxies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{}}}],["mtproto/cor",{"_index":1317,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["mtprotosend",{"_index":1284,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["mtproxy.example.com",{"_index":433,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{}},"title":{}}],["much",{"_index":155,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#ready-pip-go-v05":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["multi",{"_index":2845,"text":{"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["multierror",{"_index":1081,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.MultiError":{}}}],["multipl",{"_index":1074,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError":{}},"title":{}}],["mute",{"_index":3582,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["my.ogg",{"_index":4149,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["my.sess",{"_index":4956,"text":{"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["my.telegram.org",{"_index":256,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{}},"title":{}}],["my.telegram.org/app",{"_index":2915,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["my_channel",{"_index":860,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["my_chat",{"_index":859,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["my_event_handl",{"_index":469,"text":{"basic/updates/":{},"basic/updates/#getting-started":{}},"title":{}}],["my_other_th",{"_index":1387,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["my_th",{"_index":1386,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["my_us",{"_index":858,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["myself",{"_index":15,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["n",{"_index":568,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["name",{"_index":9,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/custom/#telethon.tl.custom.file.File.name":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"examples/users/#updating-your-name-andor-bio":{},"modules/custom/#telethon.tl.custom.file.File.name":{}}}],["name#id",{"_index":1434,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["name)",{"_index":464,"text":{"basic/updates/":{},"basic/updates/#updates":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["namespac",{"_index":1034,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{}},"title":{}}],["navig",{"_index":966,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{}},"title":{}}],["nearli",{"_index":2469,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["necessari",{"_index":389,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{}},"title":{}}],["necessarili",{"_index":2207,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["need",{"_index":58,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-username":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["neg",{"_index":1662,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["negat",{"_index":4490,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["nest",{"_index":1702,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["network",{"_index":487,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["network/mtprotosender.pi",{"_index":1283,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["networkmigrateerror",{"_index":1012,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["never",{"_index":722,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["new",{"_index":28,"text":{"":{},"#getting-started":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.common.SecurityError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new":{}}}],["new_dc",{"_index":1008,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["new_event_loop",{"_index":617,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{}},"title":{}}],["new_method",{"_index":575,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{}},"title":{}}],["new_nonc",{"_index":4083,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["new_usernam",{"_index":1528,"text":{"examples/users/":{},"examples/users/#updating-your-username":{}},"title":{}}],["newbi",{"_index":2711,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["newcom",{"_index":4965,"text":{"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["newest",{"_index":1311,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{}},"title":{}}],["newlin",{"_index":2393,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["newmessag",{"_index":18,"text":{"":{},"#getting-started":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["newmessage.event.pattern_match",{"_index":2386,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["next",{"_index":83,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{}}}],["next_offset",{"_index":2004,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["nice",{"_index":213,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["nicer",{"_index":1799,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{}}],["nix",{"_index":1648,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{}},"title":{}}],["nktknshn'",{"_index":1507,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{}},"title":{}}],["no_webpag",{"_index":2743,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["nobodi",{"_index":1019,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{}},"title":{}}],["nodej",{"_index":1319,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["nois",{"_index":582,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{}},"title":{}}],["non",{"_index":2398,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["nonc",{"_index":4084,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["none",{"_index":1166,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#properties-vs-methods":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{}},"title":{"quick-references/faq/#eventchat-or-eventsender-is-none":{}}}],["nonetyp",{"_index":2638,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["normal",{"_index":395,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["nosignatur",{"_index":4907,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#account":{},"quick-references/client-reference/#auth":{},"quick-references/client-reference/#base":{},"quick-references/client-reference/#bots":{},"quick-references/client-reference/#buttons":{},"quick-references/client-reference/#chats":{},"quick-references/client-reference/#dialogs":{},"quick-references/client-reference/#downloads":{},"quick-references/client-reference/#messages":{},"quick-references/client-reference/#parse-mode":{},"quick-references/client-reference/#updates":{},"quick-references/client-reference/#uploads":{},"quick-references/client-reference/#users":{}},"title":{}}],["notabl",{"_index":1261,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["note",{"_index":109,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/users/":{},"examples/users/#users":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}},"title":{}}],["note'",{"_index":4148,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["notfounderror",{"_index":996,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{}}}],["noth",{"_index":475,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["notic",{"_index":140,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["notif",{"_index":911,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["notifi",{"_index":445,"text":{"basic/updates/":{},"basic/updates/#updates":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{}},"title":{}}],["notimplementederror",{"_index":4841,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["now",{"_index":219,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["nowher",{"_index":1255,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}},"title":{}}],["npm",{"_index":1320,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["nullhandl",{"_index":2499,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["number",{"_index":123,"text":{"basic/installation/":{},"basic/installation/#verification":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["o",{"_index":2028,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["obj",{"_index":3562,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["obj.chat_id",{"_index":4964,"text":{"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["obj.to_dict",{"_index":2440,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["object",{"_index":224,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{}},"title":{"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{}}}],["object'",{"_index":2310,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["object.to_dict",{"_index":1935,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["object.to_json",{"_index":1931,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["obscur",{"_index":2890,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["obtain",{"_index":875,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["obvious",{"_index":1475,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["occur",{"_index":116,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.date":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{},"modules/errors/#telethon.errors.common.BadMessageError":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{},"modules/errors/#telethon.errors.common.InvalidBufferError":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{},"modules/errors/#telethon.errors.common.ReadCancelledError":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["occurr",{"_index":1606,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_2":{}},"title":{}}],["octet",{"_index":4242,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["odditi",{"_index":2204,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["offend",{"_index":1483,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{}},"title":{}}],["offer",{"_index":251,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["offici",{"_index":167,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["offlin",{"_index":1092,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{}},"title":{}}],["offset",{"_index":1761,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["offset_chat_id",{"_index":3102,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{}},"title":{}}],["offset_d",{"_index":1833,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["offset_ord",{"_index":3101,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{}},"title":{}}],["oh",{"_index":2839,"text":{"misc/changelog/":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["okay",{"_index":2783,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["old",{"_index":1664,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old":{}}}],["older",{"_index":1350,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["omit",{"_index":1522,"text":{"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["on",{"_index":351,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["on_respons",{"_index":2458,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["on_send",{"_index":2603,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["on_upd",{"_index":789,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["onc",{"_index":98,"text":{"basic/installation/":{},"basic/installation/#installation":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}}}],["onlin",{"_index":1131,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["only_loc",{"_index":3072,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat_history":{}},"title":{}}],["op",{"_index":2394,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["open",{"_index":772,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#stability-improvements-v091":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["open(...).read",{"_index":1133,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["opensourc",{"_index":1504,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgcloud":{}},"title":{}}],["oper",{"_index":269,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.ReadCancelledError":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["opposit",{"_index":2581,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["opt",{"_index":2700,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["optim",{"_index":1798,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["option",{"_index":126,"text":{"basic/installation/":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{"basic/installation/#optional-dependencies":{}}}],["optional[dict[str",{"_index":3009,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{}},"title":{}}],["optional[union['[message][telethon.tl.custom.message.messag",{"_index":3476,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["optional[union[int",{"_index":3475,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["or_what",{"_index":4202,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["order",{"_index":81,"text":{"":{},"#how-should-i-use-the-documentation":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#custom-package":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["ordered=tru",{"_index":2297,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["origin",{"_index":938,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["original_fwd",{"_index":1711,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{}},"title":{}}],["original_method",{"_index":577,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{}},"title":{}}],["original_upd",{"_index":2307,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["os",{"_index":557,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["other",{"_index":1075,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["other'",{"_index":4963,"text":{"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["otherwis",{"_index":171,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["ourselv",{"_index":376,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["out",{"_index":384,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["outgo",{"_index":490,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["outgoing=tru",{"_index":2294,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["output",{"_index":125,"text":{"basic/installation/":{},"basic/installation/#verification":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["outsid",{"_index":672,"text":{"concepts/asyncio/":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{}},"title":{"concepts/asyncio/#why-does-clientstart-work-outside-async":{}}}],["over",{"_index":92,"text":{"":{},"#how-should-i-use-the-documentation":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/botapi-vs-mtproto/":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}}}],["overal",{"_index":2075,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["overhaul",{"_index":1726,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["overhead",{"_index":702,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["overlap",{"_index":4099,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["overrid",{"_index":2309,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["owner",{"_index":2689,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["pack",{"_index":1286,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["pack_bot_file_id",{"_index":4561,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{"modules/utils/#telethon.utils.pack_bot_file_id":{}}}],["packag",{"_index":2300,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#ready-pip-go-v05":{},"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{"modules/custom/":{},"modules/custom/#custom-package":{}}}],["packet",{"_index":2147,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{}},"title":{}}],["page",{"_index":87,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#changelog-version-history":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["pain",{"_index":1275,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["painor",{"_index":1321,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["painor'",{"_index":1517,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon-secret-chat":{}},"title":{}}],["pair",{"_index":837,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["parallel",{"_index":651,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{"concepts/full-api/#requests-in-parallel":{}}}],["param",{"_index":3008,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["paramet",{"_index":364,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["parent",{"_index":2062,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{}},"title":{}}],["parenthesi",{"_index":1060,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["pars",{"_index":1443,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/client-reference/":{}},"title":{"quick-references/client-reference/#parse-mode":{}}}],["parse_mod",{"_index":2255,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"quick-references/client-reference/":{},"quick-references/client-reference/#parse-mode":{}},"title":{}}],["parse_mode='html",{"_index":2442,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["parse_mode='md",{"_index":2504,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["parse_phon",{"_index":4621,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{"modules/utils/#telethon.utils.parse_phone":{}}}],["parse_usernam",{"_index":2402,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{"modules/utils/#telethon.utils.parse_username":{}}}],["parser",{"_index":1296,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["parser'",{"_index":2329,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["part",{"_index":273,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["parti",{"_index":697,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{}},"title":{}}],["particip",{"_index":887,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["participants_count",{"_index":1169,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["particular",{"_index":1687,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["pass",{"_index":430,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["password",{"_index":2416,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["passwordhashinvaliderror",{"_index":2249,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["past",{"_index":1112,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["patch",{"_index":1601,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["path",{"_index":302,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["path/to/some/fil",{"_index":1533,"text":{"examples/users/":{},"examples/users/#updating-your-profile-photo":{}},"title":{}}],["pathlib.path",{"_index":2253,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["pattern",{"_index":19,"text":{"":{},"#getting-started":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["pay",{"_index":2865,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["payload",{"_index":3400,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["peer",{"_index":806,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["peer_id_invalid",{"_index":3513,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["peerchannel",{"_index":857,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["peerchat",{"_index":856,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["peerflooderror",{"_index":4950,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["peerus",{"_index":855,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["penal",{"_index":2445,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["pend",{"_index":1822,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{}},"title":{}}],["peopl",{"_index":666,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["per",{"_index":146,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["percentag",{"_index":1864,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["perform",{"_index":178,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.performer":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.performer":{}}}],["perhap",{"_index":4829,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["period",{"_index":2426,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["permiss",{"_index":951,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["persist",{"_index":1512,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["person",{"_index":2664,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["philosophi",{"_index":1251,"text":{"developing/philosophy/":{}},"title":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{}}}],["phone",{"_index":271,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["phone_code_hash",{"_index":1869,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["phone_numb",{"_index":2860,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["phonemigrateerror",{"_index":1013,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["photo",{"_index":163,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.file.File.height":{},"modules/custom/#telethon.tl.custom.file.File.width":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"examples/users/#updating-your-profile-photo":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{}}}],["photo_s",{"_index":4748,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["photocacheds",{"_index":4617,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["photoempti",{"_index":4392,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["photos",{"_index":1819,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["photos/docu",{"_index":1993,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["php",{"_index":1335,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{}},"title":{"developing/telegram-api-in-other-languages/#php":{}}}],["pick",{"_index":1343,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["pickl",{"_index":1620,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["pictur",{"_index":677,"text":{"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["pid",{"_index":4792,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["pillow",{"_index":157,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["pin",{"_index":1569,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.pin":{}}}],["pin_messag",{"_index":3999,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{}}],["ping",{"_index":2661,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{}},"title":{}}],["pip",{"_index":196,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#updated-pip-version-v06":{}}}],["pip3",{"_index":100,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{}},"title":{}}],["pixel",{"_index":3533,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.height":{},"modules/custom/#telethon.tl.custom.file.File.width":{}},"title":{}}],["place",{"_index":1136,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["plain",{"_index":2780,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["plan",{"_index":2761,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["platform",{"_index":444,"text":{"basic/updates/":{},"basic/updates/#updates":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["play",{"_index":1490,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["pleas",{"_index":39,"text":{"":{},"#getting-started":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["plenti",{"_index":643,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["png|jpe?g",{"_index":4554,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{}},"title":{}}],["point",{"_index":1212,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_geo":{}},"title":{}}],["pol",{"_index":3419,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["polish",{"_index":2474,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["poll",{"_index":699,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.poll":{}},"title":{"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/#telethon.tl.custom.message.Message.poll":{}}}],["pomegran",{"_index":1511,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{}},"title":{}}],["pop",{"_index":2577,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["popular",{"_index":62,"text":{"":{},"#what-is-this":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["port",{"_index":415,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/tips-for-porting-the-project/":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{}}}],["portabl",{"_index":1126,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["posit",{"_index":2346,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["possibl",{"_index":254,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/errors/":{},"modules/errors/#api-errors":{}},"title":{}}],["post",{"_index":349,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/asyncio/":{},"concepts/asyncio/#where-can-i-read-more":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["post_author",{"_index":3621,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["postpon",{"_index":2396,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["potenti",{"_index":1904,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["pow",{"_index":4546,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["power",{"_index":514,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["pre",{"_index":2144,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["prefer",{"_index":386,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["prefix",{"_index":4491,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["prepar",{"_index":2304,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["present",{"_index":1623,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#enhancements_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["preserv",{"_index":1885,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["press",{"_index":82,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["pretti",{"_index":263,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#ready-pip-go-v05":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["prevent",{"_index":164,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["preview",{"_index":1909,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{}},"title":{}}],["previou",{"_index":1744,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["previous",{"_index":1361,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["primari",{"_index":1234,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{}},"title":{}}],["primarili",{"_index":1598,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["primarli",{"_index":2533,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["principl",{"_index":1741,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["print",{"_index":16,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["print('{:.2",{"_index":1866,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["print(dir(",{"_index":1000,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{}},"title":{}}],["print(ent",{"_index":3940,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["print(inner_text",{"_index":3898,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["print(message.file.nam",{"_index":1750,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["print(message.text",{"_index":1873,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["print(msg.send",{"_index":2273,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["print(repr(message.text",{"_index":3939,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["print(telethon.__version__",{"_index":122,"text":{"basic/installation/":{},"basic/installation/#verification":{}},"title":{}}],["print(token",{"_index":2051,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["print(txt",{"_index":3943,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["prior",{"_index":864,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["privaci",{"_index":994,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{}},"title":{}}],["privat",{"_index":1452,"text":{"examples/chats-and-channels/":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"examples/chats-and-channels/#joining-a-private-chat-or-channel":{}}}],["probabl",{"_index":885,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/testing/":{},"developing/testing/#tests":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#first-working-alpha-version-v01":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["problem",{"_index":4948,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["problemat",{"_index":1936,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["procedur",{"_index":947,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{}},"title":{}}],["proceed",{"_index":311,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["process",{"_index":396,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["process_ent",{"_index":2549,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["process_updates=tru",{"_index":2634,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["produc",{"_index":1577,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["product",{"_index":112,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{}},"title":{}}],["profil",{"_index":505,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{"examples/users/#updating-your-profile-photo":{}}}],["profile_photo",{"_index":4467,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_photo":{}},"title":{}}],["program",{"_index":70,"text":{"":{},"#what-is-this":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["progress",{"_index":1351,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["progress_callback",{"_index":1674,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_2":{}},"title":{}}],["project",{"_index":1038,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#ready-pip-go-v05":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{"developing/project-structure/":{},"developing/project-structure/#project-structure":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{}}}],["promis",{"_index":2730,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["promoted_bi",{"_index":3341,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{}},"title":{}}],["proof",{"_index":2266,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["propag",{"_index":1213,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{}},"title":{"concepts/updates/#stopping-propagation-of-updates":{}}}],["proper",{"_index":2001,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["properli",{"_index":943,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["properti",{"_index":230,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#additions":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/client-reference/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"concepts/updates/#properties-vs-methods":{}}}],["protect",{"_index":4795,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["protocol",{"_index":423,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{}},"title":{}}],["prove",{"_index":1270,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["proven",{"_index":2854,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["provid",{"_index":803,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#tests":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["proxi",{"_index":407,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#using-mtproto-proxies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#using-mtproto-proxies":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"quick-references/faq/#how-can-i-use-a-proxy":{}}}],["proxy_port",{"_index":2912,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["proxy_serv",{"_index":2911,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["proxy_typ",{"_index":2913,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["proxyconnectionerror",{"_index":2401,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["pt",{"_index":1783,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["public",{"_index":707,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"examples/chats-and-channels/":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{}},"title":{"examples/chats-and-channels/#joining-a-public-channel":{}}}],["publish",{"_index":1313,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{}}],["pull",{"_index":974,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["puppeting/relaybot",{"_index":1498,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{}},"title":{}}],["pure",{"_index":154,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["purpos",{"_index":884,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["put",{"_index":1985,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["pwrtelegram",{"_index":2696,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["py",{"_index":4971,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["py36,flak",{"_index":1410,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{}},"title":{}}],["py:currentmodul",{"_index":4909,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#base":{},"quick-references/client-reference/#dialogs":{},"quick-references/client-reference/#messages":{},"quick-references/client-reference/#parse-mode":{},"quick-references/client-reference/#updates":{},"quick-references/client-reference/#uploads":{},"quick-references/client-reference/#users":{}},"title":{}}],["py:obj",{"_index":2339,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["pyae",{"_index":153,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["pycharm",{"_index":2622,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["pypi",{"_index":2237,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["pyrogram",{"_index":1342,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{}},"title":{}}],["pysock",{"_index":408,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["pytelegrambotapi",{"_index":721,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}}}],["pytest",{"_index":1375,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{}},"title":{"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{}}}],["pytest.mark.asyncio",{"_index":1404,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["python",{"_index":69,"text":{"":{},"#what-is-this":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#ready-pip-go-v05":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"developing/telegram-api-in-other-languages/#python":{}}}],["python'",{"_index":1175,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{}},"title":{}}],["python3",{"_index":120,"text":{"basic/installation/":{},"basic/installation/#verification":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["python_requir",{"_index":2342,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["q",{"_index":4880,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["q8",{"_index":848,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["qa",{"_index":4878,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["qualiti",{"_index":1554,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{"misc/changelog/#minor-quality-of-life-improvements-v114":{}}}],["quart",{"_index":646,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["quart_login.pi",{"_index":4966,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["queri",{"_index":1610,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{}},"title":{}}],["query_id",{"_index":3588,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["question",{"_index":2874,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["queue",{"_index":2483,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["quick",{"_index":228,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/#quick-fix-up-v0136":{}}}],["quickli",{"_index":90,"text":{"":{},"#how-should-i-use-the-documentation":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["quit",{"_index":247,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["quiz",{"_index":3417,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["quot",{"_index":683,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["r",{"_index":492,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["r'(?i).*heck",{"_index":511,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["r'\\.save",{"_index":500,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["race",{"_index":2308,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["rais",{"_index":743,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["raise_exc",{"_index":3281,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["ran",{"_index":1226,"text":{"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["random",{"_index":1090,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["random_id",{"_index":2768,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["randomli",{"_index":2635,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["rang",{"_index":4103,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["rare",{"_index":1098,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{}}],["raw",{"_index":905,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["raw_text",{"_index":293,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#getting-started":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{}}}],["rb",{"_index":774,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["rc1",{"_index":2200,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["re",{"_index":1087,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#stability-improvements-v091":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["re.compile(...).match",{"_index":3662,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["reach",{"_index":1221,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["react",{"_index":2090,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["read",{"_index":40,"text":{"":{},"#getting-started":{},"concepts/asyncio/":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/testing/":{},"developing/testing/#tests":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/users/":{},"examples/users/#users":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.ReadCancelledError":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{}},"title":{"concepts/asyncio/#where-can-i-read-more":{}}}],["readabl",{"_index":1230,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["readcancellederror",{"_index":4055,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.ReadCancelledError":{}}}],["reader",{"_index":2245,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["readi",{"_index":1186,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{"misc/changelog/#ready-pip-go-v05":{}}}],["readili",{"_index":2877,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["readm",{"_index":751,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["readme.rst",{"_index":2709,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["readonli",{"_index":3344,"text":{"modules/custom/":{}},"title":{}}],["readthedoc",{"_index":1918,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["readthread",{"_index":2528,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{}}],["real",{"_index":1478,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["realiti",{"_index":1882,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["realli",{"_index":641,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_message":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["reason",{"_index":894,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#properties-vs-methods":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["reboot",{"_index":4957,"text":{"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["receiv",{"_index":528,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{}},"title":{}}],["recent",{"_index":830,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{}},"title":{}}],["recognis",{"_index":998,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#enhancements":{}},"title":{}}],["recommend",{"_index":111,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["reconfigur",{"_index":3424,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["reconnect",{"_index":1285,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["recurs",{"_index":2125,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["redi",{"_index":1118,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{}},"title":{}}],["reduc",{"_index":1791,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["redund",{"_index":2481,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ref",{"_index":322,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/users/":{},"examples/users/#users":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/errors/":{},"modules/errors/#api-errors":{},"quick-references/client-reference/":{},"quick-references/client-reference/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["ref:`client",{"_index":1730,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["ref:`compat",{"_index":2166,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ref:`sess",{"_index":2358,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ref:`telegramcli",{"_index":2170,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["refactor",{"_index":2203,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["refer",{"_index":35,"text":{"":{},"#getting-started":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_2":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"quick-references/client-reference/":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}}}],["referenc",{"_index":1545,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["reflect",{"_index":2857,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["regard",{"_index":1621,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["regardless",{"_index":2347,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["regex",{"_index":499,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["regexp",{"_index":769,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["regist",{"_index":798,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{}}],["reinvent",{"_index":1429,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{}},"title":{}}],["rel",{"_index":2801,"text":{"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["relat",{"_index":1289,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.common":{},"modules/errors/#telethon.errors.rpcbaseerrors.AuthKeyError":{},"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{}},"title":{}}],["releas",{"_index":1424,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{}}],["relev",{"_index":1121,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["reli",{"_index":1713,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["reliabl",{"_index":1567,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["remain",{"_index":1887,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["rememb",{"_index":255,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{}},"title":{}}],["remind",{"_index":1640,"text":{"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["remot",{"_index":946,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{}},"title":{}}],["remov",{"_index":1089,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["remove_event_handl",{"_index":4930,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#updates":{}},"title":{}}],["remove_update_handl",{"_index":3283,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{}},"title":{"modules/client/#telegram.client.Telegram.remove_update_handler":{}}}],["renam",{"_index":394,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["render",{"_index":1692,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["repeat",{"_index":977,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{}},"title":{}}],["repeatedli",{"_index":1876,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["repetit",{"_index":3539,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["repl",{"_index":2861,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["replac",{"_index":413,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{}},"title":{}}],["repli",{"_index":25,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.reply":{}}}],["reply_id",{"_index":3584,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["reply_markup",{"_index":3373,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{}}],["reply_messag",{"_index":2227,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["reply_text",{"_index":732,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["reply_to",{"_index":755,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{}},"title":{}}],["reply_to=foo",{"_index":2032,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["reply_to_message_id",{"_index":777,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["reply_to_msg_id",{"_index":3473,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{}},"title":{}}],["replykeyboardforcerepli",{"_index":3399,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{}},"title":{}}],["replykeyboardhid",{"_index":3397,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{}},"title":{}}],["replymarkup",{"_index":1920,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["report",{"_index":113,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["report=html",{"_index":1419,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{}},"title":{}}],["report_error",{"_index":2185,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["repositori",{"_index":1122,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["repr",{"_index":3891,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["repres",{"_index":1298,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.file.File.emoji":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["represent",{"_index":266,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["reproduc",{"_index":2619,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["req",{"_index":3586,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["req_pq",{"_index":2408,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["req_pq_multi",{"_index":2407,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["request",{"_index":488,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/errors/#telethon.errors.rpcbaseerrors.InvalidDCError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"concepts/full-api/#requests-in-parallel":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}}}],["request_id",{"_index":3103,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chats":{}},"title":{}}],["request_loc",{"_index":3375,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.request_location":{}}}],["request_phon",{"_index":3376,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.request_phone":{}}}],["request_pol",{"_index":3415,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}}}],["request_write_access",{"_index":3395,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["request``'",{"_index":2452,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["requests_",{"_index":720,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{}},"title":{}}],["requir",{"_index":192,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["resent",{"_index":2773,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["resid",{"_index":2668,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["resist",{"_index":2781,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["resiz",{"_index":161,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["resolut",{"_index":1707,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["resolv",{"_index":908,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["resolve_bot_file_id",{"_index":4555,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"modules/utils/#telethon.utils.resolve_bot_file_id":{}}}],["resolve_id",{"_index":4535,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{"modules/utils/#telethon.utils.resolve_id":{}}}],["resolve_id(marked_id",{"_index":4493,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["resolve_inline_message_id",{"_index":4769,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{"modules/utils/#telethon.utils.resolve_inline_message_id":{}}}],["resolve_invite_link",{"_index":4794,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{"modules/utils/#telethon.utils.resolve_invite_link":{}}}],["resolveusernamerequest",{"_index":873,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["resort",{"_index":1536,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["resourc",{"_index":2866,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["respect",{"_index":918,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["respon",{"_index":2880,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["respond",{"_index":496,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.respond":{}}}],["respons",{"_index":549,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["rest",{"_index":2118,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["restrict",{"_index":1156,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["restriction_reason",{"_index":1164,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["restrictionreason",{"_index":3623,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["result",{"_index":576,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.description":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{}}],["resultidduplicateerror",{"_index":3553,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["results_valid",{"_index":3595,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{}},"title":{"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{}}}],["resum",{"_index":603,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["retract",{"_index":3418,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["retri",{"_index":1891,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{}},"title":{}}],["retries=n",{"_index":2223,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["retriev",{"_index":1048,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{"examples/users/#retrieving-full-information":{}}}],["retry_delay",{"_index":1990,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["retry_rang",{"_index":1893,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{}},"title":{"modules/helpers/#telethon.helpers.retry_range":{}}}],["return",{"_index":223,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#enhancements":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.button_count":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.message.Message.via_input_bot":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["retyp",{"_index":780,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["reus",{"_index":835,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["revers",{"_index":1787,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{"misc/changelog/#iterate-messages-in-reverse-v103":{}}}],["reverse=tru",{"_index":1718,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["reversed(client.iter_messages('m",{"_index":1872,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["revert",{"_index":2142,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["revis",{"_index":1481,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{}},"title":{}}],["revisit",{"_index":2376,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["revok",{"_index":347,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["revolut",{"_index":2840,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}}}],["rework",{"_index":1729,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["rewrit",{"_index":574,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["rewritten",{"_index":2073,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["rid",{"_index":2863,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{}},"title":{}}],["right",{"_index":86,"text":{"":{},"#how-should-i-use-the-documentation":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{}},"title":{}}],["risk",{"_index":3334,"text":{"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{}}],["role",{"_index":1393,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["roll",{"_index":3635,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.dice":{}},"title":{}}],["round_messag",{"_index":4240,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["row",{"_index":3633,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.button_count":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["row/column",{"_index":3664,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["rowid",{"_index":2298,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["rpc",{"_index":945,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/errors/":{},"modules/errors/#api-errors":{}},"title":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{}}}],["rpccallfailerror",{"_index":2311,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["rpcerror",{"_index":948,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.RPCError":{}}}],["rsa",{"_index":2707,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["rst",{"_index":2341,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["rstrip",{"_index":4630,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["rtfm",{"_index":2870,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["rude",{"_index":2879,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["rule",{"_index":530,"text":{"basic/updates/":{},"basic/updates/#entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["run",{"_index":99,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"basic/installation/#verification":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telethon_examples":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"misc/changelog/#long-run-bug-fix-v071":{}}}],["run_forev",{"_index":611,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["run_until_complet",{"_index":306,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}},"title":{}}],["run_until_disconnect",{"_index":27,"text":{"":{},"#getting-started":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#understanding-asyncio":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/client-reference/":{},"quick-references/client-reference/#updates":{}},"title":{}}],["runtimeerror",{"_index":623,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{}},"title":{}}],["russia",{"_index":4943,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["rust",{"_index":1258,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{}},"title":{"developing/telegram-api-in-other-languages/#rust":{}}}],["s",{"_index":627,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["sad",{"_index":1346,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{}},"title":{}}],["sadli",{"_index":2832,"text":{"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["safe",{"_index":615,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}},"title":{}}],["safer",{"_index":484,"text":{"basic/updates/":{},"basic/updates/#getting-started":{}},"title":{}}],["safeti",{"_index":2580,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["sake",{"_index":1036,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["salt",{"_index":2486,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["same",{"_index":438,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.AlreadyInConversationError":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["same_p",{"_index":3422,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{}},"title":{}}],["sane",{"_index":2251,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["saner",{"_index":1905,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["sanitize_parse_mod",{"_index":4836,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{"modules/utils/#telethon.utils.sanitize_parse_mode":{}}}],["save",{"_index":303,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.send_message":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["save_entities=fals",{"_index":2571,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["savedraftrequest",{"_index":3528,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["say",{"_index":1196,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["say\"rtfm",{"_index":2878,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["scam",{"_index":1159,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["scene",{"_index":889,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["schedul",{"_index":649,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#scheduled-messages-v110":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{"misc/changelog/#scheduled-messages-v110":{}}}],["schema",{"_index":2314,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["scheme",{"_index":1558,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{}},"title":{}}],["scope",{"_index":1399,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["scratch",{"_index":1312,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{}},"title":{}}],["screen",{"_index":1233,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["script",{"_index":359,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["search",{"_index":984,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["second",{"_index":147,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.file.File.duration":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["secret",{"_index":345,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#using-mtproto-proxies":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"examples/projects-using-telethon/#telethon-secret-chat":{}}}],["section",{"_index":93,"text":{"":{},"#how-should-i-use-the-documentation":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"quick-references/faq/":{},"quick-references/faq/#faq":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["secur",{"_index":1630,"text":{"misc/changelog/":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.SecurityError":{}},"title":{}}],["securityerror",{"_index":4056,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.SecurityError":{}}}],["see",{"_index":36,"text":{"":{},"#getting-started":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#api-errors":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["seek",{"_index":1762,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["seem",{"_index":667,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["seemingli",{"_index":2624,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["seen",{"_index":517,"text":{"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["select",{"_index":1537,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["self",{"_index":787,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["self._buttons[_flat",{"_index":3788,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["self.out",{"_index":3852,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["semant",{"_index":1739,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["semicolon",{"_index":2512,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["send",{"_index":162,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"examples/working-with-messages/#sending-stickers":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{}}}],["send_code_request",{"_index":2680,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{}},"title":{}}],["send_document_fil",{"_index":2716,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["send_fil",{"_index":298,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"quick-references/client-reference/":{},"quick-references/client-reference/#uploads":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{}}}],["send_media_fil",{"_index":2717,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["send_messag",{"_index":13,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#scheduled-messages-v110":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{}}}],["send_message(chat",{"_index":2031,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["send_message(dialog.input_ent",{"_index":3522,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{}},"title":{}}],["send_photo",{"_index":775,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["send_photo_fil",{"_index":2715,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["send_read_acknowledg",{"_index":3481,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{}}],["send_voice_not",{"_index":2652,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["send_welcom",{"_index":754,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["sender",{"_index":495,"text":{"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{}}}],["sender.id",{"_index":4037,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{}},"title":{}}],["sender.min",{"_index":4042,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["sender_id",{"_index":526,"text":{"basic/updates/":{},"basic/updates/#entities":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{}},"title":{"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{}}}],["sender_user_id",{"_index":3136,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["sendergett",{"_index":923,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter":{}}}],["sendinlinebotresultrequest",{"_index":3587,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{}},"title":{}}],["sendmessag",{"_index":790,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["sendmessagerequest",{"_index":907,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sendmessagerequest(chat",{"_index":2296,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sendvoterequest",{"_index":973,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{}},"title":{}}],["sens",{"_index":547,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["sensibl",{"_index":1937,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["sensit",{"_index":1366,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["sent",{"_index":292,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#scheduled-messages-v110":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["separ",{"_index":1113,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["seqno",{"_index":2648,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["sequenc",{"_index":4096,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{}},"title":{}}],["sequenti",{"_index":1077,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{"concepts/updates/#sequential-updates":{}}}],["sequential_upd",{"_index":1228,"text":{"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["sequential_updates=tru",{"_index":1227,"text":{"concepts/updates/":{},"concepts/updates/#sequential-updates":{}},"title":{}}],["serial",{"_index":1441,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["server",{"_index":548,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{}},"title":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}}}],["server_nonc",{"_index":4082,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["servererror",{"_index":2578,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{}}}],["servic",{"_index":1330,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements":{}},"title":{}}],["session",{"_index":365,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#session-files":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}}}],["session.id/seq",{"_index":2650,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["session=non",{"_index":2810,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["session``'",{"_index":2375,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sessionpasswordneedederror",{"_index":979,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{}},"title":{}}],["set",{"_index":188,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["set_dc",{"_index":1356,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["set_messag",{"_index":3519,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}}}],["set_proxi",{"_index":2479,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["set_result",{"_index":3465,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{}}],["setdomain",{"_index":3386,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["setup",{"_index":694,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["setup.pi",{"_index":1302,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["setuptool",{"_index":209,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["sever",{"_index":148,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}}}],["sha1",{"_index":4086,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["sha256",{"_index":2691,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["shame",{"_index":2868,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}}}],["shebang",{"_index":2800,"text":{"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["shift",{"_index":2593,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["ship",{"_index":2764,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["short",{"_index":342,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telethonsnippets":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{}},"title":{}}],["short_nam",{"_index":3571,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{}},"title":{}}],["shorten",{"_index":727,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["shorter",{"_index":1813,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["shorthand",{"_index":2423,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{}},"title":{}}],["shortli",{"_index":1892,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["shortlog",{"_index":1742,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["shouldn't",{"_index":1223,"text":{"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["show",{"_index":124,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/installation/#verification":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["showcas",{"_index":783,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{}},"title":{}}],["shown",{"_index":309,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["side",{"_index":2322,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sig",{"_index":3224,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["sigabrt",{"_index":3210,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["sigh",{"_index":2582,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sigint",{"_index":3208,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["sign",{"_index":307,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#ready-pip-go-v05":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{}}}],["sign_in",{"_index":2465,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{}},"title":{}}],["sign_up",{"_index":2429,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{}},"title":{}}],["sign_up(self",{"_index":2681,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["signal",{"_index":3207,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["signatur",{"_index":1157,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["signifi",{"_index":1068,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["sigterm",{"_index":3209,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["silent",{"_index":1397,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["silli",{"_index":2389,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["similar",{"_index":398,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["similarli",{"_index":810,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{}},"title":{}}],["simpl",{"_index":669,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["simplework",{"_index":2998,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["simpli",{"_index":681,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["simplic",{"_index":1037,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["simplifi",{"_index":902,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["singl",{"_index":1028,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["single_us",{"_index":3407,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["site",{"_index":1486,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/projects-using-telethon/#tgcloud":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["size",{"_index":184,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.size":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.size":{}}}],["skip",{"_index":91,"text":{"":{},"#how-should-i-use-the-documentation":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["skip_upd",{"_index":779,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{}},"title":{}}],["slash",{"_index":2404,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sleep",{"_index":570,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["sleep(0.1",{"_index":2678,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["slice",{"_index":2371,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["slightli",{"_index":1782,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["slow",{"_index":1097,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["slower",{"_index":156,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["slowmode_en",{"_index":1162,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["slowmodewaiterror",{"_index":1014,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["sm",{"_index":4063,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{}},"title":{}}],["small",{"_index":520,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["smaller",{"_index":564,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{}},"title":{}}],["snake_cas",{"_index":795,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["sniff",{"_index":1442,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}},"title":{}}],["snippet",{"_index":457,"text":{"basic/updates/":{},"basic/updates/#updates":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/projects-using-telethon/#telethonsnippets":{}},"title":{}}],["sock",{"_index":409,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{}},"title":{}}],["socket",{"_index":1111,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["socks5",{"_index":410,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{}},"title":{}}],["sole",{"_index":2673,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["solitari",{"_index":1215,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{}},"title":{}}],["solut",{"_index":1468,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["solv",{"_index":4947,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["some_id",{"_index":852,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["somebodi",{"_index":2883,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["somehow",{"_index":631,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["someon",{"_index":449,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{}},"title":{"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}}}],["someone'",{"_index":825,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{}},"title":{}}],["someth",{"_index":265,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["sometim",{"_index":815,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_2":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["somewhat",{"_index":2591,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["somewher",{"_index":1427,"text":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{}},"title":{}}],["song",{"_index":296,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.performer":{},"modules/custom/#telethon.tl.custom.file.File.title":{}},"title":{}}],["song'",{"_index":177,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["soon",{"_index":2163,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sooner",{"_index":1476,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}},"title":{}}],["sorri",{"_index":1853,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["sort",{"_index":1029,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["sound",{"_index":1793,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{}},"title":{}}],["sourc",{"_index":1268,"text":{"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["space",{"_index":2573,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}},"title":{}}],["spam",{"_index":1016,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["spambot",{"_index":4949,"text":{"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["spawn",{"_index":550,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["spawn_read_thread",{"_index":2187,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["spawn_read_thread=fals",{"_index":2567,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["special",{"_index":428,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{}},"title":{}}],["specif",{"_index":964,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{}},"title":{}}],["specifi",{"_index":427,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#updated-pip-version-v06":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["speed",{"_index":142,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/compatibility-and-convenience/":{}},"title":{"misc/compatibility-and-convenience/#speed":{}}}],["sphinx'",{"_index":2340,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["spit",{"_index":1297,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{}},"title":{}}],["split",{"_index":1170,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["spot",{"_index":2395,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sqlalchemi",{"_index":1116,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{}},"title":{}}],["sqlite",{"_index":869,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["sqlite'",{"_index":2192,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["sqlite.sqlitesess",{"_index":1106,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{}},"title":{}}],["sqlite3",{"_index":1091,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["sqlite3.operationalerror",{"_index":4953,"text":{"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}}}],["sqlitesess",{"_index":1105,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["squar",{"_index":2448,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["stabil",{"_index":2617,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#stability-improvements-v091":{}}}],["stabl",{"_index":2168,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["stand",{"_index":541,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{}},"title":{}}],["standard",{"_index":1128,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["star",{"_index":2710,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["start",{"_index":1,"text":{"":{},"#how-should-i-use-the-documentation":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/#getting-started":{}}}],["start=1",{"_index":1863,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["start_param",{"_index":4033,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["start_pol",{"_index":737,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["start_tim",{"_index":3456,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["startbotrequest",{"_index":4022,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["startswith",{"_index":4550,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_video":{}},"title":{}}],["state",{"_index":1514,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["staticmethod",{"_index":3384,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/errors/":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["statu",{"_index":1839,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["stay",{"_index":2586,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["stek29",{"_index":2523,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["step",{"_index":215,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{}}}],["stick",{"_index":1236,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["sticker",{"_index":1542,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.file.File.emoji":{},"modules/custom/#telethon.tl.custom.file.File.sticker_set":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{}},"title":{"examples/working-with-messages/#sending-stickers":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{}}}],["sticker_set",{"_index":1548,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.sticker_set":{}}}],["stickerset",{"_index":1551,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["still",{"_index":115,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["stop",{"_index":608,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#quick-fix-up-v0136":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.stop":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{}},"title":{"concepts/updates/#stopping-propagation-of-updates":{},"modules/client/#telegram.client.Telegram.stop":{}}}],["stop_sign",{"_index":3206,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{}},"title":{}}],["stopped_pol",{"_index":3368,"text":{"modules/custom/":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{}}}],["stoppropag",{"_index":744,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["storag",{"_index":1096,"text":{"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgcloud":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ServerError":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{}}}],["store",{"_index":372,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["str",{"_index":1046,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["str(entiti",{"_index":1171,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["str/byte",{"_index":4559,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{}}],["str_to_encod",{"_index":2989,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["straight",{"_index":31,"text":{"":{},"#getting-started":{}},"title":{}}],["straightforward",{"_index":1052,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["strang",{"_index":1817,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["strayg",{"_index":2821,"text":{"misc/changelog/":{},"misc/changelog/#long-run-bug-fix-v071":{}},"title":{}}],["stream",{"_index":1756,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["streams/byt",{"_index":1830,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["strictli",{"_index":1738,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["strike",{"_index":1698,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["string",{"_index":1086,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.emoji":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}}}],["string.stringsess",{"_index":1109,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["stringifi",{"_index":264,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{}}],["stringsess",{"_index":1108,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["stringsession.save(client.sess",{"_index":2052,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["stringsession.save(session_inst",{"_index":1114,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{}},"title":{}}],["strip",{"_index":1769,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["strip_text",{"_index":4098,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{"modules/helpers/#telethon.helpers.strip_text":{}}}],["stripped_photo_to_jpg",{"_index":4844,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}}}],["strongli",{"_index":451,"text":{"basic/updates/":{},"basic/updates/#updates":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["struct",{"_index":1433,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["structur",{"_index":1271,"text":{"developing/project-structure/":{},"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{"developing/project-structure/":{},"developing/project-structure/#project-structure":{}}}],["stuck",{"_index":2161,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["stuff",{"_index":969,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["style",{"_index":1229,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}}}],["sub",{"_index":4622,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_phone":{}},"title":{}}],["subbot",{"_index":785,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["subclass",{"_index":784,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["subclass_of_id",{"_index":2595,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{}},"title":{}}],["subsequ",{"_index":3447,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{}},"title":{}}],["subtyp",{"_index":4243,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["success",{"_index":1080,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["successfulli",{"_index":1543,"text":{"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["such",{"_index":315,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.NotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#utilities-telethonutils":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}}}],["suggest",{"_index":914,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["suit",{"_index":1917,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["sum",{"_index":1066,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.button_count":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["summari",{"_index":229,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/entities/":{},"developing/testing/":{},"developing/testing/#tests":{},"modules/client/":{},"modules/client/#telegramclient":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/client-reference/#telegramclient":{}},"title":{"concepts/entities/#summary":{}}}],["super",{"_index":793,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["superclass",{"_index":968,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{}},"title":{}}],["supergroup",{"_index":3165,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{}},"title":{}}],["supergroup_id",{"_index":3164,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{}},"title":{}}],["support",{"_index":561,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.is_list_like":{}},"title":{"misc/changelog/#bot-login-and-proxy-support-v08":{}}}],["supports_stream",{"_index":1902,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["suppos",{"_index":1214,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{}}],["sure",{"_index":308,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#common-errors":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["surpris",{"_index":2169,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["surrog",{"_index":2428,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["surround",{"_index":2495,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["svg",{"_index":2211,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["swallow",{"_index":2146,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["swap",{"_index":2705,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["swear",{"_index":509,"text":{"basic/updates/":{},"basic/updates/#more-examples":{}},"title":{}}],["switch",{"_index":553,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["switch_inlin",{"_index":3374,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{}}}],["switch_pm",{"_index":3598,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["symbol",{"_index":2037,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["sympi",{"_index":2723,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["sync",{"_index":573,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["sync.syncify(cl",{"_index":2173,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["synchron",{"_index":2011,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{}},"title":{}}],["system",{"_index":199,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["system_language_cod",{"_index":2907,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["system_vers",{"_index":2906,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["t",{"_index":2212,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["t.me/@usernam",{"_index":1632,"text":{"misc/changelog/":{},"misc/changelog/#enhancements_1":{}},"title":{}}],["t.me/usernam",{"_index":844,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["taa",{"_index":1329,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{}},"title":{}}],["tabl",{"_index":1883,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["tag",{"_index":1700,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#first-working-alpha-version-v01":{}},"title":{}}],["take",{"_index":310,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#updated-pip-version-v06":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BotTimeout":{},"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{}},"title":{}}],["takeout",{"_index":954,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"quick-references/client-reference/":{},"quick-references/client-reference/#account":{}},"title":{}}],["takeout_init_delay",{"_index":957,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{}},"title":{}}],["takeoutinitdelayerror",{"_index":955,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/errors/#rpc-errors":{}},"title":{}}],["talk",{"_index":404,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["tamper",{"_index":2690,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["target",{"_index":618,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{}},"title":{}}],["target_d",{"_index":3459,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{}}],["target_id",{"_index":3457,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["task",{"_index":563,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{}},"title":{}}],["tcp",{"_index":1403,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{}},"title":{}}],["tcpclient",{"_index":2260,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["tcpclient.clos",{"_index":2646,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["tcpclient.is_connect",{"_index":2500,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tdjson",{"_index":3004,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["tdlib",{"_index":691,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["tdlib'",{"_index":2982,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.send_message":{}},"title":{}}],["tdlib_verbos",{"_index":2910,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["technic",{"_index":2754,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["telebot",{"_index":752,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{}},"title":{}}],["telegram",{"_index":61,"text":{"":{},"#what-is-this":{},"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#mautrix-telegram":{},"examples/projects-using-telethon/#telegram-export":{},"examples/projects-using-telethon/#telegramtui":{},"examples/projects-using-telethon/#tgcloud":{},"examples/projects-using-telethon/#tgmount":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common":{},"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#utilities-telethonutils":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"examples/projects-using-telethon/#mautrix-telegram":{},"examples/projects-using-telethon/#telegram-export":{},"modules/client/#telegram.client.Telegram":{}}}],["telegram'",{"_index":326,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/errors/":{},"modules/errors/#api-errors":{}},"title":{}}],["telegram.cli",{"_index":3332,"text":{},"title":{"modules/client/#telegram.client":{}}}],["telegram.ext",{"_index":728,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{}},"title":{}}],["telegram.me/joinchat/aaaaaekk2wdodrb4",{"_index":847,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{}},"title":{}}],["telegram\\client.pi",{"_index":2916,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/client/#telegram.client.Telegram.stop":{}},"title":{}}],["telegrambarecli",{"_index":2214,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["telegrambasecli",{"_index":1278,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telegramcli",{"_index":7,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"quick-references/client-reference/":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{"modules/client/":{},"modules/client/#telegramclient":{},"quick-references/client-reference/#telegramclient":{}}}],["telegramclient('anon",{"_index":1083,"text":{"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{}},"title":{}}],["telegramclient(nam",{"_index":2189,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telegramclient.get_ent",{"_index":2651,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["telegramclient.sign_in",{"_index":2679,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["telegramclient.telegramcli",{"_index":2894,"text":{"modules/client/":{},"modules/client/#telegramclient":{}},"title":{}}],["telegramtui",{"_index":1500,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegramtui":{}},"title":{"examples/projects-using-telethon/#telegramtui":{}}}],["telethon",{"_index":45,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#optional-dependencies":{},"basic/installation/#verification":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#tests":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"examples/projects-using-telethon/#telethonsnippets":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/client-reference/#telegramclient":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/projects-using-telethon/#telethon-secret-chat":{}}}],["telethon'",{"_index":2,"text":{"":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{"#telethons-documentation":{}}}],["telethon.client.account.accountmethod",{"_index":4936,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#account":{}},"title":{}}],["telethon.client.account.accountmethods.takeout",{"_index":1875,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.auth.authmethod",{"_index":4905,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#auth":{}},"title":{}}],["telethon.client.auth.authmethods.log_out",{"_index":1997,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.client.auth.authmethods.sign_up",{"_index":1871,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.auth.authmethods.start",{"_index":388,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["telethon.client.bots.botmethod",{"_index":4933,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#bots":{}},"title":{}}],["telethon.client.bots.botmethods.inline_queri",{"_index":1913,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.client.buttons.buttonmethod",{"_index":4934,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#buttons":{}},"title":{}}],["telethon.client.chats.chatmethod",{"_index":4920,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#chats":{}},"title":{}}],["telethon.client.chats.chatmethods.act",{"_index":1564,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["telethon.client.chats.chatmethods.edit_admin",{"_index":1629,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["telethon.client.chats.chatmethods.edit_permiss",{"_index":1585,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#enhancements":{}},"title":{}}],["telethon.client.chats.chatmethods.get_particip",{"_index":812,"text":{"concepts/entities/":{},"concepts/entities/#entities":{}},"title":{}}],["telethon.client.chats.chatmethods.iter_admin_log",{"_index":1939,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.chats.chatmethods.iter_particip",{"_index":1786,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["telethon.client.chats.chatmethods.iter_profile_photo",{"_index":1766,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.chats.chatmethods.kick_particip",{"_index":1627,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["telethon.client.dialogs.dialogmethod",{"_index":4915,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#dialogs":{}},"title":{}}],["telethon.client.dialogs.dialogmethods.convers",{"_index":1571,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.client.dialogs.dialogmethods.delete_dialog",{"_index":1616,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_3":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{}},"title":{}}],["telethon.client.dialogs.dialogmethods.edit_fold",{"_index":1755,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.dialogs.dialogmethods.get_dialog",{"_index":809,"text":{"concepts/entities/":{},"concepts/entities/#entities":{}},"title":{}}],["telethon.client.dialogs.dialogmethods.get_draft",{"_index":1672,"text":{"misc/changelog/":{},"misc/changelog/#enhancements_2":{}},"title":{}}],["telethon.client.dialogs.dialogmethods.iter_dialog",{"_index":1695,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.client.downloads.downloadmethod",{"_index":4912,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#downloads":{}},"title":{}}],["telethon.client.downloads.downloadmethods.download_media",{"_index":1725,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{}},"title":{}}],["telethon.client.downloads.downloadmethods.iter_download",{"_index":1758,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.messageparse.messageparsemethod",{"_index":4928,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#parse-mode":{}},"title":{}}],["telethon.client.messageparse.messageparsemethods.parse_mod",{"_index":3548,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["telethon.client.messages.messagemethod",{"_index":4910,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#messages":{}},"title":{}}],["telethon.client.messages.messagemethods.delete_messag",{"_index":1592,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{}},"title":{}}],["telethon.client.messages.messagemethods.edit_messag",{"_index":1653,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["telethon.client.messages.messagemethods.forward_messag",{"_index":1655,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{}},"title":{}}],["telethon.client.messages.messagemethods.get_messag",{"_index":1180,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["telethon.client.messages.messagemethods.iter_messag",{"_index":1720,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["telethon.client.messages.messagemethods.pin_messag",{"_index":1635,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{}},"title":{}}],["telethon.client.messages.messagemethods.send_messag",{"_index":867,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{}},"title":{}}],["telethon.client.messages.messagemethods.send_read_acknowledg",{"_index":1980,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{}},"title":{}}],["telethon.client.telegrambaseclient.telegrambasecli",{"_index":2216,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/client-reference/":{},"quick-references/client-reference/#base":{}},"title":{}}],["telethon.client.telegrambaseclient.telegrambaseclient.connect",{"_index":2221,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.client.telegrambaseclient.telegrambaseclient.disconnect",{"_index":675,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.client.telegrambaseclient.telegrambaseclient.is_connect",{"_index":1941,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.client.telegramclient.telegramcli",{"_index":374,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.client":{}},"title":{}}],["telethon.client.updates.updatemethod",{"_index":4929,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#updates":{}},"title":{}}],["telethon.client.updates.updatemethods.add_event_handl",{"_index":1201,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.client.updates.updatemethods.catch_up",{"_index":2068,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.client.updates.updatemethods.list_event_handl",{"_index":1208,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.client.updates.updatemethods.remove_event_handl",{"_index":1206,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.client.updates.updatemethods.run_until_disconnect",{"_index":626,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.client.uploads.uploadmethod",{"_index":4911,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#uploads":{}},"title":{}}],["telethon.client.uploads.uploadmethods.send_fil",{"_index":1581,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["telethon.client.uploads.uploadmethods.upload_fil",{"_index":1676,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements_2":{}},"title":{}}],["telethon.client.users.usermethod",{"_index":4918,"text":{"quick-references/client-reference/":{},"quick-references/client-reference/#users":{}},"title":{}}],["telethon.client.users.usermethods.get_ent",{"_index":828,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.client.users.usermethods.get_input_ent",{"_index":863,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["telethon.client.users.usermethods.get_peer_id",{"_index":1881,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.client.users.usermethods.is_bot",{"_index":1955,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["telethon.client.users.usermethods.is_user_author",{"_index":1995,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.error",{"_index":953,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.errors.common",{"_index":4068,"text":{},"title":{"modules/errors/#telethon.errors.common":{}}}],["telethon.errors.common.multierror",{"_index":1079,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{}},"title":{}}],["telethon.errors.rpc_error_list",{"_index":2219,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.errors.rpcbaseerror",{"_index":4069,"text":{},"title":{"modules/errors/#telethon.errors.rpcbaseerrors":{}}}],["telethon.errors.rpcbaseerrors.badrequesterror",{"_index":970,"text":{"concepts/errors/":{},"concepts/errors/#base-errors":{}},"title":{}}],["telethon.ev",{"_index":1218,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{}},"title":{}}],["telethon.events.album.album",{"_index":1625,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["telethon.events.callbackquery.callbackqueri",{"_index":1657,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.events.callbackquery.callbackquery.event.edit",{"_index":1835,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.events.chataction.chatact",{"_index":1604,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.events.inlinequery.inlinequeri",{"_index":2088,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["telethon.events.inlinequery.inlinequery.event.answ",{"_index":2006,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.events.is_handl",{"_index":1197,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{}},"title":{}}],["telethon.events.messagedeleted.messagedelet",{"_index":3431,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{}},"title":{}}],["telethon.events.messageread.messageread",{"_index":1844,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.events.newmessage.newmessag",{"_index":480,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"basic/updates/#more-examples":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.events.raw.raw",{"_index":1210,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.events.regist",{"_index":1193,"text":{"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["telethon.events.stoppropag",{"_index":1217,"text":{"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{}},"title":{}}],["telethon.events.userupdate.userupd",{"_index":1838,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.help",{"_index":4070,"text":{"modules/helpers/":{}},"title":{"modules/helpers/#helpers-telethonhelpers":{}}}],["telethon.network",{"_index":2131,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.network.connection.common.connect",{"_index":2274,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.network.connection.tcpabridged.connectiontcpabridg",{"_index":2276,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.network.connection.tcpobfuscated.connectiontcpobfusc",{"_index":1879,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.network.mtprotosender.mtprotosend",{"_index":2215,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.pi",{"_index":360,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{}},"title":{}}],["telethon.sess",{"_index":1110,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.sync",{"_index":5,"text":{"":{},"#getting-started":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{"concepts/asyncio/#what-does-telethonsync-do":{}}}],["telethon.telegram_client.telegramcli",{"_index":2269,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.catch_up",{"_index":2292,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.download_fil",{"_index":2306,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.download_media",{"_index":2337,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.edit_messag",{"_index":2312,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.forward_messag",{"_index":2323,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.get_input_ent",{"_index":2335,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.get_messag",{"_index":2277,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.iter_messag",{"_index":2305,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.iter_messages`'",{"_index":2289,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.iter_particip",{"_index":2331,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.parse_mod",{"_index":2283,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.remove_event_handl",{"_index":2332,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.telegram_client.telegramclient.start",{"_index":2333,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl",{"_index":1035,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.tl.custom",{"_index":2091,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{}}],["telethon.tl.custom.adminlogevent.adminlogev",{"_index":1929,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.button.button",{"_index":1945,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["telethon.tl.custom.button.button.auth",{"_index":1647,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{}},"title":{}}],["telethon.tl.custom.button.button.inlin",{"_index":1989,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.tl.custom.chatgetter.chatgett",{"_index":922,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["telethon.tl.custom.chatgetter.chatgetter.input_chat",{"_index":820,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{}},"title":{}}],["telethon.tl.custom.conversation.convers",{"_index":1708,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.tl.custom.conversation.conversation.cancel",{"_index":1685,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.tl.custom.conversation.conversation.get_respons",{"_index":1774,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.conversation.conversation.wait_ev",{"_index":1992,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.tl.custom.dialog.dialog",{"_index":1999,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.tl.custom.dialog.dialog.arch",{"_index":1753,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.dialog.dialog.delet",{"_index":1764,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.tl.custom.draft.draft",{"_index":1721,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["telethon.tl.custom.file.fil",{"_index":3636,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["telethon.tl.custom.file.file.ext",{"_index":1715,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.file.file.id",{"_index":1749,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["telethon.tl.custom.file.file.nam",{"_index":3639,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["telethon.tl.custom.forward.forward",{"_index":1660,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.forward":{}},"title":{}}],["telethon.tl.custom.inlinebuilder.inlinebuild",{"_index":1777,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.inlineresult.inlineresult",{"_index":3592,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{}},"title":{}}],["telethon.tl.custom.message.messag",{"_index":928,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["telethon.tl.custom.message.message.button",{"_index":3370,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{}},"title":{}}],["telethon.tl.custom.message.message.button_count",{"_index":2152,"text":{"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["telethon.tl.custom.message.message.chat",{"_index":2224,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.click",{"_index":2240,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.dic",{"_index":1562,"text":{"misc/changelog/":{},"misc/changelog/#additions":{}},"title":{}}],["telethon.tl.custom.message.message.docu",{"_index":1668,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["telethon.tl.custom.message.message.edit",{"_index":1908,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.message.message.fil",{"_index":1746,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.message.message.forward",{"_index":2176,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.get_chat",{"_index":2226,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.get_entities_text",{"_index":2198,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.get_fwd_send",{"_index":2230,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.get_reply_messag",{"_index":1971,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["telethon.tl.custom.message.message.get_send",{"_index":1191,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.message.message.mark_read",{"_index":1697,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.tl.custom.message.message.pin",{"_index":1579,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#enhancements":{}},"title":{}}],["telethon.tl.custom.message.message.repli",{"_index":483,"text":{"basic/updates/":{},"basic/updates/#getting-started":{}},"title":{}}],["telethon.tl.custom.message.message.send",{"_index":1189,"text":{"concepts/updates/":{},"concepts/updates/#properties-vs-methods":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.custom.messagebutton.messagebutton",{"_index":3372,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.message.Message.buttons":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["telethon.tl.custom.messagebutton.messagebutton.click",{"_index":1961,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["telethon.tl.custom.sendergetter.sendergett",{"_index":924,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["telethon.tl.custom.sendergetter.sendergetter.input_send",{"_index":822,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{}},"title":{}}],["telethon.tl.functions.account",{"_index":1524,"text":{"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"examples/users/#updating-your-username":{}},"title":{}}],["telethon.tl.functions.channel",{"_index":1449,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{}},"title":{}}],["telethon.tl.functions.messag",{"_index":1044,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon.tl.functions.photo",{"_index":1530,"text":{"examples/users/":{},"examples/users/#updating-your-profile-photo":{}},"title":{}}],["telethon.tl.functions.us",{"_index":1519,"text":{"examples/users/":{},"examples/users/#retrieving-full-information":{}},"title":{}}],["telethon.tl.typ",{"_index":854,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["telethon.tl.xxx.yyi",{"_index":2786,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["telethon.util",{"_index":4108,"text":{"modules/utils/":{}},"title":{"modules/utils/#utilities-telethonutils":{}}}],["telethon.utils.decode_waveform",{"_index":1689,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.utils.encode_waveform",{"_index":1688,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["telethon.utils.get_input_p",{"_index":1056,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["telethon.utils.get_p",{"_index":2060,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.utils.pack_bot_file_id",{"_index":2058,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon.utils.resolve_bot_file_id",{"_index":1874,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["telethon/tl",{"_index":1295,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{}},"title":{}}],["telethon==0.19.1.6",{"_index":2856,"text":{"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["telethon\\errors\\common.pi",{"_index":4053,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["telethon\\helpers.pi",{"_index":4074,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["telethon\\tl\\custom\\button.pi",{"_index":3389,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{}},"title":{}}],["telethon\\tl\\custom\\chatgetter.pi",{"_index":3432,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{}},"title":{}}],["telethon\\tl\\custom\\conversation.pi",{"_index":3444,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["telethon\\tl\\custom\\dialog.pi",{"_index":3509,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{}},"title":{}}],["telethon\\tl\\custom\\draft.pi",{"_index":3518,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_input_entity":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["telethon\\tl\\custom\\inlinebuilder.pi",{"_index":3556,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["telethon\\tl\\custom\\inlineresult.pi",{"_index":3583,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{}},"title":{}}],["telethon\\tl\\custom\\inlineresults.pi",{"_index":3601,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{}},"title":{}}],["telethon\\tl\\custom\\message.pi",{"_index":3666,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.download_media":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.mark_read":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/custom/#telethon.tl.custom.message.Message.reply":{},"modules/custom/#telethon.tl.custom.message.Message.respond":{}},"title":{}}],["telethon\\tl\\custom\\messagebutton.pi",{"_index":4024,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["telethon\\tl\\custom\\sendergetter.pi",{"_index":4038,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{}},"title":{}}],["telethon\\utils.pi",{"_index":4110,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.parse_phone":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["telethon_exampl",{"_index":1484,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{}},"title":{"examples/projects-using-telethon/#telethon_examples":{}}}],["telethon_gener",{"_index":1294,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["telethon_project",{"_index":1541,"text":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{}},"title":{}}],["telethonchat",{"_index":284,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/entities/":{},"concepts/entities/#summary":{}},"title":{}}],["telethonofftop",{"_index":656,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["telethonsnippet",{"_index":1491,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethonsnippets":{}},"title":{"examples/projects-using-telethon/#telethonsnippets":{}}}],["tell",{"_index":600,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility-and-convenience":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["templat",{"_index":2012,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{"misc/changelog/#event-templates-v13":{}}}],["temporari",{"_index":1402,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["term",{"_index":2232,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["termin",{"_index":358,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegramtui":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["test",{"_index":1355,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#tests":{}}}],["test_",{"_index":1400,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["test_my_th",{"_index":1388,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["text",{"_index":301,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.FloodError":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/helpers/#telethon.helpers.strip_text":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.draft.Draft.text":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.text":{}}}],["text](@usernam",{"_index":2424,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tg",{"_index":1575,"text":{"misc/changelog/":{},"misc/changelog/#enhancements":{}},"title":{}}],["tg://join?invit",{"_index":1784,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["tg_join_r",{"_index":4628,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["tgcloud",{"_index":1502,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgcloud":{}},"title":{"examples/projects-using-telethon/#tgcloud":{}}}],["tgcloud'",{"_index":1503,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgcloud":{}},"title":{}}],["tgl",{"_index":1307,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{}},"title":{}}],["tgmount",{"_index":1506,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{}},"title":{"examples/projects-using-telethon/#tgmount":{}}}],["tgsticker",{"_index":1681,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["thank",{"_index":210,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["thankfulli",{"_index":2891,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["that'",{"_index":881,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["them[1",{"_index":2569,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["theme",{"_index":2285,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["themselv",{"_index":614,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{}},"title":{}}],["theoret",{"_index":2788,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["theori",{"_index":2791,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["there'",{"_index":2145,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.CdnFileTamperedError":{}},"title":{}}],["therefor",{"_index":235,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{}},"title":{}}],["they'll",{"_index":2574,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["they'r",{"_index":1245,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["thing",{"_index":225,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_list_like":{},"quick-references/faq/":{},"quick-references/faq/#faq":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["think",{"_index":72,"text":{"":{},"#what-is-this":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{}},"title":{}}],["third",{"_index":696,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{}},"title":{}}],["those",{"_index":355,"text":{"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["though",{"_index":1070,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["thought",{"_index":597,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{}},"title":{}}],["thousand",{"_index":1276,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["thread",{"_index":486,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#why-asyncio":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{"concepts/asyncio/#can-i-use-threads":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{}}}],["threading.ev",{"_index":2807,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["threading.lock",{"_index":622,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["three",{"_index":609,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{}},"title":{}}],["threshold",{"_index":1023,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["through",{"_index":195,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["thu",{"_index":2470,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["thumb",{"_index":531,"text":{"basic/updates/":{},"basic/updates/#entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_2":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["thumbnail",{"_index":1593,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["thumbsup",{"_index":3665,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.click":{}},"title":{}}],["tidi",{"_index":1849,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["time",{"_index":559,"text":{"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#session-files":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["timedelta",{"_index":1641,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["timedelta(minutes=5",{"_index":2127,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["timedouterror",{"_index":4066,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.TimedOutError":{}}}],["timeout",{"_index":1789,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#updated-pip-version-v06":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["timeouterror",{"_index":1968,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["timestamp",{"_index":1663,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{}},"title":{}}],["timezon",{"_index":1151,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["tini",{"_index":381,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["tip",{"_index":1422,"text":{"developing/tips-for-porting-the-project/":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{}}}],["titl",{"_index":180,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File.title":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.title":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.title":{}}}],["tkinter",{"_index":1488,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon_examples":{}},"title":{}}],["tl",{"_index":800,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.action":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.file.File.sticker_set":{},"modules/custom/#telethon.tl.custom.forward.Forward":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.message":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{},"modules/custom/#telethon.tl.custom.message.Message.audio":{},"modules/custom/#telethon.tl.custom.message.Message.contact":{},"modules/custom/#telethon.tl.custom.message.Message.dice":{},"modules/custom/#telethon.tl.custom.message.Message.document":{},"modules/custom/#telethon.tl.custom.message.Message.game":{},"modules/custom/#telethon.tl.custom.message.Message.geo":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.invoice":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"modules/custom/#telethon.tl.custom.message.Message.poll":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/custom/#telethon.tl.custom.message.Message.sticker":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.message.Message.venue":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.message.Message.video":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/custom/#telethon.tl.custom.message.Message.web_preview":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.data":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.inline_query":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["tl:`botcallbackansw",{"_index":4027,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["tl:`channel",{"_index":2024,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["tl:`chat",{"_index":4247,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["tl:`chatforbidden",{"_index":2000,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["tl:`document",{"_index":4608,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["tl:`draftmessageempti",{"_index":2241,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`inputchannel`'",{"_index":4262,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{}},"title":{}}],["tl:`inputfil",{"_index":4230,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["tl:`inputloc",{"_index":2318,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`inputmediauploadedphoto",{"_index":4382,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["tl:`inputmessag",{"_index":2317,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`inputmessagereplyto",{"_index":1969,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["tl:`inputnotifyp",{"_index":2143,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["tl:`inputp",{"_index":2338,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`inputpeerself",{"_index":2334,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`inputuser`'",{"_index":4468,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["tl:`inputwebdocu",{"_index":3557,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{}},"title":{}}],["tl:`keyboardbutton",{"_index":4025,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["tl:`keyboardbuttoncallback",{"_index":4026,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["tl:`keyboardbuttongam",{"_index":1962,"text":{"misc/changelog/":{},"misc/changelog/#polls-with-the-latest-layer-v15":{}},"title":{}}],["tl:`keyboardbuttonswitchinlin",{"_index":4028,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["tl:`keyboardbuttonurl",{"_index":4030,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["tl:`messag",{"_index":1779,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`messageempti",{"_index":2246,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`messageent",{"_index":3938,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["tl:`messageentitymentionnam",{"_index":2256,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`peer",{"_index":2061,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["tl:`peerchannel",{"_index":4791,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["tl:`peerus",{"_index":4790,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["tl:`photo",{"_index":4609,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["tl:`photos",{"_index":1802,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["tl:`startbotrequest",{"_index":4029,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["tl:`state",{"_index":2315,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tl:`updat",{"_index":2126,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["tl:`user",{"_index":2023,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_display_name":{}},"title":{}}],["tl;dr",{"_index":934,"text":{"concepts/entities/":{},"concepts/entities/#summary":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{}},"title":{}}],["tlmessag",{"_index":2139,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["tlobject",{"_index":1437,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#updated-pip-version-v06":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["tlobject.__repr__",{"_index":2627,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["tlobject.constructor_id",{"_index":2594,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tlobject.stringifi",{"_index":2695,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["tlobject``'",{"_index":2070,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["tlrequest",{"_index":2263,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["tmp/.tdlib_fil",{"_index":2992,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["to/from_id",{"_index":1665,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_4":{}},"title":{}}],["to_byt",{"_index":2236,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{}},"title":{}}],["to_dict",{"_index":2069,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["to_id",{"_index":2242,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["to_supergroup",{"_index":4544,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["today",{"_index":2885,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["todo",{"_index":2995,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["togeth",{"_index":1281,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"modules/client/":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["toggl",{"_index":1910,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{}},"title":{}}],["token",{"_index":402,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["tomorrow",{"_index":1645,"text":{"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["took",{"_index":3625,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["tool",{"_index":332,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{}},"title":{}}],["top",{"_index":458,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{}}],["topic",{"_index":443,"text":{"basic/updates/":{},"basic/updates/#updates":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#learning":{}},"title":{}}],["total",{"_index":1860,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.button_count":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{}},"title":{}}],["totallist",{"_index":4071,"text":{"modules/helpers/":{}},"title":{"modules/helpers/#telethon.helpers.TotalList":{}}}],["touch",{"_index":2208,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tox",{"_index":1376,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{}},"title":{"developing/testing/#brief-introduction-to-tox":{}}}],["tox.ini",{"_index":1409,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{}},"title":{}}],["track",{"_index":3440,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{}},"title":{}}],["trail",{"_index":2078,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["translat",{"_index":690,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{}},"title":{}}],["transpar",{"_index":876,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{}},"title":{}}],["treat",{"_index":1889,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["tri",{"_index":114,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["triangl",{"_index":4151,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["trick",{"_index":4543,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["trigger",{"_index":498,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{}}],["trivial",{"_index":1747,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["troubl",{"_index":2041,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{}},"title":{}}],["troubleshoot",{"_index":1246,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{}},"title":{}}],["true",{"_index":491,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_channel":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_group":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.is_private":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.message.Message.is_reply":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.ensure_parent_dir_exists":{},"modules/helpers/#telethon.helpers.generate_key_data_from_nonce":{},"modules/helpers/#telethon.helpers.generate_random_long":{},"modules/helpers/#telethon.helpers.within_surrogate":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_audio":{},"modules/utils/#telethon.utils.is_gif":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.is_video":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["true/fals",{"_index":2590,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["truli",{"_index":1650,"text":{"misc/changelog/":{},"misc/changelog/#additions_1":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["trust",{"_index":2434,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["try/except",{"_index":2621,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["ttl_second",{"_index":4391,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["tulir",{"_index":2377,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tune",{"_index":2587,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["tupl",{"_index":416,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#using-mtproto-proxies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_location":{},"modules/utils/#telethon.utils.is_list_like":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["turbo,webp",{"_index":206,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["turn",{"_index":804,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.resolve_id":{},"quick-references/faq/":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{}}],["twelveth",{"_index":2882,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["twice",{"_index":1474,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["two",{"_index":339,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{},"quick-references/faq/":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{"misc/changelog/#two-factor-authentication-v07":{}}}],["txt",{"_index":3893,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["type",{"_index":450,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-aiogram":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.create_basic_group_chat":{},"modules/client/#telegram.client.Telegram.delete_messages":{},"modules/client/#telegram.client.Telegram.get_chat":{},"modules/client/#telegram.client.Telegram.get_chat_history":{},"modules/client/#telegram.client.Telegram.get_chats":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.get_supergroup_full_info":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/custom/#telethon.tl.custom.file.File.mime_type":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.TypeNotFoundError":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_inner_text":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_chat_photo":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_document":{},"modules/utils/#telethon.utils.get_input_geo":{},"modules/utils/#telethon.utils.get_input_media":{},"modules/utils/#telethon.utils.get_input_message":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.is_image":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{}}}],["typeerror",{"_index":2247,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_dialog":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_message_id":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["typenotfounderror",{"_index":4058,"text":{"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.common.TypeNotFoundError":{}}}],["types.messageactionchatcr",{"_index":3627,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.action_entities":{}},"title":{}}],["types.peerchannel",{"_index":4540,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["typo",{"_index":2316,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["tz",{"_index":3530,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["tzinfo",{"_index":1150,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{}},"title":{}}],["u",{"_index":101,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{}},"title":{}}],["ud800",{"_index":4106,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["udfff",{"_index":4107,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["ultim",{"_index":2259,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["un",{"_index":1619,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#bug-fixes_4":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{}},"title":{}}],["un)pars",{"_index":1622,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_3":{}},"title":{}}],["unauthor",{"_index":4067,"text":{"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{}},"title":{}}],["unauthorizederror",{"_index":989,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/errors/":{}},"title":{"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{}}}],["unbox",{"_index":2299,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["uncaught",{"_index":2082,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["unchang",{"_index":1888,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["unclear",{"_index":472,"text":{"basic/updates/":{},"basic/updates/#getting-started":{}},"title":{}}],["undeclar",{"_index":1407,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{}},"title":{}}],["under",{"_index":331,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/telegram-api-in-other-languages/#rust":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.file.File.id":{}},"title":{}}],["underlin",{"_index":1701,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["underscor",{"_index":2217,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["underscore/asterisk",{"_index":2506,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["understand",{"_index":245,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#where-can-i-read-more":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/updates/":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#telegram-api-in-other-languages":{},"developing/understanding-the-type-language/":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{"concepts/updates/#understanding-asyncio":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{}}}],["undocu",{"_index":3333,"text":{"modules/custom/":{},"modules/custom/#custom-package":{}},"title":{}}],["unexpect",{"_index":1078,"text":{"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#general-improvements-v09":{}},"title":{}}],["ungrat",{"_index":2520,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["unhandl",{"_index":1831,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["unicodedecodeerror",{"_index":1942,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["union",{"_index":2976,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{}},"title":{}}],["union[str",{"_index":4256,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["uniqu",{"_index":1438,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["unit",{"_index":1394,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{}},"title":{}}],["unknown",{"_index":1716,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["unless",{"_index":619,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["unlik",{"_index":1225,"text":{"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["unmodifi",{"_index":4489,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{}},"title":{}}],["unnam",{"_index":4232,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["unnecessari",{"_index":871,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["unoffici",{"_index":1305,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{}},"title":{}}],["unpack",{"_index":1287,"text":{"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["unpars",{"_index":2419,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/utils/":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["unread",{"_index":3504,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["unread_count",{"_index":3503,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["unread_mentions_count",{"_index":3505,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["unreleas",{"_index":104,"text":{"basic/installation/":{},"basic/installation/#installing-development-versions":{}},"title":{}}],["unsaf",{"_index":1854,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["unsupport",{"_index":2083,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["until",{"_index":379,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/updates/":{},"concepts/updates/#understanding-asyncio":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.idle":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.mark_read":{}},"title":{}}],["unus",{"_index":1930,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["up",{"_index":143,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#python":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{"misc/changelog/#quick-fix-up-v0136":{}}}],["updat",{"_index":137,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#why-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/errors/":{},"concepts/errors/#base-errors":{},"concepts/errors/#rpc-errors":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/users/":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#stability-improvements-v091":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/client/#telegram.client.Telegram.login":{},"modules/client/#telegram.client.Telegram.send_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_file":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.send_message":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{},"quick-references/client-reference/":{}},"title":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/updates/":{},"concepts/updates/#sequential-updates":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#updates-in-dept":{},"examples/users/#updating-your-name-andor-bio":{},"examples/users/#updating-your-profile-photo":{},"examples/users/#updating-your-username":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#updated-pip-version-v06":{},"quick-references/client-reference/#updates":{}}}],["update.repli",{"_index":796,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{}},"title":{}}],["update_state.pi",{"_index":2482,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["update_work",{"_index":2186,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["update_workers=4",{"_index":2565,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["updatedeletemessag",{"_index":2405,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["updateprofil",{"_index":1523,"text":{"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{}},"title":{}}],["updateprofilerequest",{"_index":1525,"text":{"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{}},"title":{}}],["updates.check_error",{"_index":2576,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["updates.pol",{"_index":2633,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["updatesthread",{"_index":2774,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["updateusernamerequest",{"_index":1527,"text":{"examples/users/":{},"examples/users/#updating-your-username":{}},"title":{}}],["upgrad",{"_index":37,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installation":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["upload",{"_index":981,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"quick-references/client-reference/":{}},"title":{"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"quick-references/client-reference/#uploads":{}}}],["upload_fil",{"_index":1532,"text":{"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"quick-references/client-reference/":{},"quick-references/client-reference/#uploads":{}},"title":{}}],["uploading/download",{"_index":2834,"text":{"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["uploadmediarequest",{"_index":3569,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{}},"title":{}}],["uploadprofilephoto",{"_index":1529,"text":{"examples/users/":{},"examples/users/#updating-your-profile-photo":{}},"title":{}}],["uploadprofilephotorequest",{"_index":1531,"text":{"examples/users/":{},"examples/users/#updating-your-profile-photo":{}},"title":{}}],["upon",{"_index":2153,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{}},"title":{}}],["uppercas",{"_index":2596,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["urandom",{"_index":4094,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.generate_random_long":{}},"title":{}}],["url",{"_index":338,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.url":{}}}],["us",{"_index":44,"text":{"":{},"#getting-started":{},"#how-should-i-use-the-documentation":{},"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#entities":{},"basic/updates/#getting-started":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"concepts/botapi-vs-mtproto/#migrating-from-pytelegrambotapi":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#properties-vs-methods":{},"concepts/updates/#stopping-propagation-of-updates":{},"concepts/updates/#understanding-asyncio":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"developing/testing/#brief-introduction-to-tox":{},"developing/testing/#tests":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/chats-and-channels/#joining-a-private-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"examples/projects-using-telethon/#telethon_examples":{},"examples/projects-using-telethon/#telethonsnippets":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/users/#updating-your-profile-photo":{},"examples/users/#updating-your-username":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes-v112":{},"misc/changelog/#bug-fixes-v113":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/changelog/#stability-improvements-v091":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/changelog/#updated-pip-version-v06":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.call_method":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/client/#telegramclient":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.clear":{},"modules/custom/#telethon.tl.custom.button.Button.force_reply":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.cancel_all":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.file.File.ext":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.game":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.message.Message.forward_to":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.message.Message.get_reply_message":{},"modules/custom/#telethon.tl.custom.message.Message.text":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender_id":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.InvalidChecksumError":{},"modules/errors/#telethon.errors.common.SecurityError":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#faq":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{},"quick-references/faq/#how-do-i-access-a-field":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{},"quick-references/faq/#what-does-bases-chatgetter-mean":{}},"title":{"#how-should-i-use-the-documentation":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/#can-i-use-threads":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#how-can-i-use-a-proxy":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}}}],["usabl",{"_index":1966,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.file.File.id":{}},"title":{}}],["usag",{"_index":420,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-behind-a-proxy":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"quick-references/client-reference/":{},"quick-references/client-reference/#client-reference":{}},"title":{}}],["use_cach",{"_index":3561,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{}},"title":{}}],["use_ipv6=tru",{"_index":2492,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["use_message_databas",{"_index":2902,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["use_secret_chat",{"_index":2914,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["use_test_dc",{"_index":2901,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["user",{"_index":102,"text":{"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telegram-export":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#additions_1":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_2":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#stability-improvements-v091":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_me":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.button.Button.switch_inline":{},"modules/custom/#telethon.tl.custom.button.Button.text":{},"modules/custom/#telethon.tl.custom.button.Button.url":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.entity":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.BadRequestError":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{},"modules/errors/#telethon.errors.rpcbaseerrors.UnauthorizedError":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_display_name":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#utilities-telethonutils":{},"quick-references/client-reference/":{}},"title":{"examples/users/":{},"examples/users/#users":{},"quick-references/client-reference/#users":{}}}],["user'",{"_index":3409,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_location":{},"modules/custom/#telethon.tl.custom.button.Button.request_phone":{}},"title":{}}],["user/channel",{"_index":4036,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{}},"title":{}}],["user_hash",{"_index":1050,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["user_id",{"_index":930,"text":{"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_user":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.user_id":{}}}],["user_id=user_to_add",{"_index":1461,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["user_to_add",{"_index":1460,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["userempti",{"_index":1919,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["userful",{"_index":910,"text":{"concepts/entities/":{},"concepts/entities/#full-entities":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_photo":{},"modules/utils/#telethon.utils.get_input_user":{}},"title":{}}],["usermigrateerror",{"_index":1015,"text":{"concepts/errors/":{},"concepts/errors/#attributes":{}},"title":{}}],["usernam",{"_index":270,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-dumbot":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"examples/users/":{},"examples/users/#retrieving-full-information":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{},"quick-references/faq/":{},"quick-references/faq/#attributeerror-coroutine-object-has-no-attribute-id":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"examples/users/#updating-your-username":{}}}],["username_r",{"_index":4627,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["usernameinvaliderror",{"_index":2662,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["userprofilephoto",{"_index":4250,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["userprofilephotoempti",{"_index":4407,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["users_to_add",{"_index":1463,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{}},"title":{}}],["userupd",{"_index":1837,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["usual",{"_index":403,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#minor-quality-of-life-improvements-v114":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["utc",{"_index":1152,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{}},"title":{}}],["utc+0",{"_index":3610,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{}}],["utf",{"_index":2808,"text":{"misc/changelog/":{},"misc/changelog/#general-improvements-v09":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{}},"title":{}}],["util",{"_index":1057,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.photo":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#utilities-telethonutils":{}},"title":{"modules/utils/":{},"modules/utils/#utilities-telethonutils":{}}}],["utils.get_input_channel(client.get_input_p",{"_index":4433,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["utils.get_input_p",{"_index":2135,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["utils.get_p",{"_index":1982,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["utils.get_peer_id(await",{"_index":2137,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["utils.resolve_bot_file_id",{"_index":1923,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["uwinx'",{"_index":1510,"text":{"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#garnet":{}},"title":{}}],["v.0.13.1",{"_index":2660,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.1",{"_index":2848,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#first-working-alpha-version-v01":{}}}],["v0.10",{"_index":2782,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["v0.10.1",{"_index":2777,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["v0.11",{"_index":2759,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["v0.11.1",{"_index":2755,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#improvements-to-the-updates-v0111":{}}}],["v0.11.2",{"_index":2748,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.11.3",{"_index":2746,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.11.4",{"_index":2735,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.11.5",{"_index":2733,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.12",{"_index":2712,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.12.1",{"_index":2702,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.12.2",{"_index":2685,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.13",{"_index":2669,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.13.1",{"_index":2665,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.13.2",{"_index":2653,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.13.3",{"_index":2642,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.13.4",{"_index":2630,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["v0.13.5",{"_index":2616,"text":{"misc/changelog/":{},"misc/changelog/#quick-fix-up-v0136":{}},"title":{"misc/changelog/#attempts-at-more-stability-v0135":{}}}],["v0.13.6",{"_index":2613,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#quick-fix-up-v0136":{}}}],["v0.14",{"_index":2601,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}}}],["v0.14.1",{"_index":2599,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.14.2",{"_index":2588,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.15",{"_index":2561,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.15.1",{"_index":2551,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.15.2",{"_index":2531,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.15.3",{"_index":2518,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.15.4",{"_index":2501,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.15.5",{"_index":2489,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.16",{"_index":2466,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.16.1",{"_index":2460,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.16.2",{"_index":1059,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.17",{"_index":2435,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.17.1",{"_index":2432,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.17.2",{"_index":2421,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.17.3",{"_index":2412,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.17.4",{"_index":2399,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.18",{"_index":2373,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.18.1",{"_index":2354,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.18.2",{"_index":2344,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.18.3",{"_index":2319,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.19",{"_index":2301,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.19.1",{"_index":2267,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["v0.2",{"_index":2843,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#handle-updates-in-their-own-thread-v02":{}}}],["v0.3",{"_index":2841,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{}}}],["v0.4",{"_index":2835,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#made-interactivetelegramclient-cool-v04":{}}}],["v0.5",{"_index":2829,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#ready-pip-go-v05":{}}}],["v0.6",{"_index":2826,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#updated-pip-version-v06":{}}}],["v0.7",{"_index":2822,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#two-factor-authentication-v07":{}}}],["v0.7.1",{"_index":2818,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#long-run-bug-fix-v071":{}}}],["v0.8",{"_index":2813,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#bot-login-and-proxy-support-v08":{}}}],["v0.9",{"_index":2804,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#general-improvements-v09":{}}}],["v0.9.1",{"_index":2796,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#stability-improvements-v091":{}}}],["v1.0",{"_index":47,"text":{"":{},"#getting-started":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["v1.0.1",{"_index":2158,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#bug-fixes-v101":{}}}],["v1.0.2",{"_index":2156,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#bug-fixes-v102":{}}}],["v1.0.3",{"_index":2148,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#iterate-messages-in-reverse-v103":{}}}],["v1.0.4",{"_index":2129,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["v1.1",{"_index":2084,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["v1.1.1",{"_index":2071,"text":{"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{}},"title":{}}],["v1.10",{"_index":1637,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#scheduled-messages-v110":{}}}],["v1.10.10",{"_index":1614,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v111":{},"misc/changelog/#bug-fixes_3":{},"misc/changelog/#enhancements_1":{}},"title":{}}],["v1.11",{"_index":1611,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#bug-fixes-v111":{}}}],["v1.11.3",{"_index":1600,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes_2":{}},"title":{}}],["v1.12",{"_index":1595,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#bug-fixes-v112":{}}}],["v1.13",{"_index":1587,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#bug-fixes-v113":{}}}],["v1.14",{"_index":1556,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#minor-quality-of-life-improvements-v114":{}}}],["v1.2",{"_index":2042,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#conversations-string-sessions-and-more-v12":{}}}],["v1.3",{"_index":2013,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#event-templates-v13":{}}}],["v1.4",{"_index":1983,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["v1.4.1",{"_index":1975,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["v1.4.2",{"_index":1973,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{}},"title":{}}],["v1.4.3",{"_index":1964,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#error-descriptions-in-csv-files-v143":{}}}],["v1.5",{"_index":1947,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#polls-with-the-latest-layer-v15":{}}}],["v1.5.1",{"_index":1932,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.5.2",{"_index":1925,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.5.3",{"_index":1906,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.5.4",{"_index":1898,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.5.5",{"_index":1894,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.6",{"_index":1850,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.7",{"_index":1805,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.7.1",{"_index":1800,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.7.1...v1.7.4",{"_index":1743,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.7.2",{"_index":1735,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.7.7",{"_index":1736,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.8",{"_index":1727,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["v1.9",{"_index":1677,"text":{"misc/changelog/":{}},"title":{"misc/changelog/#animated-stickers-v19":{}}}],["vail",{"_index":1354,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{}},"title":{}}],["vale",{"_index":2767,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["valid",{"_index":1349,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults.results_valid":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_channel":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_input_user":{},"modules/utils/#telethon.utils.parse_username":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["valid_username_r",{"_index":4631,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["valu",{"_index":187,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/errors/":{},"concepts/errors/#attributes":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.new":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.old":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat_id":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.raw_text":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{}}],["value_count",{"_index":4142,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{}},"title":{}}],["valueerror",{"_index":816,"text":{"concepts/entities/":{},"concepts/entities/#entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/client/#telegram.client.Telegram.remove_update_handler":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.inline":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.get_chat":{},"modules/custom/#telethon.tl.custom.draft.Draft.get_entity":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_appropriated_part_size":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["var_arg",{"_index":2609,"text":{"misc/changelog/":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["variabl",{"_index":371,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{}},"title":{}}],["variant",{"_index":890,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#full-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.__enter__":{},"modules/custom/#telethon.tl.custom.message.Message.via_input_bot":{}},"title":{}}],["variou",{"_index":2825,"text":{"misc/changelog/":{},"misc/changelog/#two-factor-authentication-v07":{},"modules/helpers/":{},"modules/helpers/#helpers-telethonhelpers":{}},"title":{}}],["vast",{"_index":1300,"text":{"developing/project-structure/":{},"developing/project-structure/#auto-generated-code":{}},"title":{}}],["vcard",{"_index":4399,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["vector",{"_index":1446,"text":{"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["vegeta1k95",{"_index":2321,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["venu",{"_index":3545,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message.venue":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.venue":{}}}],["venue_id",{"_index":4402,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["venue_typ",{"_index":4403,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["verbos",{"_index":748,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["veri",{"_index":397,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/updates/":{},"basic/updates/#more-examples":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#php":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest-cov":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["verif",{"_index":117,"text":{"basic/installation/":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{"basic/installation/#verification":{}}}],["verifi",{"_index":118,"text":{"basic/installation/":{},"basic/installation/#verification":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{}},"title":{}}],["version",{"_index":42,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installation":{},"basic/installation/#installing-development-versions":{},"basic/installation/#verification":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.input_chat":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.draft.Draft.input_entity":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.input_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#utilities-telethonutils":{}},"title":{"basic/installation/#installing-development-versions":{},"misc/changelog/":{},"misc/changelog/#changelog-version-history":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#updated-pip-version-v06":{}}}],["version/norm",{"_index":3500,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{}},"title":{}}],["versu",{"_index":1061,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{}},"title":{}}],["via",{"_index":1117,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#javascript":{},"developing/telegram-api-in-other-languages/#language-agnostic":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#updated-pip-version-v06":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_message":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_inline_message_id":{}},"title":{}}],["via_bot",{"_index":3647,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.via_input_bot":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.via_bot":{}}}],["via_bot_id",{"_index":3614,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.via_bot":{}},"title":{}}],["via_input_bot",{"_index":3648,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_buttons":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.via_input_bot":{}}}],["viabl",{"_index":678,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{}},"title":{}}],["video",{"_index":182,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#enhancements_1":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.duration":{},"modules/custom/#telethon.tl.custom.file.File.height":{},"modules/custom/#telethon.tl.custom.file.File.width":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/custom/#telethon.tl.custom.message.Message.video":{},"modules/custom/#telethon.tl.custom.message.Message.video_note":{},"modules/utils/":{},"modules/utils/#telethon.utils.is_video":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.video":{}}}],["video_not",{"_index":2363,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.video_note":{}}}],["view",{"_index":1466,"text":{"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes_4":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message":{}},"title":{"examples/chats-and-channels/#increasing-view-count-in-a-channel":{}}}],["violat",{"_index":995,"text":{"concepts/errors/":{},"concepts/errors/#common-errors":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{}},"title":{}}],["virtual",{"_index":1405,"text":{"developing/testing/":{},"developing/testing/#brief-introduction-to-tox":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#tgmount":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["voic",{"_index":1691,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.type":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.voice":{},"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.voice":{}}}],["voice=tru",{"_index":4197,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["voice_not",{"_index":3560,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_media":{}},"title":{}}],["voip",{"_index":1026,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["volume_id",{"_index":4619,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{}},"title":{}}],["vote",{"_index":2288,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{}},"title":{}}],["vs",{"_index":56,"text":{"":{},"#getting-started":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/entities/":{},"concepts/updates/":{}},"title":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/updates/#properties-vs-methods":{}}}],["vulner",{"_index":2779,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["vysheng",{"_index":1306,"text":{"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{}},"title":{}}],["w",{"_index":4241,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["wait",{"_index":958,"text":{"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/errors/#common-errors":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements_2":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"quick-references/faq/":{},"quick-references/faq/#how-can-i-except-floodwaiterror":{}},"title":{}}],["wait_ev",{"_index":3486,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{}}}],["wait_read",{"_index":3495,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}},"title":{"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{}}}],["walk",{"_index":1642,"text":{"misc/changelog/":{},"misc/changelog/#scheduled-messages-v110":{}},"title":{}}],["wall",{"_index":2867,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}}}],["want",{"_index":53,"text":{"":{},"#getting-started":{},"basic/installation/":{},"basic/installation/#installing-development-versions":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#signing-in-as-a-bot-account":{},"basic/signing-in/#signing-in_1":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#clientrun_until_disconnected-blocks":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/sessions/#string-sessions":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"concepts/updates/":{},"concepts/updates/#events-without-decorators":{},"concepts/updates/#understanding-asyncio":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/chats-and-channels/#joining-a-public-channel":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#media-revolution-and-improvements-to-update-handling-v03":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#learning":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.button.Button":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.archive":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.get_sender":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_peer_id":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{}},"title":{}}],["warn",{"_index":467,"text":{"basic/updates/":{},"basic/updates/#updates":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"examples/word-of-warning/":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{}},"title":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{}}}],["wasn't",{"_index":1775,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["wast",{"_index":704,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["watch",{"_index":2833,"text":{"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{}},"title":{}}],["waveform",{"_index":4115,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.decode_waveform":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["waveform=utils.encode_waveform(bytes((31",{"_index":4199,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["waveform=utils.encode_waveform(bytes(range(2",{"_index":4198,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.encode_waveform":{}},"title":{}}],["way",{"_index":387,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in_1":{},"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-python-telegram-bot":{},"concepts/botapi-vs-mtproto/#what-is-bot-api":{},"concepts/entities/":{},"concepts/entities/#getting-entities":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#string-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"concepts/updates/#understanding-asyncio":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#joining-a-public-channel":{},"examples/users/":{},"examples/users/#updating-your-profile-photo":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.file.File":{},"modules/custom/#telethon.tl.custom.message.Message.pin":{},"quick-references/faq/":{},"quick-references/faq/#faq":{}},"title":{}}],["we'll",{"_index":2626,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["we'r",{"_index":2803,"text":{"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["we'v",{"_index":642,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-else-can-asyncio-do":{}},"title":{}}],["web",{"_index":545,"text":{"concepts/asyncio/":{},"concepts/asyncio/#whats-asyncio":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_4":{},"misc/changelog/#event-templates-v13":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.message.Message.photo":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["web_preview",{"_index":2027,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{"modules/custom/#telethon.tl.custom.message.Message.web_preview":{}}}],["webbrows",{"_index":4034,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["webbrowser.open",{"_index":4023,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.messagebutton.MessageButton.click":{}},"title":{}}],["webbrowser.open(url",{"_index":3581,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.url":{}},"title":{}}],["webdocu",{"_index":169,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.document":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.photo":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["webdocumentnoproxi",{"_index":4253,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.get_extension":{}},"title":{}}],["webp",{"_index":2035,"text":{"misc/changelog/":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["webpag",{"_index":3190,"text":{"modules/client/":{},"modules/client/#telegram.client.Telegram.get_web_page_instant_view":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.web_preview":{}},"title":{}}],["website](https://example.com",{"_index":289,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{}},"title":{}}],["weird",{"_index":2706,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["weirdli",{"_index":1788,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{}},"title":{}}],["welcom",{"_index":1204,"text":{"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["well",{"_index":238,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes-v102":{}},"title":{}}],["went",{"_index":952,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{}},"title":{}}],["weren't",{"_index":1818,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["what'",{"_index":534,"text":{"concepts/asyncio/":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{"concepts/asyncio/#whats-asyncio":{}}}],["whatev",{"_index":861,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["whenev",{"_index":543,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#whats-asyncio":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["wherev",{"_index":906,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["whether",{"_index":503,"text":{"basic/updates/":{},"basic/updates/#more-examples":{},"concepts/entities/":{},"concepts/entities/#full-entities":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_about":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_admin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_default_banned_rights":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_hide_history":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_invites":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_location":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_photo":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_pin":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_restrictions":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_signatures":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_sticker_set":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_title":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.changed_username":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.deleted_message":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.joined_invite":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.left":{},"modules/custom/#telethon.tl.custom.adminlogevent.AdminLogEvent.stopped_poll":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/custom/#telethon.tl.custom.button.Button.request_poll":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.draft.Draft":{},"modules/custom/#telethon.tl.custom.draft.Draft.set_message":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.inlineresults.InlineResults":{},"modules/custom/#telethon.tl.custom.message.Message":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/utils/":{},"modules/utils/#telethon.utils.parse_username":{}},"title":{}}],["whitelist",{"_index":2391,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["whitespac",{"_index":1957,"text":{"misc/changelog/":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.strip_text":{}},"title":{}}],["whole",{"_index":893,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{}},"title":{}}],["whoop",{"_index":2511,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["whose",{"_index":2672,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["wide",{"_index":799,"text":{"concepts/entities/":{},"concepts/entities/#entities":{}},"title":{}}],["widespread",{"_index":2155,"text":{"misc/changelog/":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["width",{"_index":3535,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.file.File.width":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{}},"title":{"modules/custom/#telethon.tl.custom.file.File.width":{}}}],["wiki",{"_index":713,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{}},"title":{}}],["wiki/usag",{"_index":2657,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["window",{"_index":333,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#event-templates-v13":{}},"title":{}}],["winner",{"_index":2892,"text":{"misc/wall-of-shame/":{},"misc/wall-of-shame/#current-winner":{}},"title":{"misc/wall-of-shame/#current-winner":{}}}],["wip",{"_index":2799,"text":{"misc/changelog/":{},"misc/changelog/#stability-improvements-v091":{}},"title":{}}],["wish",{"_index":1065,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{}},"title":{}}],["within",{"_index":1103,"text":{"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes_3":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{}}],["within_surrog",{"_index":4105,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.within_surrogate":{}},"title":{"modules/helpers/#telethon.helpers.within_surrogate":{}}}],["without",{"_index":440,"text":{"basic/signing-in/":{},"basic/signing-in/#using-mtproto-proxies":{},"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#events-without-the-client":{},"examples/chats-and-channels/":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#iterate-messages-in-reverse-v103":{},"misc/changelog/#stability-improvements-v091":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_read":{},"modules/custom/#telethon.tl.custom.draft.Draft.raw_text":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.document":{},"modules/custom/#telethon.tl.custom.message.Message.file":{},"modules/custom/#telethon.tl.custom.message.Message.gif":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{}},"title":{"concepts/updates/#events-without-decorators":{},"concepts/updates/#events-without-the-client":{},"examples/chats-and-channels/#checking-a-link-without-joining":{},"quick-references/faq/#code-without-errors-doesnt-work":{}}}],["won",{"_index":3817,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{}},"title":{}}],["won't",{"_index":346,"text":{"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/updates/":{},"basic/updates/#entities":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#why-asyncio":{},"concepts/entities/":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#avoiding-limits":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#increasing-view-count-in-a-channel":{},"examples/users/":{},"examples/users/#updating-your-name-andor-bio":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#ready-pip-go-v05":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.delete":{},"modules/custom/#telethon.tl.custom.message.Message.client":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"quick-references/faq/":{},"quick-references/faq/#code-without-errors-doesnt-work":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["word",{"_index":1534,"text":{"examples/word-of-warning/":{}},"title":{"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{}}}],["work",{"_index":129,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"basic/signing-in/":{},"basic/signing-in/#signing-in":{},"basic/signing-in/#using-mtproto-proxies":{},"basic/updates/":{},"basic/updates/#updates":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/asyncio/#whats-asyncio":{},"concepts/entities/":{},"concepts/entities/#entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#what-is-an-entity":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#creating-your-own-storage":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/project-structure/":{},"developing/project-structure/#main-interface":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/testing/":{},"developing/testing/#brief-introduction-to-pytest":{},"examples/chats-and-channels/":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#telethon-secret-chat":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bot-login-and-proxy-support-v08":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#enhancements":{},"misc/changelog/#enhancements_1":{},"misc/changelog/#enhancements_2":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#event-templates-v13":{},"misc/changelog/#first-working-alpha-version-v01":{},"misc/changelog/#general-improvements-v09":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#polls-with-the-latest-layer-v15":{},"misc/changelog/#quick-fix-up-v0136":{},"misc/changelog/#scheduled-messages-v110":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#custom-package":{},"modules/custom/#telethon.tl.custom.file.File.id":{},"modules/custom/#telethon.tl.custom.inlinebuilder.InlineBuilder.article":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.click":{},"modules/custom/#telethon.tl.custom.message.Message.edit":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_attributes":{},"modules/utils/#telethon.utils.get_input_peer":{},"modules/utils/#telethon.utils.get_peer_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{},"modules/utils/#utilities-telethonutils":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-flask-with-the-library":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{},"quick-references/faq/#faq":{},"quick-references/faq/#how-do-i-access-a-field":{}},"title":{"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#working-with-chats-and-channels":{},"examples/working-with-messages/":{},"examples/working-with-messages/#working-with-messages":{},"misc/changelog/#first-working-alpha-version-v01":{},"quick-references/faq/#code-without-errors-doesnt-work":{}}}],["workaround",{"_index":2647,"text":{"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{}},"title":{}}],["worker",{"_index":2510,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.__init__":{}},"title":{}}],["workflow",{"_index":903,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{}},"title":{}}],["world",{"_index":567,"text":{"concepts/asyncio/":{},"concepts/asyncio/#what-are-async-await-and-coroutines":{},"concepts/asyncio/#what-are-asyncio-basics":{},"concepts/full-api/":{},"concepts/full-api/#requests-in-parallel":{},"examples/projects-using-telethon/":{},"examples/projects-using-telethon/#projects-using-telethon":{},"examples/word-of-warning/":{},"examples/word-of-warning/#a-word-of-warning":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#learning":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{}},"title":{}}],["worri",{"_index":674,"text":{"concepts/asyncio/":{},"concepts/asyncio/#why-does-clientstart-work-outside-async":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["wors",{"_index":818,"text":{"concepts/entities/":{},"concepts/entities/#what-is-an-entity":{}},"title":{}}],["worth",{"_index":244,"text":{"basic/next-steps/":{},"basic/next-steps/#next-steps":{},"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/sessions/":{},"concepts/sessions/#different-session-storage":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["wouldn't",{"_index":1770,"text":{"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#error-descriptions-in-csv-files-v143":{},"misc/changelog/#iterate-messages-in-reverse-v103":{}},"title":{}}],["wrap",{"_index":853,"text":{"concepts/entities/":{},"concepts/entities/#getting-entities":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.file":{}},"title":{}}],["wrapper",{"_index":73,"text":{"":{},"#what-is-this":{},"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#advantages-of-mtproto-over-bot-api":{},"concepts/botapi-vs-mtproto/#http-bot-api-vs-mtproto":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.dialog.Dialog.send_message":{},"modules/custom/#telethon.tl.custom.draft.Draft.send":{},"modules/custom/#telethon.tl.custom.inlineresult.InlineResult.download_media":{}},"title":{}}],["writabl",{"_index":3646,"text":{"modules/custom/":{}},"title":{}}],["write",{"_index":68,"text":{"":{},"#what-is-this":{},"basic/installation/":{},"basic/installation/#optional-dependencies":{},"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"basic/signing-in/":{},"basic/signing-in/#editing-the-code":{},"basic/signing-in/#signing-in_1":{},"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{},"modules/errors/":{},"modules/errors/#telethon.errors.rpcbaseerrors.ForbiddenError":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["write_access",{"_index":3382,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button.auth":{}},"title":{}}],["written",{"_index":693,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#what-is-mtproto":{},"developing/philosophy/":{},"developing/philosophy/#philosophy":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/telegram-api-in-other-languages/#kotlin":{},"developing/telegram-api-in-other-languages/#python":{},"developing/telegram-api-in-other-languages/#rust":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["wrong",{"_index":950,"text":{"concepts/errors/":{},"concepts/errors/#rpc-errors":{},"misc/changelog/":{},"misc/changelog/#animated-stickers-v19":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#bug-fixes_1":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"modules/client/":{},"modules/client/#telegram.client.Telegram.login":{}},"title":{}}],["wrongli",{"_index":2287,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#several-requests-at-once-and-upload-compression-v014":{}},"title":{}}],["wrote",{"_index":719,"text":{"concepts/botapi-vs-mtproto/":{},"concepts/botapi-vs-mtproto/#migrating-from-bot-api-to-telethon":{}},"title":{}}],["www",{"_index":2403,"text":{"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["x",{"_index":1250,"text":{"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/telegram-api-in-other-languages/":{},"developing/telegram-api-in-other-languages/#c_1":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#ready-pip-go-v05":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_edit":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/custom/#telethon.tl.custom.message.Message.click":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.TotalList":{},"modules/utils/":{},"modules/utils/#telethon.utils.pack_bot_file_id":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.sanitize_parse_mode":{}},"title":{}}],["x00",{"_index":4866,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x00\\x01\\x01\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\xff\\xdb\\x00",{"_index":4865,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x00\\x01\\x02\\x03\\x11\\x04\\x05",{"_index":4889,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xc4\\x00\\x1f\\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\xff\\xc4\\x00\\xb5\\x10\\x00\\x02\\x01\\x03\\x03\\x02\\x04\\x03\\x05\\x05\\x04\\x04\\x00\\x00\\x01",{"_index":4874,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x01",{"_index":4871,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x01\\x02\\x03\\x00\\x04\\x11\\x05\\x12",{"_index":4875,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x06\\x12",{"_index":4890,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x06\\x13",{"_index":4877,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x07",{"_index":4879,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x13",{"_index":4892,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x14",{"_index":4881,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x1c\\x1e",{"_index":4867,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x1e\\x19",{"_index":4868,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x2",{"_index":2772,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["x81\\x08\\x14",{"_index":4893,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x81\\x91\\xa1\\x08",{"_index":4882,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x82\\t\\n\\x16\\x17\\x18\\x19\\x1a",{"_index":4886,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xff\\xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00",{"_index":4902,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xff\\xc4\\x00\\x1f\\x01\\x00\\x03\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\xff\\xc4\\x00\\xb5\\x11\\x00\\x02\\x01\\x02\\x04\\x04\\x03\\x04\\x07\\x05\\x04\\x04\\x00\\x01\\x02",{"_index":4888,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x91\\x80\\x99\\x96\\x8f\\x80\\x8c\\x8a\\xa0\\xb4\\xe6\\xc3\\xa0\\xaa\\xda\\xad\\x8a\\x8c\\xc8\\xff\\xcb\\xda\\xee\\xf5\\xff\\xff\\xff\\x9b\\xc1\\xff\\xff\\xff\\xfa\\xff\\xe6\\xfd\\xff\\xf8\\xff\\xdb\\x00",{"_index":4870,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["x91\\xa1\\xb1\\xc1\\t",{"_index":4894,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xb1\\xc1\\x15",{"_index":4883,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xd1\\n\\x16",{"_index":4898,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xd1\\xf0",{"_index":4884,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xe1",{"_index":4899,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xf0\\x15",{"_index":4896,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xf1\\x17\\x18\\x19\\x1a",{"_index":4900,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xf8\\xa5\\x8c\\xa5\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xf8\\xff\\xc0\\x00\\x11\\x08\\x00\\x00\\x00\\x00\\x03\\x01",{"_index":4873,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xff\\xd8\\xff\\xe0\\x00\\x10",{"_index":4863,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xff\\xd9",{"_index":4903,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.stripped_photo_to_jpg":{}},"title":{}}],["xyz",{"_index":4767,"text":{"modules/utils/":{},"modules/utils/#telethon.utils.resolve_id":{}},"title":{}}],["y",{"_index":3472,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_reply":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.get_response":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_inner_text":{}},"title":{}}],["ye",{"_index":613,"text":{"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"modules/utils/":{},"modules/utils/#telethon.utils.get_input_peer":{},"quick-references/faq/":{},"quick-references/faq/#can-i-use-anacondaspyderipython-with-the-library":{},"quick-references/faq/#can-i-use-flask-with-the-library":{}},"title":{}}],["year",{"_index":1172,"text":{"concepts/strings/":{},"concepts/strings/#string-based-debugging":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{}},"title":{}}],["yield",{"_index":4097,"text":{"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.chunks":{}},"title":{}}],["you'll",{"_index":1364,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["you'r",{"_index":482,"text":{"basic/updates/":{},"basic/updates/#getting-started":{},"concepts/asyncio/":{},"concepts/asyncio/#can-i-use-threads":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/asyncio/#what-else-can-asyncio-do":{},"concepts/entities/":{},"concepts/entities/#accessing-entities":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/entities/#getting-entities":{},"concepts/entities/#summary":{},"concepts/errors/":{},"concepts/errors/#common-errors":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#string-sessions":{},"concepts/sessions/#what-are-sessions":{},"concepts/updates/":{},"concepts/updates/#stopping-propagation-of-updates":{},"developing/coding-style/":{},"developing/coding-style/#coding-style":{},"developing/test-servers/":{},"developing/test-servers/#test-servers":{},"developing/tips-for-porting-the-project/":{},"developing/tips-for-porting-the-project/#tips-for-porting-the-project":{},"developing/understanding-the-type-language/":{},"developing/understanding-the-type-language/#understanding-the-type-language":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#long-run-bug-fix-v071":{},"misc/changelog/#made-interactivetelegramclient-cool-v04":{},"misc/changelog/#ready-pip-go-v05":{},"misc/changelog/#two-factor-authentication-v07":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#compatibility":{},"misc/compatibility-and-convenience/#convenience":{},"misc/compatibility-and-convenience/#speed":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.chatgetter.ChatGetter.chat":{},"modules/custom/#telethon.tl.custom.conversation.Conversation.wait_event":{},"modules/custom/#telethon.tl.custom.message.Message.delete":{},"modules/custom/#telethon.tl.custom.sendergetter.SenderGetter.sender":{},"quick-references/faq/":{},"quick-references/faq/#my-account-was-deletedlimited-when-using-the-library":{},"quick-references/faq/#sqlite3operationalerror-database-is-locked":{}},"title":{}}],["you'v",{"_index":1054,"text":{"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"concepts/sessions/":{},"concepts/sessions/#what-are-sessions":{},"misc/changelog/":{},"misc/changelog/#attempts-at-more-stability-v0135":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/wall-of-shame/":{},"misc/wall-of-shame/#wall-of-shame":{}},"title":{}}],["yourself",{"_index":261,"text":{"basic/quick-start/":{},"basic/quick-start/#quick-start":{},"concepts/asyncio/":{},"concepts/asyncio/#what-does-telethonsync-do":{},"concepts/entities/":{},"concepts/entities/#summary":{},"examples/chats-and-channels/":{},"examples/chats-and-channels/#adding-someone-else-to-such-chat-or-channel":{},"examples/working-with-messages/":{},"examples/working-with-messages/#sending-stickers":{},"misc/changelog/":{},"misc/changelog/#bug-fixes-v101":{},"misc/changelog/#conversations-string-sessions-and-more-v12":{},"misc/changelog/#handle-updates-in-their-own-thread-v02":{},"misc/changelog/#improvements-to-the-updates-v0111":{},"misc/changelog/#scheduled-messages-v110":{},"misc/compatibility-and-convenience/":{},"misc/compatibility-and-convenience/#speed":{},"modules/custom/":{},"modules/custom/#telethon.tl.custom.button.Button":{},"quick-references/faq/":{},"quick-references/faq/#eventchat-or-eventsender-is-none":{}},"title":{}}],["yrfworsebukugfvht6dupi_q25uoczoaqzc",{"_index":1135,"text":{"concepts/sessions/":{},"concepts/sessions/#string-sessions":{}},"title":{}}],["yyi",{"_index":2787,"text":{"misc/changelog/":{},"misc/changelog/#improvements-to-the-updates-v0111":{}},"title":{}}],["yyyi",{"_index":1368,"text":{"developing/test-servers/":{},"developing/test-servers/#test-servers":{}},"title":{}}],["zero",{"_index":895,"text":{"concepts/entities/":{},"concepts/entities/#entities-vs-input-entities":{},"concepts/full-api/":{},"concepts/full-api/#the-full-api":{},"misc/changelog/":{},"misc/changelog/#bug-fixes":{},"modules/helpers/":{},"modules/helpers/#telethon.helpers.retry_range":{},"modules/utils/":{},"modules/utils/#telethon.utils.resolve_bot_file_id":{},"modules/utils/#telethon.utils.resolve_id":{},"modules/utils/#telethon.utils.resolve_invite_link":{}},"title":{}}],["zip",{"_index":3945,"text":{"modules/custom/":{},"modules/custom/#telethon.tl.custom.message.Message.get_entities_text":{},"modules/errors/":{},"modules/errors/#telethon.errors.common.MultiError.__new__":{}},"title":{}}],["zlib",{"_index":208,"text":{"basic/installation/":{},"basic/installation/#optional-dependencies":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.8"}}